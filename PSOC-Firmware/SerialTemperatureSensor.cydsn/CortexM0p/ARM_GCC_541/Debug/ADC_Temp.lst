ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ADC_Temp.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.ADC_Temp_SetDFTControl,"ax",%progbits
  20              		.align	2
  21              		.code	16
  22              		.thumb_func
  23              		.type	ADC_Temp_SetDFTControl, %function
  24              	ADC_Temp_SetDFTControl:
  25              	.LFB5:
  26              		.file 1 "Generated_Source\\PSoC4\\ADC_Temp.c"
   1:Generated_Source\PSoC4/ADC_Temp.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/ADC_Temp.c **** * \file     ADC_Temp.c
   3:Generated_Source\PSoC4/ADC_Temp.c **** * \version  3.10
   4:Generated_Source\PSoC4/ADC_Temp.c **** *
   5:Generated_Source\PSoC4/ADC_Temp.c **** * \brief
   6:Generated_Source\PSoC4/ADC_Temp.c **** * Provides the source code to the API for the ADC_Temp Component.
   7:Generated_Source\PSoC4/ADC_Temp.c **** *
   8:Generated_Source\PSoC4/ADC_Temp.c **** ********************************************************************************
   9:Generated_Source\PSoC4/ADC_Temp.c **** * \copyright
  10:Generated_Source\PSoC4/ADC_Temp.c **** * (c) 2015-2018, Cypress Semiconductor Corporation. All rights reserved.
  11:Generated_Source\PSoC4/ADC_Temp.c **** * This software, including source code, documentation and related
  12:Generated_Source\PSoC4/ADC_Temp.c **** * materials ("Software"), is owned by Cypress Semiconductor
  13:Generated_Source\PSoC4/ADC_Temp.c **** * Corporation ("Cypress") and is protected by and subject to worldwide
  14:Generated_Source\PSoC4/ADC_Temp.c **** * patent protection (United States and foreign), United States copyright
  15:Generated_Source\PSoC4/ADC_Temp.c **** * laws and international treaty provisions. Therefore, you may use this
  16:Generated_Source\PSoC4/ADC_Temp.c **** * Software only as provided in the license agreement accompanying the
  17:Generated_Source\PSoC4/ADC_Temp.c **** * software package from which you obtained this Software ("EULA").
  18:Generated_Source\PSoC4/ADC_Temp.c **** * If no EULA applies, Cypress hereby grants you a personal, nonexclusive,
  19:Generated_Source\PSoC4/ADC_Temp.c **** * non-transferable license to copy, modify, and compile the
  20:Generated_Source\PSoC4/ADC_Temp.c **** * Software source code solely for use in connection with Cypress's
  21:Generated_Source\PSoC4/ADC_Temp.c **** * integrated circuit products. Any reproduction, modification, translation,
  22:Generated_Source\PSoC4/ADC_Temp.c **** * compilation, or representation of this Software except as specified
  23:Generated_Source\PSoC4/ADC_Temp.c **** * above is prohibited without the express written permission of Cypress.
  24:Generated_Source\PSoC4/ADC_Temp.c **** * Disclaimer: THIS SOFTWARE IS PROVIDED AS-IS, WITH NO
  25:Generated_Source\PSoC4/ADC_Temp.c **** * WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING,
  26:Generated_Source\PSoC4/ADC_Temp.c **** * BUT NOT LIMITED TO, NONINFRINGEMENT, IMPLIED
  27:Generated_Source\PSoC4/ADC_Temp.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
  28:Generated_Source\PSoC4/ADC_Temp.c **** * PARTICULAR PURPOSE. Cypress reserves the right to make
  29:Generated_Source\PSoC4/ADC_Temp.c **** * changes to the Software without notice. Cypress does not assume any
  30:Generated_Source\PSoC4/ADC_Temp.c **** * liability arising out of the application or use of the Software or any
  31:Generated_Source\PSoC4/ADC_Temp.c **** * product or circuit described in the Software. Cypress does not
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 2


  32:Generated_Source\PSoC4/ADC_Temp.c **** * authorize its products for use in any products where a malfunction or
  33:Generated_Source\PSoC4/ADC_Temp.c **** * failure of the Cypress product may reasonably be expected to result in
  34:Generated_Source\PSoC4/ADC_Temp.c **** * significant property damage, injury or death ("High Risk Product"). By
  35:Generated_Source\PSoC4/ADC_Temp.c **** * including Cypress's product in a High Risk Product, the manufacturer
  36:Generated_Source\PSoC4/ADC_Temp.c **** * of such system or application assumes all risk of such use and in doing
  37:Generated_Source\PSoC4/ADC_Temp.c **** * so agrees to indemnify Cypress against all liability.
  38:Generated_Source\PSoC4/ADC_Temp.c **** *******************************************************************************/
  39:Generated_Source\PSoC4/ADC_Temp.c **** #include "ADC_Temp.h"
  40:Generated_Source\PSoC4/ADC_Temp.c **** 
  41:Generated_Source\PSoC4/ADC_Temp.c **** static void ADC_Temp_SetDFTControl(const ADC_Temp_CONFIG_STRUCT *config);
  42:Generated_Source\PSoC4/ADC_Temp.c **** static int32 ADC_Temp_IsChannelSigned(uint32 chan);
  43:Generated_Source\PSoC4/ADC_Temp.c **** #if(ADC_Temp_ANY_CONFIG_USES_FILTER != 0u)
  44:Generated_Source\PSoC4/ADC_Temp.c **** static void ADC_Temp_SetupComparatorTrim(void);
  45:Generated_Source\PSoC4/ADC_Temp.c **** static void ADC_Temp_UndoComparatorTrimSetup(void);
  46:Generated_Source\PSoC4/ADC_Temp.c **** static uint32 ADC_Temp_RaiseOpampTrimToCrossing(uint32 startTrim);
  47:Generated_Source\PSoC4/ADC_Temp.c **** static uint32 ADC_Temp_LowerOpampTrimToCrossing(uint32 startTrim);
  48:Generated_Source\PSoC4/ADC_Temp.c **** static uint32 ADC_Temp_RaiseAgndTrimToCrossing(uint32 startTrim);
  49:Generated_Source\PSoC4/ADC_Temp.c **** static uint32 ADC_Temp_LowerAgndTrimToCrossing(uint32 startTrim);
  50:Generated_Source\PSoC4/ADC_Temp.c **** static uint32 ADC_Temp_SetOpampAndAgndTrim(uint32 opampTrim, uint32 agndTrim);
  51:Generated_Source\PSoC4/ADC_Temp.c **** static uint32 ADC_Temp_SetOpampTrim(uint32 opampTrim);
  52:Generated_Source\PSoC4/ADC_Temp.c **** static uint32 ADC_Temp_SetAgndTrim(uint32 agndTrim);
  53:Generated_Source\PSoC4/ADC_Temp.c **** static uint32 ADC_Temp_IncOpampTrim(uint32 trim);
  54:Generated_Source\PSoC4/ADC_Temp.c **** static uint32 ADC_Temp_DecOpampTrim(uint32 trim);
  55:Generated_Source\PSoC4/ADC_Temp.c **** static uint32 ADC_Temp_IncAgndTrim(uint32 trim);
  56:Generated_Source\PSoC4/ADC_Temp.c **** static uint32 ADC_Temp_DecAgndTrim(uint32 trim);
  57:Generated_Source\PSoC4/ADC_Temp.c **** static uint32 ADC_Temp_GetCompStatus(void);
  58:Generated_Source\PSoC4/ADC_Temp.c **** #define OFFSET_SAMPLES (30)
  59:Generated_Source\PSoC4/ADC_Temp.c **** #endif
  60:Generated_Source\PSoC4/ADC_Temp.c **** 
  61:Generated_Source\PSoC4/ADC_Temp.c **** uint8 ADC_Temp_initVar = 0u;
  62:Generated_Source\PSoC4/ADC_Temp.c **** 
  63:Generated_Source\PSoC4/ADC_Temp.c **** uint8 ADC_Temp_selected = 0u; /* 0 if no configuration selected. 1 otherwise. */
  64:Generated_Source\PSoC4/ADC_Temp.c **** volatile int16 ADC_Temp_offset[ADC_Temp_TOTAL_CHANNELS_NUM];
  65:Generated_Source\PSoC4/ADC_Temp.c **** volatile int32 ADC_Temp_countsPer10Volt[ADC_Temp_TOTAL_CHANNELS_NUM];
  66:Generated_Source\PSoC4/ADC_Temp.c **** 
  67:Generated_Source\PSoC4/ADC_Temp.c **** static uint32 ADC_Temp_currentConfig = 0u; /* Currently active configuration */
  68:Generated_Source\PSoC4/ADC_Temp.c **** 
  69:Generated_Source\PSoC4/ADC_Temp.c **** /*******************************************************************************
  70:Generated_Source\PSoC4/ADC_Temp.c **** * Local data allocation
  71:Generated_Source\PSoC4/ADC_Temp.c **** *******************************************************************************/
  72:Generated_Source\PSoC4/ADC_Temp.c **** /* Channels configuration generated by customiser */
  73:Generated_Source\PSoC4/ADC_Temp.c **** static const uint32 CYCODE ADC_Temp_channelsConfig[] = { 0x00000000UL,  };
  74:Generated_Source\PSoC4/ADC_Temp.c **** 
  75:Generated_Source\PSoC4/ADC_Temp.c **** /* Filter init */
  76:Generated_Source\PSoC4/ADC_Temp.c **** #if(ADC_Temp_ANY_CONFIG_USES_FILTER != 0u)
  77:Generated_Source\PSoC4/ADC_Temp.c ****     #if (0u != ADC_Temp_CFG0_FILTER_PRESENT)
  78:Generated_Source\PSoC4/ADC_Temp.c ****         #define ADC_Temp_CFG0_UABH_A_FILTER_INITPAIRSSIZE (19u)
  79:Generated_Source\PSoC4/ADC_Temp.c ****         const static CyUAB_reg_pair ADC_Temp_CFG0_UABH_A_FILTER_initPairs[ADC_Temp_CFG0_UABH_A_FILT
  80:Generated_Source\PSoC4/ADC_Temp.c ****         {
  81:Generated_Source\PSoC4/ADC_Temp.c ****             /*OA_CTRL default always first element in initPairs*/
  82:Generated_Source\PSoC4/ADC_Temp.c ****             /* Topology-invariant registers */
  83:Generated_Source\PSoC4/ADC_Temp.c ****              {ADC_Temp_UABH_A_OA_CTRL_PTR        , ((uint32)ADC_Temp_UABH_A_DEFAULT_OA_CTRL)}
  84:Generated_Source\PSoC4/ADC_Temp.c ****             ,{ADC_Temp_UABH_A_SW_STATIC_PTR      , ((uint32)ADC_Temp_UABH_A_DEFAULT_SW_STATIC)}
  85:Generated_Source\PSoC4/ADC_Temp.c ****             ,{ADC_Temp_UABH_A_SW_MODBIT_SRC_PTR  , ((uint32)ADC_Temp_UABH_A_INVAR_SW_MODBIT_SRC)}
  86:Generated_Source\PSoC4/ADC_Temp.c ****             ,{ADC_Temp_UABH_A_SRAM_CTRL_PTR      , ((uint32)ADC_Temp_UABH_A_INVAR_SRAM_CTRL)}
  87:Generated_Source\PSoC4/ADC_Temp.c ****             ,{ADC_Temp_UABH_A_STARTUP_DELAY_PTR  , ((uint32)ADC_Temp_CFG0_UABH_A_STARTUP_DELAY)}
  88:Generated_Source\PSoC4/ADC_Temp.c ****             ,{ADC_Temp_UABH_A_SW_BOOST_CTRL_PTR  , ((uint32)ADC_Temp_UABH_A_DEFAULT_SW_BOOST_CTRL)}
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 3


  89:Generated_Source\PSoC4/ADC_Temp.c ****             ,{ADC_Temp_UABH_A_SW_CA_IN1_PTR      , ((uint32)ADC_Temp_UABH_A_DEFAULT_SW_CA_IN1)}
  90:Generated_Source\PSoC4/ADC_Temp.c ****             ,{ADC_Temp_UABH_A_SW_OTHER_PTR       , ((uint32)ADC_Temp_UABH_A_DEFAULT_SW_OTHER)}
  91:Generated_Source\PSoC4/ADC_Temp.c **** 
  92:Generated_Source\PSoC4/ADC_Temp.c ****             #if (ADC_Temp_CFG0_FILTERTYPE_USED == ADC_Temp_FILTERTOPOLOGY_LOW_Q)
  93:Generated_Source\PSoC4/ADC_Temp.c ****                 /* Filter-invariant registers */
  94:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_A_SW_CA_IN0_PTR      , ((uint32)ADC_Temp_UABH_A_LOWQSTAT_SW_CA_IN0)
  95:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_A_SW_CA_TOP_PTR      , ((uint32)ADC_Temp_UABH_A_LOWQSTAT_SW_CA_TOP)
  96:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_A_SW_CC_IN0_PTR      , ((uint32)ADC_Temp_UABH_A_LOWQSTAT_SW_CC_IN0)
  97:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_A_SW_CC_IN1_PTR      , ((uint32)ADC_Temp_UABH_A_LOWQSTAT_SW_CC_IN1)
  98:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_A_SW_CF_BOT_PTR      , ((uint32)ADC_Temp_UABH_A_LOWQSTAT_SW_CF_BOT)
  99:Generated_Source\PSoC4/ADC_Temp.c **** 
 100:Generated_Source\PSoC4/ADC_Temp.c ****                 /* Parameter-based registers */
 101:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_A_CAP_CTRL_PTR       , ((uint32)ADC_Temp_CFG0_UABH_A_LOWQDYN_CAP_CT
 102:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_A_SW_CB_IN0_PTR      , ((uint32)ADC_Temp_CFG0_UABH_A_LOWQDYN_SW_CB_
 103:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_A_SW_CB_IN1_PTR      , ((uint32)ADC_Temp_CFG0_UABH_A_LOWQDYN_SW_CB_
 104:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_A_SW_CB_TOP_PTR      , ((uint32)ADC_Temp_CFG0_UABH_A_LOWQDYN_SW_CB_
 105:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_A_SW_CC_TOP_PTR      , ((uint32)ADC_Temp_CFG0_UABH_A_LOWQDYN_SW_CC_
 106:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_A_CAP_ABCF_VAL_PTR   , ((uint32)ADC_Temp_CFG0_UABH_A_LOWQDYN_CAP_AB
 107:Generated_Source\PSoC4/ADC_Temp.c ****             #elif (ADC_Temp_CFG0_FILTERTYPE_USED == ADC_Temp_FILTERTOPOLOGY_HIGH_Q)
 108:Generated_Source\PSoC4/ADC_Temp.c ****                 /* Filter-invariant registers */
 109:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_A_SW_CA_IN0_PTR      , ((uint32)ADC_Temp_UABH_A_HIGHQSTAT_SW_CA_IN0
 110:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_A_SW_CA_TOP_PTR      , ((uint32)ADC_Temp_UABH_A_HIGHQSTAT_SW_CA_TOP
 111:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_A_SW_CB_IN0_PTR      , ((uint32)ADC_Temp_UABH_A_HIGHQSTAT_SW_CB_IN0
 112:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_A_SW_CB_IN1_PTR      , ((uint32)ADC_Temp_UABH_A_HIGHQSTAT_SW_CB_IN1
 113:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_A_SW_CC_IN0_PTR      , ((uint32)ADC_Temp_UABH_A_HIGHQSTAT_SW_CC_IN0
 114:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_A_SW_CC_IN1_PTR      , ((uint32)ADC_Temp_UABH_A_HIGHQSTAT_SW_CC_IN1
 115:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_A_SW_CC_TOP_PTR      , ((uint32)ADC_Temp_UABH_A_HIGHQSTAT_SW_CC_TOP
 116:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_A_SW_CF_BOT_PTR      , ((uint32)ADC_Temp_UABH_A_HIGHQSTAT_SW_CF_BOT
 117:Generated_Source\PSoC4/ADC_Temp.c **** 
 118:Generated_Source\PSoC4/ADC_Temp.c ****                 /* Parameter-based registers */
 119:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_A_CAP_CTRL_PTR       , ((uint32)ADC_Temp_CFG0_UABH_A_HIGHQDYN_CAP_C
 120:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_A_SW_CB_TOP_PTR      , ((uint32)ADC_Temp_CFG0_UABH_A_HIGHQDYN_SW_CB
 121:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_A_CAP_ABCF_VAL_PTR   , ((uint32)ADC_Temp_CFG0_UABH_A_HIGHQDYN_CAP_A
 122:Generated_Source\PSoC4/ADC_Temp.c ****             #endif /* (ADC_Temp_CFG0_FILTERTYPE_USED == ADC_Temp_FILTERTOPOLOGY_LOW_Q) */
 123:Generated_Source\PSoC4/ADC_Temp.c ****         };
 124:Generated_Source\PSoC4/ADC_Temp.c **** 
 125:Generated_Source\PSoC4/ADC_Temp.c ****         #define ADC_Temp_CFG0_UABH_B_FILTER_INITPAIRSSIZE (19u)
 126:Generated_Source\PSoC4/ADC_Temp.c ****         const static CyUAB_reg_pair ADC_Temp_CFG0_UABH_B_FILTER_initPairs[ADC_Temp_CFG0_UABH_B_FILT
 127:Generated_Source\PSoC4/ADC_Temp.c ****         {
 128:Generated_Source\PSoC4/ADC_Temp.c ****             /*OA_CTRL default always first element in initPairs*/
 129:Generated_Source\PSoC4/ADC_Temp.c ****             /* Topology-invariant registers */
 130:Generated_Source\PSoC4/ADC_Temp.c ****              {ADC_Temp_UABH_B_OA_CTRL_PTR        , ((uint32)ADC_Temp_UABH_B_DEFAULT_OA_CTRL)}
 131:Generated_Source\PSoC4/ADC_Temp.c ****             ,{ADC_Temp_UABH_B_SW_STATIC_PTR      , ((uint32)ADC_Temp_UABH_B_DEFAULT_SW_STATIC)}
 132:Generated_Source\PSoC4/ADC_Temp.c ****             ,{ADC_Temp_UABH_B_SW_MODBIT_SRC_PTR  , ((uint32)ADC_Temp_UABH_B_INVAR_SW_MODBIT_SRC)}
 133:Generated_Source\PSoC4/ADC_Temp.c ****             ,{ADC_Temp_UABH_B_SRAM_CTRL_PTR      , ((uint32)ADC_Temp_UABH_B_INVAR_SRAM_CTRL)}
 134:Generated_Source\PSoC4/ADC_Temp.c ****             ,{ADC_Temp_UABH_B_STARTUP_DELAY_PTR  , ((uint32)ADC_Temp_CFG0_UABH_B_STARTUP_DELAY)}
 135:Generated_Source\PSoC4/ADC_Temp.c ****             ,{ADC_Temp_UABH_B_SW_BOOST_CTRL_PTR  , ((uint32)ADC_Temp_UABH_B_DEFAULT_SW_BOOST_CTRL)}
 136:Generated_Source\PSoC4/ADC_Temp.c ****             ,{ADC_Temp_UABH_B_SW_OTHER_PTR  , ((uint32)ADC_Temp_UABH_B_DEFAULT_SW_OTHER)}
 137:Generated_Source\PSoC4/ADC_Temp.c **** 
 138:Generated_Source\PSoC4/ADC_Temp.c ****             #if (ADC_Temp_CFG0_FILTERTYPE_USED == ADC_Temp_FILTERTOPOLOGY_LOW_Q)
 139:Generated_Source\PSoC4/ADC_Temp.c ****                         /* Filter-invariant registers */
 140:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_SW_CA_IN0_PTR      , ((uint32)ADC_Temp_UABH_B_LOWQSTAT_SW_CA_IN0)
 141:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_SW_CA_IN1_PTR      , ((uint32)ADC_Temp_UABH_B_LOWQSTAT_SW_CA_IN1)
 142:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_SW_CA_TOP_PTR      , ((uint32)ADC_Temp_UABH_B_LOWQSTAT_SW_CA_TOP)
 143:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_SW_CB_IN0_PTR      , ((uint32)ADC_Temp_UABH_B_LOWQSTAT_SW_CB_IN0)
 144:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_SW_CB_IN1_PTR      , ((uint32)ADC_Temp_UABH_B_LOWQSTAT_SW_CB_IN1)
 145:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_SW_CB_TOP_PTR      , ((uint32)ADC_Temp_UABH_B_LOWQSTAT_SW_CB_TOP)
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 4


 146:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_SW_CC_IN0_PTR      , ((uint32)ADC_Temp_UABH_B_LOWQSTAT_SW_CC_IN0)
 147:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_SW_CC_IN1_PTR      , ((uint32)ADC_Temp_UABH_B_LOWQSTAT_SW_CC_IN1)
 148:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_SW_CF_BOT_PTR      , ((uint32)ADC_Temp_UABH_B_LOWQSTAT_SW_CF_BOT)
 149:Generated_Source\PSoC4/ADC_Temp.c **** 
 150:Generated_Source\PSoC4/ADC_Temp.c ****                 /* Parameter-based registers */
 151:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_CAP_CTRL_PTR       , ((uint32)ADC_Temp_CFG0_UABH_B_LOWQDYN_CAP_CT
 152:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_SW_CC_TOP_PTR      , ((uint32)ADC_Temp_CFG0_UABH_B_LOWQDYN_SW_CC_
 153:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_CAP_ABCF_VAL_PTR   , ((uint32)ADC_Temp_CFG0_UABH_B_LOWQDYN_CAP_AB
 154:Generated_Source\PSoC4/ADC_Temp.c ****             #elif (ADC_Temp_CFG0_FILTERTYPE_USED == ADC_Temp_FILTERTOPOLOGY_HIGH_Q)
 155:Generated_Source\PSoC4/ADC_Temp.c ****                 /* Filter-invariant registers */
 156:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_SW_CA_IN0_PTR      , ((uint32)ADC_Temp_UABH_B_HIGHQSTAT_SW_CA_IN0
 157:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_SW_CA_IN1_PTR      , ((uint32)ADC_Temp_UABH_B_HIGHQSTAT_SW_CA_IN1
 158:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_SW_CA_TOP_PTR      , ((uint32)ADC_Temp_UABH_B_HIGHQSTAT_SW_CA_TOP
 159:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_SW_CB_IN0_PTR      , ((uint32)ADC_Temp_UABH_B_HIGHQSTAT_SW_CB_IN0
 160:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_SW_CB_IN1_PTR      , ((uint32)ADC_Temp_UABH_B_HIGHQSTAT_SW_CB_IN1
 161:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_SW_CC_IN0_PTR      , ((uint32)ADC_Temp_UABH_B_HIGHQSTAT_SW_CC_IN0
 162:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_SW_CC_IN1_PTR      , ((uint32)ADC_Temp_UABH_B_HIGHQSTAT_SW_CC_IN1
 163:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_SW_CF_BOT_PTR      , ((uint32)ADC_Temp_UABH_B_HIGHQSTAT_SW_CF_BOT
 164:Generated_Source\PSoC4/ADC_Temp.c **** 
 165:Generated_Source\PSoC4/ADC_Temp.c ****                 /* Parameter-based registers */
 166:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_CAP_CTRL_PTR       , ((uint32)ADC_Temp_CFG0_UABH_B_HIGHQDYN_CAP_C
 167:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_SW_CB_TOP_PTR      , ((uint32)ADC_Temp_CFG0_UABH_B_HIGHQDYN_SW_CB
 168:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_SW_CC_TOP_PTR      , ((uint32)ADC_Temp_CFG0_UABH_B_HIGHQDYN_SW_CC
 169:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_CAP_ABCF_VAL_PTR   , ((uint32)ADC_Temp_CFG0_UABH_B_HIGHQDYN_CAP_A
 170:Generated_Source\PSoC4/ADC_Temp.c ****             #endif /* #if (ADC_Temp_CFG0_FILTERTYPE_USED == ADC_Temp_FILTERTOPOLOGY_LOW_Q) */
 171:Generated_Source\PSoC4/ADC_Temp.c ****         };
 172:Generated_Source\PSoC4/ADC_Temp.c **** 
 173:Generated_Source\PSoC4/ADC_Temp.c ****         const static CyUAB_config ADC_Temp_CFG0_UABH_A_FILTER_config = {
 174:Generated_Source\PSoC4/ADC_Temp.c ****             ADC_Temp_UABH_A_waveConfig,
 175:Generated_Source\PSoC4/ADC_Temp.c ****             (CyUAB_reg_pair*) ADC_Temp_CFG0_UABH_A_FILTER_initPairs,
 176:Generated_Source\PSoC4/ADC_Temp.c ****             CyUAB_SHARED_SW_CFG(ADC_Temp_UABH_A_PARAM_REF_TIED,ADC_Temp_UABH_A_PARAM_AGND_TIED,
 177:Generated_Source\PSoC4/ADC_Temp.c ****                 ADC_Temp_UABH_A_PARAM_SW_CC,ADC_Temp_UABH_A_PARAM_SW_BB,ADC_Temp_UABH_A_PARAM_SW_AA
 178:Generated_Source\PSoC4/ADC_Temp.c ****             ADC_Temp_UABH_A_NUM_STEPS,
 179:Generated_Source\PSoC4/ADC_Temp.c ****             (uint8)(ADC_Temp_UABH_A_ELEMENT_COUNT(ADC_Temp_CFG0_UABH_A_FILTER_initPairs))
 180:Generated_Source\PSoC4/ADC_Temp.c ****         };
 181:Generated_Source\PSoC4/ADC_Temp.c **** 
 182:Generated_Source\PSoC4/ADC_Temp.c ****         const static CyUAB_config ADC_Temp_CFG0_UABH_B_FILTER_config = {
 183:Generated_Source\PSoC4/ADC_Temp.c ****         ADC_Temp_UABH_B_waveConfig,
 184:Generated_Source\PSoC4/ADC_Temp.c ****         (CyUAB_reg_pair*) ADC_Temp_CFG0_UABH_B_FILTER_initPairs,
 185:Generated_Source\PSoC4/ADC_Temp.c ****         CyUAB_SHARED_SW_CFG(ADC_Temp_UABH_B_PARAM_REF_TIED,ADC_Temp_UABH_B_PARAM_AGND_TIED,
 186:Generated_Source\PSoC4/ADC_Temp.c ****             ADC_Temp_UABH_B_PARAM_SW_CC,ADC_Temp_UABH_B_PARAM_SW_BB,ADC_Temp_UABH_B_PARAM_SW_AA),
 187:Generated_Source\PSoC4/ADC_Temp.c ****         ADC_Temp_UABH_B_NUM_STEPS,
 188:Generated_Source\PSoC4/ADC_Temp.c ****         (uint8)(ADC_Temp_UABH_B_ELEMENT_COUNT(ADC_Temp_CFG0_UABH_B_FILTER_initPairs))
 189:Generated_Source\PSoC4/ADC_Temp.c ****     };
 190:Generated_Source\PSoC4/ADC_Temp.c ****     #endif /* (0u != ADC_Temp_CFG0_FILTER_PRESENT) */
 191:Generated_Source\PSoC4/ADC_Temp.c ****     #if (0u != ADC_Temp_CFG1_FILTER_PRESENT)
 192:Generated_Source\PSoC4/ADC_Temp.c ****         #define ADC_Temp_CFG1_UABH_A_FILTER_INITPAIRSSIZE (19u)
 193:Generated_Source\PSoC4/ADC_Temp.c ****         const static CyUAB_reg_pair ADC_Temp_CFG1_UABH_A_FILTER_initPairs[ADC_Temp_CFG1_UABH_A_FILT
 194:Generated_Source\PSoC4/ADC_Temp.c ****         {
 195:Generated_Source\PSoC4/ADC_Temp.c ****             /*OA_CTRL default always first element in initPairs*/
 196:Generated_Source\PSoC4/ADC_Temp.c ****             /* Topology-invariant registers */
 197:Generated_Source\PSoC4/ADC_Temp.c ****              {ADC_Temp_UABH_A_OA_CTRL_PTR        , ((uint32)ADC_Temp_UABH_A_DEFAULT_OA_CTRL)}
 198:Generated_Source\PSoC4/ADC_Temp.c ****             ,{ADC_Temp_UABH_A_SW_STATIC_PTR      , ((uint32)ADC_Temp_UABH_A_DEFAULT_SW_STATIC)}
 199:Generated_Source\PSoC4/ADC_Temp.c ****             ,{ADC_Temp_UABH_A_SW_MODBIT_SRC_PTR  , ((uint32)ADC_Temp_UABH_A_INVAR_SW_MODBIT_SRC)}
 200:Generated_Source\PSoC4/ADC_Temp.c ****             ,{ADC_Temp_UABH_A_SRAM_CTRL_PTR      , ((uint32)ADC_Temp_UABH_A_INVAR_SRAM_CTRL)}
 201:Generated_Source\PSoC4/ADC_Temp.c ****             ,{ADC_Temp_UABH_A_STARTUP_DELAY_PTR  , ((uint32)ADC_Temp_CFG1_UABH_A_STARTUP_DELAY)}
 202:Generated_Source\PSoC4/ADC_Temp.c ****             ,{ADC_Temp_UABH_A_SW_BOOST_CTRL_PTR  , ((uint32)ADC_Temp_UABH_A_DEFAULT_SW_BOOST_CTRL)}
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 5


 203:Generated_Source\PSoC4/ADC_Temp.c ****             ,{ADC_Temp_UABH_A_SW_CA_IN1_PTR      , ((uint32)ADC_Temp_UABH_A_DEFAULT_SW_CA_IN1)}
 204:Generated_Source\PSoC4/ADC_Temp.c ****             ,{ADC_Temp_UABH_A_SW_OTHER_PTR       , ((uint32)ADC_Temp_UABH_A_DEFAULT_SW_OTHER)}
 205:Generated_Source\PSoC4/ADC_Temp.c **** 
 206:Generated_Source\PSoC4/ADC_Temp.c ****             #if (ADC_Temp_CFG1_FILTERTYPE_USED == ADC_Temp_FILTERTOPOLOGY_LOW_Q)
 207:Generated_Source\PSoC4/ADC_Temp.c ****                 /* Filter-invariant registers */
 208:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_A_SW_CA_IN0_PTR      , ((uint32)ADC_Temp_UABH_A_LOWQSTAT_SW_CA_IN0)
 209:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_A_SW_CA_TOP_PTR      , ((uint32)ADC_Temp_UABH_A_LOWQSTAT_SW_CA_TOP)
 210:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_A_SW_CC_IN0_PTR      , ((uint32)ADC_Temp_UABH_A_LOWQSTAT_SW_CC_IN0)
 211:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_A_SW_CC_IN1_PTR      , ((uint32)ADC_Temp_UABH_A_LOWQSTAT_SW_CC_IN1)
 212:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_A_SW_CF_BOT_PTR      , ((uint32)ADC_Temp_UABH_A_LOWQSTAT_SW_CF_BOT)
 213:Generated_Source\PSoC4/ADC_Temp.c **** 
 214:Generated_Source\PSoC4/ADC_Temp.c ****                 /* Parameter-based registers */
 215:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_A_CAP_CTRL_PTR       , ((uint32)ADC_Temp_CFG1_UABH_A_LOWQDYN_CAP_CT
 216:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_A_SW_CB_IN0_PTR      , ((uint32)ADC_Temp_CFG1_UABH_A_LOWQDYN_SW_CB_
 217:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_A_SW_CB_IN1_PTR      , ((uint32)ADC_Temp_CFG1_UABH_A_LOWQDYN_SW_CB_
 218:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_A_SW_CB_TOP_PTR      , ((uint32)ADC_Temp_CFG1_UABH_A_LOWQDYN_SW_CB_
 219:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_A_SW_CC_TOP_PTR      , ((uint32)ADC_Temp_CFG1_UABH_A_LOWQDYN_SW_CC_
 220:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_A_CAP_ABCF_VAL_PTR   , ((uint32)ADC_Temp_CFG1_UABH_A_LOWQDYN_CAP_AB
 221:Generated_Source\PSoC4/ADC_Temp.c ****             #elif (ADC_Temp_CFG1_FILTERTYPE_USED == ADC_Temp_FILTERTOPOLOGY_HIGH_Q)
 222:Generated_Source\PSoC4/ADC_Temp.c ****                 /* Filter-invariant registers */
 223:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_A_SW_CA_IN0_PTR      , ((uint32)ADC_Temp_UABH_A_HIGHQSTAT_SW_CA_IN0
 224:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_A_SW_CA_TOP_PTR      , ((uint32)ADC_Temp_UABH_A_HIGHQSTAT_SW_CA_TOP
 225:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_A_SW_CB_IN0_PTR      , ((uint32)ADC_Temp_UABH_A_HIGHQSTAT_SW_CB_IN0
 226:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_A_SW_CB_IN1_PTR      , ((uint32)ADC_Temp_UABH_A_HIGHQSTAT_SW_CB_IN1
 227:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_A_SW_CC_IN0_PTR      , ((uint32)ADC_Temp_UABH_A_HIGHQSTAT_SW_CC_IN0
 228:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_A_SW_CC_IN1_PTR      , ((uint32)ADC_Temp_UABH_A_HIGHQSTAT_SW_CC_IN1
 229:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_A_SW_CC_TOP_PTR      , ((uint32)ADC_Temp_UABH_A_HIGHQSTAT_SW_CC_TOP
 230:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_A_SW_CF_BOT_PTR      , ((uint32)ADC_Temp_UABH_A_HIGHQSTAT_SW_CF_BOT
 231:Generated_Source\PSoC4/ADC_Temp.c **** 
 232:Generated_Source\PSoC4/ADC_Temp.c ****                 /* Parameter-based registers */
 233:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_A_CAP_CTRL_PTR       , ((uint32)ADC_Temp_CFG1_UABH_A_HIGHQDYN_CAP_C
 234:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_A_SW_CB_TOP_PTR      , ((uint32)ADC_Temp_CFG1_UABH_A_HIGHQDYN_SW_CB
 235:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_A_CAP_ABCF_VAL_PTR   , ((uint32)ADC_Temp_CFG1_UABH_A_HIGHQDYN_CAP_A
 236:Generated_Source\PSoC4/ADC_Temp.c ****             #endif /* (ADC_Temp_CFG1_FILTERTYPE_USED == ADC_Temp_FILTERTOPOLOGY_LOW_Q) */
 237:Generated_Source\PSoC4/ADC_Temp.c ****         };
 238:Generated_Source\PSoC4/ADC_Temp.c **** 
 239:Generated_Source\PSoC4/ADC_Temp.c ****         #define ADC_Temp_CFG1_UABH_B_FILTER_INITPAIRSSIZE (19u)
 240:Generated_Source\PSoC4/ADC_Temp.c ****         const static CyUAB_reg_pair ADC_Temp_CFG1_UABH_B_FILTER_initPairs[ADC_Temp_CFG1_UABH_B_FILT
 241:Generated_Source\PSoC4/ADC_Temp.c ****         {
 242:Generated_Source\PSoC4/ADC_Temp.c ****             /*OA_CTRL default always first element in initPairs*/
 243:Generated_Source\PSoC4/ADC_Temp.c ****             /* Topology-invariant registers */
 244:Generated_Source\PSoC4/ADC_Temp.c ****              {ADC_Temp_UABH_B_OA_CTRL_PTR        , ((uint32)ADC_Temp_UABH_B_DEFAULT_OA_CTRL)}
 245:Generated_Source\PSoC4/ADC_Temp.c ****             ,{ADC_Temp_UABH_B_SW_STATIC_PTR      , ((uint32)ADC_Temp_UABH_B_DEFAULT_SW_STATIC)}
 246:Generated_Source\PSoC4/ADC_Temp.c ****             ,{ADC_Temp_UABH_B_SW_MODBIT_SRC_PTR  , ((uint32)ADC_Temp_UABH_B_INVAR_SW_MODBIT_SRC)}
 247:Generated_Source\PSoC4/ADC_Temp.c ****             ,{ADC_Temp_UABH_B_SRAM_CTRL_PTR      , ((uint32)ADC_Temp_UABH_B_INVAR_SRAM_CTRL)}
 248:Generated_Source\PSoC4/ADC_Temp.c ****             ,{ADC_Temp_UABH_B_STARTUP_DELAY_PTR  , ((uint32)ADC_Temp_CFG1_UABH_B_STARTUP_DELAY)}
 249:Generated_Source\PSoC4/ADC_Temp.c ****             ,{ADC_Temp_UABH_B_SW_BOOST_CTRL_PTR  , ((uint32)ADC_Temp_UABH_B_DEFAULT_SW_BOOST_CTRL)}
 250:Generated_Source\PSoC4/ADC_Temp.c ****             ,{ADC_Temp_UABH_B_SW_OTHER_PTR       , ((uint32)ADC_Temp_UABH_B_DEFAULT_SW_OTHER)}
 251:Generated_Source\PSoC4/ADC_Temp.c **** 
 252:Generated_Source\PSoC4/ADC_Temp.c ****             #if (ADC_Temp_CFG1_FILTERTYPE_USED == ADC_Temp_FILTERTOPOLOGY_LOW_Q)
 253:Generated_Source\PSoC4/ADC_Temp.c ****                         /* Filter-invariant registers */
 254:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_SW_CA_IN0_PTR      , ((uint32)ADC_Temp_UABH_B_LOWQSTAT_SW_CA_IN0)
 255:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_SW_CA_IN1_PTR      , ((uint32)ADC_Temp_UABH_B_LOWQSTAT_SW_CA_IN1)
 256:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_SW_CA_TOP_PTR      , ((uint32)ADC_Temp_UABH_B_LOWQSTAT_SW_CA_TOP)
 257:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_SW_CB_IN0_PTR      , ((uint32)ADC_Temp_UABH_B_LOWQSTAT_SW_CB_IN0)
 258:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_SW_CB_IN1_PTR      , ((uint32)ADC_Temp_UABH_B_LOWQSTAT_SW_CB_IN1)
 259:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_SW_CB_TOP_PTR      , ((uint32)ADC_Temp_UABH_B_LOWQSTAT_SW_CB_TOP)
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 6


 260:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_SW_CC_IN0_PTR      , ((uint32)ADC_Temp_UABH_B_LOWQSTAT_SW_CC_IN0)
 261:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_SW_CC_IN1_PTR      , ((uint32)ADC_Temp_UABH_B_LOWQSTAT_SW_CC_IN1)
 262:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_SW_CF_BOT_PTR      , ((uint32)ADC_Temp_UABH_B_LOWQSTAT_SW_CF_BOT)
 263:Generated_Source\PSoC4/ADC_Temp.c **** 
 264:Generated_Source\PSoC4/ADC_Temp.c ****                 /* Parameter-based registers */
 265:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_CAP_CTRL_PTR       , ((uint32)ADC_Temp_CFG1_UABH_B_LOWQDYN_CAP_CT
 266:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_SW_CC_TOP_PTR      , ((uint32)ADC_Temp_CFG1_UABH_B_LOWQDYN_SW_CC_
 267:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_CAP_ABCF_VAL_PTR   , ((uint32)ADC_Temp_CFG1_UABH_B_LOWQDYN_CAP_AB
 268:Generated_Source\PSoC4/ADC_Temp.c ****             #elif (ADC_Temp_CFG1_FILTERTYPE_USED == ADC_Temp_FILTERTOPOLOGY_HIGH_Q)
 269:Generated_Source\PSoC4/ADC_Temp.c ****                 /* Filter-invariant registers */
 270:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_SW_CA_IN0_PTR      , ((uint32)ADC_Temp_UABH_B_HIGHQSTAT_SW_CA_IN0
 271:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_SW_CA_IN1_PTR      , ((uint32)ADC_Temp_UABH_B_HIGHQSTAT_SW_CA_IN1
 272:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_SW_CA_TOP_PTR      , ((uint32)ADC_Temp_UABH_B_HIGHQSTAT_SW_CA_TOP
 273:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_SW_CB_IN0_PTR      , ((uint32)ADC_Temp_UABH_B_HIGHQSTAT_SW_CB_IN0
 274:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_SW_CB_IN1_PTR      , ((uint32)ADC_Temp_UABH_B_HIGHQSTAT_SW_CB_IN1
 275:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_SW_CC_IN0_PTR      , ((uint32)ADC_Temp_UABH_B_HIGHQSTAT_SW_CC_IN0
 276:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_SW_CC_IN1_PTR      , ((uint32)ADC_Temp_UABH_B_HIGHQSTAT_SW_CC_IN1
 277:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_SW_CF_BOT_PTR      , ((uint32)ADC_Temp_UABH_B_HIGHQSTAT_SW_CF_BOT
 278:Generated_Source\PSoC4/ADC_Temp.c **** 
 279:Generated_Source\PSoC4/ADC_Temp.c ****                 /* Parameter-based registers */
 280:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_CAP_CTRL_PTR       , ((uint32)ADC_Temp_CFG1_UABH_B_HIGHQDYN_CAP_C
 281:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_SW_CB_TOP_PTR      , ((uint32)ADC_Temp_CFG1_UABH_B_HIGHQDYN_SW_CB
 282:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_SW_CC_TOP_PTR      , ((uint32)ADC_Temp_CFG1_UABH_B_HIGHQDYN_SW_CC
 283:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_CAP_ABCF_VAL_PTR   , ((uint32)ADC_Temp_CFG1_UABH_B_HIGHQDYN_CAP_A
 284:Generated_Source\PSoC4/ADC_Temp.c ****             #endif /* #if (ADC_Temp_CFG1_FILTERTYPE_USED == ADC_Temp_FILTERTOPOLOGY_LOW_Q) */
 285:Generated_Source\PSoC4/ADC_Temp.c ****         };
 286:Generated_Source\PSoC4/ADC_Temp.c **** 
 287:Generated_Source\PSoC4/ADC_Temp.c ****         const static CyUAB_config ADC_Temp_CFG1_UABH_A_FILTER_config = {
 288:Generated_Source\PSoC4/ADC_Temp.c ****             ADC_Temp_UABH_A_waveConfig,
 289:Generated_Source\PSoC4/ADC_Temp.c ****             (CyUAB_reg_pair*) ADC_Temp_CFG1_UABH_A_FILTER_initPairs,
 290:Generated_Source\PSoC4/ADC_Temp.c ****             CyUAB_SHARED_SW_CFG(ADC_Temp_UABH_A_PARAM_REF_TIED,ADC_Temp_UABH_A_PARAM_AGND_TIED,
 291:Generated_Source\PSoC4/ADC_Temp.c ****                 ADC_Temp_UABH_A_PARAM_SW_CC,ADC_Temp_UABH_A_PARAM_SW_BB,ADC_Temp_UABH_A_PARAM_SW_AA
 292:Generated_Source\PSoC4/ADC_Temp.c ****             ADC_Temp_UABH_A_NUM_STEPS,
 293:Generated_Source\PSoC4/ADC_Temp.c ****             (uint8)(ADC_Temp_UABH_A_ELEMENT_COUNT(ADC_Temp_CFG1_UABH_A_FILTER_initPairs))
 294:Generated_Source\PSoC4/ADC_Temp.c ****         };
 295:Generated_Source\PSoC4/ADC_Temp.c **** 
 296:Generated_Source\PSoC4/ADC_Temp.c ****         const static CyUAB_config ADC_Temp_CFG1_UABH_B_FILTER_config = {
 297:Generated_Source\PSoC4/ADC_Temp.c ****         ADC_Temp_UABH_B_waveConfig,
 298:Generated_Source\PSoC4/ADC_Temp.c ****         (CyUAB_reg_pair*) ADC_Temp_CFG1_UABH_B_FILTER_initPairs,
 299:Generated_Source\PSoC4/ADC_Temp.c ****         CyUAB_SHARED_SW_CFG(ADC_Temp_UABH_B_PARAM_REF_TIED,ADC_Temp_UABH_B_PARAM_AGND_TIED,
 300:Generated_Source\PSoC4/ADC_Temp.c ****             ADC_Temp_UABH_B_PARAM_SW_CC,ADC_Temp_UABH_B_PARAM_SW_BB,ADC_Temp_UABH_B_PARAM_SW_AA),
 301:Generated_Source\PSoC4/ADC_Temp.c ****         ADC_Temp_UABH_B_NUM_STEPS,
 302:Generated_Source\PSoC4/ADC_Temp.c ****         (uint8)(ADC_Temp_UABH_B_ELEMENT_COUNT(ADC_Temp_CFG1_UABH_B_FILTER_initPairs))
 303:Generated_Source\PSoC4/ADC_Temp.c ****     };
 304:Generated_Source\PSoC4/ADC_Temp.c ****     #endif /* (0u != ADC_Temp_CFG1_FILTER_PRESENT) */
 305:Generated_Source\PSoC4/ADC_Temp.c ****     #if (0u != ADC_Temp_CFG2_FILTER_PRESENT)
 306:Generated_Source\PSoC4/ADC_Temp.c ****         #define ADC_Temp_CFG2_UABH_A_FILTER_INITPAIRSSIZE (19u)
 307:Generated_Source\PSoC4/ADC_Temp.c ****         const static CyUAB_reg_pair ADC_Temp_CFG2_UABH_A_FILTER_initPairs[ADC_Temp_CFG2_UABH_A_FILT
 308:Generated_Source\PSoC4/ADC_Temp.c ****         {
 309:Generated_Source\PSoC4/ADC_Temp.c ****             /*OA_CTRL default always first element in initPairs*/
 310:Generated_Source\PSoC4/ADC_Temp.c ****             /* Topology-invariant registers */
 311:Generated_Source\PSoC4/ADC_Temp.c ****              {ADC_Temp_UABH_A_OA_CTRL_PTR        , ((uint32)ADC_Temp_UABH_A_DEFAULT_OA_CTRL)}
 312:Generated_Source\PSoC4/ADC_Temp.c ****             ,{ADC_Temp_UABH_A_SW_STATIC_PTR      , ((uint32)ADC_Temp_UABH_A_DEFAULT_SW_STATIC)}
 313:Generated_Source\PSoC4/ADC_Temp.c ****             ,{ADC_Temp_UABH_A_SW_MODBIT_SRC_PTR  , ((uint32)ADC_Temp_UABH_A_INVAR_SW_MODBIT_SRC)}
 314:Generated_Source\PSoC4/ADC_Temp.c ****             ,{ADC_Temp_UABH_A_SRAM_CTRL_PTR      , ((uint32)ADC_Temp_UABH_A_INVAR_SRAM_CTRL)}
 315:Generated_Source\PSoC4/ADC_Temp.c ****             ,{ADC_Temp_UABH_A_STARTUP_DELAY_PTR  , ((uint32)ADC_Temp_CFG2_UABH_A_STARTUP_DELAY)}
 316:Generated_Source\PSoC4/ADC_Temp.c ****             ,{ADC_Temp_UABH_A_SW_BOOST_CTRL_PTR  , ((uint32)ADC_Temp_UABH_A_DEFAULT_SW_BOOST_CTRL)}
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 7


 317:Generated_Source\PSoC4/ADC_Temp.c ****             ,{ADC_Temp_UABH_A_SW_CA_IN1_PTR      , ((uint32)ADC_Temp_UABH_A_DEFAULT_SW_CA_IN1)}
 318:Generated_Source\PSoC4/ADC_Temp.c ****             ,{ADC_Temp_UABH_A_SW_OTHER_PTR       , ((uint32)ADC_Temp_UABH_A_DEFAULT_SW_OTHER)}
 319:Generated_Source\PSoC4/ADC_Temp.c **** 
 320:Generated_Source\PSoC4/ADC_Temp.c ****             #if (ADC_Temp_CFG2_FILTERTYPE_USED == ADC_Temp_FILTERTOPOLOGY_LOW_Q)
 321:Generated_Source\PSoC4/ADC_Temp.c ****                 /* Filter-invariant registers */
 322:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_A_SW_CA_IN0_PTR      , ((uint32)ADC_Temp_UABH_A_LOWQSTAT_SW_CA_IN0)
 323:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_A_SW_CA_TOP_PTR      , ((uint32)ADC_Temp_UABH_A_LOWQSTAT_SW_CA_TOP)
 324:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_A_SW_CC_IN0_PTR      , ((uint32)ADC_Temp_UABH_A_LOWQSTAT_SW_CC_IN0)
 325:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_A_SW_CC_IN1_PTR      , ((uint32)ADC_Temp_UABH_A_LOWQSTAT_SW_CC_IN1)
 326:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_A_SW_CF_BOT_PTR      , ((uint32)ADC_Temp_UABH_A_LOWQSTAT_SW_CF_BOT)
 327:Generated_Source\PSoC4/ADC_Temp.c **** 
 328:Generated_Source\PSoC4/ADC_Temp.c ****                 /* Parameter-based registers */
 329:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_A_CAP_CTRL_PTR       , ((uint32)ADC_Temp_CFG2_UABH_A_LOWQDYN_CAP_CT
 330:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_A_SW_CB_IN0_PTR      , ((uint32)ADC_Temp_CFG2_UABH_A_LOWQDYN_SW_CB_
 331:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_A_SW_CB_IN1_PTR      , ((uint32)ADC_Temp_CFG2_UABH_A_LOWQDYN_SW_CB_
 332:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_A_SW_CB_TOP_PTR      , ((uint32)ADC_Temp_CFG2_UABH_A_LOWQDYN_SW_CB_
 333:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_A_SW_CC_TOP_PTR      , ((uint32)ADC_Temp_CFG2_UABH_A_LOWQDYN_SW_CC_
 334:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_A_CAP_ABCF_VAL_PTR   , ((uint32)ADC_Temp_CFG2_UABH_A_LOWQDYN_CAP_AB
 335:Generated_Source\PSoC4/ADC_Temp.c ****             #elif (ADC_Temp_CFG2_FILTERTYPE_USED == ADC_Temp_FILTERTOPOLOGY_HIGH_Q)
 336:Generated_Source\PSoC4/ADC_Temp.c ****                 /* Filter-invariant registers */
 337:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_A_SW_CA_IN0_PTR      , ((uint32)ADC_Temp_UABH_A_HIGHQSTAT_SW_CA_IN0
 338:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_A_SW_CA_TOP_PTR      , ((uint32)ADC_Temp_UABH_A_HIGHQSTAT_SW_CA_TOP
 339:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_A_SW_CB_IN0_PTR      , ((uint32)ADC_Temp_UABH_A_HIGHQSTAT_SW_CB_IN0
 340:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_A_SW_CB_IN1_PTR      , ((uint32)ADC_Temp_UABH_A_HIGHQSTAT_SW_CB_IN1
 341:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_A_SW_CC_IN0_PTR      , ((uint32)ADC_Temp_UABH_A_HIGHQSTAT_SW_CC_IN0
 342:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_A_SW_CC_IN1_PTR      , ((uint32)ADC_Temp_UABH_A_HIGHQSTAT_SW_CC_IN1
 343:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_A_SW_CC_TOP_PTR      , ((uint32)ADC_Temp_UABH_A_HIGHQSTAT_SW_CC_TOP
 344:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_A_SW_CF_BOT_PTR      , ((uint32)ADC_Temp_UABH_A_HIGHQSTAT_SW_CF_BOT
 345:Generated_Source\PSoC4/ADC_Temp.c **** 
 346:Generated_Source\PSoC4/ADC_Temp.c ****                 /* Parameter-based registers */
 347:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_A_CAP_CTRL_PTR       , ((uint32)ADC_Temp_CFG2_UABH_A_HIGHQDYN_CAP_C
 348:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_A_SW_CB_TOP_PTR      , ((uint32)ADC_Temp_CFG2_UABH_A_HIGHQDYN_SW_CB
 349:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_A_CAP_ABCF_VAL_PTR   , ((uint32)ADC_Temp_CFG2_UABH_A_HIGHQDYN_CAP_A
 350:Generated_Source\PSoC4/ADC_Temp.c ****             #endif /* (ADC_Temp_CFG2_FILTERTYPE_USED == ADC_Temp_FILTERTOPOLOGY_LOW_Q) */
 351:Generated_Source\PSoC4/ADC_Temp.c ****         };
 352:Generated_Source\PSoC4/ADC_Temp.c **** 
 353:Generated_Source\PSoC4/ADC_Temp.c ****         #define ADC_Temp_CFG2_UABH_B_FILTER_INITPAIRSSIZE (19u)
 354:Generated_Source\PSoC4/ADC_Temp.c ****         const static CyUAB_reg_pair ADC_Temp_CFG2_UABH_B_FILTER_initPairs[ADC_Temp_CFG2_UABH_B_FILT
 355:Generated_Source\PSoC4/ADC_Temp.c ****         {
 356:Generated_Source\PSoC4/ADC_Temp.c ****             /*OA_CTRL default always first element in initPairs*/
 357:Generated_Source\PSoC4/ADC_Temp.c ****             /* Topology-invariant registers */
 358:Generated_Source\PSoC4/ADC_Temp.c ****              {ADC_Temp_UABH_B_OA_CTRL_PTR        , ((uint32)ADC_Temp_UABH_B_DEFAULT_OA_CTRL)}
 359:Generated_Source\PSoC4/ADC_Temp.c ****             ,{ADC_Temp_UABH_B_SW_STATIC_PTR      , ((uint32)ADC_Temp_UABH_B_DEFAULT_SW_STATIC)}
 360:Generated_Source\PSoC4/ADC_Temp.c ****             ,{ADC_Temp_UABH_B_SW_MODBIT_SRC_PTR  , ((uint32)ADC_Temp_UABH_B_INVAR_SW_MODBIT_SRC)}
 361:Generated_Source\PSoC4/ADC_Temp.c ****             ,{ADC_Temp_UABH_B_SRAM_CTRL_PTR      , ((uint32)ADC_Temp_UABH_B_INVAR_SRAM_CTRL)}
 362:Generated_Source\PSoC4/ADC_Temp.c ****             ,{ADC_Temp_UABH_B_STARTUP_DELAY_PTR  , ((uint32)ADC_Temp_CFG2_UABH_B_STARTUP_DELAY)}
 363:Generated_Source\PSoC4/ADC_Temp.c ****             ,{ADC_Temp_UABH_B_SW_BOOST_CTRL_PTR  , ((uint32)ADC_Temp_UABH_B_DEFAULT_SW_BOOST_CTRL)}
 364:Generated_Source\PSoC4/ADC_Temp.c ****             ,{ADC_Temp_UABH_B_SW_OTHER_PTR       , ((uint32)ADC_Temp_UABH_B_DEFAULT_SW_OTHER)}
 365:Generated_Source\PSoC4/ADC_Temp.c **** 
 366:Generated_Source\PSoC4/ADC_Temp.c ****             #if (ADC_Temp_CFG2_FILTERTYPE_USED == ADC_Temp_FILTERTOPOLOGY_LOW_Q)
 367:Generated_Source\PSoC4/ADC_Temp.c ****                         /* Filter-invariant registers */
 368:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_SW_CA_IN0_PTR      , ((uint32)ADC_Temp_UABH_B_LOWQSTAT_SW_CA_IN0)
 369:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_SW_CA_IN1_PTR      , ((uint32)ADC_Temp_UABH_B_LOWQSTAT_SW_CA_IN1)
 370:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_SW_CA_TOP_PTR      , ((uint32)ADC_Temp_UABH_B_LOWQSTAT_SW_CA_TOP)
 371:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_SW_CB_IN0_PTR      , ((uint32)ADC_Temp_UABH_B_LOWQSTAT_SW_CB_IN0)
 372:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_SW_CB_IN1_PTR      , ((uint32)ADC_Temp_UABH_B_LOWQSTAT_SW_CB_IN1)
 373:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_SW_CB_TOP_PTR      , ((uint32)ADC_Temp_UABH_B_LOWQSTAT_SW_CB_TOP)
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 8


 374:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_SW_CC_IN0_PTR      , ((uint32)ADC_Temp_UABH_B_LOWQSTAT_SW_CC_IN0)
 375:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_SW_CC_IN1_PTR      , ((uint32)ADC_Temp_UABH_B_LOWQSTAT_SW_CC_IN1)
 376:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_SW_CF_BOT_PTR      , ((uint32)ADC_Temp_UABH_B_LOWQSTAT_SW_CF_BOT)
 377:Generated_Source\PSoC4/ADC_Temp.c **** 
 378:Generated_Source\PSoC4/ADC_Temp.c ****                 /* Parameter-based registers */
 379:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_CAP_CTRL_PTR       , ((uint32)ADC_Temp_CFG2_UABH_B_LOWQDYN_CAP_CT
 380:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_SW_CC_TOP_PTR      , ((uint32)ADC_Temp_CFG2_UABH_B_LOWQDYN_SW_CC_
 381:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_CAP_ABCF_VAL_PTR   , ((uint32)ADC_Temp_CFG2_UABH_B_LOWQDYN_CAP_AB
 382:Generated_Source\PSoC4/ADC_Temp.c ****             #elif (ADC_Temp_CFG2_FILTERTYPE_USED == ADC_Temp_FILTERTOPOLOGY_HIGH_Q)
 383:Generated_Source\PSoC4/ADC_Temp.c ****                 /* Filter-invariant registers */
 384:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_SW_CA_IN0_PTR      , ((uint32)ADC_Temp_UABH_B_HIGHQSTAT_SW_CA_IN0
 385:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_SW_CA_IN1_PTR      , ((uint32)ADC_Temp_UABH_B_HIGHQSTAT_SW_CA_IN1
 386:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_SW_CA_TOP_PTR      , ((uint32)ADC_Temp_UABH_B_HIGHQSTAT_SW_CA_TOP
 387:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_SW_CB_IN0_PTR      , ((uint32)ADC_Temp_UABH_B_HIGHQSTAT_SW_CB_IN0
 388:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_SW_CB_IN1_PTR      , ((uint32)ADC_Temp_UABH_B_HIGHQSTAT_SW_CB_IN1
 389:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_SW_CC_IN0_PTR      , ((uint32)ADC_Temp_UABH_B_HIGHQSTAT_SW_CC_IN0
 390:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_SW_CC_IN1_PTR      , ((uint32)ADC_Temp_UABH_B_HIGHQSTAT_SW_CC_IN1
 391:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_SW_CF_BOT_PTR      , ((uint32)ADC_Temp_UABH_B_HIGHQSTAT_SW_CF_BOT
 392:Generated_Source\PSoC4/ADC_Temp.c **** 
 393:Generated_Source\PSoC4/ADC_Temp.c ****                 /* Parameter-based registers */
 394:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_CAP_CTRL_PTR       , ((uint32)ADC_Temp_CFG2_UABH_B_HIGHQDYN_CAP_C
 395:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_SW_CB_TOP_PTR      , ((uint32)ADC_Temp_CFG2_UABH_B_HIGHQDYN_SW_CB
 396:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_SW_CC_TOP_PTR      , ((uint32)ADC_Temp_CFG2_UABH_B_HIGHQDYN_SW_CC
 397:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_CAP_ABCF_VAL_PTR   , ((uint32)ADC_Temp_CFG2_UABH_B_HIGHQDYN_CAP_A
 398:Generated_Source\PSoC4/ADC_Temp.c ****             #endif /* #if (ADC_Temp_CFG2_FILTERTYPE_USED == ADC_Temp_FILTERTOPOLOGY_LOW_Q) */
 399:Generated_Source\PSoC4/ADC_Temp.c ****         };
 400:Generated_Source\PSoC4/ADC_Temp.c **** 
 401:Generated_Source\PSoC4/ADC_Temp.c ****         const static CyUAB_config ADC_Temp_CFG2_UABH_A_FILTER_config = {
 402:Generated_Source\PSoC4/ADC_Temp.c ****             ADC_Temp_UABH_A_waveConfig,
 403:Generated_Source\PSoC4/ADC_Temp.c ****             (CyUAB_reg_pair*) ADC_Temp_CFG2_UABH_A_FILTER_initPairs,
 404:Generated_Source\PSoC4/ADC_Temp.c ****             CyUAB_SHARED_SW_CFG(ADC_Temp_UABH_A_PARAM_REF_TIED,ADC_Temp_UABH_A_PARAM_AGND_TIED,
 405:Generated_Source\PSoC4/ADC_Temp.c ****                 ADC_Temp_UABH_A_PARAM_SW_CC,ADC_Temp_UABH_A_PARAM_SW_BB,ADC_Temp_UABH_A_PARAM_SW_AA
 406:Generated_Source\PSoC4/ADC_Temp.c ****             ADC_Temp_UABH_A_NUM_STEPS,
 407:Generated_Source\PSoC4/ADC_Temp.c ****             (uint8)(ADC_Temp_UABH_A_ELEMENT_COUNT(ADC_Temp_CFG2_UABH_A_FILTER_initPairs))
 408:Generated_Source\PSoC4/ADC_Temp.c ****         };
 409:Generated_Source\PSoC4/ADC_Temp.c **** 
 410:Generated_Source\PSoC4/ADC_Temp.c ****         const static CyUAB_config ADC_Temp_CFG2_UABH_B_FILTER_config = {
 411:Generated_Source\PSoC4/ADC_Temp.c ****         ADC_Temp_UABH_B_waveConfig,
 412:Generated_Source\PSoC4/ADC_Temp.c ****         (CyUAB_reg_pair*) ADC_Temp_CFG2_UABH_B_FILTER_initPairs,
 413:Generated_Source\PSoC4/ADC_Temp.c ****         CyUAB_SHARED_SW_CFG(ADC_Temp_UABH_B_PARAM_REF_TIED,ADC_Temp_UABH_B_PARAM_AGND_TIED,
 414:Generated_Source\PSoC4/ADC_Temp.c ****             ADC_Temp_UABH_B_PARAM_SW_CC,ADC_Temp_UABH_B_PARAM_SW_BB,ADC_Temp_UABH_B_PARAM_SW_AA),
 415:Generated_Source\PSoC4/ADC_Temp.c ****         ADC_Temp_UABH_B_NUM_STEPS,
 416:Generated_Source\PSoC4/ADC_Temp.c ****         (uint8)(ADC_Temp_UABH_B_ELEMENT_COUNT(ADC_Temp_CFG2_UABH_B_FILTER_initPairs))
 417:Generated_Source\PSoC4/ADC_Temp.c ****     };
 418:Generated_Source\PSoC4/ADC_Temp.c ****     #endif /* (0u != ADC_Temp_CFG2_FILTER_PRESENT) */
 419:Generated_Source\PSoC4/ADC_Temp.c ****     #if (0u != ADC_Temp_CFG3_FILTER_PRESENT)
 420:Generated_Source\PSoC4/ADC_Temp.c ****         #define ADC_Temp_CFG3_UABH_A_FILTER_INITPAIRSSIZE (19u)
 421:Generated_Source\PSoC4/ADC_Temp.c ****         const static CyUAB_reg_pair ADC_Temp_CFG3_UABH_A_FILTER_initPairs[ADC_Temp_CFG3_UABH_A_FILT
 422:Generated_Source\PSoC4/ADC_Temp.c ****         {
 423:Generated_Source\PSoC4/ADC_Temp.c ****             /*OA_CTRL default always first element in initPairs*/
 424:Generated_Source\PSoC4/ADC_Temp.c ****             /* Topology-invariant registers */
 425:Generated_Source\PSoC4/ADC_Temp.c ****              {ADC_Temp_UABH_A_OA_CTRL_PTR        , ((uint32)ADC_Temp_UABH_A_DEFAULT_OA_CTRL)}
 426:Generated_Source\PSoC4/ADC_Temp.c ****             ,{ADC_Temp_UABH_A_SW_STATIC_PTR      , ((uint32)ADC_Temp_UABH_A_DEFAULT_SW_STATIC)}
 427:Generated_Source\PSoC4/ADC_Temp.c ****             ,{ADC_Temp_UABH_A_SW_MODBIT_SRC_PTR  , ((uint32)ADC_Temp_UABH_A_INVAR_SW_MODBIT_SRC)}
 428:Generated_Source\PSoC4/ADC_Temp.c ****             ,{ADC_Temp_UABH_A_SRAM_CTRL_PTR      , ((uint32)ADC_Temp_UABH_A_INVAR_SRAM_CTRL)}
 429:Generated_Source\PSoC4/ADC_Temp.c ****             ,{ADC_Temp_UABH_A_STARTUP_DELAY_PTR  , ((uint32)ADC_Temp_CFG3_UABH_A_STARTUP_DELAY)}
 430:Generated_Source\PSoC4/ADC_Temp.c ****             ,{ADC_Temp_UABH_A_SW_BOOST_CTRL_PTR  , ((uint32)ADC_Temp_UABH_A_DEFAULT_SW_BOOST_CTRL)}
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 9


 431:Generated_Source\PSoC4/ADC_Temp.c ****             ,{ADC_Temp_UABH_A_SW_CA_IN1_PTR      , ((uint32)ADC_Temp_UABH_A_DEFAULT_SW_CA_IN1)}
 432:Generated_Source\PSoC4/ADC_Temp.c ****             ,{ADC_Temp_UABH_A_SW_OTHER_PTR       , ((uint32)ADC_Temp_UABH_A_DEFAULT_SW_OTHER)}
 433:Generated_Source\PSoC4/ADC_Temp.c **** 
 434:Generated_Source\PSoC4/ADC_Temp.c ****             #if (ADC_Temp_CFG3_FILTERTYPE_USED == ADC_Temp_FILTERTOPOLOGY_LOW_Q)
 435:Generated_Source\PSoC4/ADC_Temp.c ****                 /* Filter-invariant registers */
 436:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_A_SW_CA_IN0_PTR      , ((uint32)ADC_Temp_UABH_A_LOWQSTAT_SW_CA_IN0)
 437:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_A_SW_CA_TOP_PTR      , ((uint32)ADC_Temp_UABH_A_LOWQSTAT_SW_CA_TOP)
 438:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_A_SW_CC_IN0_PTR      , ((uint32)ADC_Temp_UABH_A_LOWQSTAT_SW_CC_IN0)
 439:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_A_SW_CC_IN1_PTR      , ((uint32)ADC_Temp_UABH_A_LOWQSTAT_SW_CC_IN1)
 440:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_A_SW_CF_BOT_PTR      , ((uint32)ADC_Temp_UABH_A_LOWQSTAT_SW_CF_BOT)
 441:Generated_Source\PSoC4/ADC_Temp.c **** 
 442:Generated_Source\PSoC4/ADC_Temp.c ****                 /* Parameter-based registers */
 443:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_A_CAP_CTRL_PTR       , ((uint32)ADC_Temp_CFG3_UABH_A_LOWQDYN_CAP_CT
 444:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_A_SW_CB_IN0_PTR      , ((uint32)ADC_Temp_CFG3_UABH_A_LOWQDYN_SW_CB_
 445:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_A_SW_CB_IN1_PTR      , ((uint32)ADC_Temp_CFG3_UABH_A_LOWQDYN_SW_CB_
 446:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_A_SW_CB_TOP_PTR      , ((uint32)ADC_Temp_CFG3_UABH_A_LOWQDYN_SW_CB_
 447:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_A_SW_CC_TOP_PTR      , ((uint32)ADC_Temp_CFG3_UABH_A_LOWQDYN_SW_CC_
 448:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_A_CAP_ABCF_VAL_PTR   , ((uint32)ADC_Temp_CFG3_UABH_A_LOWQDYN_CAP_AB
 449:Generated_Source\PSoC4/ADC_Temp.c ****             #elif (ADC_Temp_CFG3_FILTERTYPE_USED == ADC_Temp_FILTERTOPOLOGY_HIGH_Q)
 450:Generated_Source\PSoC4/ADC_Temp.c ****                 /* Filter-invariant registers */
 451:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_A_SW_CA_IN0_PTR      , ((uint32)ADC_Temp_UABH_A_HIGHQSTAT_SW_CA_IN0
 452:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_A_SW_CA_TOP_PTR      , ((uint32)ADC_Temp_UABH_A_HIGHQSTAT_SW_CA_TOP
 453:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_A_SW_CB_IN0_PTR      , ((uint32)ADC_Temp_UABH_A_HIGHQSTAT_SW_CB_IN0
 454:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_A_SW_CB_IN1_PTR      , ((uint32)ADC_Temp_UABH_A_HIGHQSTAT_SW_CB_IN1
 455:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_A_SW_CC_IN0_PTR      , ((uint32)ADC_Temp_UABH_A_HIGHQSTAT_SW_CC_IN0
 456:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_A_SW_CC_IN1_PTR      , ((uint32)ADC_Temp_UABH_A_HIGHQSTAT_SW_CC_IN1
 457:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_A_SW_CC_TOP_PTR      , ((uint32)ADC_Temp_UABH_A_HIGHQSTAT_SW_CC_TOP
 458:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_A_SW_CF_BOT_PTR      , ((uint32)ADC_Temp_UABH_A_HIGHQSTAT_SW_CF_BOT
 459:Generated_Source\PSoC4/ADC_Temp.c **** 
 460:Generated_Source\PSoC4/ADC_Temp.c ****                 /* Parameter-based registers */
 461:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_A_CAP_CTRL_PTR       , ((uint32)ADC_Temp_CFG3_UABH_A_HIGHQDYN_CAP_C
 462:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_A_SW_CB_TOP_PTR      , ((uint32)ADC_Temp_CFG3_UABH_A_HIGHQDYN_SW_CB
 463:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_A_CAP_ABCF_VAL_PTR   , ((uint32)ADC_Temp_CFG3_UABH_A_HIGHQDYN_CAP_A
 464:Generated_Source\PSoC4/ADC_Temp.c ****             #endif /* (ADC_Temp_CFG3_FILTERTYPE_USED == ADC_Temp_FILTERTOPOLOGY_LOW_Q) */
 465:Generated_Source\PSoC4/ADC_Temp.c ****         };
 466:Generated_Source\PSoC4/ADC_Temp.c **** 
 467:Generated_Source\PSoC4/ADC_Temp.c ****         #define ADC_Temp_CFG3_UABH_B_FILTER_INITPAIRSSIZE (19u)
 468:Generated_Source\PSoC4/ADC_Temp.c ****         const static CyUAB_reg_pair ADC_Temp_CFG3_UABH_B_FILTER_initPairs[ADC_Temp_CFG3_UABH_B_FILT
 469:Generated_Source\PSoC4/ADC_Temp.c ****         {
 470:Generated_Source\PSoC4/ADC_Temp.c ****             /*OA_CTRL default always first element in initPairs*/
 471:Generated_Source\PSoC4/ADC_Temp.c ****             /* Topology-invariant registers */
 472:Generated_Source\PSoC4/ADC_Temp.c ****              {ADC_Temp_UABH_B_OA_CTRL_PTR        , ((uint32)ADC_Temp_UABH_B_DEFAULT_OA_CTRL)}
 473:Generated_Source\PSoC4/ADC_Temp.c ****             ,{ADC_Temp_UABH_B_SW_STATIC_PTR      , ((uint32)ADC_Temp_UABH_B_DEFAULT_SW_STATIC)}
 474:Generated_Source\PSoC4/ADC_Temp.c ****             ,{ADC_Temp_UABH_B_SW_MODBIT_SRC_PTR  , ((uint32)ADC_Temp_UABH_B_INVAR_SW_MODBIT_SRC)}
 475:Generated_Source\PSoC4/ADC_Temp.c ****             ,{ADC_Temp_UABH_B_SRAM_CTRL_PTR      , ((uint32)ADC_Temp_UABH_B_INVAR_SRAM_CTRL)}
 476:Generated_Source\PSoC4/ADC_Temp.c ****             ,{ADC_Temp_UABH_B_STARTUP_DELAY_PTR  , ((uint32)ADC_Temp_CFG3_UABH_B_STARTUP_DELAY)}
 477:Generated_Source\PSoC4/ADC_Temp.c ****             ,{ADC_Temp_UABH_B_SW_BOOST_CTRL_PTR  , ((uint32)ADC_Temp_UABH_B_DEFAULT_SW_BOOST_CTRL)}
 478:Generated_Source\PSoC4/ADC_Temp.c ****             ,{ADC_Temp_UABH_B_SW_OTHER_PTR       , ((uint32)ADC_Temp_UABH_B_DEFAULT_SW_OTHER)}
 479:Generated_Source\PSoC4/ADC_Temp.c **** 
 480:Generated_Source\PSoC4/ADC_Temp.c ****             #if (ADC_Temp_CFG3_FILTERTYPE_USED == ADC_Temp_FILTERTOPOLOGY_LOW_Q)
 481:Generated_Source\PSoC4/ADC_Temp.c ****                         /* Filter-invariant registers */
 482:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_SW_CA_IN0_PTR      , ((uint32)ADC_Temp_UABH_B_LOWQSTAT_SW_CA_IN0)
 483:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_SW_CA_IN1_PTR      , ((uint32)ADC_Temp_UABH_B_LOWQSTAT_SW_CA_IN1)
 484:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_SW_CA_TOP_PTR      , ((uint32)ADC_Temp_UABH_B_LOWQSTAT_SW_CA_TOP)
 485:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_SW_CB_IN0_PTR      , ((uint32)ADC_Temp_UABH_B_LOWQSTAT_SW_CB_IN0)
 486:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_SW_CB_IN1_PTR      , ((uint32)ADC_Temp_UABH_B_LOWQSTAT_SW_CB_IN1)
 487:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_SW_CB_TOP_PTR      , ((uint32)ADC_Temp_UABH_B_LOWQSTAT_SW_CB_TOP)
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 10


 488:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_SW_CC_IN0_PTR      , ((uint32)ADC_Temp_UABH_B_LOWQSTAT_SW_CC_IN0)
 489:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_SW_CC_IN1_PTR      , ((uint32)ADC_Temp_UABH_B_LOWQSTAT_SW_CC_IN1)
 490:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_SW_CF_BOT_PTR      , ((uint32)ADC_Temp_UABH_B_LOWQSTAT_SW_CF_BOT)
 491:Generated_Source\PSoC4/ADC_Temp.c **** 
 492:Generated_Source\PSoC4/ADC_Temp.c ****                 /* Parameter-based registers */
 493:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_CAP_CTRL_PTR       , ((uint32)ADC_Temp_CFG3_UABH_B_LOWQDYN_CAP_CT
 494:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_SW_CC_TOP_PTR      , ((uint32)ADC_Temp_CFG3_UABH_B_LOWQDYN_SW_CC_
 495:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_CAP_ABCF_VAL_PTR   , ((uint32)ADC_Temp_CFG3_UABH_B_LOWQDYN_CAP_AB
 496:Generated_Source\PSoC4/ADC_Temp.c ****             #elif (ADC_Temp_CFG3_FILTERTYPE_USED == ADC_Temp_FILTERTOPOLOGY_HIGH_Q)
 497:Generated_Source\PSoC4/ADC_Temp.c ****                 /* Filter-invariant registers */
 498:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_SW_CA_IN0_PTR      , ((uint32)ADC_Temp_UABH_B_HIGHQSTAT_SW_CA_IN0
 499:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_SW_CA_IN1_PTR      , ((uint32)ADC_Temp_UABH_B_HIGHQSTAT_SW_CA_IN1
 500:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_SW_CA_TOP_PTR      , ((uint32)ADC_Temp_UABH_B_HIGHQSTAT_SW_CA_TOP
 501:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_SW_CB_IN0_PTR      , ((uint32)ADC_Temp_UABH_B_HIGHQSTAT_SW_CB_IN0
 502:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_SW_CB_IN1_PTR      , ((uint32)ADC_Temp_UABH_B_HIGHQSTAT_SW_CB_IN1
 503:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_SW_CC_IN0_PTR      , ((uint32)ADC_Temp_UABH_B_HIGHQSTAT_SW_CC_IN0
 504:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_SW_CC_IN1_PTR      , ((uint32)ADC_Temp_UABH_B_HIGHQSTAT_SW_CC_IN1
 505:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_SW_CF_BOT_PTR      , ((uint32)ADC_Temp_UABH_B_HIGHQSTAT_SW_CF_BOT
 506:Generated_Source\PSoC4/ADC_Temp.c **** 
 507:Generated_Source\PSoC4/ADC_Temp.c ****                 /* Parameter-based registers */
 508:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_CAP_CTRL_PTR       , ((uint32)ADC_Temp_CFG3_UABH_B_HIGHQDYN_CAP_C
 509:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_SW_CB_TOP_PTR      , ((uint32)ADC_Temp_CFG3_UABH_B_HIGHQDYN_SW_CB
 510:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_SW_CC_TOP_PTR      , ((uint32)ADC_Temp_CFG3_UABH_B_HIGHQDYN_SW_CC
 511:Generated_Source\PSoC4/ADC_Temp.c ****                 ,{ADC_Temp_UABH_B_CAP_ABCF_VAL_PTR   , ((uint32)ADC_Temp_CFG3_UABH_B_HIGHQDYN_CAP_A
 512:Generated_Source\PSoC4/ADC_Temp.c ****             #endif /* #if (ADC_Temp_CFG3_FILTERTYPE_USED == ADC_Temp_FILTERTOPOLOGY_LOW_Q) */
 513:Generated_Source\PSoC4/ADC_Temp.c ****         };
 514:Generated_Source\PSoC4/ADC_Temp.c **** 
 515:Generated_Source\PSoC4/ADC_Temp.c ****         const static CyUAB_config ADC_Temp_CFG3_UABH_A_FILTER_config = {
 516:Generated_Source\PSoC4/ADC_Temp.c ****             ADC_Temp_UABH_A_waveConfig,
 517:Generated_Source\PSoC4/ADC_Temp.c ****             (CyUAB_reg_pair*) ADC_Temp_CFG3_UABH_A_FILTER_initPairs,
 518:Generated_Source\PSoC4/ADC_Temp.c ****             CyUAB_SHARED_SW_CFG(ADC_Temp_UABH_A_PARAM_REF_TIED,ADC_Temp_UABH_A_PARAM_AGND_TIED,
 519:Generated_Source\PSoC4/ADC_Temp.c ****                 ADC_Temp_UABH_A_PARAM_SW_CC,ADC_Temp_UABH_A_PARAM_SW_BB,ADC_Temp_UABH_A_PARAM_SW_AA
 520:Generated_Source\PSoC4/ADC_Temp.c ****             ADC_Temp_UABH_A_NUM_STEPS,
 521:Generated_Source\PSoC4/ADC_Temp.c ****             (uint8)(ADC_Temp_UABH_A_ELEMENT_COUNT(ADC_Temp_CFG3_UABH_A_FILTER_initPairs))
 522:Generated_Source\PSoC4/ADC_Temp.c ****         };
 523:Generated_Source\PSoC4/ADC_Temp.c **** 
 524:Generated_Source\PSoC4/ADC_Temp.c ****         const static CyUAB_config ADC_Temp_CFG3_UABH_B_FILTER_config = {
 525:Generated_Source\PSoC4/ADC_Temp.c ****         ADC_Temp_UABH_B_waveConfig,
 526:Generated_Source\PSoC4/ADC_Temp.c ****         (CyUAB_reg_pair*) ADC_Temp_CFG3_UABH_B_FILTER_initPairs,
 527:Generated_Source\PSoC4/ADC_Temp.c ****         CyUAB_SHARED_SW_CFG(ADC_Temp_UABH_B_PARAM_REF_TIED,ADC_Temp_UABH_B_PARAM_AGND_TIED,
 528:Generated_Source\PSoC4/ADC_Temp.c ****             ADC_Temp_UABH_B_PARAM_SW_CC,ADC_Temp_UABH_B_PARAM_SW_BB,ADC_Temp_UABH_B_PARAM_SW_AA),
 529:Generated_Source\PSoC4/ADC_Temp.c ****         ADC_Temp_UABH_B_NUM_STEPS,
 530:Generated_Source\PSoC4/ADC_Temp.c ****         (uint8)(ADC_Temp_UABH_B_ELEMENT_COUNT(ADC_Temp_CFG3_UABH_B_FILTER_initPairs))
 531:Generated_Source\PSoC4/ADC_Temp.c ****     };
 532:Generated_Source\PSoC4/ADC_Temp.c ****     #endif /* (0u != ADC_Temp_CFG3_FILTER_PRESENT) */
 533:Generated_Source\PSoC4/ADC_Temp.c **** 
 534:Generated_Source\PSoC4/ADC_Temp.c **** 
 535:Generated_Source\PSoC4/ADC_Temp.c **** #endif /* (ADC_Temp_ANY_CONFIG_USES_FILTER  != 0u)  */
 536:Generated_Source\PSoC4/ADC_Temp.c **** 
 537:Generated_Source\PSoC4/ADC_Temp.c **** /*******************************************************************************
 538:Generated_Source\PSoC4/ADC_Temp.c **** * Function Name: ADC_Temp_Start
 539:Generated_Source\PSoC4/ADC_Temp.c **** ****************************************************************************//**
 540:Generated_Source\PSoC4/ADC_Temp.c **** *
 541:Generated_Source\PSoC4/ADC_Temp.c **** * \brief Performs all required initialization for this component and enables the
 542:Generated_Source\PSoC4/ADC_Temp.c **** *  power. The power will be set to the appropriate power based on the clock
 543:Generated_Source\PSoC4/ADC_Temp.c **** *  frequency.
 544:Generated_Source\PSoC4/ADC_Temp.c **** *
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 11


 545:Generated_Source\PSoC4/ADC_Temp.c **** * \param None
 546:Generated_Source\PSoC4/ADC_Temp.c **** *
 547:Generated_Source\PSoC4/ADC_Temp.c **** * \return None
 548:Generated_Source\PSoC4/ADC_Temp.c **** *
 549:Generated_Source\PSoC4/ADC_Temp.c **** * \sideeffect None
 550:Generated_Source\PSoC4/ADC_Temp.c **** *
 551:Generated_Source\PSoC4/ADC_Temp.c **** * \globalvars
 552:Generated_Source\PSoC4/ADC_Temp.c **** *  \ref ADC_Temp_initVar (RW)
 553:Generated_Source\PSoC4/ADC_Temp.c **** *
 554:Generated_Source\PSoC4/ADC_Temp.c **** *******************************************************************************/
 555:Generated_Source\PSoC4/ADC_Temp.c **** void ADC_Temp_Start(void)
 556:Generated_Source\PSoC4/ADC_Temp.c **** {
 557:Generated_Source\PSoC4/ADC_Temp.c ****     if (ADC_Temp_INIT_VAR_INIT_FLAG != (ADC_Temp_INIT_VAR_INIT_FLAG & ADC_Temp_initVar))
 558:Generated_Source\PSoC4/ADC_Temp.c ****     {
 559:Generated_Source\PSoC4/ADC_Temp.c ****         ADC_Temp_Init();
 560:Generated_Source\PSoC4/ADC_Temp.c ****         ADC_Temp_initVar |= ADC_Temp_INIT_VAR_INIT_FLAG;
 561:Generated_Source\PSoC4/ADC_Temp.c ****     }
 562:Generated_Source\PSoC4/ADC_Temp.c **** 
 563:Generated_Source\PSoC4/ADC_Temp.c ****     ADC_Temp_Enable();
 564:Generated_Source\PSoC4/ADC_Temp.c **** 
 565:Generated_Source\PSoC4/ADC_Temp.c ****     return;
 566:Generated_Source\PSoC4/ADC_Temp.c **** }
 567:Generated_Source\PSoC4/ADC_Temp.c **** 
 568:Generated_Source\PSoC4/ADC_Temp.c **** /*******************************************************************************
 569:Generated_Source\PSoC4/ADC_Temp.c **** * Function Name: ADC_Temp_StartEx
 570:Generated_Source\PSoC4/ADC_Temp.c **** ****************************************************************************//**
 571:Generated_Source\PSoC4/ADC_Temp.c **** *
 572:Generated_Source\PSoC4/ADC_Temp.c **** * \brief This function starts the ADC_Temp and sets the Interrupt
 573:Generated_Source\PSoC4/ADC_Temp.c **** * Service Routine to the provided address using the
 574:Generated_Source\PSoC4/ADC_Temp.c **** * ADC_Temp_IRQ_StartEx() function. Refer to the Interrupt component
 575:Generated_Source\PSoC4/ADC_Temp.c **** * datasheet for more information on the ADC_Temp_IRQ_StartEx() function.
 576:Generated_Source\PSoC4/ADC_Temp.c **** *
 577:Generated_Source\PSoC4/ADC_Temp.c **** * \param address This is the address of a user defined function for the ISR.
 578:Generated_Source\PSoC4/ADC_Temp.c **** *
 579:Generated_Source\PSoC4/ADC_Temp.c **** * \return None
 580:Generated_Source\PSoC4/ADC_Temp.c **** *
 581:Generated_Source\PSoC4/ADC_Temp.c **** * \sideeffect None
 582:Generated_Source\PSoC4/ADC_Temp.c **** *
 583:Generated_Source\PSoC4/ADC_Temp.c **** *******************************************************************************/
 584:Generated_Source\PSoC4/ADC_Temp.c **** void ADC_Temp_StartEx(cyisraddress address)
 585:Generated_Source\PSoC4/ADC_Temp.c **** {
 586:Generated_Source\PSoC4/ADC_Temp.c ****     ADC_Temp_Start();
 587:Generated_Source\PSoC4/ADC_Temp.c ****     ADC_Temp_IRQ_StartEx(address);
 588:Generated_Source\PSoC4/ADC_Temp.c ****     return;
 589:Generated_Source\PSoC4/ADC_Temp.c **** }
 590:Generated_Source\PSoC4/ADC_Temp.c **** 
 591:Generated_Source\PSoC4/ADC_Temp.c **** /*******************************************************************************
 592:Generated_Source\PSoC4/ADC_Temp.c **** * Function Name: ADC_Temp_Stop
 593:Generated_Source\PSoC4/ADC_Temp.c **** ****************************************************************************//**
 594:Generated_Source\PSoC4/ADC_Temp.c **** *
 595:Generated_Source\PSoC4/ADC_Temp.c **** * \brief This function stops ADC conversions and puts the ADC into its lowest
 596:Generated_Source\PSoC4/ADC_Temp.c **** * power mode.
 597:Generated_Source\PSoC4/ADC_Temp.c **** *
 598:Generated_Source\PSoC4/ADC_Temp.c **** * \param None
 599:Generated_Source\PSoC4/ADC_Temp.c **** *
 600:Generated_Source\PSoC4/ADC_Temp.c **** * \return None
 601:Generated_Source\PSoC4/ADC_Temp.c **** *
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 12


 602:Generated_Source\PSoC4/ADC_Temp.c **** * \sideeffect
 603:Generated_Source\PSoC4/ADC_Temp.c **** * Do not use the ADC_Temp_Stop() API to halt conversions. Instead use the
 604:Generated_Source\PSoC4/ADC_Temp.c **** * ADC_Temp_StopConvert() API. If you use the ADC_Temp_Stop() API
 605:Generated_Source\PSoC4/ADC_Temp.c **** * to halt conversions then later use the ADC_Temp_Start() and
 606:Generated_Source\PSoC4/ADC_Temp.c **** * ADC_Temp_StartConvert() APIs to resume conversions, the first channel
 607:Generated_Source\PSoC4/ADC_Temp.c **** * of the scan may be corrupt. The ADC_Temp_StopConvert() API will enable
 608:Generated_Source\PSoC4/ADC_Temp.c **** * the ADC_Temp to complete the current scan of channels. After the
 609:Generated_Source\PSoC4/ADC_Temp.c **** * channel scan is complete, the ADC_Temp will stop all conversions, which
 610:Generated_Source\PSoC4/ADC_Temp.c **** * can be detected by the use of an ISR or the ADC_Temp_IsEndConversion()
 611:Generated_Source\PSoC4/ADC_Temp.c **** * flag.
 612:Generated_Source\PSoC4/ADC_Temp.c **** *
 613:Generated_Source\PSoC4/ADC_Temp.c **** *******************************************************************************/
 614:Generated_Source\PSoC4/ADC_Temp.c **** void ADC_Temp_Stop(void)
 615:Generated_Source\PSoC4/ADC_Temp.c **** {
 616:Generated_Source\PSoC4/ADC_Temp.c ****     #if(0u != ADC_Temp_ANY_CONFIG_USES_FILTER)
 617:Generated_Source\PSoC4/ADC_Temp.c ****         if((ADC_Temp_allConfigs[ADC_Temp_currentConfig].miscConfig
 618:Generated_Source\PSoC4/ADC_Temp.c ****            & ADC_Temp_MISC_CONFIG_FILTER_PRESENT_MSK)
 619:Generated_Source\PSoC4/ADC_Temp.c ****            == ADC_Temp_MISC_CONFIG_FILTER_PRESENT_MSK)
 620:Generated_Source\PSoC4/ADC_Temp.c ****         {
 621:Generated_Source\PSoC4/ADC_Temp.c ****             ADC_Temp_UABH_A_Stop();
 622:Generated_Source\PSoC4/ADC_Temp.c ****             ADC_Temp_UABH_B_Stop();
 623:Generated_Source\PSoC4/ADC_Temp.c ****             ADC_Temp_FILTERAGND2SAR_BUFFER_Stop();
 624:Generated_Source\PSoC4/ADC_Temp.c ****         }
 625:Generated_Source\PSoC4/ADC_Temp.c ****     #endif /* ADC_Temp_ANY_CONFIG_USES_FILTER != 0u */
 626:Generated_Source\PSoC4/ADC_Temp.c ****     ADC_Temp_SAR_CTRL_REG &= (uint32)~ADC_Temp_SAR_CTRL_ENABLED_MSK;
 627:Generated_Source\PSoC4/ADC_Temp.c ****     return;
 628:Generated_Source\PSoC4/ADC_Temp.c **** }
 629:Generated_Source\PSoC4/ADC_Temp.c **** 
 630:Generated_Source\PSoC4/ADC_Temp.c **** /* ****************************************************************************
 631:Generated_Source\PSoC4/ADC_Temp.c **** * Function Name: ADC_Temp_InitConfig
 632:Generated_Source\PSoC4/ADC_Temp.c **** ****************************************************************************//*
 633:Generated_Source\PSoC4/ADC_Temp.c **** *
 634:Generated_Source\PSoC4/ADC_Temp.c **** * \brief Configures all of the registers for a given configuration for scanning.
 635:Generated_Source\PSoC4/ADC_Temp.c **** *
 636:Generated_Source\PSoC4/ADC_Temp.c **** * \param
 637:Generated_Source\PSoC4/ADC_Temp.c **** * config: Pointer to the configuration structure
 638:Generated_Source\PSoC4/ADC_Temp.c **** *
 639:Generated_Source\PSoC4/ADC_Temp.c **** * \return None
 640:Generated_Source\PSoC4/ADC_Temp.c **** *
 641:Generated_Source\PSoC4/ADC_Temp.c **** * \sideeffect None
 642:Generated_Source\PSoC4/ADC_Temp.c **** *
 643:Generated_Source\PSoC4/ADC_Temp.c **** *******************************************************************************/
 644:Generated_Source\PSoC4/ADC_Temp.c **** void ADC_Temp_InitConfig(const ADC_Temp_CONFIG_STRUCT *config)
 645:Generated_Source\PSoC4/ADC_Temp.c **** {
 646:Generated_Source\PSoC4/ADC_Temp.c ****     uint32 chNum;
 647:Generated_Source\PSoC4/ADC_Temp.c ****     uint32 tmpRegVal;
 648:Generated_Source\PSoC4/ADC_Temp.c **** 
 649:Generated_Source\PSoC4/ADC_Temp.c ****     /* If there is an internal SAR clock, set up its divider values. */
 650:Generated_Source\PSoC4/ADC_Temp.c ****     #if (ADC_Temp_CLOCK_INTERNAL)
 651:Generated_Source\PSoC4/ADC_Temp.c ****         ADC_Temp_intSarClock_Stop();
 652:Generated_Source\PSoC4/ADC_Temp.c ****         ADC_Temp_intSarClock_SetFractionalDividerRegister(config->clkDivider, 0u);
 653:Generated_Source\PSoC4/ADC_Temp.c ****         ADC_Temp_intSarClock_Start();
 654:Generated_Source\PSoC4/ADC_Temp.c ****     #endif /* ADC_Temp_CLOCK_INTERNAL */
 655:Generated_Source\PSoC4/ADC_Temp.c **** 
 656:Generated_Source\PSoC4/ADC_Temp.c ****     /* If the current configuration has a filter, set up the UAB clock divider values. */
 657:Generated_Source\PSoC4/ADC_Temp.c ****     #if(0u != ADC_Temp_ANY_CONFIG_USES_FILTER)
 658:Generated_Source\PSoC4/ADC_Temp.c ****         if((config->miscConfig & ADC_Temp_MISC_CONFIG_FILTER_PRESENT_MSK)
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 13


 659:Generated_Source\PSoC4/ADC_Temp.c ****             == ADC_Temp_MISC_CONFIG_FILTER_PRESENT_MSK)
 660:Generated_Source\PSoC4/ADC_Temp.c ****         {
 661:Generated_Source\PSoC4/ADC_Temp.c ****             ADC_Temp_intUabClock_Stop();
 662:Generated_Source\PSoC4/ADC_Temp.c ****             ADC_Temp_intUabClock_SetFractionalDividerRegister(config->filterClkDivider, 0u);
 663:Generated_Source\PSoC4/ADC_Temp.c ****             #if defined(ADC_Temp_cy_psoc4_sar_1__CLOCK_DIV_ID)
 664:Generated_Source\PSoC4/ADC_Temp.c ****                 /* If the SAR clock divider ID is known,
 665:Generated_Source\PSoC4/ADC_Temp.c ****                  * start the internal UAB divider aligned to the SAR divider. */
 666:Generated_Source\PSoC4/ADC_Temp.c ****                 ADC_Temp_intUabClock_StartEx(ADC_Temp_cy_psoc4_sar_1__CLOCK_DIV_ID);
 667:Generated_Source\PSoC4/ADC_Temp.c ****             #else
 668:Generated_Source\PSoC4/ADC_Temp.c ****                 /* Otherwise start it unaligned. */
 669:Generated_Source\PSoC4/ADC_Temp.c ****                 ADC_Temp_intUabClock_Start();
 670:Generated_Source\PSoC4/ADC_Temp.c ****             #endif
 671:Generated_Source\PSoC4/ADC_Temp.c ****         }
 672:Generated_Source\PSoC4/ADC_Temp.c ****     #endif /* ADC_Temp_ANY_CONFIG_USES_FILTER != 0u */
 673:Generated_Source\PSoC4/ADC_Temp.c **** 
 674:Generated_Source\PSoC4/ADC_Temp.c ****     /* Init SAR and MUX registers */
 675:Generated_Source\PSoC4/ADC_Temp.c ****     /* Enable the SAR internal pump when global pump is enabled */
 676:Generated_Source\PSoC4/ADC_Temp.c ****     ADC_Temp_SAR_CTRL_REG = config->ctrl
 677:Generated_Source\PSoC4/ADC_Temp.c ****         | (((ADC_Temp_PUMP_CTRL_REG & ADC_Temp_PUMP_CTRL_ENABLED) != 0u)
 678:Generated_Source\PSoC4/ADC_Temp.c ****             ? ADC_Temp_SAR_CTRL_BOOSTPUMP_EN_MSK : 0u);
 679:Generated_Source\PSoC4/ADC_Temp.c **** 
 680:Generated_Source\PSoC4/ADC_Temp.c ****     ADC_Temp_SAR_SAMPLE_CTRL_REG = config->sampleCtrl;
 681:Generated_Source\PSoC4/ADC_Temp.c ****     ADC_Temp_SAR_RANGE_THRES_REG = config->rangeThres;
 682:Generated_Source\PSoC4/ADC_Temp.c ****     ADC_Temp_SAR_RANGE_COND_REG = config->rangeCond;
 683:Generated_Source\PSoC4/ADC_Temp.c ****     ADC_Temp_SAR_SAMPLE_TIME01_REG = config->sampleTime01;
 684:Generated_Source\PSoC4/ADC_Temp.c ****     ADC_Temp_SAR_SAMPLE_TIME23_REG = config->sampleTime23;
 685:Generated_Source\PSoC4/ADC_Temp.c **** 
 686:Generated_Source\PSoC4/ADC_Temp.c ****     /* Connect Vminus to VSSA when even one channel is single-ended or multiple channels configured
 687:Generated_Source\PSoC4/ADC_Temp.c ****     if(1u == ADC_Temp_MUX_SWITCH0_INIT)
 688:Generated_Source\PSoC4/ADC_Temp.c ****     {
 689:Generated_Source\PSoC4/ADC_Temp.c ****         ADC_Temp_MUX_SWITCH0_REG |= ADC_Temp_MUX_FW_VSSA_VMINUS;
 690:Generated_Source\PSoC4/ADC_Temp.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 691:Generated_Source\PSoC4/ADC_Temp.c ****         if(1ul < config->numChannels)
 692:Generated_Source\PSoC4/ADC_Temp.c ****         {
 693:Generated_Source\PSoC4/ADC_Temp.c ****             ADC_Temp_MUX_SWITCH_HW_CTRL_REG |= ADC_Temp_MUX_FW_VSSA_VMINUS;
 694:Generated_Source\PSoC4/ADC_Temp.c ****         }
 695:Generated_Source\PSoC4/ADC_Temp.c ****     }
 696:Generated_Source\PSoC4/ADC_Temp.c **** 
 697:Generated_Source\PSoC4/ADC_Temp.c ****     /* Clear and set interrupt masks */
 698:Generated_Source\PSoC4/ADC_Temp.c ****     ADC_Temp_SAR_SATURATE_INTR_MASK_REG = 0u;
 699:Generated_Source\PSoC4/ADC_Temp.c ****     ADC_Temp_SAR_RANGE_INTR_MASK_REG = 0u;
 700:Generated_Source\PSoC4/ADC_Temp.c ****     ADC_Temp_SAR_SATURATE_INTR_MASK_REG = config->satIntMask;
 701:Generated_Source\PSoC4/ADC_Temp.c ****     ADC_Temp_SAR_RANGE_INTR_MASK_REG = config->rangeIntMask;
 702:Generated_Source\PSoC4/ADC_Temp.c ****     ADC_Temp_SAR_INTR_MASK_REG = ADC_Temp_EOS_MASK;
 703:Generated_Source\PSoC4/ADC_Temp.c **** 
 704:Generated_Source\PSoC4/ADC_Temp.c ****     for(chNum = 0u; chNum < config->numChannels; chNum++)
 705:Generated_Source\PSoC4/ADC_Temp.c ****     {
 706:Generated_Source\PSoC4/ADC_Temp.c ****         tmpRegVal = (ADC_Temp_channelsConfig[config->channelBase + chNum]
 707:Generated_Source\PSoC4/ADC_Temp.c ****         & ADC_Temp_CHANNEL_CONFIG_MASK);
 708:Generated_Source\PSoC4/ADC_Temp.c **** 
 709:Generated_Source\PSoC4/ADC_Temp.c ****         #if(ADC_Temp_TOTAL_CHANNELS_NUM > 1)
 710:Generated_Source\PSoC4/ADC_Temp.c ****             tmpRegVal |= ADC_Temp_InputsPlacement[config->channelBase + chNum];
 711:Generated_Source\PSoC4/ADC_Temp.c ****             /*Non-paired differential channels set NEG_ADDR_EN and clear DIFFERENTIAL_EN */
 712:Generated_Source\PSoC4/ADC_Temp.c ****             if(0u != (ADC_Temp_InputsPlacement[config->channelBase + chNum] & ADC_Temp_CHANNEL_CONF
 713:Generated_Source\PSoC4/ADC_Temp.c ****             {
 714:Generated_Source\PSoC4/ADC_Temp.c ****                 tmpRegVal &= ~ADC_Temp_SAR_CHAN_CONFIG_DIFFERENTIAL_EN_MSK;
 715:Generated_Source\PSoC4/ADC_Temp.c ****             }
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 14


 716:Generated_Source\PSoC4/ADC_Temp.c ****         #endif
 717:Generated_Source\PSoC4/ADC_Temp.c **** 
 718:Generated_Source\PSoC4/ADC_Temp.c ****         CY_SET_REG32((reg32 *)(ADC_Temp_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRegVal);
 719:Generated_Source\PSoC4/ADC_Temp.c ****     }
 720:Generated_Source\PSoC4/ADC_Temp.c **** 
 721:Generated_Source\PSoC4/ADC_Temp.c ****     return;
 722:Generated_Source\PSoC4/ADC_Temp.c **** }
 723:Generated_Source\PSoC4/ADC_Temp.c **** 
 724:Generated_Source\PSoC4/ADC_Temp.c **** /* ****************************************************************************
 725:Generated_Source\PSoC4/ADC_Temp.c **** * Function Name: ADC_Temp_SetDFTControl
 726:Generated_Source\PSoC4/ADC_Temp.c **** ****************************************************************************//*
 727:Generated_Source\PSoC4/ADC_Temp.c **** *
 728:Generated_Source\PSoC4/ADC_Temp.c **** * \brief Internal function to configure the DFT_CTRL register.
 729:Generated_Source\PSoC4/ADC_Temp.c **** * This register is a non-retention register therefore it resets
 730:Generated_Source\PSoC4/ADC_Temp.c **** * when the SAR block is powered down.
 731:Generated_Source\PSoC4/ADC_Temp.c **** * The register must be configured every time the SAR block is enabled.
 732:Generated_Source\PSoC4/ADC_Temp.c **** *
 733:Generated_Source\PSoC4/ADC_Temp.c **** * \param
 734:Generated_Source\PSoC4/ADC_Temp.c **** * config: Pointer to the configuration structure
 735:Generated_Source\PSoC4/ADC_Temp.c **** *
 736:Generated_Source\PSoC4/ADC_Temp.c **** *******************************************************************************/
 737:Generated_Source\PSoC4/ADC_Temp.c **** static void ADC_Temp_SetDFTControl(const ADC_Temp_CONFIG_STRUCT *config)
 738:Generated_Source\PSoC4/ADC_Temp.c **** {
  27              		.loc 1 738 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
 739:Generated_Source\PSoC4/ADC_Temp.c ****     /* Double the non-overlap delay and latch enable time when using */
 740:Generated_Source\PSoC4/ADC_Temp.c ****     /* internal reference without bypass cap */
 741:Generated_Source\PSoC4/ADC_Temp.c ****     uint32 tmpRegVal = ADC_Temp_SAR_DFT_CTRL_REG;
  33              		.loc 1 741 0
  34 0000 0A4B     		ldr	r3, .L5
  35 0002 1B68     		ldr	r3, [r3]
  36              	.LVL1:
 742:Generated_Source\PSoC4/ADC_Temp.c ****     if(((config->ctrl & ADC_Temp__SAR_CTRL_VREF_BYP_AND_SEL_MSK)
  37              		.loc 1 742 0
  38 0004 8268     		ldr	r2, [r0, #8]
  39 0006 F021     		movs	r1, #240
  40 0008 0A40     		ands	r2, r1
  41 000a 402A     		cmp	r2, #64
  42 000c 01D0     		beq	.L2
 743:Generated_Source\PSoC4/ADC_Temp.c ****         == ADC_Temp__INTERNAL1024)
 744:Generated_Source\PSoC4/ADC_Temp.c ****         || ((config->ctrl & ADC_Temp__SAR_CTRL_VREF_BYP_AND_SEL_MSK)
  43              		.loc 1 744 0
  44 000e 002A     		cmp	r2, #0
  45 0010 04D1     		bne	.L3
  46              	.L2:
 745:Generated_Source\PSoC4/ADC_Temp.c ****         == ADC_Temp__INTERNALVREF))
 746:Generated_Source\PSoC4/ADC_Temp.c ****     {
 747:Generated_Source\PSoC4/ADC_Temp.c ****         tmpRegVal &= ~ADC_Temp_SAR_DFT_CTRL_DCEN_MSK;
  47              		.loc 1 747 0
  48 0012 074A     		ldr	r2, .L5+4
  49 0014 1340     		ands	r3, r2
  50              	.LVL2:
 748:Generated_Source\PSoC4/ADC_Temp.c ****         tmpRegVal |= ADC_Temp_SAR_DFT_CTRL_DLY_INC_MSK;
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 15


  51              		.loc 1 748 0
  52 0016 0122     		movs	r2, #1
  53 0018 1343     		orrs	r3, r2
  54              	.LVL3:
  55 001a 04E0     		b	.L4
  56              	.L3:
  57              	.LVL4:
  58 001c 0122     		movs	r2, #1
  59 001e 9343     		bics	r3, r2
  60              	.LVL5:
 749:Generated_Source\PSoC4/ADC_Temp.c ****     }
 750:Generated_Source\PSoC4/ADC_Temp.c ****     else
 751:Generated_Source\PSoC4/ADC_Temp.c ****     {
 752:Generated_Source\PSoC4/ADC_Temp.c ****         tmpRegVal |= ADC_Temp_SAR_DFT_CTRL_DCEN_MSK;
 753:Generated_Source\PSoC4/ADC_Temp.c ****         tmpRegVal &= (uint32)~ADC_Temp_SAR_DFT_CTRL_DLY_INC_MSK;
  61              		.loc 1 753 0
  62 0020 8022     		movs	r2, #128
  63 0022 9205     		lsls	r2, r2, #22
  64 0024 1343     		orrs	r3, r2
  65              	.LVL6:
  66              	.L4:
 754:Generated_Source\PSoC4/ADC_Temp.c ****     }
 755:Generated_Source\PSoC4/ADC_Temp.c ****     ADC_Temp_SAR_DFT_CTRL_REG = tmpRegVal;
  67              		.loc 1 755 0
  68 0026 014A     		ldr	r2, .L5
  69 0028 1360     		str	r3, [r2]
 756:Generated_Source\PSoC4/ADC_Temp.c **** }
  70              		.loc 1 756 0
  71              		@ sp needed
  72 002a 7047     		bx	lr
  73              	.L6:
  74              		.align	2
  75              	.L5:
  76 002c 30003A40 		.word	1077542960
  77 0030 FFFFFFDF 		.word	-536870913
  78              		.cfi_endproc
  79              	.LFE5:
  80              		.size	ADC_Temp_SetDFTControl, .-ADC_Temp_SetDFTControl
  81              		.section	.text.ADC_Temp_IsChannelSigned,"ax",%progbits
  82              		.align	2
  83              		.code	16
  84              		.thumb_func
  85              		.type	ADC_Temp_IsChannelSigned, %function
  86              	ADC_Temp_IsChannelSigned:
  87              	.LFB13:
 757:Generated_Source\PSoC4/ADC_Temp.c **** 
 758:Generated_Source\PSoC4/ADC_Temp.c **** /* ****************************************************************************
 759:Generated_Source\PSoC4/ADC_Temp.c **** * Function Name: ADC_Temp_SelectConfig
 760:Generated_Source\PSoC4/ADC_Temp.c **** ****************************************************************************//*
 761:Generated_Source\PSoC4/ADC_Temp.c **** *
 762:Generated_Source\PSoC4/ADC_Temp.c **** * \brief Selects the predefined configuration for scanning. Disables
 763:Generated_Source\PSoC4/ADC_Temp.c **** * and re-enables the SAR and filter (if filter used).
 764:Generated_Source\PSoC4/ADC_Temp.c **** *
 765:Generated_Source\PSoC4/ADC_Temp.c **** * \param config Number of configuration  in the ADC_Temp.
 766:Generated_Source\PSoC4/ADC_Temp.c **** *
 767:Generated_Source\PSoC4/ADC_Temp.c **** * \param restart Set to 1u to restart the ADC_Temp after
 768:Generated_Source\PSoC4/ADC_Temp.c **** * selecting the configuration.
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 16


 769:Generated_Source\PSoC4/ADC_Temp.c **** *
 770:Generated_Source\PSoC4/ADC_Temp.c **** *******************************************************************************/
 771:Generated_Source\PSoC4/ADC_Temp.c **** void ADC_Temp_SelectConfig(uint32 config, uint32 restart)
 772:Generated_Source\PSoC4/ADC_Temp.c **** {
 773:Generated_Source\PSoC4/ADC_Temp.c ****     /* Check whether the configuration number is valid or not */
 774:Generated_Source\PSoC4/ADC_Temp.c ****     if(ADC_Temp_TOTAL_CONFIGS > config)
 775:Generated_Source\PSoC4/ADC_Temp.c ****     {
 776:Generated_Source\PSoC4/ADC_Temp.c ****         /* Stop the ADC before changing configurations */
 777:Generated_Source\PSoC4/ADC_Temp.c ****         ADC_Temp_Stop();
 778:Generated_Source\PSoC4/ADC_Temp.c ****         ADC_Temp_selected = 1u;
 779:Generated_Source\PSoC4/ADC_Temp.c **** 
 780:Generated_Source\PSoC4/ADC_Temp.c ****         if(0u == ADC_Temp_initVar)
 781:Generated_Source\PSoC4/ADC_Temp.c ****         {
 782:Generated_Source\PSoC4/ADC_Temp.c ****             ADC_Temp_Init();
 783:Generated_Source\PSoC4/ADC_Temp.c ****             ADC_Temp_initVar |= ADC_Temp_INIT_VAR_INIT_FLAG;
 784:Generated_Source\PSoC4/ADC_Temp.c ****         }
 785:Generated_Source\PSoC4/ADC_Temp.c ****         #if (ADC_Temp_VREF_ROUTED)
 786:Generated_Source\PSoC4/ADC_Temp.c ****             ADC_Temp_vrefAMux_DisconnectAll();
 787:Generated_Source\PSoC4/ADC_Temp.c ****         #endif
 788:Generated_Source\PSoC4/ADC_Temp.c ****         ADC_Temp_InitConfig(&ADC_Temp_allConfigs[config]);
 789:Generated_Source\PSoC4/ADC_Temp.c ****         #if (ADC_Temp_VREF_ROUTED)
 790:Generated_Source\PSoC4/ADC_Temp.c ****             ADC_Temp_vrefAMux_Select((uint8)config);
 791:Generated_Source\PSoC4/ADC_Temp.c ****         #endif
 792:Generated_Source\PSoC4/ADC_Temp.c ****         #if(0u != ADC_Temp_ANY_CONFIG_USES_FILTER)
 793:Generated_Source\PSoC4/ADC_Temp.c ****             ADC_Temp_filterVinMux_Select((uint8)config);
 794:Generated_Source\PSoC4/ADC_Temp.c ****             ADC_Temp_filterInit(config);
 795:Generated_Source\PSoC4/ADC_Temp.c ****         #endif
 796:Generated_Source\PSoC4/ADC_Temp.c ****         ADC_Temp_SAR_CHAN_EN_REG = ADC_Temp_allConfigs[config].chanEn;
 797:Generated_Source\PSoC4/ADC_Temp.c ****         ADC_Temp_SAR_RANGE_INTR_MASK_REG = ADC_Temp_allConfigs[config].rangeIntMask;
 798:Generated_Source\PSoC4/ADC_Temp.c ****         ADC_Temp_SAR_SATURATE_INTR_MASK_REG = ADC_Temp_allConfigs[config].satIntMask;
 799:Generated_Source\PSoC4/ADC_Temp.c ****         ADC_Temp_currentConfig = config;
 800:Generated_Source\PSoC4/ADC_Temp.c **** 
 801:Generated_Source\PSoC4/ADC_Temp.c ****         if(1u == restart)
 802:Generated_Source\PSoC4/ADC_Temp.c ****         {
 803:Generated_Source\PSoC4/ADC_Temp.c ****             /* Restart the ADC */
 804:Generated_Source\PSoC4/ADC_Temp.c ****             ADC_Temp_Start();
 805:Generated_Source\PSoC4/ADC_Temp.c **** 
 806:Generated_Source\PSoC4/ADC_Temp.c ****             /* Restart the scan */
 807:Generated_Source\PSoC4/ADC_Temp.c ****             ADC_Temp_StartConvert();
 808:Generated_Source\PSoC4/ADC_Temp.c ****         }
 809:Generated_Source\PSoC4/ADC_Temp.c ****     }
 810:Generated_Source\PSoC4/ADC_Temp.c ****     return;
 811:Generated_Source\PSoC4/ADC_Temp.c **** }
 812:Generated_Source\PSoC4/ADC_Temp.c **** 
 813:Generated_Source\PSoC4/ADC_Temp.c **** /*******************************************************************************
 814:Generated_Source\PSoC4/ADC_Temp.c **** * Function Name: ADC_Temp_StartConvert
 815:Generated_Source\PSoC4/ADC_Temp.c **** ****************************************************************************//**
 816:Generated_Source\PSoC4/ADC_Temp.c **** *
 817:Generated_Source\PSoC4/ADC_Temp.c **** * \brief In continuous mode, this API starts the conversion process and it runs
 818:Generated_Source\PSoC4/ADC_Temp.c **** * continuously.
 819:Generated_Source\PSoC4/ADC_Temp.c **** 
 820:Generated_Source\PSoC4/ADC_Temp.c **** * In Single Shot mode, the function triggers a single scan and
 821:Generated_Source\PSoC4/ADC_Temp.c **** * every scan requires a call of this function. The mode is set with the
 822:Generated_Source\PSoC4/ADC_Temp.c **** * Sample Mode parameter in the customizer. The customizer setting can be
 823:Generated_Source\PSoC4/ADC_Temp.c **** * overridden at run time with the ADC_Temp_SetConvertMode() function.
 824:Generated_Source\PSoC4/ADC_Temp.c **** *
 825:Generated_Source\PSoC4/ADC_Temp.c **** * \param None
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 17


 826:Generated_Source\PSoC4/ADC_Temp.c **** *
 827:Generated_Source\PSoC4/ADC_Temp.c **** * \return None
 828:Generated_Source\PSoC4/ADC_Temp.c **** *
 829:Generated_Source\PSoC4/ADC_Temp.c **** * \sideeffect None
 830:Generated_Source\PSoC4/ADC_Temp.c **** *
 831:Generated_Source\PSoC4/ADC_Temp.c **** *******************************************************************************/
 832:Generated_Source\PSoC4/ADC_Temp.c **** void ADC_Temp_StartConvert(void)
 833:Generated_Source\PSoC4/ADC_Temp.c **** {
 834:Generated_Source\PSoC4/ADC_Temp.c ****     /* Freerunning mode */
 835:Generated_Source\PSoC4/ADC_Temp.c ****     if((ADC_Temp_SAR_SAMPLE_CTRL_REG
 836:Generated_Source\PSoC4/ADC_Temp.c ****         & ADC_Temp_SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_MSK)
 837:Generated_Source\PSoC4/ADC_Temp.c ****         == ADC_Temp_SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_MSK)
 838:Generated_Source\PSoC4/ADC_Temp.c ****     {
 839:Generated_Source\PSoC4/ADC_Temp.c ****         ADC_Temp_SAR_SAMPLE_CTRL_REG |= ADC_Temp_SAR_SAMPLE_CTRL_CONTINUOUS_MSK ;
 840:Generated_Source\PSoC4/ADC_Temp.c ****     }
 841:Generated_Source\PSoC4/ADC_Temp.c ****     else /* Firmware trigger */
 842:Generated_Source\PSoC4/ADC_Temp.c ****     {
 843:Generated_Source\PSoC4/ADC_Temp.c ****         ADC_Temp_SAR_START_CTRL_REG = ADC_Temp_SAR_START_CTRL_FW_TRIGGER_MSK;
 844:Generated_Source\PSoC4/ADC_Temp.c ****     }
 845:Generated_Source\PSoC4/ADC_Temp.c **** 
 846:Generated_Source\PSoC4/ADC_Temp.c ****     return;
 847:Generated_Source\PSoC4/ADC_Temp.c **** }
 848:Generated_Source\PSoC4/ADC_Temp.c **** 
 849:Generated_Source\PSoC4/ADC_Temp.c **** /*******************************************************************************
 850:Generated_Source\PSoC4/ADC_Temp.c **** * Function Name: ADC_Temp_StopConvert
 851:Generated_Source\PSoC4/ADC_Temp.c **** ****************************************************************************//**
 852:Generated_Source\PSoC4/ADC_Temp.c **** *
 853:Generated_Source\PSoC4/ADC_Temp.c **** * \brief Forces the ADC_Temp to stop conversions. If a conversion is
 854:Generated_Source\PSoC4/ADC_Temp.c **** * currently executing, that conversion will complete, but no further conversions
 855:Generated_Source\PSoC4/ADC_Temp.c **** * will occur.
 856:Generated_Source\PSoC4/ADC_Temp.c **** *
 857:Generated_Source\PSoC4/ADC_Temp.c **** * \param None
 858:Generated_Source\PSoC4/ADC_Temp.c **** *
 859:Generated_Source\PSoC4/ADC_Temp.c **** * \return None
 860:Generated_Source\PSoC4/ADC_Temp.c **** *
 861:Generated_Source\PSoC4/ADC_Temp.c **** * \sideeffect None
 862:Generated_Source\PSoC4/ADC_Temp.c **** *
 863:Generated_Source\PSoC4/ADC_Temp.c **** *******************************************************************************/
 864:Generated_Source\PSoC4/ADC_Temp.c **** void ADC_Temp_StopConvert(void)
 865:Generated_Source\PSoC4/ADC_Temp.c **** {
 866:Generated_Source\PSoC4/ADC_Temp.c ****     if((ADC_Temp_SAR_SAMPLE_CTRL_REG
 867:Generated_Source\PSoC4/ADC_Temp.c ****         & ADC_Temp_SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_MSK)
 868:Generated_Source\PSoC4/ADC_Temp.c ****         == ADC_Temp_SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_MSK)
 869:Generated_Source\PSoC4/ADC_Temp.c ****     {
 870:Generated_Source\PSoC4/ADC_Temp.c ****         ADC_Temp_SAR_SAMPLE_CTRL_REG &= ~ADC_Temp_SAR_SAMPLE_CTRL_CONTINUOUS_MSK;
 871:Generated_Source\PSoC4/ADC_Temp.c **** 
 872:Generated_Source\PSoC4/ADC_Temp.c ****         if((ADC_Temp_allConfigs[ADC_Temp_currentConfig].miscConfig
 873:Generated_Source\PSoC4/ADC_Temp.c ****             & ADC_Temp_MISC_CONFIG_FILTER_PRESENT_MSK)
 874:Generated_Source\PSoC4/ADC_Temp.c ****             == ADC_Temp_MISC_CONFIG_FILTER_PRESENT_MSK)
 875:Generated_Source\PSoC4/ADC_Temp.c ****         {
 876:Generated_Source\PSoC4/ADC_Temp.c ****             /* Re-synchronize the Filter if a filter is present */
 877:Generated_Source\PSoC4/ADC_Temp.c ****             ADC_Temp_Stop();
 878:Generated_Source\PSoC4/ADC_Temp.c ****             ADC_Temp_Start();
 879:Generated_Source\PSoC4/ADC_Temp.c ****         }
 880:Generated_Source\PSoC4/ADC_Temp.c ****     }
 881:Generated_Source\PSoC4/ADC_Temp.c **** 
 882:Generated_Source\PSoC4/ADC_Temp.c ****     return;
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 18


 883:Generated_Source\PSoC4/ADC_Temp.c **** }
 884:Generated_Source\PSoC4/ADC_Temp.c **** /*******************************************************************************
 885:Generated_Source\PSoC4/ADC_Temp.c **** * Function Name: ADC_Temp_SetConvertMode
 886:Generated_Source\PSoC4/ADC_Temp.c **** ****************************************************************************//**
 887:Generated_Source\PSoC4/ADC_Temp.c **** *
 888:Generated_Source\PSoC4/ADC_Temp.c **** * \brief Sets the conversion mode to either Single-Shot or continuous. This
 889:Generated_Source\PSoC4/ADC_Temp.c **** * function overrides the settings applied in the customizer. Changing
 890:Generated_Source\PSoC4/ADC_Temp.c **** * configurations will restore the values set in the customizer.
 891:Generated_Source\PSoC4/ADC_Temp.c **** *
 892:Generated_Source\PSoC4/ADC_Temp.c **** * \param mode Sets the conversion mode. See table below for details.
 893:Generated_Source\PSoC4/ADC_Temp.c **** * | Options                          | Description                             |
 894:Generated_Source\PSoC4/ADC_Temp.c **** * | :------------------------------- | :-------------------------------------- |
 895:Generated_Source\PSoC4/ADC_Temp.c **** * | ADC_Temp_SINGLE_SHOT     | Calling the ADC_Temp_StartConvert() function after setting mode this
 896:Generated_Source\PSoC4/ADC_Temp.c **** * | ADC_Temp_CONTINUOUS      | Calling the ADC_Temp_StartConvert() function after setting this mode
 897:Generated_Source\PSoC4/ADC_Temp.c **** *
 898:Generated_Source\PSoC4/ADC_Temp.c **** * \return None
 899:Generated_Source\PSoC4/ADC_Temp.c **** *
 900:Generated_Source\PSoC4/ADC_Temp.c **** * \sideeffect None
 901:Generated_Source\PSoC4/ADC_Temp.c **** *
 902:Generated_Source\PSoC4/ADC_Temp.c **** *******************************************************************************/
 903:Generated_Source\PSoC4/ADC_Temp.c **** void ADC_Temp_SetConvertMode(uint32 mode)
 904:Generated_Source\PSoC4/ADC_Temp.c **** {
 905:Generated_Source\PSoC4/ADC_Temp.c ****     if(ADC_Temp_CONTINUOUS == mode)
 906:Generated_Source\PSoC4/ADC_Temp.c ****     {
 907:Generated_Source\PSoC4/ADC_Temp.c ****         ADC_Temp_SAR_SAMPLE_CTRL_REG |= ADC_Temp_SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_MSK;
 908:Generated_Source\PSoC4/ADC_Temp.c ****     }
 909:Generated_Source\PSoC4/ADC_Temp.c ****     else
 910:Generated_Source\PSoC4/ADC_Temp.c ****     {
 911:Generated_Source\PSoC4/ADC_Temp.c ****         ADC_Temp_SAR_SAMPLE_CTRL_REG &= ~ADC_Temp_SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_MSK;
 912:Generated_Source\PSoC4/ADC_Temp.c ****     }
 913:Generated_Source\PSoC4/ADC_Temp.c **** }
 914:Generated_Source\PSoC4/ADC_Temp.c **** /* ****************************************************************************
 915:Generated_Source\PSoC4/ADC_Temp.c **** * Function Name: ADC_Temp_IRQ_Enable
 916:Generated_Source\PSoC4/ADC_Temp.c **** ****************************************************************************//*
 917:Generated_Source\PSoC4/ADC_Temp.c **** *
 918:Generated_Source\PSoC4/ADC_Temp.c **** * \brief Enables interrupts to occur at the end of a conversion. Global
 919:Generated_Source\PSoC4/ADC_Temp.c **** * interrupts must also be enabled for the ADC_Temp interrupts to occur.
 920:Generated_Source\PSoC4/ADC_Temp.c **** *
 921:Generated_Source\PSoC4/ADC_Temp.c **** * \param None
 922:Generated_Source\PSoC4/ADC_Temp.c **** *
 923:Generated_Source\PSoC4/ADC_Temp.c **** * \return None
 924:Generated_Source\PSoC4/ADC_Temp.c **** *
 925:Generated_Source\PSoC4/ADC_Temp.c **** * \sideeffect None
 926:Generated_Source\PSoC4/ADC_Temp.c **** *
 927:Generated_Source\PSoC4/ADC_Temp.c **** *******************************************************************************/
 928:Generated_Source\PSoC4/ADC_Temp.c **** 
 929:Generated_Source\PSoC4/ADC_Temp.c **** 
 930:Generated_Source\PSoC4/ADC_Temp.c **** /* ****************************************************************************
 931:Generated_Source\PSoC4/ADC_Temp.c **** * Function Name: ADC_Temp_IRQ_Disable
 932:Generated_Source\PSoC4/ADC_Temp.c **** ****************************************************************************//*
 933:Generated_Source\PSoC4/ADC_Temp.c **** *
 934:Generated_Source\PSoC4/ADC_Temp.c **** * \brief Disables end of conversion interrupts.
 935:Generated_Source\PSoC4/ADC_Temp.c **** *
 936:Generated_Source\PSoC4/ADC_Temp.c **** * \param None
 937:Generated_Source\PSoC4/ADC_Temp.c **** *
 938:Generated_Source\PSoC4/ADC_Temp.c **** * \return None
 939:Generated_Source\PSoC4/ADC_Temp.c **** *
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 19


 940:Generated_Source\PSoC4/ADC_Temp.c **** * \sideeffect None
 941:Generated_Source\PSoC4/ADC_Temp.c **** *
 942:Generated_Source\PSoC4/ADC_Temp.c **** *******************************************************************************/
 943:Generated_Source\PSoC4/ADC_Temp.c **** 
 944:Generated_Source\PSoC4/ADC_Temp.c **** 
 945:Generated_Source\PSoC4/ADC_Temp.c **** /*******************************************************************************
 946:Generated_Source\PSoC4/ADC_Temp.c **** * Function Name: ADC_Temp_SetEosMask
 947:Generated_Source\PSoC4/ADC_Temp.c **** ****************************************************************************//**
 948:Generated_Source\PSoC4/ADC_Temp.c **** *
 949:Generated_Source\PSoC4/ADC_Temp.c **** * \brief Sets of clears the End of Scan (EOS) interrupt mask.
 950:Generated_Source\PSoC4/ADC_Temp.c **** *
 951:Generated_Source\PSoC4/ADC_Temp.c **** * \param mask 1 to set the mask, 0 to clear the mask.
 952:Generated_Source\PSoC4/ADC_Temp.c **** *
 953:Generated_Source\PSoC4/ADC_Temp.c **** * \return None
 954:Generated_Source\PSoC4/ADC_Temp.c **** *
 955:Generated_Source\PSoC4/ADC_Temp.c **** * \sideeffect All other bits in the INTR register are cleared by this function.
 956:Generated_Source\PSoC4/ADC_Temp.c **** *
 957:Generated_Source\PSoC4/ADC_Temp.c **** *******************************************************************************/
 958:Generated_Source\PSoC4/ADC_Temp.c **** void ADC_Temp_SetEosMask(uint32 mask)
 959:Generated_Source\PSoC4/ADC_Temp.c **** {
 960:Generated_Source\PSoC4/ADC_Temp.c ****     ADC_Temp_SAR_INTR_MASK_REG = mask & ADC_Temp_EOS_MASK;
 961:Generated_Source\PSoC4/ADC_Temp.c **** 
 962:Generated_Source\PSoC4/ADC_Temp.c ****     return;
 963:Generated_Source\PSoC4/ADC_Temp.c **** }
 964:Generated_Source\PSoC4/ADC_Temp.c **** 
 965:Generated_Source\PSoC4/ADC_Temp.c **** /* ****************************************************************************
 966:Generated_Source\PSoC4/ADC_Temp.c **** * Function Name: ADC_Temp_SetChanMask
 967:Generated_Source\PSoC4/ADC_Temp.c **** ****************************************************************************//*
 968:Generated_Source\PSoC4/ADC_Temp.c **** *
 969:Generated_Source\PSoC4/ADC_Temp.c **** * \brief Sets enable/disable mask for all channels in current configuration.
 970:Generated_Source\PSoC4/ADC_Temp.c **** *
 971:Generated_Source\PSoC4/ADC_Temp.c **** *
 972:Generated_Source\PSoC4/ADC_Temp.c **** * \param enableMask
 973:Generated_Source\PSoC4/ADC_Temp.c **** *  Channel enable/disable mask.
 974:Generated_Source\PSoC4/ADC_Temp.c **** *
 975:Generated_Source\PSoC4/ADC_Temp.c **** * \sideeffect
 976:Generated_Source\PSoC4/ADC_Temp.c **** *  None.
 977:Generated_Source\PSoC4/ADC_Temp.c **** *
 978:Generated_Source\PSoC4/ADC_Temp.c **** *******************************************************************************/
 979:Generated_Source\PSoC4/ADC_Temp.c **** void ADC_Temp_SetChanMask(uint32 enableMask)
 980:Generated_Source\PSoC4/ADC_Temp.c **** {
 981:Generated_Source\PSoC4/ADC_Temp.c ****     uint32 chanCount = ADC_Temp_allConfigs[ADC_Temp_currentConfig].numChannels;
 982:Generated_Source\PSoC4/ADC_Temp.c ****     enableMask &= (uint32)((uint32)(1ul << chanCount) - 1ul);
 983:Generated_Source\PSoC4/ADC_Temp.c ****     ADC_Temp_SAR_CHAN_EN_REG = enableMask;
 984:Generated_Source\PSoC4/ADC_Temp.c ****     return;
 985:Generated_Source\PSoC4/ADC_Temp.c **** }
 986:Generated_Source\PSoC4/ADC_Temp.c **** 
 987:Generated_Source\PSoC4/ADC_Temp.c **** /*******************************************************************************
 988:Generated_Source\PSoC4/ADC_Temp.c **** * Function Name: ADC_Temp_IsEndConversion
 989:Generated_Source\PSoC4/ADC_Temp.c **** ****************************************************************************//**
 990:Generated_Source\PSoC4/ADC_Temp.c **** *
 991:Generated_Source\PSoC4/ADC_Temp.c **** * \brief Immediately returns the status of the conversion or does not return
 992:Generated_Source\PSoC4/ADC_Temp.c **** * (blocking) until the conversion completes, depending on the retMode parameter.
 993:Generated_Source\PSoC4/ADC_Temp.c **** *
 994:Generated_Source\PSoC4/ADC_Temp.c **** * \param retMode Check conversion return mode. See the following table for
 995:Generated_Source\PSoC4/ADC_Temp.c **** * options.
 996:Generated_Source\PSoC4/ADC_Temp.c **** * | Options                              | Description                             |
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 20


 997:Generated_Source\PSoC4/ADC_Temp.c **** * | :-------------------------------     | :-------------------------------------- |
 998:Generated_Source\PSoC4/ADC_Temp.c **** * | ADC_Temp_RETURN_STATUS       | Immediately returns the conversion status for sequential channel
 999:Generated_Source\PSoC4/ADC_Temp.c **** * | ADC_Temp_WAIT_FOR_RESULT     | Does not return a result until the ADC_Temp conversion of all se
1000:Generated_Source\PSoC4/ADC_Temp.c **** *
1001:Generated_Source\PSoC4/ADC_Temp.c **** * \return uint8: If a nonzero value is returned, the last conversion is complete.
1002:Generated_Source\PSoC4/ADC_Temp.c **** * If the returned value is zero, the ADC_Temp is still calculating the last result.
1003:Generated_Source\PSoC4/ADC_Temp.c **** *
1004:Generated_Source\PSoC4/ADC_Temp.c **** * \sideeffect This function reads the end of conversion status, and clears it afterward.
1005:Generated_Source\PSoC4/ADC_Temp.c **** *
1006:Generated_Source\PSoC4/ADC_Temp.c **** *******************************************************************************/
1007:Generated_Source\PSoC4/ADC_Temp.c **** uint32 ADC_Temp_IsEndConversion(uint32 retMode)
1008:Generated_Source\PSoC4/ADC_Temp.c **** {
1009:Generated_Source\PSoC4/ADC_Temp.c ****     uint32 endOfConversion = 0u;
1010:Generated_Source\PSoC4/ADC_Temp.c ****     uint32 wdt = 0x3FFFFFFuL; /* Watchdog timer for blocking while loop */
1011:Generated_Source\PSoC4/ADC_Temp.c ****     if((ADC_Temp_RETURN_STATUS == retMode) || (ADC_Temp_WAIT_FOR_RESULT == retMode))
1012:Generated_Source\PSoC4/ADC_Temp.c ****     {
1013:Generated_Source\PSoC4/ADC_Temp.c ****         do
1014:Generated_Source\PSoC4/ADC_Temp.c ****         {
1015:Generated_Source\PSoC4/ADC_Temp.c ****             endOfConversion = ADC_Temp_SAR_INTR_REG & ADC_Temp_EOS_MASK;
1016:Generated_Source\PSoC4/ADC_Temp.c ****             wdt--;
1017:Generated_Source\PSoC4/ADC_Temp.c ****         }while(((0u == endOfConversion)
1018:Generated_Source\PSoC4/ADC_Temp.c ****             && (((uint32) retMode & ADC_Temp_WAIT_FOR_RESULT) != 0u))
1019:Generated_Source\PSoC4/ADC_Temp.c ****             && (0uL != wdt));
1020:Generated_Source\PSoC4/ADC_Temp.c **** 
1021:Generated_Source\PSoC4/ADC_Temp.c ****         if(0u != endOfConversion)
1022:Generated_Source\PSoC4/ADC_Temp.c ****         {
1023:Generated_Source\PSoC4/ADC_Temp.c ****             /* Clear EOS bit */
1024:Generated_Source\PSoC4/ADC_Temp.c ****             ADC_Temp_SAR_INTR_REG = ADC_Temp_EOS_MASK;
1025:Generated_Source\PSoC4/ADC_Temp.c ****         }
1026:Generated_Source\PSoC4/ADC_Temp.c ****     }
1027:Generated_Source\PSoC4/ADC_Temp.c **** 
1028:Generated_Source\PSoC4/ADC_Temp.c ****     return endOfConversion;
1029:Generated_Source\PSoC4/ADC_Temp.c **** }
1030:Generated_Source\PSoC4/ADC_Temp.c **** 
1031:Generated_Source\PSoC4/ADC_Temp.c **** /* ****************************************************************************
1032:Generated_Source\PSoC4/ADC_Temp.c **** * Function Name: ADC_Temp_IsChannelSigned(uint32 chan)
1033:Generated_Source\PSoC4/ADC_Temp.c **** ****************************************************************************//*
1034:Generated_Source\PSoC4/ADC_Temp.c **** *
1035:Generated_Source\PSoC4/ADC_Temp.c **** * Determines if the provided channel is in signed format.
1036:Generated_Source\PSoC4/ADC_Temp.c **** *
1037:Generated_Source\PSoC4/ADC_Temp.c **** * \param chan The ADC_Temp channel to check.
1038:Generated_Source\PSoC4/ADC_Temp.c **** *
1039:Generated_Source\PSoC4/ADC_Temp.c **** * \return None
1040:Generated_Source\PSoC4/ADC_Temp.c **** *
1041:Generated_Source\PSoC4/ADC_Temp.c **** * \sideeffect None
1042:Generated_Source\PSoC4/ADC_Temp.c **** *
1043:Generated_Source\PSoC4/ADC_Temp.c **** *
1044:Generated_Source\PSoC4/ADC_Temp.c **** *******************************************************************************/
1045:Generated_Source\PSoC4/ADC_Temp.c **** static int32 ADC_Temp_IsChannelSigned(uint32 chan)
1046:Generated_Source\PSoC4/ADC_Temp.c **** {
  88              		.loc 1 1046 0
  89              		.cfi_startproc
  90              		@ args = 0, pretend = 0, frame = 0
  91              		@ frame_needed = 0, uses_anonymous_args = 0
  92              		@ link register save eliminated.
  93              	.LVL7:
1047:Generated_Source\PSoC4/ADC_Temp.c ****     int32 isSigned = 0;
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 21


1048:Generated_Source\PSoC4/ADC_Temp.c ****     uint32 chanConfig;
1049:Generated_Source\PSoC4/ADC_Temp.c **** 
1050:Generated_Source\PSoC4/ADC_Temp.c ****     chanConfig = CY_GET_REG32((reg32 *)(ADC_Temp_SAR_CHAN_CONFIG_IND + (uint32)(chan << 2u)));
  94              		.loc 1 1050 0
  95 0000 8000     		lsls	r0, r0, #2
  96              	.LVL8:
  97 0002 114B     		ldr	r3, .L12
  98 0004 9C46     		mov	ip, r3
  99 0006 6044     		add	r0, r0, ip
 100 0008 0268     		ldr	r2, [r0]
 101              	.LVL9:
1051:Generated_Source\PSoC4/ADC_Temp.c ****     /* If differential mode */
1052:Generated_Source\PSoC4/ADC_Temp.c ****     if(0u != (chanConfig & ADC_Temp_CHANNEL_CONFIG_DIFF_ALL_MSK))
 102              		.loc 1 1052 0
 103 000a 104B     		ldr	r3, .L12+4
 104 000c 1A42     		tst	r2, r3
 105 000e 0BD0     		beq	.L8
1053:Generated_Source\PSoC4/ADC_Temp.c ****     {
1054:Generated_Source\PSoC4/ADC_Temp.c ****         /*If signed differential */
1055:Generated_Source\PSoC4/ADC_Temp.c ****         if((ADC_Temp_allConfigs[ADC_Temp_currentConfig].sampleCtrl
 106              		.loc 1 1055 0
 107 0010 0F4B     		ldr	r3, .L12+8
 108 0012 1A68     		ldr	r2, [r3]
 109              	.LVL10:
 110 0014 D300     		lsls	r3, r2, #3
 111 0016 9A1A     		subs	r2, r3, r2
 112 0018 D300     		lsls	r3, r2, #3
 113 001a 0E4A     		ldr	r2, .L12+12
 114 001c D318     		adds	r3, r2, r3
 115 001e DB68     		ldr	r3, [r3, #12]
 116 0020 1B07     		lsls	r3, r3, #28
 117 0022 0DD4     		bmi	.L10
1047:Generated_Source\PSoC4/ADC_Temp.c ****     uint32 chanConfig;
 118              		.loc 1 1047 0
 119 0024 0020     		movs	r0, #0
 120 0026 0EE0     		b	.L9
 121              	.LVL11:
 122              	.L8:
1056:Generated_Source\PSoC4/ADC_Temp.c ****             & ADC_Temp_SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_MSK) != 0u)
1057:Generated_Source\PSoC4/ADC_Temp.c ****         {
1058:Generated_Source\PSoC4/ADC_Temp.c ****             isSigned = 1;
1059:Generated_Source\PSoC4/ADC_Temp.c ****         }
1060:Generated_Source\PSoC4/ADC_Temp.c ****     }
1061:Generated_Source\PSoC4/ADC_Temp.c ****     else
1062:Generated_Source\PSoC4/ADC_Temp.c ****     {
1063:Generated_Source\PSoC4/ADC_Temp.c ****         if((ADC_Temp_allConfigs[ADC_Temp_currentConfig].sampleCtrl
 123              		.loc 1 1063 0
 124 0028 094B     		ldr	r3, .L12+8
 125 002a 1A68     		ldr	r2, [r3]
 126              	.LVL12:
 127 002c D300     		lsls	r3, r2, #3
 128 002e 9A1A     		subs	r2, r3, r2
 129 0030 D300     		lsls	r3, r2, #3
 130 0032 084A     		ldr	r2, .L12+12
 131 0034 D318     		adds	r3, r2, r3
 132 0036 DB68     		ldr	r3, [r3, #12]
 133 0038 5B07     		lsls	r3, r3, #29
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 22


 134 003a 03D4     		bmi	.L11
1047:Generated_Source\PSoC4/ADC_Temp.c ****     uint32 chanConfig;
 135              		.loc 1 1047 0
 136 003c 0020     		movs	r0, #0
 137 003e 02E0     		b	.L9
 138              	.L10:
1058:Generated_Source\PSoC4/ADC_Temp.c ****         }
 139              		.loc 1 1058 0
 140 0040 0120     		movs	r0, #1
 141 0042 00E0     		b	.L9
 142              	.L11:
1064:Generated_Source\PSoC4/ADC_Temp.c ****             & ADC_Temp_SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_MSK) != 0u)
1065:Generated_Source\PSoC4/ADC_Temp.c ****         {
1066:Generated_Source\PSoC4/ADC_Temp.c ****             isSigned = 1;
 143              		.loc 1 1066 0
 144 0044 0120     		movs	r0, #1
 145              	.L9:
 146              	.LVL13:
1067:Generated_Source\PSoC4/ADC_Temp.c ****         }
1068:Generated_Source\PSoC4/ADC_Temp.c ****     }
1069:Generated_Source\PSoC4/ADC_Temp.c ****     return isSigned;
1070:Generated_Source\PSoC4/ADC_Temp.c **** }
 147              		.loc 1 1070 0
 148              		@ sp needed
 149 0046 7047     		bx	lr
 150              	.L13:
 151              		.align	2
 152              	.L12:
 153 0048 80003A40 		.word	1077543040
 154 004c 00010001 		.word	16777472
 155 0050 00000000 		.word	.LANCHOR0
 156 0054 00000000 		.word	ADC_Temp_allConfigs
 157              		.cfi_endproc
 158              	.LFE13:
 159              		.size	ADC_Temp_IsChannelSigned, .-ADC_Temp_IsChannelSigned
 160              		.section	.text.ADC_Temp_Stop,"ax",%progbits
 161              		.align	2
 162              		.global	ADC_Temp_Stop
 163              		.code	16
 164              		.thumb_func
 165              		.type	ADC_Temp_Stop, %function
 166              	ADC_Temp_Stop:
 167              	.LFB3:
 615:Generated_Source\PSoC4/ADC_Temp.c ****     #if(0u != ADC_Temp_ANY_CONFIG_USES_FILTER)
 168              		.loc 1 615 0
 169              		.cfi_startproc
 170              		@ args = 0, pretend = 0, frame = 0
 171              		@ frame_needed = 0, uses_anonymous_args = 0
 172              		@ link register save eliminated.
 626:Generated_Source\PSoC4/ADC_Temp.c ****     return;
 173              		.loc 1 626 0
 174 0000 024A     		ldr	r2, .L15
 175 0002 1368     		ldr	r3, [r2]
 176 0004 5B00     		lsls	r3, r3, #1
 177 0006 5B08     		lsrs	r3, r3, #1
 178 0008 1360     		str	r3, [r2]
 628:Generated_Source\PSoC4/ADC_Temp.c **** 
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 23


 179              		.loc 1 628 0
 180              		@ sp needed
 181 000a 7047     		bx	lr
 182              	.L16:
 183              		.align	2
 184              	.L15:
 185 000c 00003A40 		.word	1077542912
 186              		.cfi_endproc
 187              	.LFE3:
 188              		.size	ADC_Temp_Stop, .-ADC_Temp_Stop
 189              		.section	.text.ADC_Temp_InitConfig,"ax",%progbits
 190              		.align	2
 191              		.global	ADC_Temp_InitConfig
 192              		.code	16
 193              		.thumb_func
 194              		.type	ADC_Temp_InitConfig, %function
 195              	ADC_Temp_InitConfig:
 196              	.LFB4:
 645:Generated_Source\PSoC4/ADC_Temp.c ****     uint32 chNum;
 197              		.loc 1 645 0
 198              		.cfi_startproc
 199              		@ args = 0, pretend = 0, frame = 0
 200              		@ frame_needed = 0, uses_anonymous_args = 0
 201              	.LVL14:
 202 0000 10B5     		push	{r4, lr}
 203              		.cfi_def_cfa_offset 8
 204              		.cfi_offset 4, -8
 205              		.cfi_offset 14, -4
 206 0002 0400     		movs	r4, r0
 651:Generated_Source\PSoC4/ADC_Temp.c ****         ADC_Temp_intSarClock_SetFractionalDividerRegister(config->clkDivider, 0u);
 207              		.loc 1 651 0
 208 0004 FFF7FEFF 		bl	ADC_Temp_intSarClock_Stop
 209              	.LVL15:
 652:Generated_Source\PSoC4/ADC_Temp.c ****         ADC_Temp_intSarClock_Start();
 210              		.loc 1 652 0
 211 0008 A08E     		ldrh	r0, [r4, #52]
 212 000a 0021     		movs	r1, #0
 213 000c FFF7FEFF 		bl	ADC_Temp_intSarClock_SetFractionalDividerRegister
 214              	.LVL16:
 653:Generated_Source\PSoC4/ADC_Temp.c ****     #endif /* ADC_Temp_CLOCK_INTERNAL */
 215              		.loc 1 653 0
 216 0010 FF20     		movs	r0, #255
 217 0012 FFF7FEFF 		bl	ADC_Temp_intSarClock_StartEx
 218              	.LVL17:
 676:Generated_Source\PSoC4/ADC_Temp.c ****         | (((ADC_Temp_PUMP_CTRL_REG & ADC_Temp_PUMP_CTRL_ENABLED) != 0u)
 219              		.loc 1 676 0
 220 0016 A368     		ldr	r3, [r4, #8]
 677:Generated_Source\PSoC4/ADC_Temp.c ****             ? ADC_Temp_SAR_CTRL_BOOSTPUMP_EN_MSK : 0u);
 221              		.loc 1 677 0
 222 0018 194A     		ldr	r2, .L22
 223 001a 1268     		ldr	r2, [r2]
 224 001c 002A     		cmp	r2, #0
 225 001e 02DA     		bge	.L21
 226 0020 8022     		movs	r2, #128
 227 0022 5203     		lsls	r2, r2, #13
 228 0024 00E0     		b	.L18
 229              	.L21:
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 24


 230 0026 0022     		movs	r2, #0
 231              	.L18:
 677:Generated_Source\PSoC4/ADC_Temp.c ****             ? ADC_Temp_SAR_CTRL_BOOSTPUMP_EN_MSK : 0u);
 232              		.loc 1 677 0 is_stmt 0 discriminator 4
 233 0028 1343     		orrs	r3, r2
 676:Generated_Source\PSoC4/ADC_Temp.c ****         | (((ADC_Temp_PUMP_CTRL_REG & ADC_Temp_PUMP_CTRL_ENABLED) != 0u)
 234              		.loc 1 676 0 is_stmt 1 discriminator 4
 235 002a 164A     		ldr	r2, .L22+4
 236 002c 1360     		str	r3, [r2]
 680:Generated_Source\PSoC4/ADC_Temp.c ****     ADC_Temp_SAR_RANGE_THRES_REG = config->rangeThres;
 237              		.loc 1 680 0 discriminator 4
 238 002e 164B     		ldr	r3, .L22+8
 239 0030 E268     		ldr	r2, [r4, #12]
 240 0032 1A60     		str	r2, [r3]
 681:Generated_Source\PSoC4/ADC_Temp.c ****     ADC_Temp_SAR_RANGE_COND_REG = config->rangeCond;
 241              		.loc 1 681 0 discriminator 4
 242 0034 154B     		ldr	r3, .L22+12
 243 0036 A269     		ldr	r2, [r4, #24]
 244 0038 1A60     		str	r2, [r3]
 682:Generated_Source\PSoC4/ADC_Temp.c ****     ADC_Temp_SAR_SAMPLE_TIME01_REG = config->sampleTime01;
 245              		.loc 1 682 0 discriminator 4
 246 003a 154B     		ldr	r3, .L22+16
 247 003c E269     		ldr	r2, [r4, #28]
 248 003e 1A60     		str	r2, [r3]
 683:Generated_Source\PSoC4/ADC_Temp.c ****     ADC_Temp_SAR_SAMPLE_TIME23_REG = config->sampleTime23;
 249              		.loc 1 683 0 discriminator 4
 250 0040 144B     		ldr	r3, .L22+20
 251 0042 2269     		ldr	r2, [r4, #16]
 252 0044 1A60     		str	r2, [r3]
 684:Generated_Source\PSoC4/ADC_Temp.c **** 
 253              		.loc 1 684 0 discriminator 4
 254 0046 144B     		ldr	r3, .L22+24
 255 0048 6269     		ldr	r2, [r4, #20]
 256 004a 1A60     		str	r2, [r3]
 698:Generated_Source\PSoC4/ADC_Temp.c ****     ADC_Temp_SAR_RANGE_INTR_MASK_REG = 0u;
 257              		.loc 1 698 0 discriminator 4
 258 004c 134A     		ldr	r2, .L22+28
 259 004e 0021     		movs	r1, #0
 260 0050 1160     		str	r1, [r2]
 699:Generated_Source\PSoC4/ADC_Temp.c ****     ADC_Temp_SAR_SATURATE_INTR_MASK_REG = config->satIntMask;
 261              		.loc 1 699 0 discriminator 4
 262 0052 134B     		ldr	r3, .L22+32
 263 0054 1960     		str	r1, [r3]
 700:Generated_Source\PSoC4/ADC_Temp.c ****     ADC_Temp_SAR_RANGE_INTR_MASK_REG = config->rangeIntMask;
 264              		.loc 1 700 0 discriminator 4
 265 0056 A16A     		ldr	r1, [r4, #40]
 266 0058 1160     		str	r1, [r2]
 701:Generated_Source\PSoC4/ADC_Temp.c ****     ADC_Temp_SAR_INTR_MASK_REG = ADC_Temp_EOS_MASK;
 267              		.loc 1 701 0 discriminator 4
 268 005a 626A     		ldr	r2, [r4, #36]
 269 005c 1A60     		str	r2, [r3]
 702:Generated_Source\PSoC4/ADC_Temp.c **** 
 270              		.loc 1 702 0 discriminator 4
 271 005e 0122     		movs	r2, #1
 272 0060 104B     		ldr	r3, .L22+36
 273 0062 1A60     		str	r2, [r3]
 274              	.LVL18:
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 25


 704:Generated_Source\PSoC4/ADC_Temp.c ****     {
 275              		.loc 1 704 0 discriminator 4
 276 0064 0023     		movs	r3, #0
 277 0066 06E0     		b	.L19
 278              	.LVL19:
 279              	.L20:
 718:Generated_Source\PSoC4/ADC_Temp.c ****     }
 280              		.loc 1 718 0 discriminator 3
 281 0068 9A00     		lsls	r2, r3, #2
 282 006a 0F49     		ldr	r1, .L22+40
 283 006c 8C46     		mov	ip, r1
 284 006e 6244     		add	r2, r2, ip
 285 0070 0021     		movs	r1, #0
 286 0072 1160     		str	r1, [r2]
 704:Generated_Source\PSoC4/ADC_Temp.c ****     {
 287              		.loc 1 704 0 discriminator 3
 288 0074 0133     		adds	r3, r3, #1
 289              	.LVL20:
 290              	.L19:
 704:Generated_Source\PSoC4/ADC_Temp.c ****     {
 291              		.loc 1 704 0 is_stmt 0 discriminator 1
 292 0076 6268     		ldr	r2, [r4, #4]
 293 0078 9342     		cmp	r3, r2
 294 007a F5D3     		bcc	.L20
 722:Generated_Source\PSoC4/ADC_Temp.c **** 
 295              		.loc 1 722 0 is_stmt 1
 296              		@ sp needed
 297              	.LVL21:
 298 007c 10BD     		pop	{r4, pc}
 299              	.L23:
 300 007e C046     		.align	2
 301              	.L22:
 302 0080 80033A40 		.word	1077543808
 303 0084 00003A40 		.word	1077542912
 304 0088 04003A40 		.word	1077542916
 305 008c 18003A40 		.word	1077542936
 306 0090 1C003A40 		.word	1077542940
 307 0094 10003A40 		.word	1077542928
 308 0098 14003A40 		.word	1077542932
 309 009c 28023A40 		.word	1077543464
 310 00a0 38023A40 		.word	1077543480
 311 00a4 18023A40 		.word	1077543448
 312 00a8 80003A40 		.word	1077543040
 313              		.cfi_endproc
 314              	.LFE4:
 315              		.size	ADC_Temp_InitConfig, .-ADC_Temp_InitConfig
 316              		.section	.text.ADC_Temp_StartConvert,"ax",%progbits
 317              		.align	2
 318              		.global	ADC_Temp_StartConvert
 319              		.code	16
 320              		.thumb_func
 321              		.type	ADC_Temp_StartConvert, %function
 322              	ADC_Temp_StartConvert:
 323              	.LFB7:
 833:Generated_Source\PSoC4/ADC_Temp.c ****     /* Freerunning mode */
 324              		.loc 1 833 0
 325              		.cfi_startproc
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 26


 326              		@ args = 0, pretend = 0, frame = 0
 327              		@ frame_needed = 0, uses_anonymous_args = 0
 328              		@ link register save eliminated.
 835:Generated_Source\PSoC4/ADC_Temp.c ****         & ADC_Temp_SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_MSK)
 329              		.loc 1 835 0
 330 0000 074B     		ldr	r3, .L27
 331 0002 1B68     		ldr	r3, [r3]
 332 0004 5B03     		lsls	r3, r3, #13
 333 0006 06D5     		bpl	.L25
 839:Generated_Source\PSoC4/ADC_Temp.c ****     }
 334              		.loc 1 839 0
 335 0008 054A     		ldr	r2, .L27
 336 000a 1368     		ldr	r3, [r2]
 337 000c 8021     		movs	r1, #128
 338 000e 4902     		lsls	r1, r1, #9
 339 0010 0B43     		orrs	r3, r1
 340 0012 1360     		str	r3, [r2]
 341 0014 02E0     		b	.L24
 342              	.L25:
 843:Generated_Source\PSoC4/ADC_Temp.c ****     }
 343              		.loc 1 843 0
 344 0016 0122     		movs	r2, #1
 345 0018 024B     		ldr	r3, .L27+4
 346 001a 1A60     		str	r2, [r3]
 347              	.L24:
 847:Generated_Source\PSoC4/ADC_Temp.c **** 
 348              		.loc 1 847 0
 349              		@ sp needed
 350 001c 7047     		bx	lr
 351              	.L28:
 352 001e C046     		.align	2
 353              	.L27:
 354 0020 04003A40 		.word	1077542916
 355 0024 24003A40 		.word	1077542948
 356              		.cfi_endproc
 357              	.LFE7:
 358              		.size	ADC_Temp_StartConvert, .-ADC_Temp_StartConvert
 359              		.section	.text.ADC_Temp_SetConvertMode,"ax",%progbits
 360              		.align	2
 361              		.global	ADC_Temp_SetConvertMode
 362              		.code	16
 363              		.thumb_func
 364              		.type	ADC_Temp_SetConvertMode, %function
 365              	ADC_Temp_SetConvertMode:
 366              	.LFB9:
 904:Generated_Source\PSoC4/ADC_Temp.c ****     if(ADC_Temp_CONTINUOUS == mode)
 367              		.loc 1 904 0
 368              		.cfi_startproc
 369              		@ args = 0, pretend = 0, frame = 0
 370              		@ frame_needed = 0, uses_anonymous_args = 0
 371              		@ link register save eliminated.
 372              	.LVL22:
 905:Generated_Source\PSoC4/ADC_Temp.c ****     {
 373              		.loc 1 905 0
 374 0000 0128     		cmp	r0, #1
 375 0002 06D1     		bne	.L30
 907:Generated_Source\PSoC4/ADC_Temp.c ****     }
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 27


 376              		.loc 1 907 0
 377 0004 064A     		ldr	r2, .L32
 378 0006 1368     		ldr	r3, [r2]
 379 0008 8021     		movs	r1, #128
 380 000a C902     		lsls	r1, r1, #11
 381 000c 0B43     		orrs	r3, r1
 382 000e 1360     		str	r3, [r2]
 383 0010 04E0     		b	.L29
 384              	.L30:
 911:Generated_Source\PSoC4/ADC_Temp.c ****     }
 385              		.loc 1 911 0
 386 0012 034A     		ldr	r2, .L32
 387 0014 1168     		ldr	r1, [r2]
 388 0016 034B     		ldr	r3, .L32+4
 389 0018 0B40     		ands	r3, r1
 390 001a 1360     		str	r3, [r2]
 391              	.L29:
 913:Generated_Source\PSoC4/ADC_Temp.c **** /* ****************************************************************************
 392              		.loc 1 913 0
 393              		@ sp needed
 394 001c 7047     		bx	lr
 395              	.L33:
 396 001e C046     		.align	2
 397              	.L32:
 398 0020 04003A40 		.word	1077542916
 399 0024 FFFFFBFF 		.word	-262145
 400              		.cfi_endproc
 401              	.LFE9:
 402              		.size	ADC_Temp_SetConvertMode, .-ADC_Temp_SetConvertMode
 403              		.section	.text.ADC_Temp_SetEosMask,"ax",%progbits
 404              		.align	2
 405              		.global	ADC_Temp_SetEosMask
 406              		.code	16
 407              		.thumb_func
 408              		.type	ADC_Temp_SetEosMask, %function
 409              	ADC_Temp_SetEosMask:
 410              	.LFB10:
 959:Generated_Source\PSoC4/ADC_Temp.c ****     ADC_Temp_SAR_INTR_MASK_REG = mask & ADC_Temp_EOS_MASK;
 411              		.loc 1 959 0
 412              		.cfi_startproc
 413              		@ args = 0, pretend = 0, frame = 0
 414              		@ frame_needed = 0, uses_anonymous_args = 0
 415              		@ link register save eliminated.
 416              	.LVL23:
 960:Generated_Source\PSoC4/ADC_Temp.c **** 
 417              		.loc 1 960 0
 418 0000 0123     		movs	r3, #1
 419 0002 1840     		ands	r0, r3
 420              	.LVL24:
 421 0004 014B     		ldr	r3, .L35
 422 0006 1860     		str	r0, [r3]
 963:Generated_Source\PSoC4/ADC_Temp.c **** 
 423              		.loc 1 963 0
 424              		@ sp needed
 425 0008 7047     		bx	lr
 426              	.L36:
 427 000a C046     		.align	2
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 28


 428              	.L35:
 429 000c 18023A40 		.word	1077543448
 430              		.cfi_endproc
 431              	.LFE10:
 432              		.size	ADC_Temp_SetEosMask, .-ADC_Temp_SetEosMask
 433              		.section	.text.ADC_Temp_SetChanMask,"ax",%progbits
 434              		.align	2
 435              		.global	ADC_Temp_SetChanMask
 436              		.code	16
 437              		.thumb_func
 438              		.type	ADC_Temp_SetChanMask, %function
 439              	ADC_Temp_SetChanMask:
 440              	.LFB11:
 980:Generated_Source\PSoC4/ADC_Temp.c ****     uint32 chanCount = ADC_Temp_allConfigs[ADC_Temp_currentConfig].numChannels;
 441              		.loc 1 980 0
 442              		.cfi_startproc
 443              		@ args = 0, pretend = 0, frame = 0
 444              		@ frame_needed = 0, uses_anonymous_args = 0
 445              		@ link register save eliminated.
 446              	.LVL25:
 981:Generated_Source\PSoC4/ADC_Temp.c ****     enableMask &= (uint32)((uint32)(1ul << chanCount) - 1ul);
 447              		.loc 1 981 0
 448 0000 074B     		ldr	r3, .L38
 449 0002 1A68     		ldr	r2, [r3]
 450 0004 D300     		lsls	r3, r2, #3
 451 0006 9A1A     		subs	r2, r3, r2
 452 0008 D300     		lsls	r3, r2, #3
 453 000a 064A     		ldr	r2, .L38+4
 454 000c D318     		adds	r3, r2, r3
 455 000e 5A68     		ldr	r2, [r3, #4]
 456              	.LVL26:
 982:Generated_Source\PSoC4/ADC_Temp.c ****     ADC_Temp_SAR_CHAN_EN_REG = enableMask;
 457              		.loc 1 982 0
 458 0010 0123     		movs	r3, #1
 459 0012 9340     		lsls	r3, r3, r2
 460 0014 013B     		subs	r3, r3, #1
 461 0016 1840     		ands	r0, r3
 462              	.LVL27:
 983:Generated_Source\PSoC4/ADC_Temp.c ****     return;
 463              		.loc 1 983 0
 464 0018 034B     		ldr	r3, .L38+8
 465 001a 1860     		str	r0, [r3]
 985:Generated_Source\PSoC4/ADC_Temp.c **** 
 466              		.loc 1 985 0
 467              		@ sp needed
 468 001c 7047     		bx	lr
 469              	.L39:
 470 001e C046     		.align	2
 471              	.L38:
 472 0020 00000000 		.word	.LANCHOR0
 473 0024 00000000 		.word	ADC_Temp_allConfigs
 474 0028 20003A40 		.word	1077542944
 475              		.cfi_endproc
 476              	.LFE11:
 477              		.size	ADC_Temp_SetChanMask, .-ADC_Temp_SetChanMask
 478              		.section	.text.ADC_Temp_IsEndConversion,"ax",%progbits
 479              		.align	2
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 29


 480              		.global	ADC_Temp_IsEndConversion
 481              		.code	16
 482              		.thumb_func
 483              		.type	ADC_Temp_IsEndConversion, %function
 484              	ADC_Temp_IsEndConversion:
 485              	.LFB12:
1008:Generated_Source\PSoC4/ADC_Temp.c ****     uint32 endOfConversion = 0u;
 486              		.loc 1 1008 0
 487              		.cfi_startproc
 488              		@ args = 0, pretend = 0, frame = 0
 489              		@ frame_needed = 0, uses_anonymous_args = 0
 490              		@ link register save eliminated.
 491              	.LVL28:
 492 0000 0100     		movs	r1, r0
 493              	.LVL29:
1011:Generated_Source\PSoC4/ADC_Temp.c ****     {
 494              		.loc 1 1011 0
 495 0002 431E     		subs	r3, r0, #1
 496 0004 012B     		cmp	r3, #1
 497 0006 11D8     		bhi	.L44
 498 0008 094A     		ldr	r2, .L45
 499              	.LVL30:
 500              	.L43:
1015:Generated_Source\PSoC4/ADC_Temp.c ****             wdt--;
 501              		.loc 1 1015 0 discriminator 1
 502 000a 0A4B     		ldr	r3, .L45+4
 503 000c 1B68     		ldr	r3, [r3]
 504 000e 0120     		movs	r0, #1
 505 0010 1840     		ands	r0, r3
 506              	.LVL31:
1016:Generated_Source\PSoC4/ADC_Temp.c ****         }while(((0u == endOfConversion)
 507              		.loc 1 1016 0 discriminator 1
 508 0012 013A     		subs	r2, r2, #1
 509              	.LVL32:
1019:Generated_Source\PSoC4/ADC_Temp.c **** 
 510              		.loc 1 1019 0 discriminator 1
 511 0014 0028     		cmp	r0, #0
 512 0016 03D1     		bne	.L42
1018:Generated_Source\PSoC4/ADC_Temp.c ****             && (0uL != wdt));
 513              		.loc 1 1018 0
 514 0018 8B07     		lsls	r3, r1, #30
 515 001a 01D5     		bpl	.L42
1019:Generated_Source\PSoC4/ADC_Temp.c **** 
 516              		.loc 1 1019 0
 517 001c 002A     		cmp	r2, #0
 518 001e F4D1     		bne	.L43
 519              	.L42:
1021:Generated_Source\PSoC4/ADC_Temp.c ****         {
 520              		.loc 1 1021 0
 521 0020 0028     		cmp	r0, #0
 522 0022 04D0     		beq	.L41
1024:Generated_Source\PSoC4/ADC_Temp.c ****         }
 523              		.loc 1 1024 0
 524 0024 0122     		movs	r2, #1
 525              	.LVL33:
 526 0026 034B     		ldr	r3, .L45+4
 527 0028 1A60     		str	r2, [r3]
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 30


 528 002a 00E0     		b	.L41
 529              	.LVL34:
 530              	.L44:
1009:Generated_Source\PSoC4/ADC_Temp.c ****     uint32 wdt = 0x3FFFFFFuL; /* Watchdog timer for blocking while loop */
 531              		.loc 1 1009 0
 532 002c 0020     		movs	r0, #0
 533              	.LVL35:
 534              	.L41:
1029:Generated_Source\PSoC4/ADC_Temp.c **** 
 535              		.loc 1 1029 0
 536              		@ sp needed
 537 002e 7047     		bx	lr
 538              	.L46:
 539              		.align	2
 540              	.L45:
 541 0030 FFFFFF03 		.word	67108863
 542 0034 10023A40 		.word	1077543440
 543              		.cfi_endproc
 544              	.LFE12:
 545              		.size	ADC_Temp_IsEndConversion, .-ADC_Temp_IsEndConversion
 546              		.section	.text.ADC_Temp_GetResult16,"ax",%progbits
 547              		.align	2
 548              		.global	ADC_Temp_GetResult16
 549              		.code	16
 550              		.thumb_func
 551              		.type	ADC_Temp_GetResult16, %function
 552              	ADC_Temp_GetResult16:
 553              	.LFB14:
1071:Generated_Source\PSoC4/ADC_Temp.c **** /*******************************************************************************
1072:Generated_Source\PSoC4/ADC_Temp.c **** * Function Name: ADC_Temp_GetResult16
1073:Generated_Source\PSoC4/ADC_Temp.c **** ****************************************************************************//**
1074:Generated_Source\PSoC4/ADC_Temp.c **** *
1075:Generated_Source\PSoC4/ADC_Temp.c **** * \brief Gets the data available in the channel result data register
1076:Generated_Source\PSoC4/ADC_Temp.c **** *
1077:Generated_Source\PSoC4/ADC_Temp.c **** * \param chan The ADC_Temp channel to read the result from. The first
1078:Generated_Source\PSoC4/ADC_Temp.c **** * channel is 0 and the injection channel if enabled is the number of valid
1079:Generated_Source\PSoC4/ADC_Temp.c **** * channels.
1080:Generated_Source\PSoC4/ADC_Temp.c **** *
1081:Generated_Source\PSoC4/ADC_Temp.c **** * \return Returns converted data as a signed 16-bit integer.
1082:Generated_Source\PSoC4/ADC_Temp.c **** *
1083:Generated_Source\PSoC4/ADC_Temp.c **** * \sideeffect None
1084:Generated_Source\PSoC4/ADC_Temp.c **** *
1085:Generated_Source\PSoC4/ADC_Temp.c **** *******************************************************************************/
1086:Generated_Source\PSoC4/ADC_Temp.c **** int16 ADC_Temp_GetResult16(uint32 chan)
1087:Generated_Source\PSoC4/ADC_Temp.c **** {
 554              		.loc 1 1087 0
 555              		.cfi_startproc
 556              		@ args = 0, pretend = 0, frame = 0
 557              		@ frame_needed = 0, uses_anonymous_args = 0
 558              	.LVL36:
 559 0000 10B5     		push	{r4, lr}
 560              		.cfi_def_cfa_offset 8
 561              		.cfi_offset 4, -8
 562              		.cfi_offset 14, -4
 563 0002 0400     		movs	r4, r0
1088:Generated_Source\PSoC4/ADC_Temp.c ****     uint32 adcResult;
1089:Generated_Source\PSoC4/ADC_Temp.c **** 
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 31


1090:Generated_Source\PSoC4/ADC_Temp.c ****     /* Halt CPU in debug mode if channel is out of valid range */
1091:Generated_Source\PSoC4/ADC_Temp.c ****     CYASSERT(chan < ADC_Temp_allConfigs[ADC_Temp_currentConfig].numChannels);
 564              		.loc 1 1091 0
 565 0004 104B     		ldr	r3, .L51
 566 0006 1A68     		ldr	r2, [r3]
 567 0008 D300     		lsls	r3, r2, #3
 568 000a 9A1A     		subs	r2, r3, r2
 569 000c D300     		lsls	r3, r2, #3
 570 000e 0F4A     		ldr	r2, .L51+4
 571 0010 D318     		adds	r3, r2, r3
 572 0012 5B68     		ldr	r3, [r3, #4]
 573 0014 8342     		cmp	r3, r0
 574 0016 02D8     		bhi	.L48
 575              		.loc 1 1091 0 is_stmt 0 discriminator 1
 576 0018 0020     		movs	r0, #0
 577              	.LVL37:
 578 001a FFF7FEFF 		bl	CyHalt
 579              	.LVL38:
 580              	.L48:
1092:Generated_Source\PSoC4/ADC_Temp.c **** 
1093:Generated_Source\PSoC4/ADC_Temp.c ****     if(ADC_Temp_allConfigs[ADC_Temp_currentConfig].numChannels > chan)
 581              		.loc 1 1093 0 is_stmt 1
 582 001e 0A4B     		ldr	r3, .L51
 583 0020 1A68     		ldr	r2, [r3]
 584 0022 D300     		lsls	r3, r2, #3
 585 0024 9A1A     		subs	r2, r3, r2
 586 0026 D300     		lsls	r3, r2, #3
 587 0028 084A     		ldr	r2, .L51+4
 588 002a D318     		adds	r3, r2, r3
 589 002c 5B68     		ldr	r3, [r3, #4]
 590 002e 9C42     		cmp	r4, r3
 591 0030 07D2     		bcs	.L50
1094:Generated_Source\PSoC4/ADC_Temp.c ****     {
1095:Generated_Source\PSoC4/ADC_Temp.c ****         adcResult = CY_GET_REG32((reg32 *)(ADC_Temp_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) &
 592              		.loc 1 1095 0
 593 0032 A400     		lsls	r4, r4, #2
 594              	.LVL39:
 595 0034 064B     		ldr	r3, .L51+8
 596 0036 9C46     		mov	ip, r3
 597 0038 6444     		add	r4, r4, ip
 598 003a 2068     		ldr	r0, [r4]
 599 003c 0004     		lsls	r0, r0, #16
 600 003e 000C     		lsrs	r0, r0, #16
 601              	.LVL40:
 602 0040 00E0     		b	.L49
 603              	.LVL41:
 604              	.L50:
1096:Generated_Source\PSoC4/ADC_Temp.c ****             ADC_Temp_RESULT_MASK;
1097:Generated_Source\PSoC4/ADC_Temp.c ****     }
1098:Generated_Source\PSoC4/ADC_Temp.c ****     else
1099:Generated_Source\PSoC4/ADC_Temp.c ****     {
1100:Generated_Source\PSoC4/ADC_Temp.c ****         adcResult = 0u;
 605              		.loc 1 1100 0
 606 0042 0020     		movs	r0, #0
 607              	.LVL42:
 608              	.L49:
1101:Generated_Source\PSoC4/ADC_Temp.c ****     }
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 32


1102:Generated_Source\PSoC4/ADC_Temp.c **** 
1103:Generated_Source\PSoC4/ADC_Temp.c ****     return (int16) adcResult;
 609              		.loc 1 1103 0
 610 0044 00B2     		sxth	r0, r0
 611              	.LVL43:
1104:Generated_Source\PSoC4/ADC_Temp.c **** }
 612              		.loc 1 1104 0
 613              		@ sp needed
 614 0046 10BD     		pop	{r4, pc}
 615              	.L52:
 616              		.align	2
 617              	.L51:
 618 0048 00000000 		.word	.LANCHOR0
 619 004c 00000000 		.word	ADC_Temp_allConfigs
 620 0050 80013A40 		.word	1077543296
 621              		.cfi_endproc
 622              	.LFE14:
 623              		.size	ADC_Temp_GetResult16, .-ADC_Temp_GetResult16
 624              		.section	.text.ADC_Temp_GetResult32,"ax",%progbits
 625              		.align	2
 626              		.global	ADC_Temp_GetResult32
 627              		.code	16
 628              		.thumb_func
 629              		.type	ADC_Temp_GetResult32, %function
 630              	ADC_Temp_GetResult32:
 631              	.LFB15:
1105:Generated_Source\PSoC4/ADC_Temp.c **** 
1106:Generated_Source\PSoC4/ADC_Temp.c **** /*******************************************************************************
1107:Generated_Source\PSoC4/ADC_Temp.c **** * Function Name: ADC_Temp_GetResult32
1108:Generated_Source\PSoC4/ADC_Temp.c **** ****************************************************************************//**
1109:Generated_Source\PSoC4/ADC_Temp.c **** *
1110:Generated_Source\PSoC4/ADC_Temp.c **** * \brief Gets the data available in the channel result data register.
1111:Generated_Source\PSoC4/ADC_Temp.c **** *
1112:Generated_Source\PSoC4/ADC_Temp.c **** * \param chan The ADC_Temp channel to read the result from. The first
1113:Generated_Source\PSoC4/ADC_Temp.c **** * channel is 0 and the injection channel if enabled is the number of valid
1114:Generated_Source\PSoC4/ADC_Temp.c **** * channels.
1115:Generated_Source\PSoC4/ADC_Temp.c **** *
1116:Generated_Source\PSoC4/ADC_Temp.c **** * \return Returns converted data as a signed 32-bit integer.
1117:Generated_Source\PSoC4/ADC_Temp.c **** *
1118:Generated_Source\PSoC4/ADC_Temp.c **** * \sideeffect None
1119:Generated_Source\PSoC4/ADC_Temp.c **** *
1120:Generated_Source\PSoC4/ADC_Temp.c **** *******************************************************************************/
1121:Generated_Source\PSoC4/ADC_Temp.c **** int32 ADC_Temp_GetResult32(uint32 chan)
1122:Generated_Source\PSoC4/ADC_Temp.c **** {
 632              		.loc 1 1122 0
 633              		.cfi_startproc
 634              		@ args = 0, pretend = 0, frame = 0
 635              		@ frame_needed = 0, uses_anonymous_args = 0
 636              	.LVL44:
 637 0000 70B5     		push	{r4, r5, r6, lr}
 638              		.cfi_def_cfa_offset 16
 639              		.cfi_offset 4, -16
 640              		.cfi_offset 5, -12
 641              		.cfi_offset 6, -8
 642              		.cfi_offset 14, -4
 643 0002 0500     		movs	r5, r0
1123:Generated_Source\PSoC4/ADC_Temp.c ****     uint32 adcResult;
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 33


1124:Generated_Source\PSoC4/ADC_Temp.c ****     int16 adcResult16;
1125:Generated_Source\PSoC4/ADC_Temp.c ****     int32 finalResult;
1126:Generated_Source\PSoC4/ADC_Temp.c **** 
1127:Generated_Source\PSoC4/ADC_Temp.c ****     /* Halt CPU in debug mode if channel is out of valid range */
1128:Generated_Source\PSoC4/ADC_Temp.c ****     CYASSERT(chan < ADC_Temp_allConfigs[ADC_Temp_currentConfig].numChannels);
 644              		.loc 1 1128 0
 645 0004 144B     		ldr	r3, .L59
 646 0006 1A68     		ldr	r2, [r3]
 647 0008 D300     		lsls	r3, r2, #3
 648 000a 9A1A     		subs	r2, r3, r2
 649 000c D300     		lsls	r3, r2, #3
 650 000e 134A     		ldr	r2, .L59+4
 651 0010 D318     		adds	r3, r2, r3
 652 0012 5B68     		ldr	r3, [r3, #4]
 653 0014 8342     		cmp	r3, r0
 654 0016 02D8     		bhi	.L54
 655              		.loc 1 1128 0 is_stmt 0 discriminator 1
 656 0018 0020     		movs	r0, #0
 657              	.LVL45:
 658 001a FFF7FEFF 		bl	CyHalt
 659              	.LVL46:
 660              	.L54:
1129:Generated_Source\PSoC4/ADC_Temp.c **** 
1130:Generated_Source\PSoC4/ADC_Temp.c ****     if(ADC_Temp_allConfigs[ADC_Temp_currentConfig].numChannels > chan)
 661              		.loc 1 1130 0 is_stmt 1
 662 001e 0E4B     		ldr	r3, .L59
 663 0020 1A68     		ldr	r2, [r3]
 664 0022 D300     		lsls	r3, r2, #3
 665 0024 9A1A     		subs	r2, r3, r2
 666 0026 D300     		lsls	r3, r2, #3
 667 0028 0C4A     		ldr	r2, .L59+4
 668 002a D318     		adds	r3, r2, r3
 669 002c 5B68     		ldr	r3, [r3, #4]
 670 002e 9D42     		cmp	r5, r3
 671 0030 07D2     		bcs	.L58
1131:Generated_Source\PSoC4/ADC_Temp.c ****     {
1132:Generated_Source\PSoC4/ADC_Temp.c ****         adcResult = CY_GET_REG32((reg32 *)(ADC_Temp_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) &
 672              		.loc 1 1132 0
 673 0032 AB00     		lsls	r3, r5, #2
 674 0034 0A4A     		ldr	r2, .L59+8
 675 0036 9446     		mov	ip, r2
 676 0038 6344     		add	r3, r3, ip
 677 003a 1C68     		ldr	r4, [r3]
 678 003c 2404     		lsls	r4, r4, #16
 679 003e 240C     		lsrs	r4, r4, #16
 680              	.LVL47:
 681 0040 00E0     		b	.L55
 682              	.LVL48:
 683              	.L58:
1133:Generated_Source\PSoC4/ADC_Temp.c ****             ADC_Temp_RESULT_MASK;
1134:Generated_Source\PSoC4/ADC_Temp.c ****     }
1135:Generated_Source\PSoC4/ADC_Temp.c ****     else
1136:Generated_Source\PSoC4/ADC_Temp.c ****     {
1137:Generated_Source\PSoC4/ADC_Temp.c ****         adcResult = 0u;
 684              		.loc 1 1137 0
 685 0042 0024     		movs	r4, #0
 686              	.L55:
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 34


 687              	.LVL49:
1138:Generated_Source\PSoC4/ADC_Temp.c ****     }
1139:Generated_Source\PSoC4/ADC_Temp.c ****     /* Sign extend if channel is signed format */
1140:Generated_Source\PSoC4/ADC_Temp.c ****     if(ADC_Temp_IsChannelSigned(chan) == 1)
 688              		.loc 1 1140 0
 689 0044 2800     		movs	r0, r5
 690 0046 FFF7FEFF 		bl	ADC_Temp_IsChannelSigned
 691              	.LVL50:
 692 004a 0128     		cmp	r0, #1
 693 004c 01D1     		bne	.L56
 694              	.LVL51:
1141:Generated_Source\PSoC4/ADC_Temp.c ****     {
1142:Generated_Source\PSoC4/ADC_Temp.c ****         adcResult16 = (int16) adcResult;
1143:Generated_Source\PSoC4/ADC_Temp.c ****         finalResult = (int32) adcResult16;
 695              		.loc 1 1143 0
 696 004e 20B2     		sxth	r0, r4
 697              	.LVL52:
 698 0050 00E0     		b	.L57
 699              	.LVL53:
 700              	.L56:
1144:Generated_Source\PSoC4/ADC_Temp.c ****     }
1145:Generated_Source\PSoC4/ADC_Temp.c ****     else
1146:Generated_Source\PSoC4/ADC_Temp.c ****     {
1147:Generated_Source\PSoC4/ADC_Temp.c ****         finalResult = (int32) adcResult;
 701              		.loc 1 1147 0
 702 0052 2000     		movs	r0, r4
 703              	.LVL54:
 704              	.L57:
1148:Generated_Source\PSoC4/ADC_Temp.c ****     }
1149:Generated_Source\PSoC4/ADC_Temp.c ****     return finalResult;
1150:Generated_Source\PSoC4/ADC_Temp.c **** }
 705              		.loc 1 1150 0
 706              		@ sp needed
 707              	.LVL55:
 708              	.LVL56:
 709 0054 70BD     		pop	{r4, r5, r6, pc}
 710              	.L60:
 711 0056 C046     		.align	2
 712              	.L59:
 713 0058 00000000 		.word	.LANCHOR0
 714 005c 00000000 		.word	ADC_Temp_allConfigs
 715 0060 80013A40 		.word	1077543296
 716              		.cfi_endproc
 717              	.LFE15:
 718              		.size	ADC_Temp_GetResult32, .-ADC_Temp_GetResult32
 719              		.section	.text.ADC_Temp_SetLowLimit,"ax",%progbits
 720              		.align	2
 721              		.global	ADC_Temp_SetLowLimit
 722              		.code	16
 723              		.thumb_func
 724              		.type	ADC_Temp_SetLowLimit, %function
 725              	ADC_Temp_SetLowLimit:
 726              	.LFB16:
1151:Generated_Source\PSoC4/ADC_Temp.c **** 
1152:Generated_Source\PSoC4/ADC_Temp.c **** /*******************************************************************************
1153:Generated_Source\PSoC4/ADC_Temp.c **** * Function Name: ADC_Temp_SetLowLimit
1154:Generated_Source\PSoC4/ADC_Temp.c **** ****************************************************************************//**
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 35


1155:Generated_Source\PSoC4/ADC_Temp.c **** *
1156:Generated_Source\PSoC4/ADC_Temp.c **** * \brief Sets the low limit parameter for a limit condition.
1157:Generated_Source\PSoC4/ADC_Temp.c **** *
1158:Generated_Source\PSoC4/ADC_Temp.c **** * \param lowLimit The low limit for a limit condition.
1159:Generated_Source\PSoC4/ADC_Temp.c **** *
1160:Generated_Source\PSoC4/ADC_Temp.c **** * \return None
1161:Generated_Source\PSoC4/ADC_Temp.c **** *
1162:Generated_Source\PSoC4/ADC_Temp.c **** * \sideeffect None
1163:Generated_Source\PSoC4/ADC_Temp.c **** *
1164:Generated_Source\PSoC4/ADC_Temp.c **** *******************************************************************************/
1165:Generated_Source\PSoC4/ADC_Temp.c **** void ADC_Temp_SetLowLimit(uint32 lowLimit)
1166:Generated_Source\PSoC4/ADC_Temp.c **** {
 727              		.loc 1 1166 0
 728              		.cfi_startproc
 729              		@ args = 0, pretend = 0, frame = 0
 730              		@ frame_needed = 0, uses_anonymous_args = 0
 731              		@ link register save eliminated.
 732              	.LVL57:
1167:Generated_Source\PSoC4/ADC_Temp.c ****     ADC_Temp_SAR_RANGE_THRES_REG &= ~(uint32)(ADC_Temp_SAR_RANGE_THRES_RANGE_LOW_MSK);
 733              		.loc 1 1167 0
 734 0000 054A     		ldr	r2, .L62
 735 0002 1368     		ldr	r3, [r2]
 736 0004 1B0C     		lsrs	r3, r3, #16
 737 0006 1B04     		lsls	r3, r3, #16
 738 0008 1360     		str	r3, [r2]
1168:Generated_Source\PSoC4/ADC_Temp.c ****     ADC_Temp_SAR_RANGE_THRES_REG |= lowLimit & ADC_Temp_SAR_RANGE_THRES_RANGE_LOW_MSK;
 739              		.loc 1 1168 0
 740 000a 1368     		ldr	r3, [r2]
 741 000c 0004     		lsls	r0, r0, #16
 742              	.LVL58:
 743 000e 000C     		lsrs	r0, r0, #16
 744 0010 1843     		orrs	r0, r3
 745 0012 1060     		str	r0, [r2]
1169:Generated_Source\PSoC4/ADC_Temp.c ****     return;
1170:Generated_Source\PSoC4/ADC_Temp.c **** }
 746              		.loc 1 1170 0
 747              		@ sp needed
 748 0014 7047     		bx	lr
 749              	.L63:
 750 0016 C046     		.align	2
 751              	.L62:
 752 0018 18003A40 		.word	1077542936
 753              		.cfi_endproc
 754              	.LFE16:
 755              		.size	ADC_Temp_SetLowLimit, .-ADC_Temp_SetLowLimit
 756              		.section	.text.ADC_Temp_SetHighLimit,"ax",%progbits
 757              		.align	2
 758              		.global	ADC_Temp_SetHighLimit
 759              		.code	16
 760              		.thumb_func
 761              		.type	ADC_Temp_SetHighLimit, %function
 762              	ADC_Temp_SetHighLimit:
 763              	.LFB17:
1171:Generated_Source\PSoC4/ADC_Temp.c **** 
1172:Generated_Source\PSoC4/ADC_Temp.c **** /*******************************************************************************
1173:Generated_Source\PSoC4/ADC_Temp.c **** * Function Name: ADC_Temp_SetHighLimit
1174:Generated_Source\PSoC4/ADC_Temp.c **** ****************************************************************************//**
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 36


1175:Generated_Source\PSoC4/ADC_Temp.c **** *
1176:Generated_Source\PSoC4/ADC_Temp.c **** * \brief Sets the high limit parameter for a limit condition.
1177:Generated_Source\PSoC4/ADC_Temp.c **** *
1178:Generated_Source\PSoC4/ADC_Temp.c **** * \param highLimit The high limit for a limit condition.
1179:Generated_Source\PSoC4/ADC_Temp.c **** *
1180:Generated_Source\PSoC4/ADC_Temp.c **** * \return None
1181:Generated_Source\PSoC4/ADC_Temp.c **** *
1182:Generated_Source\PSoC4/ADC_Temp.c **** * \sideeffect None
1183:Generated_Source\PSoC4/ADC_Temp.c **** *
1184:Generated_Source\PSoC4/ADC_Temp.c **** *******************************************************************************/
1185:Generated_Source\PSoC4/ADC_Temp.c **** void ADC_Temp_SetHighLimit(uint32 highLimit)
1186:Generated_Source\PSoC4/ADC_Temp.c **** {
 764              		.loc 1 1186 0
 765              		.cfi_startproc
 766              		@ args = 0, pretend = 0, frame = 0
 767              		@ frame_needed = 0, uses_anonymous_args = 0
 768              		@ link register save eliminated.
 769              	.LVL59:
1187:Generated_Source\PSoC4/ADC_Temp.c ****     ADC_Temp_SAR_RANGE_THRES_REG &= ~(uint32)(ADC_Temp_SAR_RANGE_THRES_RANGE_HIGH_MSK);
 770              		.loc 1 1187 0
 771 0000 044A     		ldr	r2, .L65
 772 0002 1368     		ldr	r3, [r2]
 773 0004 1B04     		lsls	r3, r3, #16
 774 0006 1B0C     		lsrs	r3, r3, #16
 775 0008 1360     		str	r3, [r2]
1188:Generated_Source\PSoC4/ADC_Temp.c ****     ADC_Temp_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_Temp_SAR_RANGE_THRES_RANGE_HIGH_SHFT)
 776              		.loc 1 1188 0
 777 000a 1368     		ldr	r3, [r2]
 778 000c 0004     		lsls	r0, r0, #16
 779              	.LVL60:
 780 000e 1843     		orrs	r0, r3
 781 0010 1060     		str	r0, [r2]
1189:Generated_Source\PSoC4/ADC_Temp.c ****     return;
1190:Generated_Source\PSoC4/ADC_Temp.c **** }
 782              		.loc 1 1190 0
 783              		@ sp needed
 784 0012 7047     		bx	lr
 785              	.L66:
 786              		.align	2
 787              	.L65:
 788 0014 18003A40 		.word	1077542936
 789              		.cfi_endproc
 790              	.LFE17:
 791              		.size	ADC_Temp_SetHighLimit, .-ADC_Temp_SetHighLimit
 792              		.section	.text.ADC_Temp_SetLimitMask,"ax",%progbits
 793              		.align	2
 794              		.global	ADC_Temp_SetLimitMask
 795              		.code	16
 796              		.thumb_func
 797              		.type	ADC_Temp_SetLimitMask, %function
 798              	ADC_Temp_SetLimitMask:
 799              	.LFB18:
1191:Generated_Source\PSoC4/ADC_Temp.c **** 
1192:Generated_Source\PSoC4/ADC_Temp.c **** /*******************************************************************************
1193:Generated_Source\PSoC4/ADC_Temp.c **** * Function Name: ADC_Temp_SetLimitMask
1194:Generated_Source\PSoC4/ADC_Temp.c **** ****************************************************************************//**
1195:Generated_Source\PSoC4/ADC_Temp.c **** *
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 37


1196:Generated_Source\PSoC4/ADC_Temp.c **** * \brief Sets the channel limit condition mask.
1197:Generated_Source\PSoC4/ADC_Temp.c **** *
1198:Generated_Source\PSoC4/ADC_Temp.c **** * \param limitMask Sets which channels that may cause a limit condition interrupt.
1199:Generated_Source\PSoC4/ADC_Temp.c **** * Setting bits for channels that do not exist will have no effect. For example,
1200:Generated_Source\PSoC4/ADC_Temp.c **** * if only 6  channels were enabled, setting a mask of 0x0103 would only enable
1201:Generated_Source\PSoC4/ADC_Temp.c **** * the last two channels (0 and 1).
1202:Generated_Source\PSoC4/ADC_Temp.c **** *
1203:Generated_Source\PSoC4/ADC_Temp.c **** * \return None
1204:Generated_Source\PSoC4/ADC_Temp.c **** *
1205:Generated_Source\PSoC4/ADC_Temp.c **** * \sideeffect None
1206:Generated_Source\PSoC4/ADC_Temp.c **** *
1207:Generated_Source\PSoC4/ADC_Temp.c **** *******************************************************************************/
1208:Generated_Source\PSoC4/ADC_Temp.c **** void ADC_Temp_SetLimitMask(uint32 limitMask)
1209:Generated_Source\PSoC4/ADC_Temp.c **** {
 800              		.loc 1 1209 0
 801              		.cfi_startproc
 802              		@ args = 0, pretend = 0, frame = 0
 803              		@ frame_needed = 0, uses_anonymous_args = 0
 804              		@ link register save eliminated.
 805              	.LVL61:
1210:Generated_Source\PSoC4/ADC_Temp.c ****     uint32 chanCount = ADC_Temp_allConfigs[ADC_Temp_currentConfig].numChannels;
 806              		.loc 1 1210 0
 807 0000 074B     		ldr	r3, .L68
 808 0002 1A68     		ldr	r2, [r3]
 809 0004 D300     		lsls	r3, r2, #3
 810 0006 9A1A     		subs	r2, r3, r2
 811 0008 D300     		lsls	r3, r2, #3
 812 000a 064A     		ldr	r2, .L68+4
 813 000c D318     		adds	r3, r2, r3
 814 000e 5A68     		ldr	r2, [r3, #4]
 815              	.LVL62:
1211:Generated_Source\PSoC4/ADC_Temp.c ****     limitMask &= (uint32)((uint32)(1ul << chanCount) - 1ul);
 816              		.loc 1 1211 0
 817 0010 0123     		movs	r3, #1
 818 0012 9340     		lsls	r3, r3, r2
 819 0014 013B     		subs	r3, r3, #1
 820 0016 1840     		ands	r0, r3
 821              	.LVL63:
1212:Generated_Source\PSoC4/ADC_Temp.c ****     ADC_Temp_SAR_RANGE_INTR_MASK_REG = limitMask;
 822              		.loc 1 1212 0
 823 0018 034B     		ldr	r3, .L68+8
 824 001a 1860     		str	r0, [r3]
1213:Generated_Source\PSoC4/ADC_Temp.c ****     return;
1214:Generated_Source\PSoC4/ADC_Temp.c **** }
 825              		.loc 1 1214 0
 826              		@ sp needed
 827 001c 7047     		bx	lr
 828              	.L69:
 829 001e C046     		.align	2
 830              	.L68:
 831 0020 00000000 		.word	.LANCHOR0
 832 0024 00000000 		.word	ADC_Temp_allConfigs
 833 0028 38023A40 		.word	1077543480
 834              		.cfi_endproc
 835              	.LFE18:
 836              		.size	ADC_Temp_SetLimitMask, .-ADC_Temp_SetLimitMask
 837              		.section	.text.ADC_Temp_SetSatMask,"ax",%progbits
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 38


 838              		.align	2
 839              		.global	ADC_Temp_SetSatMask
 840              		.code	16
 841              		.thumb_func
 842              		.type	ADC_Temp_SetSatMask, %function
 843              	ADC_Temp_SetSatMask:
 844              	.LFB19:
1215:Generated_Source\PSoC4/ADC_Temp.c **** 
1216:Generated_Source\PSoC4/ADC_Temp.c **** /*******************************************************************************
1217:Generated_Source\PSoC4/ADC_Temp.c **** * Function Name: ADC_Temp_SetSatMask
1218:Generated_Source\PSoC4/ADC_Temp.c **** ****************************************************************************//**
1219:Generated_Source\PSoC4/ADC_Temp.c **** *
1220:Generated_Source\PSoC4/ADC_Temp.c **** * \brief Sets the channel saturation event mask.
1221:Generated_Source\PSoC4/ADC_Temp.c **** *
1222:Generated_Source\PSoC4/ADC_Temp.c **** * \param satMask Sets which channels that may cause a saturation event interrupt.
1223:Generated_Source\PSoC4/ADC_Temp.c **** * Setting bits for channels that do not exist will have no effect. For example,
1224:Generated_Source\PSoC4/ADC_Temp.c **** * if only 8 channels were enabled, setting a mask of 0x01C0 would only enable two
1225:Generated_Source\PSoC4/ADC_Temp.c **** * channels (6 and 7).
1226:Generated_Source\PSoC4/ADC_Temp.c **** *
1227:Generated_Source\PSoC4/ADC_Temp.c **** * \return None
1228:Generated_Source\PSoC4/ADC_Temp.c **** *
1229:Generated_Source\PSoC4/ADC_Temp.c **** * \sideeffect None
1230:Generated_Source\PSoC4/ADC_Temp.c **** *
1231:Generated_Source\PSoC4/ADC_Temp.c **** *******************************************************************************/
1232:Generated_Source\PSoC4/ADC_Temp.c **** void ADC_Temp_SetSatMask(uint32 satMask)
1233:Generated_Source\PSoC4/ADC_Temp.c **** {
 845              		.loc 1 1233 0
 846              		.cfi_startproc
 847              		@ args = 0, pretend = 0, frame = 0
 848              		@ frame_needed = 0, uses_anonymous_args = 0
 849              		@ link register save eliminated.
 850              	.LVL64:
1234:Generated_Source\PSoC4/ADC_Temp.c ****     uint32 chanCount = ADC_Temp_allConfigs[ADC_Temp_currentConfig].numChannels;
 851              		.loc 1 1234 0
 852 0000 074B     		ldr	r3, .L71
 853 0002 1A68     		ldr	r2, [r3]
 854 0004 D300     		lsls	r3, r2, #3
 855 0006 9A1A     		subs	r2, r3, r2
 856 0008 D300     		lsls	r3, r2, #3
 857 000a 064A     		ldr	r2, .L71+4
 858 000c D318     		adds	r3, r2, r3
 859 000e 5A68     		ldr	r2, [r3, #4]
 860              	.LVL65:
1235:Generated_Source\PSoC4/ADC_Temp.c ****     satMask &= (uint32)((uint32)(1ul << chanCount) - 1ul);
 861              		.loc 1 1235 0
 862 0010 0123     		movs	r3, #1
 863 0012 9340     		lsls	r3, r3, r2
 864 0014 013B     		subs	r3, r3, #1
 865 0016 1840     		ands	r0, r3
 866              	.LVL66:
1236:Generated_Source\PSoC4/ADC_Temp.c ****     ADC_Temp_SAR_SATURATE_INTR_MASK_REG = satMask;
 867              		.loc 1 1236 0
 868 0018 034B     		ldr	r3, .L71+8
 869 001a 1860     		str	r0, [r3]
1237:Generated_Source\PSoC4/ADC_Temp.c ****     return;
1238:Generated_Source\PSoC4/ADC_Temp.c **** }
 870              		.loc 1 1238 0
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 39


 871              		@ sp needed
 872 001c 7047     		bx	lr
 873              	.L72:
 874 001e C046     		.align	2
 875              	.L71:
 876 0020 00000000 		.word	.LANCHOR0
 877 0024 00000000 		.word	ADC_Temp_allConfigs
 878 0028 28023A40 		.word	1077543464
 879              		.cfi_endproc
 880              	.LFE19:
 881              		.size	ADC_Temp_SetSatMask, .-ADC_Temp_SetSatMask
 882              		.section	.text.ADC_Temp_SetOffset,"ax",%progbits
 883              		.align	2
 884              		.global	ADC_Temp_SetOffset
 885              		.code	16
 886              		.thumb_func
 887              		.type	ADC_Temp_SetOffset, %function
 888              	ADC_Temp_SetOffset:
 889              	.LFB20:
1239:Generated_Source\PSoC4/ADC_Temp.c **** 
1240:Generated_Source\PSoC4/ADC_Temp.c **** /*******************************************************************************
1241:Generated_Source\PSoC4/ADC_Temp.c **** * Function Name: ADC_Temp_SetOffset
1242:Generated_Source\PSoC4/ADC_Temp.c **** ****************************************************************************//**
1243:Generated_Source\PSoC4/ADC_Temp.c **** *
1244:Generated_Source\PSoC4/ADC_Temp.c **** * \brief Sets the ADC offset that is used by the functions ADC_Temp_CountsTo_uVolts,
1245:Generated_Source\PSoC4/ADC_Temp.c **** * ADC_Temp_CountsTo_mVolts, and ADC_Temp_CountsTo_Volts.
1246:Generated_Source\PSoC4/ADC_Temp.c **** *
1247:Generated_Source\PSoC4/ADC_Temp.c **** * Offset is applied to counts before unit scaling and gain.  All CountsTo_[mV, uV, V]olts()
1248:Generated_Source\PSoC4/ADC_Temp.c **** * functions use the following equation:
1249:Generated_Source\PSoC4/ADC_Temp.c **** *     V = (Counts/AvgDivider - Offset)*TEN_VOLT/Gain
1250:Generated_Source\PSoC4/ADC_Temp.c **** * See CountsTo_Volts() for more about this formula.
1251:Generated_Source\PSoC4/ADC_Temp.c **** *
1252:Generated_Source\PSoC4/ADC_Temp.c **** * To set channel 0's offset based on known V_offset_mV, use:
1253:Generated_Source\PSoC4/ADC_Temp.c **** *     ADC_Temp_SetOffset(0uL, -1 * V_offset_mV * (1uL << (Resolution - 1)) / V_ref_mV);
1254:Generated_Source\PSoC4/ADC_Temp.c **** *
1255:Generated_Source\PSoC4/ADC_Temp.c **** * \param chan ADC_Temp channel number.
1256:Generated_Source\PSoC4/ADC_Temp.c **** *
1257:Generated_Source\PSoC4/ADC_Temp.c **** * \param offset This value is a measured value when the inputs are shorted or
1258:Generated_Source\PSoC4/ADC_Temp.c **** * connected to the same input voltage.
1259:Generated_Source\PSoC4/ADC_Temp.c **** *
1260:Generated_Source\PSoC4/ADC_Temp.c **** * \return None
1261:Generated_Source\PSoC4/ADC_Temp.c **** *
1262:Generated_Source\PSoC4/ADC_Temp.c **** * \sideeffect None
1263:Generated_Source\PSoC4/ADC_Temp.c **** *
1264:Generated_Source\PSoC4/ADC_Temp.c **** *******************************************************************************/
1265:Generated_Source\PSoC4/ADC_Temp.c **** void ADC_Temp_SetOffset(uint32 chan, int16 offset)
1266:Generated_Source\PSoC4/ADC_Temp.c **** {
 890              		.loc 1 1266 0
 891              		.cfi_startproc
 892              		@ args = 0, pretend = 0, frame = 0
 893              		@ frame_needed = 0, uses_anonymous_args = 0
 894              	.LVL67:
 895 0000 70B5     		push	{r4, r5, r6, lr}
 896              		.cfi_def_cfa_offset 16
 897              		.cfi_offset 4, -16
 898              		.cfi_offset 5, -12
 899              		.cfi_offset 6, -8
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 40


 900              		.cfi_offset 14, -4
 901 0002 0500     		movs	r5, r0
 902 0004 0C00     		movs	r4, r1
1267:Generated_Source\PSoC4/ADC_Temp.c ****     /* Halt CPU in debug mode if channel is out of valid range */
1268:Generated_Source\PSoC4/ADC_Temp.c ****     CYASSERT(chan < ADC_Temp_allConfigs[ADC_Temp_currentConfig].numChannels);
 903              		.loc 1 1268 0
 904 0006 0C4B     		ldr	r3, .L75
 905 0008 1A68     		ldr	r2, [r3]
 906 000a D300     		lsls	r3, r2, #3
 907 000c 9A1A     		subs	r2, r3, r2
 908 000e D300     		lsls	r3, r2, #3
 909 0010 0A4A     		ldr	r2, .L75+4
 910 0012 D318     		adds	r3, r2, r3
 911 0014 5B68     		ldr	r3, [r3, #4]
 912 0016 8342     		cmp	r3, r0
 913 0018 02D8     		bhi	.L74
 914              		.loc 1 1268 0 is_stmt 0 discriminator 1
 915 001a 0020     		movs	r0, #0
 916              	.LVL68:
 917 001c FFF7FEFF 		bl	CyHalt
 918              	.LVL69:
 919              	.L74:
1269:Generated_Source\PSoC4/ADC_Temp.c **** 
1270:Generated_Source\PSoC4/ADC_Temp.c ****     ADC_Temp_offset[ADC_Temp_allConfigs[ADC_Temp_currentConfig].channelBase + chan] = offset;
 920              		.loc 1 1270 0 is_stmt 1
 921 0020 054B     		ldr	r3, .L75
 922 0022 1A68     		ldr	r2, [r3]
 923 0024 D300     		lsls	r3, r2, #3
 924 0026 9B1A     		subs	r3, r3, r2
 925 0028 DA00     		lsls	r2, r3, #3
 926 002a 044B     		ldr	r3, .L75+4
 927 002c D058     		ldr	r0, [r2, r3]
 928 002e 2818     		adds	r0, r5, r0
 929 0030 4000     		lsls	r0, r0, #1
 930 0032 034B     		ldr	r3, .L75+8
 931 0034 C452     		strh	r4, [r0, r3]
1271:Generated_Source\PSoC4/ADC_Temp.c ****     return;
1272:Generated_Source\PSoC4/ADC_Temp.c **** }
 932              		.loc 1 1272 0
 933              		@ sp needed
 934              	.LVL70:
 935 0036 70BD     		pop	{r4, r5, r6, pc}
 936              	.L76:
 937              		.align	2
 938              	.L75:
 939 0038 00000000 		.word	.LANCHOR0
 940 003c 00000000 		.word	ADC_Temp_allConfigs
 941 0040 00000000 		.word	ADC_Temp_offset
 942              		.cfi_endproc
 943              	.LFE20:
 944              		.size	ADC_Temp_SetOffset, .-ADC_Temp_SetOffset
 945              		.section	.text.ADC_Temp_SetGain,"ax",%progbits
 946              		.align	2
 947              		.global	ADC_Temp_SetGain
 948              		.code	16
 949              		.thumb_func
 950              		.type	ADC_Temp_SetGain, %function
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 41


 951              	ADC_Temp_SetGain:
 952              	.LFB21:
1273:Generated_Source\PSoC4/ADC_Temp.c **** 
1274:Generated_Source\PSoC4/ADC_Temp.c **** /*******************************************************************************
1275:Generated_Source\PSoC4/ADC_Temp.c **** * Function Name: ADC_Temp_SetGain
1276:Generated_Source\PSoC4/ADC_Temp.c **** ****************************************************************************//**
1277:Generated_Source\PSoC4/ADC_Temp.c **** *
1278:Generated_Source\PSoC4/ADC_Temp.c **** * \brief Sets the ADC_Temp gain in counts per 10 volt for the voltage
1279:Generated_Source\PSoC4/ADC_Temp.c **** * conversion functions. This value is set by default by the reference and
1280:Generated_Source\PSoC4/ADC_Temp.c **** * input range settings. Gain is applied after offset and unit scaling.  All
1281:Generated_Source\PSoC4/ADC_Temp.c **** * CountsTo_[mV, uV, V]olts() functions use the following equation:
1282:Generated_Source\PSoC4/ADC_Temp.c **** *     V = (Counts/AvgDivider - Offset)*TEN_VOLT/Gain
1283:Generated_Source\PSoC4/ADC_Temp.c **** * See CountsTo_Volts() for more about this formula.
1284:Generated_Source\PSoC4/ADC_Temp.c **** *
1285:Generated_Source\PSoC4/ADC_Temp.c **** * To set channel 0's gain based on known V_ref_mV, use:
1286:Generated_Source\PSoC4/ADC_Temp.c **** *     ADC_Temp_SetGain(0uL, 10000 * (1uL << (Resolution - 1)) / V_ref_mV);
1287:Generated_Source\PSoC4/ADC_Temp.c **** *
1288:Generated_Source\PSoC4/ADC_Temp.c **** * \param chan ADC_Temp channel number.
1289:Generated_Source\PSoC4/ADC_Temp.c **** *
1290:Generated_Source\PSoC4/ADC_Temp.c **** * \param adcGain ADC_Temp gain in counts per 10 volt.
1291:Generated_Source\PSoC4/ADC_Temp.c **** *
1292:Generated_Source\PSoC4/ADC_Temp.c **** * \return None
1293:Generated_Source\PSoC4/ADC_Temp.c **** *
1294:Generated_Source\PSoC4/ADC_Temp.c **** * \sideeffect None
1295:Generated_Source\PSoC4/ADC_Temp.c **** *
1296:Generated_Source\PSoC4/ADC_Temp.c **** *******************************************************************************/
1297:Generated_Source\PSoC4/ADC_Temp.c **** void ADC_Temp_SetGain(uint32 chan, int32 adcGain)
1298:Generated_Source\PSoC4/ADC_Temp.c **** {
 953              		.loc 1 1298 0
 954              		.cfi_startproc
 955              		@ args = 0, pretend = 0, frame = 0
 956              		@ frame_needed = 0, uses_anonymous_args = 0
 957              	.LVL71:
 958 0000 70B5     		push	{r4, r5, r6, lr}
 959              		.cfi_def_cfa_offset 16
 960              		.cfi_offset 4, -16
 961              		.cfi_offset 5, -12
 962              		.cfi_offset 6, -8
 963              		.cfi_offset 14, -4
 964 0002 0500     		movs	r5, r0
 965 0004 0C00     		movs	r4, r1
1299:Generated_Source\PSoC4/ADC_Temp.c ****     /* Halt CPU in debug mode if channel is out of valid range */
1300:Generated_Source\PSoC4/ADC_Temp.c ****     CYASSERT(chan < ADC_Temp_allConfigs[ADC_Temp_currentConfig].numChannels);
 966              		.loc 1 1300 0
 967 0006 0C4B     		ldr	r3, .L79
 968 0008 1A68     		ldr	r2, [r3]
 969 000a D300     		lsls	r3, r2, #3
 970 000c 9A1A     		subs	r2, r3, r2
 971 000e D300     		lsls	r3, r2, #3
 972 0010 0A4A     		ldr	r2, .L79+4
 973 0012 D318     		adds	r3, r2, r3
 974 0014 5B68     		ldr	r3, [r3, #4]
 975 0016 8342     		cmp	r3, r0
 976 0018 02D8     		bhi	.L78
 977              		.loc 1 1300 0 is_stmt 0 discriminator 1
 978 001a 0020     		movs	r0, #0
 979              	.LVL72:
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 42


 980 001c FFF7FEFF 		bl	CyHalt
 981              	.LVL73:
 982              	.L78:
1301:Generated_Source\PSoC4/ADC_Temp.c **** 
1302:Generated_Source\PSoC4/ADC_Temp.c ****     ADC_Temp_countsPer10Volt[ADC_Temp_allConfigs[ADC_Temp_currentConfig].channelBase + chan]
 983              		.loc 1 1302 0 is_stmt 1
 984 0020 054B     		ldr	r3, .L79
 985 0022 1A68     		ldr	r2, [r3]
 986 0024 D300     		lsls	r3, r2, #3
 987 0026 9B1A     		subs	r3, r3, r2
 988 0028 DA00     		lsls	r2, r3, #3
 989 002a 044B     		ldr	r3, .L79+4
 990 002c D058     		ldr	r0, [r2, r3]
 991 002e 2818     		adds	r0, r5, r0
1303:Generated_Source\PSoC4/ADC_Temp.c ****     = adcGain;
 992              		.loc 1 1303 0
 993 0030 8000     		lsls	r0, r0, #2
 994 0032 034B     		ldr	r3, .L79+8
 995 0034 C450     		str	r4, [r0, r3]
1304:Generated_Source\PSoC4/ADC_Temp.c ****     return;
1305:Generated_Source\PSoC4/ADC_Temp.c **** }
 996              		.loc 1 1305 0
 997              		@ sp needed
 998              	.LVL74:
 999              	.LVL75:
 1000 0036 70BD     		pop	{r4, r5, r6, pc}
 1001              	.L80:
 1002              		.align	2
 1003              	.L79:
 1004 0038 00000000 		.word	.LANCHOR0
 1005 003c 00000000 		.word	ADC_Temp_allConfigs
 1006 0040 00000000 		.word	ADC_Temp_countsPer10Volt
 1007              		.cfi_endproc
 1008              	.LFE21:
 1009              		.size	ADC_Temp_SetGain, .-ADC_Temp_SetGain
 1010              		.section	.text.ADC_Temp_RawCounts2Counts,"ax",%progbits
 1011              		.align	2
 1012              		.global	ADC_Temp_RawCounts2Counts
 1013              		.code	16
 1014              		.thumb_func
 1015              		.type	ADC_Temp_RawCounts2Counts, %function
 1016              	ADC_Temp_RawCounts2Counts:
 1017              	.LFB22:
1306:Generated_Source\PSoC4/ADC_Temp.c **** /*******************************************************************************
1307:Generated_Source\PSoC4/ADC_Temp.c **** * Function Name: ADC_Temp_RawCounts2Counts
1308:Generated_Source\PSoC4/ADC_Temp.c **** ****************************************************************************//**
1309:Generated_Source\PSoC4/ADC_Temp.c **** *
1310:Generated_Source\PSoC4/ADC_Temp.c **** * \brief Converts the output of the SAR to an idealized count value.
1311:Generated_Source\PSoC4/ADC_Temp.c **** *
1312:Generated_Source\PSoC4/ADC_Temp.c **** * Divides by averaging amount, if needed, and subtracts offset.
1313:Generated_Source\PSoC4/ADC_Temp.c **** *
1314:Generated_Source\PSoC4/ADC_Temp.c **** * \param chan ADC_Temp channel number.
1315:Generated_Source\PSoC4/ADC_Temp.c **** *
1316:Generated_Source\PSoC4/ADC_Temp.c **** * \param adcCounts Result from the ADC_Temp conversion.
1317:Generated_Source\PSoC4/ADC_Temp.c **** *
1318:Generated_Source\PSoC4/ADC_Temp.c **** * \return Averaged and offset counts.
1319:Generated_Source\PSoC4/ADC_Temp.c **** *
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 43


1320:Generated_Source\PSoC4/ADC_Temp.c **** * \sideeffect None
1321:Generated_Source\PSoC4/ADC_Temp.c **** *******************************************************************************/
1322:Generated_Source\PSoC4/ADC_Temp.c **** int16 ADC_Temp_RawCounts2Counts(uint32 chan, int16 adcCounts)
1323:Generated_Source\PSoC4/ADC_Temp.c **** {
 1018              		.loc 1 1323 0
 1019              		.cfi_startproc
 1020              		@ args = 0, pretend = 0, frame = 0
 1021              		@ frame_needed = 0, uses_anonymous_args = 0
 1022              	.LVL76:
 1023 0000 70B5     		push	{r4, r5, r6, lr}
 1024              		.cfi_def_cfa_offset 16
 1025              		.cfi_offset 4, -16
 1026              		.cfi_offset 5, -12
 1027              		.cfi_offset 6, -8
 1028              		.cfi_offset 14, -4
 1029 0002 0C00     		movs	r4, r1
1324:Generated_Source\PSoC4/ADC_Temp.c ****     uint32 temp;
1325:Generated_Source\PSoC4/ADC_Temp.c ****     uint32 averageAdcSamplesDiv;
1326:Generated_Source\PSoC4/ADC_Temp.c ****     uint32 rawChannel;
1327:Generated_Source\PSoC4/ADC_Temp.c ****     rawChannel = ADC_Temp_allConfigs[ADC_Temp_currentConfig].channelBase + chan;
 1030              		.loc 1 1327 0
 1031 0004 0A4B     		ldr	r3, .L83
 1032 0006 1968     		ldr	r1, [r3]
 1033              	.LVL77:
 1034 0008 0A4E     		ldr	r6, .L83+4
 1035 000a CB00     		lsls	r3, r1, #3
 1036 000c 5D1A     		subs	r5, r3, r1
 1037 000e EA00     		lsls	r2, r5, #3
 1038 0010 9559     		ldr	r5, [r2, r6]
 1039 0012 2D18     		adds	r5, r5, r0
 1040              	.LVL78:
1328:Generated_Source\PSoC4/ADC_Temp.c **** 
1329:Generated_Source\PSoC4/ADC_Temp.c ****     /* Halt CPU in debug mode if channel is out of valid range */
1330:Generated_Source\PSoC4/ADC_Temp.c ****     CYASSERT(chan < ADC_Temp_allConfigs[ADC_Temp_currentConfig].numChannels);
 1041              		.loc 1 1330 0
 1042 0014 B218     		adds	r2, r6, r2
 1043 0016 5368     		ldr	r3, [r2, #4]
 1044 0018 9842     		cmp	r0, r3
 1045 001a 02D3     		bcc	.L82
 1046              		.loc 1 1330 0 is_stmt 0 discriminator 1
 1047 001c 0020     		movs	r0, #0
 1048              	.LVL79:
 1049 001e FFF7FEFF 		bl	CyHalt
 1050              	.LVL80:
 1051              	.L82:
1331:Generated_Source\PSoC4/ADC_Temp.c **** 
1332:Generated_Source\PSoC4/ADC_Temp.c ****     /* Divide the adcCount when accumulate averaging mode selected */
1333:Generated_Source\PSoC4/ADC_Temp.c ****     /* If Average mode != fixed */
1334:Generated_Source\PSoC4/ADC_Temp.c ****     if((ADC_Temp_allConfigs[ADC_Temp_currentConfig].sampleCtrl
1335:Generated_Source\PSoC4/ADC_Temp.c ****         & ADC_Temp_SAR_SAMPLE_CTRL_AVG_SHIFT_MSK)
1336:Generated_Source\PSoC4/ADC_Temp.c ****         != ADC_Temp_SAR_SAMPLE_CTRL_AVG_SHIFT_MSK)
1337:Generated_Source\PSoC4/ADC_Temp.c ****     {
1338:Generated_Source\PSoC4/ADC_Temp.c ****         /* If Channel uses averaging */
1339:Generated_Source\PSoC4/ADC_Temp.c ****         if((ADC_Temp_channelsConfig[rawChannel] & ADC_Temp_SAR_CHAN_CONFIG_AVG_EN_MSK) != 0u)
1340:Generated_Source\PSoC4/ADC_Temp.c ****         {
1341:Generated_Source\PSoC4/ADC_Temp.c ****             /* Divide by 2^(AVG_CNT + 1) */
1342:Generated_Source\PSoC4/ADC_Temp.c ****             averageAdcSamplesDiv = ((ADC_Temp_allConfigs[ADC_Temp_currentConfig].sampleCtrl
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 44


1343:Generated_Source\PSoC4/ADC_Temp.c ****                 & ADC_Temp_SAR_SAMPLE_CTRL_AVG_CNT_MSK)
1344:Generated_Source\PSoC4/ADC_Temp.c ****                 >> ADC_Temp_SAR_SAMPLE_CTRL_AVG_CNT_SHFT);
1345:Generated_Source\PSoC4/ADC_Temp.c ****             averageAdcSamplesDiv = (1uL << (averageAdcSamplesDiv + 1uL));
1346:Generated_Source\PSoC4/ADC_Temp.c ****                         /* When it's "Sequential, Sum", divider limit is 16 */
1347:Generated_Source\PSoC4/ADC_Temp.c ****             /* If Mode is ACCUNDUMP */
1348:Generated_Source\PSoC4/ADC_Temp.c ****             if((ADC_Temp_allConfigs[ADC_Temp_currentConfig].sampleCtrl
1349:Generated_Source\PSoC4/ADC_Temp.c ****                 & ADC_Temp_SAR_SAMPLE_CTRL_AVG_MODE_MSK)
1350:Generated_Source\PSoC4/ADC_Temp.c ****                 != ADC_Temp_SAR_SAMPLE_CTRL_AVG_MODE_MSK)
1351:Generated_Source\PSoC4/ADC_Temp.c ****             {
1352:Generated_Source\PSoC4/ADC_Temp.c ****                 if (averageAdcSamplesDiv > 16uL)
1353:Generated_Source\PSoC4/ADC_Temp.c ****                 {
1354:Generated_Source\PSoC4/ADC_Temp.c ****                     averageAdcSamplesDiv = 16uL;
1355:Generated_Source\PSoC4/ADC_Temp.c ****                 }
1356:Generated_Source\PSoC4/ADC_Temp.c ****             }
1357:Generated_Source\PSoC4/ADC_Temp.c ****             /* If unsigned format, prevent sign extension */
1358:Generated_Source\PSoC4/ADC_Temp.c ****             if(0 == ADC_Temp_IsChannelSigned(chan))
1359:Generated_Source\PSoC4/ADC_Temp.c ****             {
1360:Generated_Source\PSoC4/ADC_Temp.c ****                 temp = ((uint16) adcCounts / averageAdcSamplesDiv);
1361:Generated_Source\PSoC4/ADC_Temp.c ****                 adcCounts = (int16) temp;
1362:Generated_Source\PSoC4/ADC_Temp.c ****             }
1363:Generated_Source\PSoC4/ADC_Temp.c ****             else
1364:Generated_Source\PSoC4/ADC_Temp.c ****             {
1365:Generated_Source\PSoC4/ADC_Temp.c ****                 adcCounts /= (int16) averageAdcSamplesDiv;
1366:Generated_Source\PSoC4/ADC_Temp.c ****             }
1367:Generated_Source\PSoC4/ADC_Temp.c ****         }
1368:Generated_Source\PSoC4/ADC_Temp.c ****     }
1369:Generated_Source\PSoC4/ADC_Temp.c ****     /* Subtract ADC offset */
1370:Generated_Source\PSoC4/ADC_Temp.c ****     adcCounts -= ADC_Temp_offset[rawChannel];
 1052              		.loc 1 1370 0 is_stmt 1
 1053 0022 6D00     		lsls	r5, r5, #1
 1054              	.LVL81:
 1055 0024 044B     		ldr	r3, .L83+8
 1056 0026 E85A     		ldrh	r0, [r5, r3]
 1057 0028 00B2     		sxth	r0, r0
 1058 002a 201A     		subs	r0, r4, r0
 1059 002c 00B2     		sxth	r0, r0
 1060              	.LVL82:
1371:Generated_Source\PSoC4/ADC_Temp.c ****     return adcCounts;
1372:Generated_Source\PSoC4/ADC_Temp.c **** }
 1061              		.loc 1 1372 0
 1062              		@ sp needed
 1063 002e 70BD     		pop	{r4, r5, r6, pc}
 1064              	.L84:
 1065              		.align	2
 1066              	.L83:
 1067 0030 00000000 		.word	.LANCHOR0
 1068 0034 00000000 		.word	ADC_Temp_allConfigs
 1069 0038 00000000 		.word	ADC_Temp_offset
 1070              		.cfi_endproc
 1071              	.LFE22:
 1072              		.size	ADC_Temp_RawCounts2Counts, .-ADC_Temp_RawCounts2Counts
 1073              		.global	__aeabi_i2f
 1074              		.global	__aeabi_fmul
 1075              		.global	__aeabi_fdiv
 1076              		.section	.text.ADC_Temp_CountsTo_Volts,"ax",%progbits
 1077              		.align	2
 1078              		.global	ADC_Temp_CountsTo_Volts
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 45


 1079              		.code	16
 1080              		.thumb_func
 1081              		.type	ADC_Temp_CountsTo_Volts, %function
 1082              	ADC_Temp_CountsTo_Volts:
 1083              	.LFB23:
1373:Generated_Source\PSoC4/ADC_Temp.c **** 
1374:Generated_Source\PSoC4/ADC_Temp.c **** /*******************************************************************************
1375:Generated_Source\PSoC4/ADC_Temp.c **** * Function Name: ADC_Temp_CountsTo_Volts
1376:Generated_Source\PSoC4/ADC_Temp.c **** ****************************************************************************//**
1377:Generated_Source\PSoC4/ADC_Temp.c **** *
1378:Generated_Source\PSoC4/ADC_Temp.c **** * \brief Converts the ADC output to Volts as a float32. For example, if the ADC
1379:Generated_Source\PSoC4/ADC_Temp.c **** * measured 0.534 volts, the return value would be 0.534.
1380:Generated_Source\PSoC4/ADC_Temp.c **** * The calculation of voltage depends on the contents of ADC_Temp_offset[],
1381:Generated_Source\PSoC4/ADC_Temp.c **** * ADC_Temp_countsPer10Volt[], and other parameters.  The equation used is:
1382:Generated_Source\PSoC4/ADC_Temp.c **** *
1383:Generated_Source\PSoC4/ADC_Temp.c **** *     V = (Counts/AvgDivider - Offset)*TEN_VOLT/Gain
1384:Generated_Source\PSoC4/ADC_Temp.c **** * -Counts = Raw Counts from SAR register
1385:Generated_Source\PSoC4/ADC_Temp.c **** * -AvgDivider = divider based on averaging mode
1386:Generated_Source\PSoC4/ADC_Temp.c **** *     -Sequential, Sum: AvgDivider = number averaged
1387:Generated_Source\PSoC4/ADC_Temp.c **** *         Note: The divider should be a maximum of 16. If using more averages,
1388:Generated_Source\PSoC4/ADC_Temp.c **** *         pre-scale Counts by (number averaged / 16)
1389:Generated_Source\PSoC4/ADC_Temp.c **** *     -Interleaved, Sum: AvgDivider = number averaged
1390:Generated_Source\PSoC4/ADC_Temp.c **** *     -Sequential, Fixed: AvgDivider = 1
1391:Generated_Source\PSoC4/ADC_Temp.c **** * -Offset = ADC_Temp_offset[]
1392:Generated_Source\PSoC4/ADC_Temp.c **** * -TEN_VOLT = 10V constant and unit scalar.
1393:Generated_Source\PSoC4/ADC_Temp.c **** * -Gain = ADC_Temp_countsPer10Volt[]
1394:Generated_Source\PSoC4/ADC_Temp.c **** *
1395:Generated_Source\PSoC4/ADC_Temp.c **** * When the Vref is based on Vdda, the value used for Vdda is set for the project
1396:Generated_Source\PSoC4/ADC_Temp.c **** * in the System tab of the DWR.
1397:Generated_Source\PSoC4/ADC_Temp.c **** *
1398:Generated_Source\PSoC4/ADC_Temp.c **** * \param chan ADC_Temp channel number.
1399:Generated_Source\PSoC4/ADC_Temp.c **** *
1400:Generated_Source\PSoC4/ADC_Temp.c **** * \param adcCounts Result from the ADC_Temp conversion.
1401:Generated_Source\PSoC4/ADC_Temp.c **** *
1402:Generated_Source\PSoC4/ADC_Temp.c **** * \return Result in Volts.
1403:Generated_Source\PSoC4/ADC_Temp.c **** *
1404:Generated_Source\PSoC4/ADC_Temp.c **** * \sideeffect None
1405:Generated_Source\PSoC4/ADC_Temp.c **** *
1406:Generated_Source\PSoC4/ADC_Temp.c **** *******************************************************************************/
1407:Generated_Source\PSoC4/ADC_Temp.c **** float32 ADC_Temp_CountsTo_Volts(uint32 chan, int16 adcCounts)
1408:Generated_Source\PSoC4/ADC_Temp.c **** {
 1084              		.loc 1 1408 0
 1085              		.cfi_startproc
 1086              		@ args = 0, pretend = 0, frame = 0
 1087              		@ frame_needed = 0, uses_anonymous_args = 0
 1088              	.LVL83:
 1089 0000 70B5     		push	{r4, r5, r6, lr}
 1090              		.cfi_def_cfa_offset 16
 1091              		.cfi_offset 4, -16
 1092              		.cfi_offset 5, -12
 1093              		.cfi_offset 6, -8
 1094              		.cfi_offset 14, -4
 1095              	.LVL84:
1409:Generated_Source\PSoC4/ADC_Temp.c ****     float32 result_Volts = 0.0f;
1410:Generated_Source\PSoC4/ADC_Temp.c ****     uint32 rawChannel;
1411:Generated_Source\PSoC4/ADC_Temp.c ****     rawChannel = ADC_Temp_allConfigs[ADC_Temp_currentConfig].channelBase + chan;
 1096              		.loc 1 1411 0
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 46


 1097 0002 104B     		ldr	r3, .L88
 1098 0004 1D68     		ldr	r5, [r3]
 1099 0006 104E     		ldr	r6, .L88+4
 1100 0008 EB00     		lsls	r3, r5, #3
 1101 000a 5C1B     		subs	r4, r3, r5
 1102 000c E200     		lsls	r2, r4, #3
 1103 000e 9459     		ldr	r4, [r2, r6]
 1104 0010 2418     		adds	r4, r4, r0
 1105              	.LVL85:
1412:Generated_Source\PSoC4/ADC_Temp.c **** 
1413:Generated_Source\PSoC4/ADC_Temp.c ****     if((ADC_Temp_allConfigs[ADC_Temp_currentConfig].sampleCtrl
 1106              		.loc 1 1413 0
 1107 0012 B218     		adds	r2, r6, r2
 1108 0014 D368     		ldr	r3, [r2, #12]
 1109 0016 9B07     		lsls	r3, r3, #30
 1110 0018 11D4     		bmi	.L87
1414:Generated_Source\PSoC4/ADC_Temp.c ****         & ADC_Temp_SAR_SAMPLE_CTRL_LEFT_ALIGN_MSK)
1415:Generated_Source\PSoC4/ADC_Temp.c ****         != ADC_Temp_SAR_SAMPLE_CTRL_LEFT_ALIGN_MSK)
1416:Generated_Source\PSoC4/ADC_Temp.c ****     {
1417:Generated_Source\PSoC4/ADC_Temp.c ****         adcCounts = ADC_Temp_RawCounts2Counts(chan, adcCounts);
 1111              		.loc 1 1417 0
 1112 001a FFF7FEFF 		bl	ADC_Temp_RawCounts2Counts
 1113              	.LVL86:
1418:Generated_Source\PSoC4/ADC_Temp.c **** 
1419:Generated_Source\PSoC4/ADC_Temp.c ****         result_Volts = ((float32)adcCounts * ADC_Temp_10V_COUNTS)
 1114              		.loc 1 1419 0
 1115 001e FFF7FEFF 		bl	__aeabi_i2f
 1116              	.LVL87:
 1117 0022 0A49     		ldr	r1, .L88+8
 1118 0024 FFF7FEFF 		bl	__aeabi_fmul
 1119              	.LVL88:
 1120 0028 051C     		adds	r5, r0, #0
1420:Generated_Source\PSoC4/ADC_Temp.c ****             / (float32)ADC_Temp_countsPer10Volt[rawChannel];
 1121              		.loc 1 1420 0
 1122 002a A400     		lsls	r4, r4, #2
 1123              	.LVL89:
 1124 002c 084B     		ldr	r3, .L88+12
 1125 002e E058     		ldr	r0, [r4, r3]
 1126 0030 FFF7FEFF 		bl	__aeabi_i2f
 1127              	.LVL90:
 1128 0034 011C     		adds	r1, r0, #0
1419:Generated_Source\PSoC4/ADC_Temp.c ****             / (float32)ADC_Temp_countsPer10Volt[rawChannel];
 1129              		.loc 1 1419 0
 1130 0036 281C     		adds	r0, r5, #0
 1131 0038 FFF7FEFF 		bl	__aeabi_fdiv
 1132              	.LVL91:
 1133 003c 00E0     		b	.L86
 1134              	.LVL92:
 1135              	.L87:
1409:Generated_Source\PSoC4/ADC_Temp.c ****     uint32 rawChannel;
 1136              		.loc 1 1409 0
 1137 003e 0020     		movs	r0, #0
 1138              	.LVL93:
 1139              	.L86:
1421:Generated_Source\PSoC4/ADC_Temp.c ****     }
1422:Generated_Source\PSoC4/ADC_Temp.c ****     return result_Volts;
1423:Generated_Source\PSoC4/ADC_Temp.c **** }
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 47


 1140              		.loc 1 1423 0
 1141              		@ sp needed
 1142 0040 70BD     		pop	{r4, r5, r6, pc}
 1143              	.L89:
 1144 0042 C046     		.align	2
 1145              	.L88:
 1146 0044 00000000 		.word	.LANCHOR0
 1147 0048 00000000 		.word	ADC_Temp_allConfigs
 1148 004c 00002041 		.word	1092616192
 1149 0050 00000000 		.word	ADC_Temp_countsPer10Volt
 1150              		.cfi_endproc
 1151              	.LFE23:
 1152              		.size	ADC_Temp_CountsTo_Volts, .-ADC_Temp_CountsTo_Volts
 1153              		.global	__aeabi_idiv
 1154              		.section	.text.ADC_Temp_CountsTo_mVolts,"ax",%progbits
 1155              		.align	2
 1156              		.global	ADC_Temp_CountsTo_mVolts
 1157              		.code	16
 1158              		.thumb_func
 1159              		.type	ADC_Temp_CountsTo_mVolts, %function
 1160              	ADC_Temp_CountsTo_mVolts:
 1161              	.LFB24:
1424:Generated_Source\PSoC4/ADC_Temp.c **** 
1425:Generated_Source\PSoC4/ADC_Temp.c **** /*******************************************************************************
1426:Generated_Source\PSoC4/ADC_Temp.c **** * Function Name: ADC_Temp_CountsTo_mVolts
1427:Generated_Source\PSoC4/ADC_Temp.c **** ****************************************************************************//**
1428:Generated_Source\PSoC4/ADC_Temp.c **** *
1429:Generated_Source\PSoC4/ADC_Temp.c **** * \brief Converts the ADC output to millivolts as an int16. For example, if the ADC
1430:Generated_Source\PSoC4/ADC_Temp.c **** * measured 0.534 volts, the return value would be 534.
1431:Generated_Source\PSoC4/ADC_Temp.c **** * The calculation of voltage depends on the contents of ADC_Temp_offset[],
1432:Generated_Source\PSoC4/ADC_Temp.c **** * ADC_Temp_countsPer10Volt[], and other parameters.  The equation used is:
1433:Generated_Source\PSoC4/ADC_Temp.c **** *
1434:Generated_Source\PSoC4/ADC_Temp.c **** *     V = (Counts/AvgDivider - Offset)*TEN_VOLT/Gain
1435:Generated_Source\PSoC4/ADC_Temp.c **** * -Counts = Raw Counts from SAR register
1436:Generated_Source\PSoC4/ADC_Temp.c **** * -AvgDivider = divider based on averaging mode
1437:Generated_Source\PSoC4/ADC_Temp.c **** *     -Sequential, Sum: AvgDivider = number averaged
1438:Generated_Source\PSoC4/ADC_Temp.c **** *         Note: The divider should be a maximum of 16. If using more averages,
1439:Generated_Source\PSoC4/ADC_Temp.c **** *         pre-scale Counts by (number averaged / 16)
1440:Generated_Source\PSoC4/ADC_Temp.c **** *     -Interleaved, Sum: AvgDivider = number averaged
1441:Generated_Source\PSoC4/ADC_Temp.c **** *     -Sequential, Fixed: AvgDivider = 1
1442:Generated_Source\PSoC4/ADC_Temp.c **** * -Offset = ADC_Temp_offset[]
1443:Generated_Source\PSoC4/ADC_Temp.c **** * -TEN_VOLT = 10V constant and unit scalar.
1444:Generated_Source\PSoC4/ADC_Temp.c **** * -Gain = ADC_Temp_countsPer10Volt[]
1445:Generated_Source\PSoC4/ADC_Temp.c **** *
1446:Generated_Source\PSoC4/ADC_Temp.c **** * When the Vref is based on Vdda, the value used for Vdda is set for the project
1447:Generated_Source\PSoC4/ADC_Temp.c **** * in the System tab of the DWR.
1448:Generated_Source\PSoC4/ADC_Temp.c **** *
1449:Generated_Source\PSoC4/ADC_Temp.c **** * \param chan ADC_Temp channel number.
1450:Generated_Source\PSoC4/ADC_Temp.c **** *
1451:Generated_Source\PSoC4/ADC_Temp.c **** * \param adcCounts Result from the ADC_Temp conversion.
1452:Generated_Source\PSoC4/ADC_Temp.c **** *
1453:Generated_Source\PSoC4/ADC_Temp.c **** * \return Result in mV.
1454:Generated_Source\PSoC4/ADC_Temp.c **** *
1455:Generated_Source\PSoC4/ADC_Temp.c **** * \sideeffect None.
1456:Generated_Source\PSoC4/ADC_Temp.c **** *
1457:Generated_Source\PSoC4/ADC_Temp.c **** *******************************************************************************/
1458:Generated_Source\PSoC4/ADC_Temp.c **** int16 ADC_Temp_CountsTo_mVolts(uint32 chan, int16 adcCounts)
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 48


1459:Generated_Source\PSoC4/ADC_Temp.c **** {
 1162              		.loc 1 1459 0
 1163              		.cfi_startproc
 1164              		@ args = 0, pretend = 0, frame = 0
 1165              		@ frame_needed = 0, uses_anonymous_args = 0
 1166              	.LVL94:
 1167 0000 70B5     		push	{r4, r5, r6, lr}
 1168              		.cfi_def_cfa_offset 16
 1169              		.cfi_offset 4, -16
 1170              		.cfi_offset 5, -12
 1171              		.cfi_offset 6, -8
 1172              		.cfi_offset 14, -4
 1173              	.LVL95:
1460:Generated_Source\PSoC4/ADC_Temp.c ****     int16 result_mVolts = 0;
1461:Generated_Source\PSoC4/ADC_Temp.c ****     uint32 rawChannel;
1462:Generated_Source\PSoC4/ADC_Temp.c **** 
1463:Generated_Source\PSoC4/ADC_Temp.c ****     rawChannel = ADC_Temp_allConfigs[ADC_Temp_currentConfig].channelBase + chan;
 1174              		.loc 1 1463 0
 1175 0002 154B     		ldr	r3, .L95
 1176 0004 1D68     		ldr	r5, [r3]
 1177 0006 154E     		ldr	r6, .L95+4
 1178 0008 EB00     		lsls	r3, r5, #3
 1179 000a 5C1B     		subs	r4, r3, r5
 1180 000c E200     		lsls	r2, r4, #3
 1181 000e 9459     		ldr	r4, [r2, r6]
 1182 0010 2418     		adds	r4, r4, r0
 1183              	.LVL96:
1464:Generated_Source\PSoC4/ADC_Temp.c **** 
1465:Generated_Source\PSoC4/ADC_Temp.c ****     if((ADC_Temp_allConfigs[ADC_Temp_currentConfig].sampleCtrl
 1184              		.loc 1 1465 0
 1185 0012 B218     		adds	r2, r6, r2
 1186 0014 D368     		ldr	r3, [r2, #12]
 1187 0016 9B07     		lsls	r3, r3, #30
 1188 0018 1BD4     		bmi	.L94
1466:Generated_Source\PSoC4/ADC_Temp.c ****         & ADC_Temp_SAR_SAMPLE_CTRL_LEFT_ALIGN_MSK)
1467:Generated_Source\PSoC4/ADC_Temp.c ****         != ADC_Temp_SAR_SAMPLE_CTRL_LEFT_ALIGN_MSK)
1468:Generated_Source\PSoC4/ADC_Temp.c ****     {
1469:Generated_Source\PSoC4/ADC_Temp.c ****         adcCounts = ADC_Temp_RawCounts2Counts(chan, adcCounts);
 1189              		.loc 1 1469 0
 1190 001a FFF7FEFF 		bl	ADC_Temp_RawCounts2Counts
 1191              	.LVL97:
1470:Generated_Source\PSoC4/ADC_Temp.c **** 
1471:Generated_Source\PSoC4/ADC_Temp.c ****         result_mVolts = (int16)((((int32)adcCounts * ADC_Temp_10MV_COUNTS) + ( (adcCounts > 0) ?
 1192              		.loc 1 1471 0
 1193 001e 1049     		ldr	r1, .L95+8
 1194 0020 4143     		muls	r1, r0
1472:Generated_Source\PSoC4/ADC_Temp.c ****                  (ADC_Temp_countsPer10Volt[rawChannel] / 2)
1473:Generated_Source\PSoC4/ADC_Temp.c ****                 : (-(ADC_Temp_countsPer10Volt[rawChannel] / 2)) ))
 1195              		.loc 1 1473 0
 1196 0022 0028     		cmp	r0, #0
 1197 0024 06DD     		ble	.L92
1472:Generated_Source\PSoC4/ADC_Temp.c ****                  (ADC_Temp_countsPer10Volt[rawChannel] / 2)
 1198              		.loc 1 1472 0 discriminator 1
 1199 0026 A300     		lsls	r3, r4, #2
 1200 0028 0E4A     		ldr	r2, .L95+12
 1201 002a 9B58     		ldr	r3, [r3, r2]
 1202              		.loc 1 1473 0 discriminator 1
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 49


 1203 002c D80F     		lsrs	r0, r3, #31
 1204              	.LVL98:
 1205 002e C318     		adds	r3, r0, r3
 1206 0030 5B10     		asrs	r3, r3, #1
 1207 0032 06E0     		b	.L93
 1208              	.LVL99:
 1209              	.L92:
 1210              		.loc 1 1473 0 is_stmt 0 discriminator 2
 1211 0034 A300     		lsls	r3, r4, #2
 1212 0036 0B4A     		ldr	r2, .L95+12
 1213 0038 9A58     		ldr	r2, [r3, r2]
 1214 003a D30F     		lsrs	r3, r2, #31
 1215 003c 9A18     		adds	r2, r3, r2
 1216 003e 5210     		asrs	r2, r2, #1
 1217 0040 5342     		rsbs	r3, r2, #0
 1218              	.LVL100:
 1219              	.L93:
1471:Generated_Source\PSoC4/ADC_Temp.c ****                  (ADC_Temp_countsPer10Volt[rawChannel] / 2)
 1220              		.loc 1 1471 0 is_stmt 1
 1221 0042 5818     		adds	r0, r3, r1
1474:Generated_Source\PSoC4/ADC_Temp.c ****                  / ADC_Temp_countsPer10Volt[rawChannel]);
 1222              		.loc 1 1474 0
 1223 0044 A400     		lsls	r4, r4, #2
 1224              	.LVL101:
 1225 0046 074B     		ldr	r3, .L95+12
 1226 0048 E158     		ldr	r1, [r4, r3]
 1227 004a FFF7FEFF 		bl	__aeabi_idiv
 1228              	.LVL102:
1471:Generated_Source\PSoC4/ADC_Temp.c ****                  (ADC_Temp_countsPer10Volt[rawChannel] / 2)
 1229              		.loc 1 1471 0
 1230 004e 00B2     		sxth	r0, r0
 1231              	.LVL103:
 1232 0050 00E0     		b	.L91
 1233              	.LVL104:
 1234              	.L94:
1460:Generated_Source\PSoC4/ADC_Temp.c ****     uint32 rawChannel;
 1235              		.loc 1 1460 0
 1236 0052 0020     		movs	r0, #0
 1237              	.LVL105:
 1238              	.L91:
1475:Generated_Source\PSoC4/ADC_Temp.c ****     }
1476:Generated_Source\PSoC4/ADC_Temp.c ****     return result_mVolts;
1477:Generated_Source\PSoC4/ADC_Temp.c **** }
 1239              		.loc 1 1477 0
 1240              		@ sp needed
 1241              	.LVL106:
 1242 0054 70BD     		pop	{r4, r5, r6, pc}
 1243              	.L96:
 1244 0056 C046     		.align	2
 1245              	.L95:
 1246 0058 00000000 		.word	.LANCHOR0
 1247 005c 00000000 		.word	ADC_Temp_allConfigs
 1248 0060 10270000 		.word	10000
 1249 0064 00000000 		.word	ADC_Temp_countsPer10Volt
 1250              		.cfi_endproc
 1251              	.LFE24:
 1252              		.size	ADC_Temp_CountsTo_mVolts, .-ADC_Temp_CountsTo_mVolts
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 50


 1253              		.global	__aeabi_lmul
 1254              		.global	__aeabi_ldivmod
 1255              		.section	.text.ADC_Temp_CountsTo_uVolts,"ax",%progbits
 1256              		.align	2
 1257              		.global	ADC_Temp_CountsTo_uVolts
 1258              		.code	16
 1259              		.thumb_func
 1260              		.type	ADC_Temp_CountsTo_uVolts, %function
 1261              	ADC_Temp_CountsTo_uVolts:
 1262              	.LFB25:
1478:Generated_Source\PSoC4/ADC_Temp.c **** 
1479:Generated_Source\PSoC4/ADC_Temp.c **** /*******************************************************************************
1480:Generated_Source\PSoC4/ADC_Temp.c **** * Function Name: ADC_Temp_CountsTo_uVolts
1481:Generated_Source\PSoC4/ADC_Temp.c **** ****************************************************************************//**
1482:Generated_Source\PSoC4/ADC_Temp.c **** *
1483:Generated_Source\PSoC4/ADC_Temp.c **** * \brief Converts the ADC output to microvolts as an int32. For example, if the ADC
1484:Generated_Source\PSoC4/ADC_Temp.c **** * measured 0.534 volts, the return value would be 534000.
1485:Generated_Source\PSoC4/ADC_Temp.c **** * The calculation of voltage depends on the contents of ADC_Temp_offset[],
1486:Generated_Source\PSoC4/ADC_Temp.c **** * ADC_Temp_countsPer10Volt[], and other parameters.  The equation used is:
1487:Generated_Source\PSoC4/ADC_Temp.c **** *
1488:Generated_Source\PSoC4/ADC_Temp.c **** *     V = (Counts/AvgDivider - Offset)*TEN_VOLT/Gain
1489:Generated_Source\PSoC4/ADC_Temp.c **** * -Counts = Raw Counts from SAR register
1490:Generated_Source\PSoC4/ADC_Temp.c **** * -AvgDivider = divider based on averaging mode
1491:Generated_Source\PSoC4/ADC_Temp.c **** *     -Sequential, Sum: AvgDivider = number averaged
1492:Generated_Source\PSoC4/ADC_Temp.c **** *         Note: The divider should be a maximum of 16. If using more averages,
1493:Generated_Source\PSoC4/ADC_Temp.c **** *         pre-scale Counts by (number averaged / 16)
1494:Generated_Source\PSoC4/ADC_Temp.c **** *     -Interleaved, Sum: AvgDivider = number averaged
1495:Generated_Source\PSoC4/ADC_Temp.c **** *     -Sequential, Fixed: AvgDivider = 1
1496:Generated_Source\PSoC4/ADC_Temp.c **** * -Offset = ADC_Temp_offset[]
1497:Generated_Source\PSoC4/ADC_Temp.c **** * -TEN_VOLT = 10V constant and unit scalar.
1498:Generated_Source\PSoC4/ADC_Temp.c **** * -Gain = ADC_Temp_countsPer10Volt[]
1499:Generated_Source\PSoC4/ADC_Temp.c **** *
1500:Generated_Source\PSoC4/ADC_Temp.c **** * When the Vref is based on Vdda, the value used for Vdda is set for the project
1501:Generated_Source\PSoC4/ADC_Temp.c **** * in the System tab of the DWR.
1502:Generated_Source\PSoC4/ADC_Temp.c **** *
1503:Generated_Source\PSoC4/ADC_Temp.c **** * \param chan ADC_Temp channel number.
1504:Generated_Source\PSoC4/ADC_Temp.c **** *
1505:Generated_Source\PSoC4/ADC_Temp.c **** * \param adcCounts Result from the ADC_Temp conversion.
1506:Generated_Source\PSoC4/ADC_Temp.c **** *
1507:Generated_Source\PSoC4/ADC_Temp.c **** * \return Result in microvolts.
1508:Generated_Source\PSoC4/ADC_Temp.c **** *
1509:Generated_Source\PSoC4/ADC_Temp.c **** * \sideeffect None
1510:Generated_Source\PSoC4/ADC_Temp.c **** *
1511:Generated_Source\PSoC4/ADC_Temp.c **** *******************************************************************************/
1512:Generated_Source\PSoC4/ADC_Temp.c **** int32 ADC_Temp_CountsTo_uVolts(uint32 chan, int16 adcCounts)
1513:Generated_Source\PSoC4/ADC_Temp.c **** {
 1263              		.loc 1 1513 0
 1264              		.cfi_startproc
 1265              		@ args = 0, pretend = 0, frame = 0
 1266              		@ frame_needed = 0, uses_anonymous_args = 0
 1267              	.LVL107:
 1268 0000 70B5     		push	{r4, r5, r6, lr}
 1269              		.cfi_def_cfa_offset 16
 1270              		.cfi_offset 4, -16
 1271              		.cfi_offset 5, -12
 1272              		.cfi_offset 6, -8
 1273              		.cfi_offset 14, -4
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 51


 1274              	.LVL108:
1514:Generated_Source\PSoC4/ADC_Temp.c ****     int64 result_uVolts = 0;
1515:Generated_Source\PSoC4/ADC_Temp.c ****     uint32 rawChannel;
1516:Generated_Source\PSoC4/ADC_Temp.c ****     rawChannel = ADC_Temp_allConfigs[ADC_Temp_currentConfig].channelBase + chan;
 1275              		.loc 1 1516 0
 1276 0002 0E4B     		ldr	r3, .L100
 1277 0004 1D68     		ldr	r5, [r3]
 1278 0006 0E4E     		ldr	r6, .L100+4
 1279 0008 EB00     		lsls	r3, r5, #3
 1280 000a 5C1B     		subs	r4, r3, r5
 1281 000c E200     		lsls	r2, r4, #3
 1282 000e 9459     		ldr	r4, [r2, r6]
 1283 0010 2418     		adds	r4, r4, r0
 1284              	.LVL109:
1517:Generated_Source\PSoC4/ADC_Temp.c **** 
1518:Generated_Source\PSoC4/ADC_Temp.c ****     if((ADC_Temp_allConfigs[ADC_Temp_currentConfig].sampleCtrl
 1285              		.loc 1 1518 0
 1286 0012 B218     		adds	r2, r6, r2
 1287 0014 D368     		ldr	r3, [r2, #12]
 1288 0016 9B07     		lsls	r3, r3, #30
 1289 0018 0DD4     		bmi	.L99
1519:Generated_Source\PSoC4/ADC_Temp.c ****         & ADC_Temp_SAR_SAMPLE_CTRL_LEFT_ALIGN_MSK)
1520:Generated_Source\PSoC4/ADC_Temp.c ****         != ADC_Temp_SAR_SAMPLE_CTRL_LEFT_ALIGN_MSK)
1521:Generated_Source\PSoC4/ADC_Temp.c ****     {
1522:Generated_Source\PSoC4/ADC_Temp.c ****         adcCounts = ADC_Temp_RawCounts2Counts(chan, adcCounts);
 1290              		.loc 1 1522 0
 1291 001a FFF7FEFF 		bl	ADC_Temp_RawCounts2Counts
 1292              	.LVL110:
1523:Generated_Source\PSoC4/ADC_Temp.c **** 
1524:Generated_Source\PSoC4/ADC_Temp.c ****         result_uVolts = ((int64)adcCounts * ADC_Temp_10UV_COUNTS)
 1293              		.loc 1 1524 0
 1294 001e C117     		asrs	r1, r0, #31
 1295 0020 084A     		ldr	r2, .L100+8
 1296 0022 0023     		movs	r3, #0
 1297 0024 FFF7FEFF 		bl	__aeabi_lmul
 1298              	.LVL111:
1525:Generated_Source\PSoC4/ADC_Temp.c ****             / ADC_Temp_countsPer10Volt[rawChannel];
 1299              		.loc 1 1525 0
 1300 0028 A400     		lsls	r4, r4, #2
 1301              	.LVL112:
 1302 002a 074B     		ldr	r3, .L100+12
 1303 002c E258     		ldr	r2, [r4, r3]
 1304 002e D317     		asrs	r3, r2, #31
1524:Generated_Source\PSoC4/ADC_Temp.c ****             / ADC_Temp_countsPer10Volt[rawChannel];
 1305              		.loc 1 1524 0
 1306 0030 FFF7FEFF 		bl	__aeabi_ldivmod
 1307              	.LVL113:
 1308 0034 00E0     		b	.L98
 1309              	.LVL114:
 1310              	.L99:
1514:Generated_Source\PSoC4/ADC_Temp.c ****     uint32 rawChannel;
 1311              		.loc 1 1514 0
 1312 0036 0020     		movs	r0, #0
 1313              	.LVL115:
 1314              	.L98:
1526:Generated_Source\PSoC4/ADC_Temp.c ****     }
1527:Generated_Source\PSoC4/ADC_Temp.c ****     return ( (int32)result_uVolts );
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 52


1528:Generated_Source\PSoC4/ADC_Temp.c **** }
 1315              		.loc 1 1528 0
 1316              		@ sp needed
 1317              	.LVL116:
 1318 0038 70BD     		pop	{r4, r5, r6, pc}
 1319              	.L101:
 1320 003a C046     		.align	2
 1321              	.L100:
 1322 003c 00000000 		.word	.LANCHOR0
 1323 0040 00000000 		.word	ADC_Temp_allConfigs
 1324 0044 80969800 		.word	10000000
 1325 0048 00000000 		.word	ADC_Temp_countsPer10Volt
 1326              		.cfi_endproc
 1327              	.LFE25:
 1328              		.size	ADC_Temp_CountsTo_uVolts, .-ADC_Temp_CountsTo_uVolts
 1329              		.section	.text.ADC_Temp_Init,"ax",%progbits
 1330              		.align	2
 1331              		.global	ADC_Temp_Init
 1332              		.code	16
 1333              		.thumb_func
 1334              		.type	ADC_Temp_Init, %function
 1335              	ADC_Temp_Init:
 1336              	.LFB26:
1529:Generated_Source\PSoC4/ADC_Temp.c **** 
1530:Generated_Source\PSoC4/ADC_Temp.c **** #if(0u != ADC_Temp_ANY_CONFIG_USES_FILTER)
1531:Generated_Source\PSoC4/ADC_Temp.c **** 
1532:Generated_Source\PSoC4/ADC_Temp.c ****     /*******************************************************************************
1533:Generated_Source\PSoC4/ADC_Temp.c ****     * Function Name: ADC_Temp_TrimFilterVos
1534:Generated_Source\PSoC4/ADC_Temp.c ****     ****************************************************************************//**
1535:Generated_Source\PSoC4/ADC_Temp.c ****     *
1536:Generated_Source\PSoC4/ADC_Temp.c ****     * \brief Run an algorithm to reduce voltage offset using the UAB's opamp and
1537:Generated_Source\PSoC4/ADC_Temp.c ****     * agnd buffer trim.
1538:Generated_Source\PSoC4/ADC_Temp.c ****     *
1539:Generated_Source\PSoC4/ADC_Temp.c ****     * During trimming, the filter inputs are disconnected from the UAB block,
1540:Generated_Source\PSoC4/ADC_Temp.c ****     * the non-inverting input of both UAB opamps are connected to Agnd,
1541:Generated_Source\PSoC4/ADC_Temp.c ****     * and SAR is used as a comparator.
1542:Generated_Source\PSoC4/ADC_Temp.c ****     *
1543:Generated_Source\PSoC4/ADC_Temp.c ****     * Trimming is done by comparing the filter output with Agnd.
1544:Generated_Source\PSoC4/ADC_Temp.c ****     * The algorithm steps through the Opamp trim codes first and then the
1545:Generated_Source\PSoC4/ADC_Temp.c ****     * Agnd trim codes to find where the filter output crosses Agnd.
1546:Generated_Source\PSoC4/ADC_Temp.c ****     * For each trim code, a blocking delay is used to allow the filter output
1547:Generated_Source\PSoC4/ADC_Temp.c ****     * to settle before reading the comparator status. This delay is equivalent
1548:Generated_Source\PSoC4/ADC_Temp.c ****     * to 9 * tau, where tau is the filter time constant:
1549:Generated_Source\PSoC4/ADC_Temp.c ****     *
1550:Generated_Source\PSoC4/ADC_Temp.c ****     * tau = 1 / (2 * pi * (Fcorner or Bandwidth))
1551:Generated_Source\PSoC4/ADC_Temp.c ****     *
1552:Generated_Source\PSoC4/ADC_Temp.c ****     * The time constant is calculated using the bandwidth for Band pass and
1553:Generated_Source\PSoC4/ADC_Temp.c ****     * Band stop and the corner frequency for Low pass and High pass.
1554:Generated_Source\PSoC4/ADC_Temp.c ****     * The algorithm can check up to 40 different trim codes, but it will typically
1555:Generated_Source\PSoC4/ADC_Temp.c ****     * complete in much less time.
1556:Generated_Source\PSoC4/ADC_Temp.c ****     *
1557:Generated_Source\PSoC4/ADC_Temp.c ****     * Once trimming is complete, the UAB is restored to its original configuration.
1558:Generated_Source\PSoC4/ADC_Temp.c ****     *
1559:Generated_Source\PSoC4/ADC_Temp.c ****     * \Note
1560:Generated_Source\PSoC4/ADC_Temp.c ****     * The ADC conversions must be started and Agnd must be supplied to the
1561:Generated_Source\PSoC4/ADC_Temp.c ****     * component before calling this function.
1562:Generated_Source\PSoC4/ADC_Temp.c ****     *
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 53


1563:Generated_Source\PSoC4/ADC_Temp.c ****     *******************************************************************************/
1564:Generated_Source\PSoC4/ADC_Temp.c ****     void ADC_Temp_TrimFilterVos(void)
1565:Generated_Source\PSoC4/ADC_Temp.c ****     {
1566:Generated_Source\PSoC4/ADC_Temp.c ****         uint32 opampTrim = 0uL;
1567:Generated_Source\PSoC4/ADC_Temp.c ****         uint32 agndTrim = 0uL;
1568:Generated_Source\PSoC4/ADC_Temp.c ****         uint32 compStatus = 0uL;
1569:Generated_Source\PSoC4/ADC_Temp.c **** 
1570:Generated_Source\PSoC4/ADC_Temp.c ****         ADC_Temp_SetupComparatorTrim();
1571:Generated_Source\PSoC4/ADC_Temp.c **** 
1572:Generated_Source\PSoC4/ADC_Temp.c ****         /* Sweep from center to crossing */
1573:Generated_Source\PSoC4/ADC_Temp.c ****         compStatus = ADC_Temp_SetOpampAndAgndTrim(ADC_Temp_OPAMP_TRIM_POS_BASE, ADC_Temp_AGND_TRIM_
1574:Generated_Source\PSoC4/ADC_Temp.c ****         if (0uL == compStatus)
1575:Generated_Source\PSoC4/ADC_Temp.c ****         {
1576:Generated_Source\PSoC4/ADC_Temp.c ****             opampTrim = ADC_Temp_RaiseOpampTrimToCrossing(ADC_Temp_OPAMP_TRIM_POS_BASE);
1577:Generated_Source\PSoC4/ADC_Temp.c ****             agndTrim = ADC_Temp_RaiseAgndTrimToCrossing(ADC_Temp_AGND_TRIM_POS_BASE);
1578:Generated_Source\PSoC4/ADC_Temp.c ****             if ((agndTrim == (ADC_Temp_AGND_TRIM_POS_LIMIT - 1uL))
1579:Generated_Source\PSoC4/ADC_Temp.c ****                 && (opampTrim != (ADC_Temp_OPAMP_TRIM_POS_LIMIT - 1uL)))
1580:Generated_Source\PSoC4/ADC_Temp.c ****             {
1581:Generated_Source\PSoC4/ADC_Temp.c ****                 opampTrim = ADC_Temp_IncOpampTrim(opampTrim);
1582:Generated_Source\PSoC4/ADC_Temp.c ****                 (void) ADC_Temp_SetOpampAndAgndTrim(opampTrim, ADC_Temp_AGND_TRIM_POS_BASE);
1583:Generated_Source\PSoC4/ADC_Temp.c ****                 (void) ADC_Temp_LowerAgndTrimToCrossing(ADC_Temp_AGND_TRIM_POS_BASE);
1584:Generated_Source\PSoC4/ADC_Temp.c ****             }
1585:Generated_Source\PSoC4/ADC_Temp.c ****         }
1586:Generated_Source\PSoC4/ADC_Temp.c ****         else
1587:Generated_Source\PSoC4/ADC_Temp.c ****         {
1588:Generated_Source\PSoC4/ADC_Temp.c ****             opampTrim = ADC_Temp_LowerOpampTrimToCrossing(ADC_Temp_OPAMP_TRIM_POS_BASE);
1589:Generated_Source\PSoC4/ADC_Temp.c ****             agndTrim = ADC_Temp_LowerAgndTrimToCrossing(ADC_Temp_AGND_TRIM_POS_BASE);
1590:Generated_Source\PSoC4/ADC_Temp.c ****             if ((agndTrim == (ADC_Temp_AGND_TRIM_NEG_LIMIT - 1uL))
1591:Generated_Source\PSoC4/ADC_Temp.c ****                 && (opampTrim != (ADC_Temp_OPAMP_TRIM_NEG_LIMIT - 1uL)))
1592:Generated_Source\PSoC4/ADC_Temp.c ****             {
1593:Generated_Source\PSoC4/ADC_Temp.c ****                 opampTrim = ADC_Temp_DecOpampTrim(opampTrim);
1594:Generated_Source\PSoC4/ADC_Temp.c ****                 (void) ADC_Temp_SetOpampAndAgndTrim(opampTrim, ADC_Temp_AGND_TRIM_POS_BASE);
1595:Generated_Source\PSoC4/ADC_Temp.c ****                 (void) ADC_Temp_RaiseAgndTrimToCrossing(ADC_Temp_AGND_TRIM_POS_BASE);
1596:Generated_Source\PSoC4/ADC_Temp.c ****             }
1597:Generated_Source\PSoC4/ADC_Temp.c ****         }
1598:Generated_Source\PSoC4/ADC_Temp.c **** 
1599:Generated_Source\PSoC4/ADC_Temp.c ****         ADC_Temp_UndoComparatorTrimSetup();
1600:Generated_Source\PSoC4/ADC_Temp.c ****     }
1601:Generated_Source\PSoC4/ADC_Temp.c **** 
1602:Generated_Source\PSoC4/ADC_Temp.c ****     /*******************************************************************************
1603:Generated_Source\PSoC4/ADC_Temp.c ****     * Function Name: ADC_Temp_SetupComparatorTrim
1604:Generated_Source\PSoC4/ADC_Temp.c ****     ********************************************************************************
1605:Generated_Source\PSoC4/ADC_Temp.c ****     *
1606:Generated_Source\PSoC4/ADC_Temp.c ****     * Make proper connections to being trimming the Agnd buffer
1607:Generated_Source\PSoC4/ADC_Temp.c ****     * and Opamp offset.
1608:Generated_Source\PSoC4/ADC_Temp.c ****     *
1609:Generated_Source\PSoC4/ADC_Temp.c ****     *******************************************************************************/
1610:Generated_Source\PSoC4/ADC_Temp.c ****     static void ADC_Temp_SetupComparatorTrim(void)
1611:Generated_Source\PSoC4/ADC_Temp.c ****     {
1612:Generated_Source\PSoC4/ADC_Temp.c ****         ADC_Temp_filterVinMux_Select(ADC_Temp_FILTER_AMUX_CHANNEL);
1613:Generated_Source\PSoC4/ADC_Temp.c ****     }
1614:Generated_Source\PSoC4/ADC_Temp.c **** 
1615:Generated_Source\PSoC4/ADC_Temp.c ****     /*******************************************************************************
1616:Generated_Source\PSoC4/ADC_Temp.c ****     * Function Name: ADC_Temp_UndoComparatorTrimSetup
1617:Generated_Source\PSoC4/ADC_Temp.c ****     ********************************************************************************
1618:Generated_Source\PSoC4/ADC_Temp.c ****     *
1619:Generated_Source\PSoC4/ADC_Temp.c ****     * Undo all changes made in ADC_Temp_SetupComparatorTrim()
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 54


1620:Generated_Source\PSoC4/ADC_Temp.c ****     * to bring the Component back to normal operation.
1621:Generated_Source\PSoC4/ADC_Temp.c ****     *
1622:Generated_Source\PSoC4/ADC_Temp.c ****     *******************************************************************************/
1623:Generated_Source\PSoC4/ADC_Temp.c ****     static void ADC_Temp_UndoComparatorTrimSetup(void)
1624:Generated_Source\PSoC4/ADC_Temp.c ****     {
1625:Generated_Source\PSoC4/ADC_Temp.c ****         ADC_Temp_filterVinMux_Select((uint8)ADC_Temp_currentConfig);
1626:Generated_Source\PSoC4/ADC_Temp.c ****     }
1627:Generated_Source\PSoC4/ADC_Temp.c **** 
1628:Generated_Source\PSoC4/ADC_Temp.c ****     /*******************************************************************************
1629:Generated_Source\PSoC4/ADC_Temp.c ****     * Function Name: ADC_Temp_RaiseOpampTrimToCrossing
1630:Generated_Source\PSoC4/ADC_Temp.c ****     ********************************************************************************
1631:Generated_Source\PSoC4/ADC_Temp.c ****     *
1632:Generated_Source\PSoC4/ADC_Temp.c ****     * Step through the Opamp trim codes in increasing order
1633:Generated_Source\PSoC4/ADC_Temp.c ****     * to find the point where the offset crosses Agnd.
1634:Generated_Source\PSoC4/ADC_Temp.c ****     *
1635:Generated_Source\PSoC4/ADC_Temp.c ****     *******************************************************************************/
1636:Generated_Source\PSoC4/ADC_Temp.c ****     static uint32 ADC_Temp_RaiseOpampTrimToCrossing(uint32 startTrim)
1637:Generated_Source\PSoC4/ADC_Temp.c ****     {
1638:Generated_Source\PSoC4/ADC_Temp.c ****         uint32 opampTrim;
1639:Generated_Source\PSoC4/ADC_Temp.c ****         uint32 lastOpampTrim;
1640:Generated_Source\PSoC4/ADC_Temp.c ****         uint32 compStatus;
1641:Generated_Source\PSoC4/ADC_Temp.c **** 
1642:Generated_Source\PSoC4/ADC_Temp.c ****         lastOpampTrim = startTrim;
1643:Generated_Source\PSoC4/ADC_Temp.c ****         for (opampTrim = startTrim;
1644:Generated_Source\PSoC4/ADC_Temp.c ****             opampTrim != ADC_Temp_OPAMP_TRIM_NEG_LIMIT;
1645:Generated_Source\PSoC4/ADC_Temp.c ****             opampTrim = ADC_Temp_IncOpampTrim(opampTrim))
1646:Generated_Source\PSoC4/ADC_Temp.c ****         {
1647:Generated_Source\PSoC4/ADC_Temp.c ****             compStatus = ADC_Temp_SetOpampAndAgndTrim(opampTrim, ADC_Temp_AGND_TRIM_POS_BASE);
1648:Generated_Source\PSoC4/ADC_Temp.c ****             if (0uL != compStatus)
1649:Generated_Source\PSoC4/ADC_Temp.c ****             {
1650:Generated_Source\PSoC4/ADC_Temp.c ****                 (void) ADC_Temp_SetOpampTrim(lastOpampTrim);
1651:Generated_Source\PSoC4/ADC_Temp.c ****                 break;
1652:Generated_Source\PSoC4/ADC_Temp.c ****             }
1653:Generated_Source\PSoC4/ADC_Temp.c ****             lastOpampTrim = opampTrim;
1654:Generated_Source\PSoC4/ADC_Temp.c ****         }
1655:Generated_Source\PSoC4/ADC_Temp.c **** 
1656:Generated_Source\PSoC4/ADC_Temp.c ****         return lastOpampTrim;
1657:Generated_Source\PSoC4/ADC_Temp.c ****     }
1658:Generated_Source\PSoC4/ADC_Temp.c **** 
1659:Generated_Source\PSoC4/ADC_Temp.c ****     /*******************************************************************************
1660:Generated_Source\PSoC4/ADC_Temp.c ****     * Function Name: ADC_Temp_LowerOpampTrimToCrossing
1661:Generated_Source\PSoC4/ADC_Temp.c ****     ********************************************************************************
1662:Generated_Source\PSoC4/ADC_Temp.c ****     *
1663:Generated_Source\PSoC4/ADC_Temp.c ****     * Step through the Opamp trim codes in decreasing order
1664:Generated_Source\PSoC4/ADC_Temp.c ****     * to find the point where the offset crosses Agnd.
1665:Generated_Source\PSoC4/ADC_Temp.c ****     *
1666:Generated_Source\PSoC4/ADC_Temp.c ****     *******************************************************************************/
1667:Generated_Source\PSoC4/ADC_Temp.c ****     static uint32 ADC_Temp_LowerOpampTrimToCrossing(uint32 startTrim)
1668:Generated_Source\PSoC4/ADC_Temp.c ****     {
1669:Generated_Source\PSoC4/ADC_Temp.c ****         uint32 opampTrim;
1670:Generated_Source\PSoC4/ADC_Temp.c ****         uint32 lastOpampTrim;
1671:Generated_Source\PSoC4/ADC_Temp.c ****         uint32 compStatus;
1672:Generated_Source\PSoC4/ADC_Temp.c **** 
1673:Generated_Source\PSoC4/ADC_Temp.c ****         lastOpampTrim = startTrim;
1674:Generated_Source\PSoC4/ADC_Temp.c ****         for (opampTrim = startTrim;
1675:Generated_Source\PSoC4/ADC_Temp.c ****             opampTrim != ADC_Temp_OPAMP_TRIM_NEG_LIMIT;
1676:Generated_Source\PSoC4/ADC_Temp.c ****             opampTrim = ADC_Temp_DecOpampTrim(opampTrim))
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 55


1677:Generated_Source\PSoC4/ADC_Temp.c ****         {
1678:Generated_Source\PSoC4/ADC_Temp.c ****             compStatus = ADC_Temp_SetOpampAndAgndTrim(opampTrim, ADC_Temp_AGND_TRIM_POS_BASE);
1679:Generated_Source\PSoC4/ADC_Temp.c ****             if (0uL == compStatus)
1680:Generated_Source\PSoC4/ADC_Temp.c ****             {
1681:Generated_Source\PSoC4/ADC_Temp.c ****                 (void) ADC_Temp_SetOpampTrim(lastOpampTrim);
1682:Generated_Source\PSoC4/ADC_Temp.c ****                 break;
1683:Generated_Source\PSoC4/ADC_Temp.c ****             }
1684:Generated_Source\PSoC4/ADC_Temp.c ****             lastOpampTrim = opampTrim;
1685:Generated_Source\PSoC4/ADC_Temp.c ****         }
1686:Generated_Source\PSoC4/ADC_Temp.c **** 
1687:Generated_Source\PSoC4/ADC_Temp.c ****         return lastOpampTrim;
1688:Generated_Source\PSoC4/ADC_Temp.c ****     }
1689:Generated_Source\PSoC4/ADC_Temp.c **** 
1690:Generated_Source\PSoC4/ADC_Temp.c ****     /*******************************************************************************
1691:Generated_Source\PSoC4/ADC_Temp.c ****     * Function Name: ADC_Temp_RaiseAgndTrimToCrossing
1692:Generated_Source\PSoC4/ADC_Temp.c ****     ********************************************************************************
1693:Generated_Source\PSoC4/ADC_Temp.c ****     *
1694:Generated_Source\PSoC4/ADC_Temp.c ****     * Step through the Agnd trim codes in increasing order
1695:Generated_Source\PSoC4/ADC_Temp.c ****     * to find the point where the offset crosses Agnd.
1696:Generated_Source\PSoC4/ADC_Temp.c ****     *
1697:Generated_Source\PSoC4/ADC_Temp.c ****     *******************************************************************************/
1698:Generated_Source\PSoC4/ADC_Temp.c ****     static uint32 ADC_Temp_RaiseAgndTrimToCrossing(uint32 startTrim)
1699:Generated_Source\PSoC4/ADC_Temp.c ****     {
1700:Generated_Source\PSoC4/ADC_Temp.c ****         uint32 agndTrim;
1701:Generated_Source\PSoC4/ADC_Temp.c ****         uint32 lastAgndTrim;
1702:Generated_Source\PSoC4/ADC_Temp.c ****         uint32 compStatus;
1703:Generated_Source\PSoC4/ADC_Temp.c **** 
1704:Generated_Source\PSoC4/ADC_Temp.c ****         lastAgndTrim = startTrim;
1705:Generated_Source\PSoC4/ADC_Temp.c ****         for (agndTrim = startTrim;
1706:Generated_Source\PSoC4/ADC_Temp.c ****             agndTrim != ADC_Temp_AGND_TRIM_NEG_LIMIT;
1707:Generated_Source\PSoC4/ADC_Temp.c ****             agndTrim = ADC_Temp_IncAgndTrim(agndTrim))
1708:Generated_Source\PSoC4/ADC_Temp.c ****         {
1709:Generated_Source\PSoC4/ADC_Temp.c ****             compStatus = ADC_Temp_SetAgndTrim(agndTrim);
1710:Generated_Source\PSoC4/ADC_Temp.c ****             if (0uL != compStatus)
1711:Generated_Source\PSoC4/ADC_Temp.c ****             {
1712:Generated_Source\PSoC4/ADC_Temp.c ****                 (void) ADC_Temp_SetAgndTrim(lastAgndTrim);
1713:Generated_Source\PSoC4/ADC_Temp.c ****                 break;
1714:Generated_Source\PSoC4/ADC_Temp.c ****             }
1715:Generated_Source\PSoC4/ADC_Temp.c ****             lastAgndTrim = agndTrim;
1716:Generated_Source\PSoC4/ADC_Temp.c ****         }
1717:Generated_Source\PSoC4/ADC_Temp.c **** 
1718:Generated_Source\PSoC4/ADC_Temp.c ****         return lastAgndTrim;
1719:Generated_Source\PSoC4/ADC_Temp.c ****     }
1720:Generated_Source\PSoC4/ADC_Temp.c **** 
1721:Generated_Source\PSoC4/ADC_Temp.c ****     /*******************************************************************************
1722:Generated_Source\PSoC4/ADC_Temp.c ****     * Function Name: ADC_Temp_LowerAgndTrimToCrossing
1723:Generated_Source\PSoC4/ADC_Temp.c ****     ********************************************************************************
1724:Generated_Source\PSoC4/ADC_Temp.c ****     *
1725:Generated_Source\PSoC4/ADC_Temp.c ****     * Step through the Agnd trim codes in decreasing order
1726:Generated_Source\PSoC4/ADC_Temp.c ****     * to find the point where the offset crosses Agnd.
1727:Generated_Source\PSoC4/ADC_Temp.c ****     *
1728:Generated_Source\PSoC4/ADC_Temp.c ****     *******************************************************************************/
1729:Generated_Source\PSoC4/ADC_Temp.c ****     static uint32 ADC_Temp_LowerAgndTrimToCrossing(uint32 startTrim)
1730:Generated_Source\PSoC4/ADC_Temp.c ****     {
1731:Generated_Source\PSoC4/ADC_Temp.c ****         uint32 agndTrim = startTrim;
1732:Generated_Source\PSoC4/ADC_Temp.c ****         uint32 lastAgndTrim = agndTrim;
1733:Generated_Source\PSoC4/ADC_Temp.c ****         uint32 compStatus = 1uL;
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 56


1734:Generated_Source\PSoC4/ADC_Temp.c **** 
1735:Generated_Source\PSoC4/ADC_Temp.c ****         lastAgndTrim = startTrim;
1736:Generated_Source\PSoC4/ADC_Temp.c ****         for (agndTrim = startTrim;
1737:Generated_Source\PSoC4/ADC_Temp.c ****             agndTrim != ADC_Temp_AGND_TRIM_NEG_LIMIT;
1738:Generated_Source\PSoC4/ADC_Temp.c ****             agndTrim = ADC_Temp_DecAgndTrim(agndTrim))
1739:Generated_Source\PSoC4/ADC_Temp.c ****         {
1740:Generated_Source\PSoC4/ADC_Temp.c ****             compStatus = ADC_Temp_SetAgndTrim(agndTrim);
1741:Generated_Source\PSoC4/ADC_Temp.c ****             if (0uL == compStatus)
1742:Generated_Source\PSoC4/ADC_Temp.c ****             {
1743:Generated_Source\PSoC4/ADC_Temp.c ****                 (void) ADC_Temp_SetAgndTrim(lastAgndTrim);
1744:Generated_Source\PSoC4/ADC_Temp.c ****                 break;
1745:Generated_Source\PSoC4/ADC_Temp.c ****             }
1746:Generated_Source\PSoC4/ADC_Temp.c ****             lastAgndTrim = agndTrim;
1747:Generated_Source\PSoC4/ADC_Temp.c ****         }
1748:Generated_Source\PSoC4/ADC_Temp.c **** 
1749:Generated_Source\PSoC4/ADC_Temp.c ****         return lastAgndTrim;
1750:Generated_Source\PSoC4/ADC_Temp.c ****     }
1751:Generated_Source\PSoC4/ADC_Temp.c **** 
1752:Generated_Source\PSoC4/ADC_Temp.c ****     /*******************************************************************************
1753:Generated_Source\PSoC4/ADC_Temp.c ****     * Function Name: ADC_Temp_SetOpampAndAgndTrim
1754:Generated_Source\PSoC4/ADC_Temp.c ****     ********************************************************************************
1755:Generated_Source\PSoC4/ADC_Temp.c ****     *
1756:Generated_Source\PSoC4/ADC_Temp.c ****     * Write the Agnd and Opamp trim codes and return the comparator status.
1757:Generated_Source\PSoC4/ADC_Temp.c ****     *
1758:Generated_Source\PSoC4/ADC_Temp.c ****     *******************************************************************************/
1759:Generated_Source\PSoC4/ADC_Temp.c ****     static uint32 ADC_Temp_SetOpampAndAgndTrim(uint32 opampTrim, uint32 agndTrim)
1760:Generated_Source\PSoC4/ADC_Temp.c ****     {
1761:Generated_Source\PSoC4/ADC_Temp.c ****         uint32 trimRegVal = ADC_Temp_UABH_A_OA_TRIM_OA_REG;
1762:Generated_Source\PSoC4/ADC_Temp.c ****         trimRegVal &= ~(ADC_Temp_OPAMP_TRIM_MASK << CyUAB_OA_OFFSET_SHIFT);
1763:Generated_Source\PSoC4/ADC_Temp.c ****         trimRegVal |= (opampTrim << CyUAB_OA_OFFSET_SHIFT);
1764:Generated_Source\PSoC4/ADC_Temp.c ****         ADC_Temp_UABH_A_OA_TRIM_OA_REG = trimRegVal;
1765:Generated_Source\PSoC4/ADC_Temp.c **** 
1766:Generated_Source\PSoC4/ADC_Temp.c ****         trimRegVal = ADC_Temp_UABH_A_OA_TRIM_AGND_REG;
1767:Generated_Source\PSoC4/ADC_Temp.c ****         trimRegVal &= ~(ADC_Temp_AGND_TRIM_MASK << CyUAB_AGND_OFFSET_SHIFT);
1768:Generated_Source\PSoC4/ADC_Temp.c ****         trimRegVal |= (agndTrim << CyUAB_AGND_OFFSET_SHIFT);
1769:Generated_Source\PSoC4/ADC_Temp.c ****         ADC_Temp_UABH_A_OA_TRIM_AGND_REG = trimRegVal;
1770:Generated_Source\PSoC4/ADC_Temp.c **** 
1771:Generated_Source\PSoC4/ADC_Temp.c ****         return ADC_Temp_GetCompStatus();
1772:Generated_Source\PSoC4/ADC_Temp.c ****     }
1773:Generated_Source\PSoC4/ADC_Temp.c **** 
1774:Generated_Source\PSoC4/ADC_Temp.c ****     /*******************************************************************************
1775:Generated_Source\PSoC4/ADC_Temp.c ****     * Function Name: ADC_Temp_SetOpampTrim
1776:Generated_Source\PSoC4/ADC_Temp.c ****     ********************************************************************************
1777:Generated_Source\PSoC4/ADC_Temp.c ****     *
1778:Generated_Source\PSoC4/ADC_Temp.c ****     * Write the Opamp trim code and return the comparator status.
1779:Generated_Source\PSoC4/ADC_Temp.c ****     *
1780:Generated_Source\PSoC4/ADC_Temp.c ****     *******************************************************************************/
1781:Generated_Source\PSoC4/ADC_Temp.c ****     static uint32 ADC_Temp_SetOpampTrim(uint32 opampTrim)
1782:Generated_Source\PSoC4/ADC_Temp.c ****     {
1783:Generated_Source\PSoC4/ADC_Temp.c ****         uint32 trimRegVal = ADC_Temp_UABH_A_OA_TRIM_OA_REG;
1784:Generated_Source\PSoC4/ADC_Temp.c ****         trimRegVal &= ~(ADC_Temp_OPAMP_TRIM_MASK << CyUAB_OA_OFFSET_SHIFT);
1785:Generated_Source\PSoC4/ADC_Temp.c ****         trimRegVal |= (opampTrim << CyUAB_OA_OFFSET_SHIFT);
1786:Generated_Source\PSoC4/ADC_Temp.c ****         ADC_Temp_UABH_A_OA_TRIM_OA_REG = trimRegVal;
1787:Generated_Source\PSoC4/ADC_Temp.c **** 
1788:Generated_Source\PSoC4/ADC_Temp.c ****         return ADC_Temp_GetCompStatus();
1789:Generated_Source\PSoC4/ADC_Temp.c ****     }
1790:Generated_Source\PSoC4/ADC_Temp.c **** 
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 57


1791:Generated_Source\PSoC4/ADC_Temp.c **** 
1792:Generated_Source\PSoC4/ADC_Temp.c ****     /*******************************************************************************
1793:Generated_Source\PSoC4/ADC_Temp.c ****     * Function Name: ADC_Temp_SetAgndTrim
1794:Generated_Source\PSoC4/ADC_Temp.c ****     ********************************************************************************
1795:Generated_Source\PSoC4/ADC_Temp.c ****     *
1796:Generated_Source\PSoC4/ADC_Temp.c ****     * Write the Agnd trim code and return the comparator status.
1797:Generated_Source\PSoC4/ADC_Temp.c ****     *
1798:Generated_Source\PSoC4/ADC_Temp.c ****     *******************************************************************************/
1799:Generated_Source\PSoC4/ADC_Temp.c ****     static uint32 ADC_Temp_SetAgndTrim(uint32 agndTrim)
1800:Generated_Source\PSoC4/ADC_Temp.c ****     {
1801:Generated_Source\PSoC4/ADC_Temp.c ****         uint32 trimRegVal = ADC_Temp_UABH_A_OA_TRIM_AGND_REG;
1802:Generated_Source\PSoC4/ADC_Temp.c ****         trimRegVal &= ~(ADC_Temp_AGND_TRIM_MASK << CyUAB_AGND_OFFSET_SHIFT);
1803:Generated_Source\PSoC4/ADC_Temp.c ****         trimRegVal |= (agndTrim << CyUAB_AGND_OFFSET_SHIFT);
1804:Generated_Source\PSoC4/ADC_Temp.c ****         ADC_Temp_UABH_A_OA_TRIM_AGND_REG = trimRegVal;
1805:Generated_Source\PSoC4/ADC_Temp.c **** 
1806:Generated_Source\PSoC4/ADC_Temp.c ****         return ADC_Temp_GetCompStatus();
1807:Generated_Source\PSoC4/ADC_Temp.c ****     }
1808:Generated_Source\PSoC4/ADC_Temp.c **** 
1809:Generated_Source\PSoC4/ADC_Temp.c ****     /*******************************************************************************
1810:Generated_Source\PSoC4/ADC_Temp.c ****     * Function Name: ADC_Temp_GetCompStatus
1811:Generated_Source\PSoC4/ADC_Temp.c ****     ********************************************************************************
1812:Generated_Source\PSoC4/ADC_Temp.c ****     *
1813:Generated_Source\PSoC4/ADC_Temp.c ****     * Delays to allow filter to settle before reading the ADC result.
1814:Generated_Source\PSoC4/ADC_Temp.c ****     * Returns 1 if the filter output is greater than AGND, else 0.
1815:Generated_Source\PSoC4/ADC_Temp.c ****     *
1816:Generated_Source\PSoC4/ADC_Temp.c ****     *******************************************************************************/
1817:Generated_Source\PSoC4/ADC_Temp.c ****     static uint32 ADC_Temp_GetCompStatus(void)
1818:Generated_Source\PSoC4/ADC_Temp.c ****     {
1819:Generated_Source\PSoC4/ADC_Temp.c ****         uint32 compStatus = 0UL;
1820:Generated_Source\PSoC4/ADC_Temp.c ****         int16 zeroCode = 0;
1821:Generated_Source\PSoC4/ADC_Temp.c **** 
1822:Generated_Source\PSoC4/ADC_Temp.c ****         CyDelayUs(ADC_Temp_allConfigs[ADC_Temp_currentConfig].filterTrimDelay);
1823:Generated_Source\PSoC4/ADC_Temp.c **** 
1824:Generated_Source\PSoC4/ADC_Temp.c ****         /*If unsigned differential */
1825:Generated_Source\PSoC4/ADC_Temp.c ****         if((ADC_Temp_allConfigs[ADC_Temp_currentConfig].sampleCtrl
1826:Generated_Source\PSoC4/ADC_Temp.c ****             & ADC_Temp_SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_MSK) == 0U)
1827:Generated_Source\PSoC4/ADC_Temp.c ****         {
1828:Generated_Source\PSoC4/ADC_Temp.c ****             zeroCode = 0x800;
1829:Generated_Source\PSoC4/ADC_Temp.c ****         }
1830:Generated_Source\PSoC4/ADC_Temp.c **** 
1831:Generated_Source\PSoC4/ADC_Temp.c ****         if (ADC_Temp_GetResult16(ADC_Temp_FILTER_ADC_CHANNEL) < zeroCode)
1832:Generated_Source\PSoC4/ADC_Temp.c ****         {
1833:Generated_Source\PSoC4/ADC_Temp.c ****             compStatus = 1UL;
1834:Generated_Source\PSoC4/ADC_Temp.c ****         }
1835:Generated_Source\PSoC4/ADC_Temp.c **** 
1836:Generated_Source\PSoC4/ADC_Temp.c ****         return compStatus;
1837:Generated_Source\PSoC4/ADC_Temp.c ****     }
1838:Generated_Source\PSoC4/ADC_Temp.c **** 
1839:Generated_Source\PSoC4/ADC_Temp.c ****     /*******************************************************************************
1840:Generated_Source\PSoC4/ADC_Temp.c ****     * Function Name: ADC_Temp_IncOpampTrim
1841:Generated_Source\PSoC4/ADC_Temp.c ****     ********************************************************************************
1842:Generated_Source\PSoC4/ADC_Temp.c ****     *
1843:Generated_Source\PSoC4/ADC_Temp.c ****     * Increments the Opamp trim code by one. Note that Opamp trim code is
1844:Generated_Source\PSoC4/ADC_Temp.c ****     * a 4-bit sign-magnitude value.
1845:Generated_Source\PSoC4/ADC_Temp.c ****     *
1846:Generated_Source\PSoC4/ADC_Temp.c ****     * Skips OPAMP_TRIM_NEG_BASE because it is the same as POS_BASE.
1847:Generated_Source\PSoC4/ADC_Temp.c ****     *
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 58


1848:Generated_Source\PSoC4/ADC_Temp.c ****     *******************************************************************************/
1849:Generated_Source\PSoC4/ADC_Temp.c ****     /* Skips OPAMP_TRIM_NEG_BASE because it is the same as POS_BASE. */
1850:Generated_Source\PSoC4/ADC_Temp.c ****     static uint32 ADC_Temp_IncOpampTrim(uint32 trim)
1851:Generated_Source\PSoC4/ADC_Temp.c ****     {
1852:Generated_Source\PSoC4/ADC_Temp.c **** 
1853:Generated_Source\PSoC4/ADC_Temp.c ****         if (trim < (ADC_Temp_OPAMP_TRIM_POS_LIMIT - 1uL))
1854:Generated_Source\PSoC4/ADC_Temp.c ****         {
1855:Generated_Source\PSoC4/ADC_Temp.c ****             trim = trim + 1uL;
1856:Generated_Source\PSoC4/ADC_Temp.c ****         }
1857:Generated_Source\PSoC4/ADC_Temp.c ****         else if ((ADC_Temp_OPAMP_TRIM_POS_LIMIT - 1uL) == trim)
1858:Generated_Source\PSoC4/ADC_Temp.c ****         {
1859:Generated_Source\PSoC4/ADC_Temp.c ****             trim = ADC_Temp_OPAMP_TRIM_NEG_LIMIT;
1860:Generated_Source\PSoC4/ADC_Temp.c ****         }
1861:Generated_Source\PSoC4/ADC_Temp.c ****         else if (trim <= (ADC_Temp_OPAMP_TRIM_NEG_BASE + 1uL))
1862:Generated_Source\PSoC4/ADC_Temp.c ****         {
1863:Generated_Source\PSoC4/ADC_Temp.c ****             trim = ADC_Temp_OPAMP_TRIM_POS_BASE;
1864:Generated_Source\PSoC4/ADC_Temp.c ****         }
1865:Generated_Source\PSoC4/ADC_Temp.c ****         else
1866:Generated_Source\PSoC4/ADC_Temp.c ****         {
1867:Generated_Source\PSoC4/ADC_Temp.c ****             trim = trim - 1uL;
1868:Generated_Source\PSoC4/ADC_Temp.c ****         }
1869:Generated_Source\PSoC4/ADC_Temp.c **** 
1870:Generated_Source\PSoC4/ADC_Temp.c ****         return trim;
1871:Generated_Source\PSoC4/ADC_Temp.c ****     }
1872:Generated_Source\PSoC4/ADC_Temp.c **** 
1873:Generated_Source\PSoC4/ADC_Temp.c **** 
1874:Generated_Source\PSoC4/ADC_Temp.c ****     /*******************************************************************************
1875:Generated_Source\PSoC4/ADC_Temp.c ****     * Function Name: ADC_Temp_DecOpampTrim
1876:Generated_Source\PSoC4/ADC_Temp.c ****     ********************************************************************************
1877:Generated_Source\PSoC4/ADC_Temp.c ****     *
1878:Generated_Source\PSoC4/ADC_Temp.c ****     * Decrements the Opamp trim code by one. Note that Opamp trim code is
1879:Generated_Source\PSoC4/ADC_Temp.c ****     * a 4-bit sign-magnitude value.
1880:Generated_Source\PSoC4/ADC_Temp.c ****     *
1881:Generated_Source\PSoC4/ADC_Temp.c ****     * Skips OPAMP_TRIM_NEG_BASE because it is the same as POS_BASE.
1882:Generated_Source\PSoC4/ADC_Temp.c ****     *
1883:Generated_Source\PSoC4/ADC_Temp.c ****     *******************************************************************************/
1884:Generated_Source\PSoC4/ADC_Temp.c ****     static uint32 ADC_Temp_DecOpampTrim(uint32 trim)
1885:Generated_Source\PSoC4/ADC_Temp.c ****     {
1886:Generated_Source\PSoC4/ADC_Temp.c **** 
1887:Generated_Source\PSoC4/ADC_Temp.c ****         if (ADC_Temp_OPAMP_TRIM_POS_BASE == trim)
1888:Generated_Source\PSoC4/ADC_Temp.c ****         {
1889:Generated_Source\PSoC4/ADC_Temp.c ****             trim = ADC_Temp_OPAMP_TRIM_NEG_BASE + 1uL;
1890:Generated_Source\PSoC4/ADC_Temp.c ****         }
1891:Generated_Source\PSoC4/ADC_Temp.c ****         else if (trim < ADC_Temp_OPAMP_TRIM_POS_LIMIT)
1892:Generated_Source\PSoC4/ADC_Temp.c ****         {
1893:Generated_Source\PSoC4/ADC_Temp.c ****             trim = trim - 1uL;
1894:Generated_Source\PSoC4/ADC_Temp.c ****         }
1895:Generated_Source\PSoC4/ADC_Temp.c ****         else if (trim < ADC_Temp_OPAMP_TRIM_NEG_LIMIT)
1896:Generated_Source\PSoC4/ADC_Temp.c ****         {
1897:Generated_Source\PSoC4/ADC_Temp.c ****             trim = trim + 1uL;
1898:Generated_Source\PSoC4/ADC_Temp.c ****         }
1899:Generated_Source\PSoC4/ADC_Temp.c ****         else
1900:Generated_Source\PSoC4/ADC_Temp.c ****         {
1901:Generated_Source\PSoC4/ADC_Temp.c ****             trim = ADC_Temp_OPAMP_TRIM_POS_LIMIT - 1uL;
1902:Generated_Source\PSoC4/ADC_Temp.c ****         }
1903:Generated_Source\PSoC4/ADC_Temp.c **** 
1904:Generated_Source\PSoC4/ADC_Temp.c ****         return trim;
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 59


1905:Generated_Source\PSoC4/ADC_Temp.c ****     }
1906:Generated_Source\PSoC4/ADC_Temp.c **** 
1907:Generated_Source\PSoC4/ADC_Temp.c ****     /*******************************************************************************
1908:Generated_Source\PSoC4/ADC_Temp.c ****     * Function Name: ADC_Temp_IncAgndTrim
1909:Generated_Source\PSoC4/ADC_Temp.c ****     ********************************************************************************
1910:Generated_Source\PSoC4/ADC_Temp.c ****     *
1911:Generated_Source\PSoC4/ADC_Temp.c ****     * Increments the Agnd trim code by one. Note that Agnd trim code is
1912:Generated_Source\PSoC4/ADC_Temp.c ****     * a 5-bit sign-magnitude value.
1913:Generated_Source\PSoC4/ADC_Temp.c ****     *
1914:Generated_Source\PSoC4/ADC_Temp.c ****     * Skips AGND_TRIM_NEG_BASE because it is the same as POS_BASE.
1915:Generated_Source\PSoC4/ADC_Temp.c ****     *
1916:Generated_Source\PSoC4/ADC_Temp.c ****     *******************************************************************************/
1917:Generated_Source\PSoC4/ADC_Temp.c ****     static uint32 ADC_Temp_IncAgndTrim(uint32 trim)
1918:Generated_Source\PSoC4/ADC_Temp.c ****     {
1919:Generated_Source\PSoC4/ADC_Temp.c **** 
1920:Generated_Source\PSoC4/ADC_Temp.c ****         if (trim < (ADC_Temp_AGND_TRIM_POS_LIMIT - 1uL))
1921:Generated_Source\PSoC4/ADC_Temp.c ****         {
1922:Generated_Source\PSoC4/ADC_Temp.c ****             trim = trim + 1uL;
1923:Generated_Source\PSoC4/ADC_Temp.c ****         }
1924:Generated_Source\PSoC4/ADC_Temp.c ****         else if ((ADC_Temp_AGND_TRIM_POS_LIMIT - 1uL) == trim)
1925:Generated_Source\PSoC4/ADC_Temp.c ****         {
1926:Generated_Source\PSoC4/ADC_Temp.c ****             trim = ADC_Temp_AGND_TRIM_NEG_LIMIT;
1927:Generated_Source\PSoC4/ADC_Temp.c ****         }
1928:Generated_Source\PSoC4/ADC_Temp.c ****         else if (trim <= (ADC_Temp_AGND_TRIM_NEG_BASE + 1uL))
1929:Generated_Source\PSoC4/ADC_Temp.c ****         {
1930:Generated_Source\PSoC4/ADC_Temp.c ****             trim = ADC_Temp_AGND_TRIM_POS_BASE;
1931:Generated_Source\PSoC4/ADC_Temp.c ****         }
1932:Generated_Source\PSoC4/ADC_Temp.c ****         else
1933:Generated_Source\PSoC4/ADC_Temp.c ****         {
1934:Generated_Source\PSoC4/ADC_Temp.c ****             trim = trim - 1uL;
1935:Generated_Source\PSoC4/ADC_Temp.c ****         }
1936:Generated_Source\PSoC4/ADC_Temp.c **** 
1937:Generated_Source\PSoC4/ADC_Temp.c ****         return trim;
1938:Generated_Source\PSoC4/ADC_Temp.c ****     }
1939:Generated_Source\PSoC4/ADC_Temp.c **** 
1940:Generated_Source\PSoC4/ADC_Temp.c ****     /*******************************************************************************
1941:Generated_Source\PSoC4/ADC_Temp.c ****     * Function Name: ADC_Temp_DecAgndTrim
1942:Generated_Source\PSoC4/ADC_Temp.c ****     ********************************************************************************
1943:Generated_Source\PSoC4/ADC_Temp.c ****     *
1944:Generated_Source\PSoC4/ADC_Temp.c ****     * Decrements the Agnd trim code by one. Note that Agnd trim code is
1945:Generated_Source\PSoC4/ADC_Temp.c ****     * a 5-bit sign-magnitude value.
1946:Generated_Source\PSoC4/ADC_Temp.c ****     *
1947:Generated_Source\PSoC4/ADC_Temp.c ****     * Skips AGND_TRIM_NEG_BASE because it is the same as POS_BASE.
1948:Generated_Source\PSoC4/ADC_Temp.c ****     *
1949:Generated_Source\PSoC4/ADC_Temp.c ****     *******************************************************************************/
1950:Generated_Source\PSoC4/ADC_Temp.c ****     static uint32 ADC_Temp_DecAgndTrim(uint32 trim)
1951:Generated_Source\PSoC4/ADC_Temp.c ****     {
1952:Generated_Source\PSoC4/ADC_Temp.c **** 
1953:Generated_Source\PSoC4/ADC_Temp.c ****         if (trim == ADC_Temp_AGND_TRIM_POS_BASE)
1954:Generated_Source\PSoC4/ADC_Temp.c ****         {
1955:Generated_Source\PSoC4/ADC_Temp.c ****             trim = ADC_Temp_AGND_TRIM_NEG_BASE + 1uL;
1956:Generated_Source\PSoC4/ADC_Temp.c ****         }
1957:Generated_Source\PSoC4/ADC_Temp.c ****         else if (trim < ADC_Temp_AGND_TRIM_POS_LIMIT)
1958:Generated_Source\PSoC4/ADC_Temp.c ****         {
1959:Generated_Source\PSoC4/ADC_Temp.c ****             trim = trim - 1uL;
1960:Generated_Source\PSoC4/ADC_Temp.c ****         }
1961:Generated_Source\PSoC4/ADC_Temp.c ****         else if (trim < ADC_Temp_AGND_TRIM_NEG_LIMIT)
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 60


1962:Generated_Source\PSoC4/ADC_Temp.c ****         {
1963:Generated_Source\PSoC4/ADC_Temp.c ****             trim = trim + 1uL;
1964:Generated_Source\PSoC4/ADC_Temp.c ****         }
1965:Generated_Source\PSoC4/ADC_Temp.c ****         else
1966:Generated_Source\PSoC4/ADC_Temp.c ****         {
1967:Generated_Source\PSoC4/ADC_Temp.c ****             trim = ADC_Temp_AGND_TRIM_POS_LIMIT - 1uL;
1968:Generated_Source\PSoC4/ADC_Temp.c ****         }
1969:Generated_Source\PSoC4/ADC_Temp.c **** 
1970:Generated_Source\PSoC4/ADC_Temp.c ****         return trim;
1971:Generated_Source\PSoC4/ADC_Temp.c ****     }
1972:Generated_Source\PSoC4/ADC_Temp.c **** 
1973:Generated_Source\PSoC4/ADC_Temp.c ****     /*******************************************************************************
1974:Generated_Source\PSoC4/ADC_Temp.c ****     * Function Name: ADC_Temp_filterInit
1975:Generated_Source\PSoC4/ADC_Temp.c ****     ********************************************************************************
1976:Generated_Source\PSoC4/ADC_Temp.c ****     *
1977:Generated_Source\PSoC4/ADC_Temp.c ****     * Initializes the UAB halves and the CTB buffer between the AGND and the SAR.
1978:Generated_Source\PSoC4/ADC_Temp.c ****     *
1979:Generated_Source\PSoC4/ADC_Temp.c ****     *******************************************************************************/
1980:Generated_Source\PSoC4/ADC_Temp.c ****     void ADC_Temp_filterInit(uint32 configNum)
1981:Generated_Source\PSoC4/ADC_Temp.c ****     {
1982:Generated_Source\PSoC4/ADC_Temp.c ****         /* Configure the common filter settings if any configuration filters */
1983:Generated_Source\PSoC4/ADC_Temp.c ****         switch (configNum)
1984:Generated_Source\PSoC4/ADC_Temp.c ****         {
1985:Generated_Source\PSoC4/ADC_Temp.c ****             #if (0u != ADC_Temp_CFG0_FILTER_PRESENT)
1986:Generated_Source\PSoC4/ADC_Temp.c ****             case 0u:
1987:Generated_Source\PSoC4/ADC_Temp.c ****                 ADC_Temp_UABH_A_Init(&ADC_Temp_CFG0_UABH_A_FILTER_config);
1988:Generated_Source\PSoC4/ADC_Temp.c ****                 ADC_Temp_UABH_B_Init(&ADC_Temp_CFG0_UABH_B_FILTER_config);
1989:Generated_Source\PSoC4/ADC_Temp.c ****             break;
1990:Generated_Source\PSoC4/ADC_Temp.c ****             #endif
1991:Generated_Source\PSoC4/ADC_Temp.c ****             #if (0u != ADC_Temp_CFG1_FILTER_PRESENT)
1992:Generated_Source\PSoC4/ADC_Temp.c ****             case 1u:
1993:Generated_Source\PSoC4/ADC_Temp.c ****                 ADC_Temp_UABH_A_Init(&ADC_Temp_CFG1_UABH_A_FILTER_config);
1994:Generated_Source\PSoC4/ADC_Temp.c ****                 ADC_Temp_UABH_B_Init(&ADC_Temp_CFG1_UABH_B_FILTER_config);
1995:Generated_Source\PSoC4/ADC_Temp.c ****             break;
1996:Generated_Source\PSoC4/ADC_Temp.c ****             #endif
1997:Generated_Source\PSoC4/ADC_Temp.c ****             #if (0u != ADC_Temp_CFG2_FILTER_PRESENT)
1998:Generated_Source\PSoC4/ADC_Temp.c ****             case 2u:
1999:Generated_Source\PSoC4/ADC_Temp.c ****                 ADC_Temp_UABH_A_Init(&ADC_Temp_CFG2_UABH_A_FILTER_config);
2000:Generated_Source\PSoC4/ADC_Temp.c ****                 ADC_Temp_UABH_B_Init(&ADC_Temp_CFG2_UABH_B_FILTER_config);
2001:Generated_Source\PSoC4/ADC_Temp.c ****             break;
2002:Generated_Source\PSoC4/ADC_Temp.c ****             #endif
2003:Generated_Source\PSoC4/ADC_Temp.c ****             #if (0u != ADC_Temp_CFG3_FILTER_PRESENT)
2004:Generated_Source\PSoC4/ADC_Temp.c ****             case 3u:
2005:Generated_Source\PSoC4/ADC_Temp.c ****                 ADC_Temp_UABH_A_Init(&ADC_Temp_CFG3_UABH_A_FILTER_config);
2006:Generated_Source\PSoC4/ADC_Temp.c ****                 ADC_Temp_UABH_B_Init(&ADC_Temp_CFG3_UABH_B_FILTER_config);
2007:Generated_Source\PSoC4/ADC_Temp.c ****             break;
2008:Generated_Source\PSoC4/ADC_Temp.c ****             #endif
2009:Generated_Source\PSoC4/ADC_Temp.c ****             default:
2010:Generated_Source\PSoC4/ADC_Temp.c ****             break;
2011:Generated_Source\PSoC4/ADC_Temp.c ****         }
2012:Generated_Source\PSoC4/ADC_Temp.c **** 
2013:Generated_Source\PSoC4/ADC_Temp.c ****         ADC_Temp_FILTERAGND2SAR_BUFFER_Init();
2014:Generated_Source\PSoC4/ADC_Temp.c ****     }
2015:Generated_Source\PSoC4/ADC_Temp.c **** #endif /* ADC_Temp_ANY_CONFIG_USES_FILTER != 0u */
2016:Generated_Source\PSoC4/ADC_Temp.c **** 
2017:Generated_Source\PSoC4/ADC_Temp.c **** 
2018:Generated_Source\PSoC4/ADC_Temp.c **** /* ****************************************************************************
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 61


2019:Generated_Source\PSoC4/ADC_Temp.c **** * Function Name: ADC_Temp_Init
2020:Generated_Source\PSoC4/ADC_Temp.c **** ****************************************************************************//*
2021:Generated_Source\PSoC4/ADC_Temp.c **** *
2022:Generated_Source\PSoC4/ADC_Temp.c **** * \brief Initialize the component according to parameters defined in the
2023:Generated_Source\PSoC4/ADC_Temp.c **** * customizer.
2024:Generated_Source\PSoC4/ADC_Temp.c **** *
2025:Generated_Source\PSoC4/ADC_Temp.c **** * \param None
2026:Generated_Source\PSoC4/ADC_Temp.c **** *
2027:Generated_Source\PSoC4/ADC_Temp.c **** * \return None
2028:Generated_Source\PSoC4/ADC_Temp.c **** *
2029:Generated_Source\PSoC4/ADC_Temp.c **** * \sideeffect None
2030:Generated_Source\PSoC4/ADC_Temp.c **** *
2031:Generated_Source\PSoC4/ADC_Temp.c **** *******************************************************************************/
2032:Generated_Source\PSoC4/ADC_Temp.c **** void ADC_Temp_Init(void)
2033:Generated_Source\PSoC4/ADC_Temp.c **** {
 1337              		.loc 1 2033 0
 1338              		.cfi_startproc
 1339              		@ args = 0, pretend = 0, frame = 0
 1340              		@ frame_needed = 0, uses_anonymous_args = 0
 1341 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1342              		.cfi_def_cfa_offset 20
 1343              		.cfi_offset 4, -20
 1344              		.cfi_offset 5, -16
 1345              		.cfi_offset 6, -12
 1346              		.cfi_offset 7, -8
 1347              		.cfi_offset 14, -4
 1348 0002 4746     		mov	r7, r8
 1349 0004 80B4     		push	{r7}
 1350              		.cfi_def_cfa_offset 24
 1351              		.cfi_offset 8, -24
 1352              	.LVL117:
2034:Generated_Source\PSoC4/ADC_Temp.c ****     uint32 chNum = 0ul;
2035:Generated_Source\PSoC4/ADC_Temp.c ****     uint32 configNum = 0u;
2036:Generated_Source\PSoC4/ADC_Temp.c ****     int32 counts;
2037:Generated_Source\PSoC4/ADC_Temp.c **** 
2038:Generated_Source\PSoC4/ADC_Temp.c ****     if(0u == ADC_Temp_initVar)
 1353              		.loc 1 2038 0
 1354 0006 2D4B     		ldr	r3, .L110
 1355 0008 1B79     		ldrb	r3, [r3, #4]
 1356 000a 002B     		cmp	r3, #0
 1357 000c 38D0     		beq	.L109
 1358 000e 51E0     		b	.L102
 1359              	.LVL118:
 1360              	.L108:
2039:Generated_Source\PSoC4/ADC_Temp.c ****     {
2040:Generated_Source\PSoC4/ADC_Temp.c ****         /* Set offset and countsPer10Volt for all channels */
2041:Generated_Source\PSoC4/ADC_Temp.c ****         for(chNum = 0ul; chNum < ADC_Temp_TOTAL_CHANNELS_NUM; chNum++)
2042:Generated_Source\PSoC4/ADC_Temp.c ****         {
2043:Generated_Source\PSoC4/ADC_Temp.c ****             if((ADC_Temp_channelsConfig[chNum] & ADC_Temp_SAR_CHAN_CONFIG_RESOLUTION_MSK) != 0u)
2044:Generated_Source\PSoC4/ADC_Temp.c ****             {
2045:Generated_Source\PSoC4/ADC_Temp.c ****                 if((ADC_Temp_allConfigs[configNum].sampleCtrl
2046:Generated_Source\PSoC4/ADC_Temp.c ****                     & ADC_Temp_SAR_SAMPLE_CTRL_SUB_RESOLUTION_MSK)
2047:Generated_Source\PSoC4/ADC_Temp.c ****                     == ADC_Temp_SUB_RESOLUTION_10B)
2048:Generated_Source\PSoC4/ADC_Temp.c ****                 {
2049:Generated_Source\PSoC4/ADC_Temp.c ****                     counts = (int32) ADC_Temp_SAR_WRK_MAX_10BIT;
2050:Generated_Source\PSoC4/ADC_Temp.c ****                 }
2051:Generated_Source\PSoC4/ADC_Temp.c ****                 else
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 62


2052:Generated_Source\PSoC4/ADC_Temp.c ****                 {
2053:Generated_Source\PSoC4/ADC_Temp.c ****                     counts = (int32) ADC_Temp_SAR_WRK_MAX_8BIT;
2054:Generated_Source\PSoC4/ADC_Temp.c ****                 }
2055:Generated_Source\PSoC4/ADC_Temp.c ****             }
2056:Generated_Source\PSoC4/ADC_Temp.c ****             else
2057:Generated_Source\PSoC4/ADC_Temp.c ****             {
2058:Generated_Source\PSoC4/ADC_Temp.c ****                counts = (int32)ADC_Temp_SAR_WRK_MAX_12BIT;
2059:Generated_Source\PSoC4/ADC_Temp.c ****             }
2060:Generated_Source\PSoC4/ADC_Temp.c **** 
2061:Generated_Source\PSoC4/ADC_Temp.c ****             /* Single Ended Channel */
2062:Generated_Source\PSoC4/ADC_Temp.c ****             if((ADC_Temp_channelsConfig[chNum] & ADC_Temp_SAR_CHAN_CONFIG_DIFFERENTIAL_EN_MSK) == 0
2063:Generated_Source\PSoC4/ADC_Temp.c ****             {
2064:Generated_Source\PSoC4/ADC_Temp.c ****                 if(((ADC_Temp_allConfigs[configNum].sampleCtrl
 1361              		.loc 1 2064 0
 1362 0010 EA00     		lsls	r2, r5, #3
 1363 0012 521B     		subs	r2, r2, r5
 1364 0014 D300     		lsls	r3, r2, #3
 1365 0016 2A4A     		ldr	r2, .L110+4
 1366 0018 D318     		adds	r3, r2, r3
 1367 001a DB68     		ldr	r3, [r3, #12]
 1368 001c 5B07     		lsls	r3, r3, #29
 1369 001e 0FD5     		bpl	.L105
2065:Generated_Source\PSoC4/ADC_Temp.c ****                     & ADC_Temp_SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_MSK)
2066:Generated_Source\PSoC4/ADC_Temp.c ****                     == ADC_Temp_SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_MSK) &&
2067:Generated_Source\PSoC4/ADC_Temp.c ****                     ((ADC_Temp_allConfigs[configNum].ctrl & ADC_Temp_SAR_CTRL_NEG_SEL_MSK)
 1370              		.loc 1 2067 0
 1371 0020 EA00     		lsls	r2, r5, #3
 1372 0022 521B     		subs	r2, r2, r5
 1373 0024 D300     		lsls	r3, r2, #3
 1374 0026 264A     		ldr	r2, .L110+4
 1375 0028 D318     		adds	r3, r2, r3
 1376 002a 9B68     		ldr	r3, [r3, #8]
 1377 002c E022     		movs	r2, #224
 1378 002e 1201     		lsls	r2, r2, #4
 1379 0030 1340     		ands	r3, r2
2066:Generated_Source\PSoC4/ADC_Temp.c ****                     ((ADC_Temp_allConfigs[configNum].ctrl & ADC_Temp_SAR_CTRL_NEG_SEL_MSK)
 1380              		.loc 1 2066 0
 1381 0032 9342     		cmp	r3, r2
 1382 0034 04D1     		bne	.L105
2068:Generated_Source\PSoC4/ADC_Temp.c ****                     == ADC_Temp_NEG_VREF_SHIFTED))
2069:Generated_Source\PSoC4/ADC_Temp.c ****                 {
2070:Generated_Source\PSoC4/ADC_Temp.c ****                     /* Set offset to the minus half scale to convert results to unsigned format */
2071:Generated_Source\PSoC4/ADC_Temp.c ****                     ADC_Temp_offset[chNum] = (int16)(counts / -2);
 1383              		.loc 1 2071 0
 1384 0036 6300     		lsls	r3, r4, #1
 1385 0038 2249     		ldr	r1, .L110+8
 1386 003a 234A     		ldr	r2, .L110+12
 1387 003c 9952     		strh	r1, [r3, r2]
 1388 003e 03E0     		b	.L106
 1389              	.L105:
2072:Generated_Source\PSoC4/ADC_Temp.c ****                 }
2073:Generated_Source\PSoC4/ADC_Temp.c ****                 else
2074:Generated_Source\PSoC4/ADC_Temp.c ****                 {
2075:Generated_Source\PSoC4/ADC_Temp.c ****                     ADC_Temp_offset[chNum] = 0;
 1390              		.loc 1 2075 0
 1391 0040 6300     		lsls	r3, r4, #1
 1392 0042 0021     		movs	r1, #0
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 63


 1393 0044 204A     		ldr	r2, .L110+12
 1394 0046 9952     		strh	r1, [r3, r2]
 1395              	.L106:
2076:Generated_Source\PSoC4/ADC_Temp.c ****                 }
2077:Generated_Source\PSoC4/ADC_Temp.c **** 
2078:Generated_Source\PSoC4/ADC_Temp.c ****             }
2079:Generated_Source\PSoC4/ADC_Temp.c ****             else    /* Differential channel */
2080:Generated_Source\PSoC4/ADC_Temp.c ****             {
2081:Generated_Source\PSoC4/ADC_Temp.c ****                 ADC_Temp_offset[chNum] = 0;
2082:Generated_Source\PSoC4/ADC_Temp.c ****             }
2083:Generated_Source\PSoC4/ADC_Temp.c **** 
2084:Generated_Source\PSoC4/ADC_Temp.c ****             /* Calculate gain in counts per 10 volts with rounding */
2085:Generated_Source\PSoC4/ADC_Temp.c ****             ADC_Temp_countsPer10Volt[chNum] = (int16)(((counts * ADC_Temp_10MV_COUNTS) \
2086:Generated_Source\PSoC4/ADC_Temp.c ****                             + ADC_Temp_allConfigs[configNum].vrefMvValue) \
 1396              		.loc 1 2086 0
 1397 0048 1D4B     		ldr	r3, .L110+4
 1398 004a 9846     		mov	r8, r3
 1399 004c EF00     		lsls	r7, r5, #3
 1400 004e 7B1B     		subs	r3, r7, r5
 1401 0050 DE00     		lsls	r6, r3, #3
 1402 0052 4644     		add	r6, r6, r8
 1403 0054 F16A     		ldr	r1, [r6, #44]
 1404 0056 1D4B     		ldr	r3, .L110+16
 1405 0058 C818     		adds	r0, r1, r3
2087:Generated_Source\PSoC4/ADC_Temp.c ****                             / (ADC_Temp_allConfigs[configNum].vrefMvValue * 2));
 1406              		.loc 1 2087 0
 1407 005a 4900     		lsls	r1, r1, #1
 1408 005c FFF7FEFF 		bl	__aeabi_idiv
 1409              	.LVL119:
2085:Generated_Source\PSoC4/ADC_Temp.c ****                             + ADC_Temp_allConfigs[configNum].vrefMvValue) \
 1410              		.loc 1 2085 0
 1411 0060 00B2     		sxth	r0, r0
 1412 0062 A300     		lsls	r3, r4, #2
 1413 0064 1A4A     		ldr	r2, .L110+20
 1414 0066 9850     		str	r0, [r3, r2]
2088:Generated_Source\PSoC4/ADC_Temp.c **** 
2089:Generated_Source\PSoC4/ADC_Temp.c ****             /* Increment configuration number after rolling over to the next configuration*/
2090:Generated_Source\PSoC4/ADC_Temp.c ****             if((ADC_Temp_allConfigs[configNum].channelBase
 1415              		.loc 1 2090 0
 1416 0068 7F1B     		subs	r7, r7, r5
 1417 006a FB00     		lsls	r3, r7, #3
 1418 006c 4246     		mov	r2, r8
 1419 006e 9A58     		ldr	r2, [r3, r2]
2091:Generated_Source\PSoC4/ADC_Temp.c ****                 + (ADC_Temp_allConfigs[configNum].numChannels - 1uL)) == chNum)
 1420              		.loc 1 2091 0
 1421 0070 7368     		ldr	r3, [r6, #4]
 1422 0072 D318     		adds	r3, r2, r3
 1423 0074 013B     		subs	r3, r3, #1
2090:Generated_Source\PSoC4/ADC_Temp.c ****                 + (ADC_Temp_allConfigs[configNum].numChannels - 1uL)) == chNum)
 1424              		.loc 1 2090 0
 1425 0076 9C42     		cmp	r4, r3
 1426 0078 00D1     		bne	.L107
2092:Generated_Source\PSoC4/ADC_Temp.c ****             {
2093:Generated_Source\PSoC4/ADC_Temp.c ****                 configNum++;
 1427              		.loc 1 2093 0
 1428 007a 0135     		adds	r5, r5, #1
 1429              	.LVL120:
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 64


 1430              	.L107:
2041:Generated_Source\PSoC4/ADC_Temp.c ****         {
 1431              		.loc 1 2041 0 discriminator 2
 1432 007c 0134     		adds	r4, r4, #1
 1433              	.LVL121:
 1434 007e 01E0     		b	.L103
 1435              	.LVL122:
 1436              	.L109:
 1437 0080 0025     		movs	r5, #0
 1438 0082 0024     		movs	r4, #0
 1439              	.LVL123:
 1440              	.L103:
2041:Generated_Source\PSoC4/ADC_Temp.c ****         {
 1441              		.loc 1 2041 0 is_stmt 0 discriminator 1
 1442 0084 002C     		cmp	r4, #0
 1443 0086 C3D0     		beq	.L108
2094:Generated_Source\PSoC4/ADC_Temp.c ****             }
2095:Generated_Source\PSoC4/ADC_Temp.c ****         } /* for(chNum = 0ul; chNum < ADC_Temp_TOTAL_CHANNELS_NUM; chNum++) */
2096:Generated_Source\PSoC4/ADC_Temp.c **** 
2097:Generated_Source\PSoC4/ADC_Temp.c ****         /* Start and set interrupt vector */
2098:Generated_Source\PSoC4/ADC_Temp.c ****         CyIntSetPriority(ADC_Temp_INTC_NUMBER, ADC_Temp_INTC_PRIOR_NUMBER);
 1444              		.loc 1 2098 0 is_stmt 1
 1445 0088 0321     		movs	r1, #3
 1446 008a 0F20     		movs	r0, #15
 1447 008c FFF7FEFF 		bl	CyIntSetPriority
 1448              	.LVL124:
2099:Generated_Source\PSoC4/ADC_Temp.c ****         (void)CyIntSetVector(ADC_Temp_INTC_NUMBER, &ADC_Temp_ISR);
 1449              		.loc 1 2099 0
 1450 0090 1049     		ldr	r1, .L110+24
 1451 0092 0F20     		movs	r0, #15
 1452 0094 FFF7FEFF 		bl	CyIntSetVector
 1453              	.LVL125:
2100:Generated_Source\PSoC4/ADC_Temp.c **** 
2101:Generated_Source\PSoC4/ADC_Temp.c ****         /* Initialize configuration zero if SelectConfig has not been called */
2102:Generated_Source\PSoC4/ADC_Temp.c ****         if(0u == ADC_Temp_selected)
 1454              		.loc 1 2102 0
 1455 0098 084B     		ldr	r3, .L110
 1456 009a 5B79     		ldrb	r3, [r3, #5]
 1457 009c 002B     		cmp	r3, #0
 1458 009e 09D1     		bne	.L102
2103:Generated_Source\PSoC4/ADC_Temp.c ****         {
2104:Generated_Source\PSoC4/ADC_Temp.c ****             ADC_Temp_selected = 1u;
 1459              		.loc 1 2104 0
 1460 00a0 0122     		movs	r2, #1
 1461 00a2 064B     		ldr	r3, .L110
 1462 00a4 5A71     		strb	r2, [r3, #5]
 1463              	.LVL126:
2105:Generated_Source\PSoC4/ADC_Temp.c ****             configNum = 0u;
2106:Generated_Source\PSoC4/ADC_Temp.c ****             /* Change Vref selection if is was routed by Creator. Break. */
2107:Generated_Source\PSoC4/ADC_Temp.c ****             #if (ADC_Temp_VREF_ROUTED)
2108:Generated_Source\PSoC4/ADC_Temp.c ****                 ADC_Temp_vrefAMux_DisconnectAll();
2109:Generated_Source\PSoC4/ADC_Temp.c ****             #endif
2110:Generated_Source\PSoC4/ADC_Temp.c ****             ADC_Temp_InitConfig(&ADC_Temp_allConfigs[configNum]);
 1464              		.loc 1 2110 0
 1465 00a6 064C     		ldr	r4, .L110+4
 1466              	.LVL127:
 1467 00a8 2000     		movs	r0, r4
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 65


 1468 00aa FFF7FEFF 		bl	ADC_Temp_InitConfig
 1469              	.LVL128:
2111:Generated_Source\PSoC4/ADC_Temp.c ****             /* Change Vref selection if is was routed by Creator. Make. */
2112:Generated_Source\PSoC4/ADC_Temp.c ****             #if (ADC_Temp_VREF_ROUTED)
2113:Generated_Source\PSoC4/ADC_Temp.c ****                 ADC_Temp_vrefAMux_Select((uint8)configNum);
2114:Generated_Source\PSoC4/ADC_Temp.c ****             #endif
2115:Generated_Source\PSoC4/ADC_Temp.c ****             ADC_Temp_SAR_CHAN_EN_REG = ADC_Temp_allConfigs[configNum].chanEn;
 1470              		.loc 1 2115 0
 1471 00ae 226A     		ldr	r2, [r4, #32]
 1472 00b0 094B     		ldr	r3, .L110+28
 1473 00b2 1A60     		str	r2, [r3]
 1474              	.LVL129:
 1475              	.L102:
2116:Generated_Source\PSoC4/ADC_Temp.c ****             #if(0u != ADC_Temp_ANY_CONFIG_USES_FILTER)
2117:Generated_Source\PSoC4/ADC_Temp.c ****                 ADC_Temp_filterVinMux_Select((uint8)configNum);
2118:Generated_Source\PSoC4/ADC_Temp.c ****                 ADC_Temp_filterInit(configNum);
2119:Generated_Source\PSoC4/ADC_Temp.c ****             #endif
2120:Generated_Source\PSoC4/ADC_Temp.c ****         }
2121:Generated_Source\PSoC4/ADC_Temp.c ****     }
2122:Generated_Source\PSoC4/ADC_Temp.c ****     return;
2123:Generated_Source\PSoC4/ADC_Temp.c **** }
 1476              		.loc 1 2123 0
 1477              		@ sp needed
 1478 00b4 04BC     		pop	{r2}
 1479 00b6 9046     		mov	r8, r2
 1480 00b8 F0BD     		pop	{r4, r5, r6, r7, pc}
 1481              	.L111:
 1482 00ba C046     		.align	2
 1483              	.L110:
 1484 00bc 00000000 		.word	.LANCHOR0
 1485 00c0 00000000 		.word	ADC_Temp_allConfigs
 1486 00c4 00F8FFFF 		.word	-2048
 1487 00c8 00000000 		.word	ADC_Temp_offset
 1488 00cc 00007102 		.word	40960000
 1489 00d0 00000000 		.word	ADC_Temp_countsPer10Volt
 1490 00d4 00000000 		.word	ADC_Temp_ISR
 1491 00d8 20003A40 		.word	1077542944
 1492              		.cfi_endproc
 1493              	.LFE26:
 1494              		.size	ADC_Temp_Init, .-ADC_Temp_Init
 1495              		.section	.text.ADC_Temp_Enable,"ax",%progbits
 1496              		.align	2
 1497              		.global	ADC_Temp_Enable
 1498              		.code	16
 1499              		.thumb_func
 1500              		.type	ADC_Temp_Enable, %function
 1501              	ADC_Temp_Enable:
 1502              	.LFB27:
2124:Generated_Source\PSoC4/ADC_Temp.c **** 
2125:Generated_Source\PSoC4/ADC_Temp.c **** 
2126:Generated_Source\PSoC4/ADC_Temp.c **** /* ****************************************************************************
2127:Generated_Source\PSoC4/ADC_Temp.c **** * Function Name: ADC_Temp_Enable
2128:Generated_Source\PSoC4/ADC_Temp.c **** ****************************************************************************//*
2129:Generated_Source\PSoC4/ADC_Temp.c **** *
2130:Generated_Source\PSoC4/ADC_Temp.c **** * \brief Enables the component.
2131:Generated_Source\PSoC4/ADC_Temp.c **** *
2132:Generated_Source\PSoC4/ADC_Temp.c **** * \param None
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 66


2133:Generated_Source\PSoC4/ADC_Temp.c **** *
2134:Generated_Source\PSoC4/ADC_Temp.c **** * \return None
2135:Generated_Source\PSoC4/ADC_Temp.c **** *
2136:Generated_Source\PSoC4/ADC_Temp.c **** * \sideeffect
2137:Generated_Source\PSoC4/ADC_Temp.c **** *  None
2138:Generated_Source\PSoC4/ADC_Temp.c **** *
2139:Generated_Source\PSoC4/ADC_Temp.c **** *******************************************************************************/
2140:Generated_Source\PSoC4/ADC_Temp.c **** void ADC_Temp_Enable(void)
2141:Generated_Source\PSoC4/ADC_Temp.c **** {
 1503              		.loc 1 2141 0
 1504              		.cfi_startproc
 1505              		@ args = 0, pretend = 0, frame = 0
 1506              		@ frame_needed = 0, uses_anonymous_args = 0
 1507 0000 10B5     		push	{r4, lr}
 1508              		.cfi_def_cfa_offset 8
 1509              		.cfi_offset 4, -8
 1510              		.cfi_offset 14, -4
2142:Generated_Source\PSoC4/ADC_Temp.c **** 
2143:Generated_Source\PSoC4/ADC_Temp.c ****     #if(0u != ADC_Temp_ANY_CONFIG_USES_FILTER)
2144:Generated_Source\PSoC4/ADC_Temp.c ****         if((ADC_Temp_allConfigs[ADC_Temp_currentConfig].miscConfig
2145:Generated_Source\PSoC4/ADC_Temp.c ****             & ADC_Temp_MISC_CONFIG_FILTER_PRESENT_MSK)
2146:Generated_Source\PSoC4/ADC_Temp.c ****             == ADC_Temp_MISC_CONFIG_FILTER_PRESENT_MSK)
2147:Generated_Source\PSoC4/ADC_Temp.c ****         {
2148:Generated_Source\PSoC4/ADC_Temp.c ****             ADC_Temp_FILTERAGND2SAR_BUFFER_Enable();
2149:Generated_Source\PSoC4/ADC_Temp.c ****             ADC_Temp_UABH_A_Enable();
2150:Generated_Source\PSoC4/ADC_Temp.c ****             ADC_Temp_UABH_B_Enable();
2151:Generated_Source\PSoC4/ADC_Temp.c ****             ADC_Temp_UABH_B_Run(1u);
2152:Generated_Source\PSoC4/ADC_Temp.c ****             ADC_Temp_UABH_A_Run(1u);
2153:Generated_Source\PSoC4/ADC_Temp.c ****         }
2154:Generated_Source\PSoC4/ADC_Temp.c ****     #endif /* ADC_Temp_ANY_CONFIG_USES_FILTER != 0u */
2155:Generated_Source\PSoC4/ADC_Temp.c **** 
2156:Generated_Source\PSoC4/ADC_Temp.c ****     if (0u == (ADC_Temp_SAR_CTRL_REG & ADC_Temp_SAR_CTRL_ENABLED_MSK))
 1511              		.loc 1 2156 0
 1512 0002 0D4B     		ldr	r3, .L115
 1513 0004 1B68     		ldr	r3, [r3]
 1514 0006 002B     		cmp	r3, #0
 1515 0008 0CDB     		blt	.L113
 1516              	.L114:
2157:Generated_Source\PSoC4/ADC_Temp.c ****     {
2158:Generated_Source\PSoC4/ADC_Temp.c ****         while (0u != (ADC_Temp_SAR_STATUS_REG & ADC_Temp_BUSY_MSK))
 1517              		.loc 1 2158 0 discriminator 1
 1518 000a 0C4B     		ldr	r3, .L115+4
 1519 000c 1B68     		ldr	r3, [r3]
 1520 000e 002B     		cmp	r3, #0
 1521 0010 FBDB     		blt	.L114
2159:Generated_Source\PSoC4/ADC_Temp.c ****         {
2160:Generated_Source\PSoC4/ADC_Temp.c ****             /* wait for SAR to go idle to avoid deadlock */
2161:Generated_Source\PSoC4/ADC_Temp.c ****         }
2162:Generated_Source\PSoC4/ADC_Temp.c **** 
2163:Generated_Source\PSoC4/ADC_Temp.c ****         ADC_Temp_SAR_CTRL_REG |= ADC_Temp_SAR_CTRL_ENABLED_MSK;
 1522              		.loc 1 2163 0
 1523 0012 094A     		ldr	r2, .L115
 1524 0014 1368     		ldr	r3, [r2]
 1525 0016 8021     		movs	r1, #128
 1526 0018 0906     		lsls	r1, r1, #24
 1527 001a 0B43     		orrs	r3, r1
 1528 001c 1360     		str	r3, [r2]
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 67


2164:Generated_Source\PSoC4/ADC_Temp.c **** 
2165:Generated_Source\PSoC4/ADC_Temp.c ****         /* The block is ready to use 10 us after the enable signal is set high. */
2166:Generated_Source\PSoC4/ADC_Temp.c ****         CyDelayUs(ADC_Temp_10US_DELAY);
 1529              		.loc 1 2166 0
 1530 001e 0A20     		movs	r0, #10
 1531 0020 FFF7FEFF 		bl	CyDelayUs
 1532              	.LVL130:
 1533              	.L113:
2167:Generated_Source\PSoC4/ADC_Temp.c ****     }
2168:Generated_Source\PSoC4/ADC_Temp.c **** 
2169:Generated_Source\PSoC4/ADC_Temp.c ****     /* Must set the DFT_CTRL register after enabling the SAR as it is a non-retention register. */
2170:Generated_Source\PSoC4/ADC_Temp.c ****     ADC_Temp_SetDFTControl(&ADC_Temp_allConfigs[ADC_Temp_currentConfig]);
 1534              		.loc 1 2170 0
 1535 0024 064B     		ldr	r3, .L115+8
 1536 0026 1A68     		ldr	r2, [r3]
 1537 0028 D300     		lsls	r3, r2, #3
 1538 002a 9B1A     		subs	r3, r3, r2
 1539 002c D800     		lsls	r0, r3, #3
 1540 002e 054B     		ldr	r3, .L115+12
 1541 0030 C018     		adds	r0, r0, r3
 1542 0032 FFF7FEFF 		bl	ADC_Temp_SetDFTControl
 1543              	.LVL131:
2171:Generated_Source\PSoC4/ADC_Temp.c **** 
2172:Generated_Source\PSoC4/ADC_Temp.c ****     return;
2173:Generated_Source\PSoC4/ADC_Temp.c **** }
 1544              		.loc 1 2173 0
 1545              		@ sp needed
 1546 0036 10BD     		pop	{r4, pc}
 1547              	.L116:
 1548              		.align	2
 1549              	.L115:
 1550 0038 00003A40 		.word	1077542912
 1551 003c A0023A40 		.word	1077543584
 1552 0040 00000000 		.word	.LANCHOR0
 1553 0044 00000000 		.word	ADC_Temp_allConfigs
 1554              		.cfi_endproc
 1555              	.LFE27:
 1556              		.size	ADC_Temp_Enable, .-ADC_Temp_Enable
 1557              		.section	.text.ADC_Temp_Start,"ax",%progbits
 1558              		.align	2
 1559              		.global	ADC_Temp_Start
 1560              		.code	16
 1561              		.thumb_func
 1562              		.type	ADC_Temp_Start, %function
 1563              	ADC_Temp_Start:
 1564              	.LFB1:
 556:Generated_Source\PSoC4/ADC_Temp.c ****     if (ADC_Temp_INIT_VAR_INIT_FLAG != (ADC_Temp_INIT_VAR_INIT_FLAG & ADC_Temp_initVar))
 1565              		.loc 1 556 0
 1566              		.cfi_startproc
 1567              		@ args = 0, pretend = 0, frame = 0
 1568              		@ frame_needed = 0, uses_anonymous_args = 0
 1569 0000 10B5     		push	{r4, lr}
 1570              		.cfi_def_cfa_offset 8
 1571              		.cfi_offset 4, -8
 1572              		.cfi_offset 14, -4
 557:Generated_Source\PSoC4/ADC_Temp.c ****     {
 1573              		.loc 1 557 0
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 68


 1574 0002 074B     		ldr	r3, .L119
 1575 0004 1B79     		ldrb	r3, [r3, #4]
 1576 0006 DB07     		lsls	r3, r3, #31
 1577 0008 06D4     		bmi	.L118
 559:Generated_Source\PSoC4/ADC_Temp.c ****         ADC_Temp_initVar |= ADC_Temp_INIT_VAR_INIT_FLAG;
 1578              		.loc 1 559 0
 1579 000a FFF7FEFF 		bl	ADC_Temp_Init
 1580              	.LVL132:
 560:Generated_Source\PSoC4/ADC_Temp.c ****     }
 1581              		.loc 1 560 0
 1582 000e 044A     		ldr	r2, .L119
 1583 0010 1179     		ldrb	r1, [r2, #4]
 1584 0012 0123     		movs	r3, #1
 1585 0014 0B43     		orrs	r3, r1
 1586 0016 1371     		strb	r3, [r2, #4]
 1587              	.L118:
 563:Generated_Source\PSoC4/ADC_Temp.c **** 
 1588              		.loc 1 563 0
 1589 0018 FFF7FEFF 		bl	ADC_Temp_Enable
 1590              	.LVL133:
 566:Generated_Source\PSoC4/ADC_Temp.c **** 
 1591              		.loc 1 566 0
 1592              		@ sp needed
 1593 001c 10BD     		pop	{r4, pc}
 1594              	.L120:
 1595 001e C046     		.align	2
 1596              	.L119:
 1597 0020 00000000 		.word	.LANCHOR0
 1598              		.cfi_endproc
 1599              	.LFE1:
 1600              		.size	ADC_Temp_Start, .-ADC_Temp_Start
 1601              		.section	.text.ADC_Temp_StartEx,"ax",%progbits
 1602              		.align	2
 1603              		.global	ADC_Temp_StartEx
 1604              		.code	16
 1605              		.thumb_func
 1606              		.type	ADC_Temp_StartEx, %function
 1607              	ADC_Temp_StartEx:
 1608              	.LFB2:
 585:Generated_Source\PSoC4/ADC_Temp.c ****     ADC_Temp_Start();
 1609              		.loc 1 585 0
 1610              		.cfi_startproc
 1611              		@ args = 0, pretend = 0, frame = 0
 1612              		@ frame_needed = 0, uses_anonymous_args = 0
 1613              	.LVL134:
 1614 0000 10B5     		push	{r4, lr}
 1615              		.cfi_def_cfa_offset 8
 1616              		.cfi_offset 4, -8
 1617              		.cfi_offset 14, -4
 1618 0002 0400     		movs	r4, r0
 586:Generated_Source\PSoC4/ADC_Temp.c ****     ADC_Temp_IRQ_StartEx(address);
 1619              		.loc 1 586 0
 1620 0004 FFF7FEFF 		bl	ADC_Temp_Start
 1621              	.LVL135:
 587:Generated_Source\PSoC4/ADC_Temp.c ****     return;
 1622              		.loc 1 587 0
 1623 0008 2000     		movs	r0, r4
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 69


 1624 000a FFF7FEFF 		bl	ADC_Temp_IRQ_StartEx
 1625              	.LVL136:
 589:Generated_Source\PSoC4/ADC_Temp.c **** 
 1626              		.loc 1 589 0
 1627              		@ sp needed
 1628              	.LVL137:
 1629 000e 10BD     		pop	{r4, pc}
 1630              		.cfi_endproc
 1631              	.LFE2:
 1632              		.size	ADC_Temp_StartEx, .-ADC_Temp_StartEx
 1633              		.section	.text.ADC_Temp_SelectConfig,"ax",%progbits
 1634              		.align	2
 1635              		.global	ADC_Temp_SelectConfig
 1636              		.code	16
 1637              		.thumb_func
 1638              		.type	ADC_Temp_SelectConfig, %function
 1639              	ADC_Temp_SelectConfig:
 1640              	.LFB6:
 772:Generated_Source\PSoC4/ADC_Temp.c ****     /* Check whether the configuration number is valid or not */
 1641              		.loc 1 772 0
 1642              		.cfi_startproc
 1643              		@ args = 0, pretend = 0, frame = 0
 1644              		@ frame_needed = 0, uses_anonymous_args = 0
 1645              	.LVL138:
 1646 0000 70B5     		push	{r4, r5, r6, lr}
 1647              		.cfi_def_cfa_offset 16
 1648              		.cfi_offset 4, -16
 1649              		.cfi_offset 5, -12
 1650              		.cfi_offset 6, -8
 1651              		.cfi_offset 14, -4
 1652 0002 0400     		movs	r4, r0
 1653 0004 0E00     		movs	r6, r1
 774:Generated_Source\PSoC4/ADC_Temp.c ****     {
 1654              		.loc 1 774 0
 1655 0006 0028     		cmp	r0, #0
 1656 0008 27D1     		bne	.L122
 777:Generated_Source\PSoC4/ADC_Temp.c ****         ADC_Temp_selected = 1u;
 1657              		.loc 1 777 0
 1658 000a FFF7FEFF 		bl	ADC_Temp_Stop
 1659              	.LVL139:
 778:Generated_Source\PSoC4/ADC_Temp.c **** 
 1660              		.loc 1 778 0
 1661 000e 134B     		ldr	r3, .L125
 1662 0010 0122     		movs	r2, #1
 1663 0012 5A71     		strb	r2, [r3, #5]
 780:Generated_Source\PSoC4/ADC_Temp.c ****         {
 1664              		.loc 1 780 0
 1665 0014 1B79     		ldrb	r3, [r3, #4]
 1666 0016 002B     		cmp	r3, #0
 1667 0018 06D1     		bne	.L124
 782:Generated_Source\PSoC4/ADC_Temp.c ****             ADC_Temp_initVar |= ADC_Temp_INIT_VAR_INIT_FLAG;
 1668              		.loc 1 782 0
 1669 001a FFF7FEFF 		bl	ADC_Temp_Init
 1670              	.LVL140:
 783:Generated_Source\PSoC4/ADC_Temp.c ****         }
 1671              		.loc 1 783 0
 1672 001e 0F4A     		ldr	r2, .L125
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 70


 1673 0020 1179     		ldrb	r1, [r2, #4]
 1674 0022 0123     		movs	r3, #1
 1675 0024 0B43     		orrs	r3, r1
 1676 0026 1371     		strb	r3, [r2, #4]
 1677              	.L124:
 788:Generated_Source\PSoC4/ADC_Temp.c ****         #if (ADC_Temp_VREF_ROUTED)
 1678              		.loc 1 788 0
 1679 0028 E300     		lsls	r3, r4, #3
 1680 002a 1B1B     		subs	r3, r3, r4
 1681 002c DD00     		lsls	r5, r3, #3
 1682 002e 0C4B     		ldr	r3, .L125+4
 1683 0030 ED18     		adds	r5, r5, r3
 1684 0032 2800     		movs	r0, r5
 1685 0034 FFF7FEFF 		bl	ADC_Temp_InitConfig
 1686              	.LVL141:
 796:Generated_Source\PSoC4/ADC_Temp.c ****         ADC_Temp_SAR_RANGE_INTR_MASK_REG = ADC_Temp_allConfigs[config].rangeIntMask;
 1687              		.loc 1 796 0
 1688 0038 0A4B     		ldr	r3, .L125+8
 1689 003a 2A6A     		ldr	r2, [r5, #32]
 1690 003c 1A60     		str	r2, [r3]
 797:Generated_Source\PSoC4/ADC_Temp.c ****         ADC_Temp_SAR_SATURATE_INTR_MASK_REG = ADC_Temp_allConfigs[config].satIntMask;
 1691              		.loc 1 797 0
 1692 003e 0A4B     		ldr	r3, .L125+12
 1693 0040 6A6A     		ldr	r2, [r5, #36]
 1694 0042 1A60     		str	r2, [r3]
 798:Generated_Source\PSoC4/ADC_Temp.c ****         ADC_Temp_currentConfig = config;
 1695              		.loc 1 798 0
 1696 0044 AA6A     		ldr	r2, [r5, #40]
 1697 0046 094B     		ldr	r3, .L125+16
 1698 0048 1A60     		str	r2, [r3]
 799:Generated_Source\PSoC4/ADC_Temp.c **** 
 1699              		.loc 1 799 0
 1700 004a 044B     		ldr	r3, .L125
 1701 004c 1C60     		str	r4, [r3]
 801:Generated_Source\PSoC4/ADC_Temp.c ****         {
 1702              		.loc 1 801 0
 1703 004e 012E     		cmp	r6, #1
 1704 0050 03D1     		bne	.L122
 804:Generated_Source\PSoC4/ADC_Temp.c **** 
 1705              		.loc 1 804 0
 1706 0052 FFF7FEFF 		bl	ADC_Temp_Start
 1707              	.LVL142:
 807:Generated_Source\PSoC4/ADC_Temp.c ****         }
 1708              		.loc 1 807 0
 1709 0056 FFF7FEFF 		bl	ADC_Temp_StartConvert
 1710              	.LVL143:
 1711              	.L122:
 811:Generated_Source\PSoC4/ADC_Temp.c **** 
 1712              		.loc 1 811 0
 1713              		@ sp needed
 1714              	.LVL144:
 1715              	.LVL145:
 1716 005a 70BD     		pop	{r4, r5, r6, pc}
 1717              	.L126:
 1718              		.align	2
 1719              	.L125:
 1720 005c 00000000 		.word	.LANCHOR0
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 71


 1721 0060 00000000 		.word	ADC_Temp_allConfigs
 1722 0064 20003A40 		.word	1077542944
 1723 0068 38023A40 		.word	1077543480
 1724 006c 28023A40 		.word	1077543464
 1725              		.cfi_endproc
 1726              	.LFE6:
 1727              		.size	ADC_Temp_SelectConfig, .-ADC_Temp_SelectConfig
 1728              		.section	.text.ADC_Temp_StopConvert,"ax",%progbits
 1729              		.align	2
 1730              		.global	ADC_Temp_StopConvert
 1731              		.code	16
 1732              		.thumb_func
 1733              		.type	ADC_Temp_StopConvert, %function
 1734              	ADC_Temp_StopConvert:
 1735              	.LFB8:
 865:Generated_Source\PSoC4/ADC_Temp.c ****     if((ADC_Temp_SAR_SAMPLE_CTRL_REG
 1736              		.loc 1 865 0
 1737              		.cfi_startproc
 1738              		@ args = 0, pretend = 0, frame = 0
 1739              		@ frame_needed = 0, uses_anonymous_args = 0
 1740 0000 10B5     		push	{r4, lr}
 1741              		.cfi_def_cfa_offset 8
 1742              		.cfi_offset 4, -8
 1743              		.cfi_offset 14, -4
 866:Generated_Source\PSoC4/ADC_Temp.c ****         & ADC_Temp_SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_MSK)
 1744              		.loc 1 866 0
 1745 0002 0C4B     		ldr	r3, .L129
 1746 0004 1B68     		ldr	r3, [r3]
 1747 0006 5B03     		lsls	r3, r3, #13
 1748 0008 12D5     		bpl	.L127
 870:Generated_Source\PSoC4/ADC_Temp.c **** 
 1749              		.loc 1 870 0
 1750 000a 0A4A     		ldr	r2, .L129
 1751 000c 1168     		ldr	r1, [r2]
 1752 000e 0A4B     		ldr	r3, .L129+4
 1753 0010 0B40     		ands	r3, r1
 1754 0012 1360     		str	r3, [r2]
 872:Generated_Source\PSoC4/ADC_Temp.c ****             & ADC_Temp_MISC_CONFIG_FILTER_PRESENT_MSK)
 1755              		.loc 1 872 0
 1756 0014 094B     		ldr	r3, .L129+8
 1757 0016 1A68     		ldr	r2, [r3]
 1758 0018 D300     		lsls	r3, r2, #3
 1759 001a 9A1A     		subs	r2, r3, r2
 1760 001c D300     		lsls	r3, r2, #3
 1761 001e 084A     		ldr	r2, .L129+12
 1762 0020 D318     		adds	r3, r2, r3
 1763 0022 1B6B     		ldr	r3, [r3, #48]
 1764 0024 9B07     		lsls	r3, r3, #30
 1765 0026 03D5     		bpl	.L127
 877:Generated_Source\PSoC4/ADC_Temp.c ****             ADC_Temp_Start();
 1766              		.loc 1 877 0
 1767 0028 FFF7FEFF 		bl	ADC_Temp_Stop
 1768              	.LVL146:
 878:Generated_Source\PSoC4/ADC_Temp.c ****         }
 1769              		.loc 1 878 0
 1770 002c FFF7FEFF 		bl	ADC_Temp_Start
 1771              	.LVL147:
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 72


 1772              	.L127:
 883:Generated_Source\PSoC4/ADC_Temp.c **** /*******************************************************************************
 1773              		.loc 1 883 0
 1774              		@ sp needed
 1775 0030 10BD     		pop	{r4, pc}
 1776              	.L130:
 1777 0032 C046     		.align	2
 1778              	.L129:
 1779 0034 04003A40 		.word	1077542916
 1780 0038 FFFFFEFF 		.word	-65537
 1781 003c 00000000 		.word	.LANCHOR0
 1782 0040 00000000 		.word	ADC_Temp_allConfigs
 1783              		.cfi_endproc
 1784              	.LFE8:
 1785              		.size	ADC_Temp_StopConvert, .-ADC_Temp_StopConvert
 1786              		.comm	ADC_Temp_countsPer10Volt,4,4
 1787              		.comm	ADC_Temp_offset,2,4
 1788              		.global	ADC_Temp_selected
 1789              		.global	ADC_Temp_initVar
 1790              		.bss
 1791              		.align	2
 1792              		.set	.LANCHOR0,. + 0
 1793              		.type	ADC_Temp_currentConfig, %object
 1794              		.size	ADC_Temp_currentConfig, 4
 1795              	ADC_Temp_currentConfig:
 1796 0000 00000000 		.space	4
 1797              		.type	ADC_Temp_initVar, %object
 1798              		.size	ADC_Temp_initVar, 1
 1799              	ADC_Temp_initVar:
 1800 0004 00       		.space	1
 1801              		.type	ADC_Temp_selected, %object
 1802              		.size	ADC_Temp_selected, 1
 1803              	ADC_Temp_selected:
 1804 0005 00       		.space	1
 1805              		.text
 1806              	.Letext0:
 1807              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 1808              		.file 3 "Generated_Source\\PSoC4\\ADC_Temp.h"
 1809              		.file 4 "Generated_Source\\PSoC4\\ADC_Temp_intSarClock.h"
 1810              		.file 5 "Generated_Source\\PSoC4\\CyLib.h"
 1811              		.file 6 "Generated_Source\\PSoC4\\ADC_Temp_IRQ.h"
 1812              		.section	.debug_info,"",%progbits
 1813              	.Ldebug_info0:
 1814 0000 510A0000 		.4byte	0xa51
 1815 0004 0400     		.2byte	0x4
 1816 0006 00000000 		.4byte	.Ldebug_abbrev0
 1817 000a 04       		.byte	0x4
 1818 000b 01       		.uleb128 0x1
 1819 000c 24050000 		.4byte	.LASF110
 1820 0010 0C       		.byte	0xc
 1821 0011 5D000000 		.4byte	.LASF111
 1822 0015 9B060000 		.4byte	.LASF112
 1823 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1824 001d 00000000 		.4byte	0
 1825 0021 00000000 		.4byte	.Ldebug_line0
 1826 0025 02       		.uleb128 0x2
 1827 0026 01       		.byte	0x1
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 73


 1828 0027 06       		.byte	0x6
 1829 0028 5B010000 		.4byte	.LASF0
 1830 002c 02       		.uleb128 0x2
 1831 002d 01       		.byte	0x1
 1832 002e 08       		.byte	0x8
 1833 002f 84040000 		.4byte	.LASF1
 1834 0033 02       		.uleb128 0x2
 1835 0034 02       		.byte	0x2
 1836 0035 05       		.byte	0x5
 1837 0036 A1040000 		.4byte	.LASF2
 1838 003a 02       		.uleb128 0x2
 1839 003b 02       		.byte	0x2
 1840 003c 07       		.byte	0x7
 1841 003d 0F030000 		.4byte	.LASF3
 1842 0041 02       		.uleb128 0x2
 1843 0042 04       		.byte	0x4
 1844 0043 05       		.byte	0x5
 1845 0044 8E010000 		.4byte	.LASF4
 1846 0048 02       		.uleb128 0x2
 1847 0049 04       		.byte	0x4
 1848 004a 07       		.byte	0x7
 1849 004b 97020000 		.4byte	.LASF5
 1850 004f 02       		.uleb128 0x2
 1851 0050 08       		.byte	0x8
 1852 0051 05       		.byte	0x5
 1853 0052 4D010000 		.4byte	.LASF6
 1854 0056 02       		.uleb128 0x2
 1855 0057 08       		.byte	0x8
 1856 0058 07       		.byte	0x7
 1857 0059 D4000000 		.4byte	.LASF7
 1858 005d 03       		.uleb128 0x3
 1859 005e 04       		.byte	0x4
 1860 005f 05       		.byte	0x5
 1861 0060 696E7400 		.ascii	"int\000"
 1862 0064 02       		.uleb128 0x2
 1863 0065 04       		.byte	0x4
 1864 0066 07       		.byte	0x7
 1865 0067 5E020000 		.4byte	.LASF8
 1866 006b 04       		.uleb128 0x4
 1867 006c 97010000 		.4byte	.LASF9
 1868 0070 02       		.byte	0x2
 1869 0071 F701     		.2byte	0x1f7
 1870 0073 2C000000 		.4byte	0x2c
 1871 0077 04       		.uleb128 0x4
 1872 0078 28000000 		.4byte	.LASF10
 1873 007c 02       		.byte	0x2
 1874 007d F801     		.2byte	0x1f8
 1875 007f 3A000000 		.4byte	0x3a
 1876 0083 04       		.uleb128 0x4
 1877 0084 ED010000 		.4byte	.LASF11
 1878 0088 02       		.byte	0x2
 1879 0089 F901     		.2byte	0x1f9
 1880 008b 48000000 		.4byte	0x48
 1881 008f 04       		.uleb128 0x4
 1882 0090 95060000 		.4byte	.LASF12
 1883 0094 02       		.byte	0x2
 1884 0095 FB01     		.2byte	0x1fb
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 74


 1885 0097 33000000 		.4byte	0x33
 1886 009b 04       		.uleb128 0x4
 1887 009c 72010000 		.4byte	.LASF13
 1888 00a0 02       		.byte	0x2
 1889 00a1 FC01     		.2byte	0x1fc
 1890 00a3 41000000 		.4byte	0x41
 1891 00a7 04       		.uleb128 0x4
 1892 00a8 97030000 		.4byte	.LASF14
 1893 00ac 02       		.byte	0x2
 1894 00ad FD01     		.2byte	0x1fd
 1895 00af B3000000 		.4byte	0xb3
 1896 00b3 02       		.uleb128 0x2
 1897 00b4 04       		.byte	0x4
 1898 00b5 04       		.byte	0x4
 1899 00b6 4F040000 		.4byte	.LASF15
 1900 00ba 02       		.uleb128 0x2
 1901 00bb 08       		.byte	0x8
 1902 00bc 04       		.byte	0x4
 1903 00bd C1010000 		.4byte	.LASF16
 1904 00c1 04       		.uleb128 0x4
 1905 00c2 24040000 		.4byte	.LASF17
 1906 00c6 02       		.byte	0x2
 1907 00c7 0202     		.2byte	0x202
 1908 00c9 4F000000 		.4byte	0x4f
 1909 00cd 02       		.uleb128 0x2
 1910 00ce 01       		.byte	0x1
 1911 00cf 08       		.byte	0x8
 1912 00d0 BB050000 		.4byte	.LASF18
 1913 00d4 04       		.uleb128 0x4
 1914 00d5 7E030000 		.4byte	.LASF19
 1915 00d9 02       		.byte	0x2
 1916 00da A302     		.2byte	0x2a3
 1917 00dc E0000000 		.4byte	0xe0
 1918 00e0 05       		.uleb128 0x5
 1919 00e1 83000000 		.4byte	0x83
 1920 00e5 04       		.uleb128 0x4
 1921 00e6 C5050000 		.4byte	.LASF20
 1922 00ea 02       		.byte	0x2
 1923 00eb B302     		.2byte	0x2b3
 1924 00ed F1000000 		.4byte	0xf1
 1925 00f1 06       		.uleb128 0x6
 1926 00f2 04       		.byte	0x4
 1927 00f3 F7000000 		.4byte	0xf7
 1928 00f7 07       		.uleb128 0x7
 1929 00f8 02       		.uleb128 0x2
 1930 00f9 08       		.byte	0x8
 1931 00fa 04       		.byte	0x4
 1932 00fb B1030000 		.4byte	.LASF21
 1933 00ff 02       		.uleb128 0x2
 1934 0100 04       		.byte	0x4
 1935 0101 07       		.byte	0x7
 1936 0102 9F030000 		.4byte	.LASF22
 1937 0106 08       		.uleb128 0x8
 1938 0107 38       		.byte	0x38
 1939 0108 03       		.byte	0x3
 1940 0109 5D       		.byte	0x5d
 1941 010a B7010000 		.4byte	0x1b7
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 75


 1942 010e 09       		.uleb128 0x9
 1943 010f 2F070000 		.4byte	.LASF23
 1944 0113 03       		.byte	0x3
 1945 0114 5F       		.byte	0x5f
 1946 0115 83000000 		.4byte	0x83
 1947 0119 00       		.byte	0
 1948 011a 09       		.uleb128 0x9
 1949 011b 67030000 		.4byte	.LASF24
 1950 011f 03       		.byte	0x3
 1951 0120 60       		.byte	0x60
 1952 0121 83000000 		.4byte	0x83
 1953 0125 04       		.byte	0x4
 1954 0126 09       		.uleb128 0x9
 1955 0127 2A060000 		.4byte	.LASF25
 1956 012b 03       		.byte	0x3
 1957 012c 61       		.byte	0x61
 1958 012d 83000000 		.4byte	0x83
 1959 0131 08       		.byte	0x8
 1960 0132 09       		.uleb128 0x9
 1961 0133 8A060000 		.4byte	.LASF26
 1962 0137 03       		.byte	0x3
 1963 0138 64       		.byte	0x64
 1964 0139 83000000 		.4byte	0x83
 1965 013d 0C       		.byte	0xc
 1966 013e 09       		.uleb128 0x9
 1967 013f E0010000 		.4byte	.LASF27
 1968 0143 03       		.byte	0x3
 1969 0144 65       		.byte	0x65
 1970 0145 83000000 		.4byte	0x83
 1971 0149 10       		.byte	0x10
 1972 014a 09       		.uleb128 0x9
 1973 014b EE030000 		.4byte	.LASF28
 1974 014f 03       		.byte	0x3
 1975 0150 66       		.byte	0x66
 1976 0151 83000000 		.4byte	0x83
 1977 0155 14       		.byte	0x14
 1978 0156 09       		.uleb128 0x9
 1979 0157 3B030000 		.4byte	.LASF29
 1980 015b 03       		.byte	0x3
 1981 015c 67       		.byte	0x67
 1982 015d 83000000 		.4byte	0x83
 1983 0161 18       		.byte	0x18
 1984 0162 09       		.uleb128 0x9
 1985 0163 80060000 		.4byte	.LASF30
 1986 0167 03       		.byte	0x3
 1987 0168 68       		.byte	0x68
 1988 0169 83000000 		.4byte	0x83
 1989 016d 1C       		.byte	0x1c
 1990 016e 09       		.uleb128 0x9
 1991 016f 76040000 		.4byte	.LASF31
 1992 0173 03       		.byte	0x3
 1993 0174 69       		.byte	0x69
 1994 0175 83000000 		.4byte	0x83
 1995 0179 20       		.byte	0x20
 1996 017a 09       		.uleb128 0x9
 1997 017b 7C020000 		.4byte	.LASF32
 1998 017f 03       		.byte	0x3
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 76


 1999 0180 6A       		.byte	0x6a
 2000 0181 83000000 		.4byte	0x83
 2001 0185 24       		.byte	0x24
 2002 0186 09       		.uleb128 0x9
 2003 0187 FB030000 		.4byte	.LASF33
 2004 018b 03       		.byte	0x3
 2005 018c 6B       		.byte	0x6b
 2006 018d 83000000 		.4byte	0x83
 2007 0191 28       		.byte	0x28
 2008 0192 09       		.uleb128 0x9
 2009 0193 18050000 		.4byte	.LASF34
 2010 0197 03       		.byte	0x3
 2011 0198 6C       		.byte	0x6c
 2012 0199 9B000000 		.4byte	0x9b
 2013 019d 2C       		.byte	0x2c
 2014 019e 09       		.uleb128 0x9
 2015 019f 43060000 		.4byte	.LASF35
 2016 01a3 03       		.byte	0x3
 2017 01a4 6E       		.byte	0x6e
 2018 01a5 83000000 		.4byte	0x83
 2019 01a9 30       		.byte	0x30
 2020 01aa 09       		.uleb128 0x9
 2021 01ab 67010000 		.4byte	.LASF36
 2022 01af 03       		.byte	0x3
 2023 01b0 75       		.byte	0x75
 2024 01b1 77000000 		.4byte	0x77
 2025 01b5 34       		.byte	0x34
 2026 01b6 00       		.byte	0
 2027 01b7 0A       		.uleb128 0xa
 2028 01b8 1D010000 		.4byte	.LASF37
 2029 01bc 03       		.byte	0x3
 2030 01bd 7C       		.byte	0x7c
 2031 01be 06010000 		.4byte	0x106
 2032 01c2 0B       		.uleb128 0xb
 2033 01c3 5F040000 		.4byte	.LASF113
 2034 01c7 01       		.byte	0x1
 2035 01c8 E102     		.2byte	0x2e1
 2036 01ca 00000000 		.4byte	.LFB5
 2037 01ce 34000000 		.4byte	.LFE5-.LFB5
 2038 01d2 01       		.uleb128 0x1
 2039 01d3 9C       		.byte	0x9c
 2040 01d4 F7010000 		.4byte	0x1f7
 2041 01d8 0C       		.uleb128 0xc
 2042 01d9 D2050000 		.4byte	.LASF38
 2043 01dd 01       		.byte	0x1
 2044 01de E102     		.2byte	0x2e1
 2045 01e0 F7010000 		.4byte	0x1f7
 2046 01e4 01       		.uleb128 0x1
 2047 01e5 50       		.byte	0x50
 2048 01e6 0D       		.uleb128 0xd
 2049 01e7 A9020000 		.4byte	.LASF40
 2050 01eb 01       		.byte	0x1
 2051 01ec E502     		.2byte	0x2e5
 2052 01ee 83000000 		.4byte	0x83
 2053 01f2 00000000 		.4byte	.LLST0
 2054 01f6 00       		.byte	0
 2055 01f7 06       		.uleb128 0x6
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 77


 2056 01f8 04       		.byte	0x4
 2057 01f9 FD010000 		.4byte	0x1fd
 2058 01fd 0E       		.uleb128 0xe
 2059 01fe B7010000 		.4byte	0x1b7
 2060 0202 0F       		.uleb128 0xf
 2061 0203 34010000 		.4byte	.LASF114
 2062 0207 01       		.byte	0x1
 2063 0208 1504     		.2byte	0x415
 2064 020a 9B000000 		.4byte	0x9b
 2065 020e 00000000 		.4byte	.LFB13
 2066 0212 58000000 		.4byte	.LFE13-.LFB13
 2067 0216 01       		.uleb128 0x1
 2068 0217 9C       		.byte	0x9c
 2069 0218 4D020000 		.4byte	0x24d
 2070 021c 10       		.uleb128 0x10
 2071 021d B6050000 		.4byte	.LASF39
 2072 0221 01       		.byte	0x1
 2073 0222 1504     		.2byte	0x415
 2074 0224 83000000 		.4byte	0x83
 2075 0228 2F000000 		.4byte	.LLST1
 2076 022c 0D       		.uleb128 0xd
 2077 022d 84030000 		.4byte	.LASF41
 2078 0231 01       		.byte	0x1
 2079 0232 1704     		.2byte	0x417
 2080 0234 9B000000 		.4byte	0x9b
 2081 0238 50000000 		.4byte	.LLST2
 2082 023c 0D       		.uleb128 0xd
 2083 023d 73030000 		.4byte	.LASF42
 2084 0241 01       		.byte	0x1
 2085 0242 1804     		.2byte	0x418
 2086 0244 83000000 		.4byte	0x83
 2087 0248 6F000000 		.4byte	.LLST3
 2088 024c 00       		.byte	0
 2089 024d 11       		.uleb128 0x11
 2090 024e 89020000 		.4byte	.LASF44
 2091 0252 01       		.byte	0x1
 2092 0253 6602     		.2byte	0x266
 2093 0255 00000000 		.4byte	.LFB3
 2094 0259 10000000 		.4byte	.LFE3-.LFB3
 2095 025d 01       		.uleb128 0x1
 2096 025e 9C       		.byte	0x9c
 2097 025f 12       		.uleb128 0x12
 2098 0260 3B040000 		.4byte	.LASF46
 2099 0264 01       		.byte	0x1
 2100 0265 8402     		.2byte	0x284
 2101 0267 00000000 		.4byte	.LFB4
 2102 026b AC000000 		.4byte	.LFE4-.LFB4
 2103 026f 01       		.uleb128 0x1
 2104 0270 9C       		.byte	0x9c
 2105 0271 D2020000 		.4byte	0x2d2
 2106 0275 10       		.uleb128 0x10
 2107 0276 D2050000 		.4byte	.LASF38
 2108 027a 01       		.byte	0x1
 2109 027b 8402     		.2byte	0x284
 2110 027d F7010000 		.4byte	0x1f7
 2111 0281 8D000000 		.4byte	.LLST4
 2112 0285 0D       		.uleb128 0xd
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 78


 2113 0286 EF040000 		.4byte	.LASF43
 2114 028a 01       		.byte	0x1
 2115 028b 8602     		.2byte	0x286
 2116 028d 83000000 		.4byte	0x83
 2117 0291 B9000000 		.4byte	.LLST5
 2118 0295 0D       		.uleb128 0xd
 2119 0296 A9020000 		.4byte	.LASF40
 2120 029a 01       		.byte	0x1
 2121 029b 8702     		.2byte	0x287
 2122 029d 83000000 		.4byte	0x83
 2123 02a1 D8000000 		.4byte	.LLST6
 2124 02a5 13       		.uleb128 0x13
 2125 02a6 08000000 		.4byte	.LVL15
 2126 02aa FC090000 		.4byte	0x9fc
 2127 02ae 14       		.uleb128 0x14
 2128 02af 10000000 		.4byte	.LVL16
 2129 02b3 070A0000 		.4byte	0xa07
 2130 02b7 C1020000 		.4byte	0x2c1
 2131 02bb 15       		.uleb128 0x15
 2132 02bc 01       		.uleb128 0x1
 2133 02bd 51       		.byte	0x51
 2134 02be 01       		.uleb128 0x1
 2135 02bf 30       		.byte	0x30
 2136 02c0 00       		.byte	0
 2137 02c1 16       		.uleb128 0x16
 2138 02c2 16000000 		.4byte	.LVL17
 2139 02c6 120A0000 		.4byte	0xa12
 2140 02ca 15       		.uleb128 0x15
 2141 02cb 01       		.uleb128 0x1
 2142 02cc 50       		.byte	0x50
 2143 02cd 02       		.uleb128 0x2
 2144 02ce 08       		.byte	0x8
 2145 02cf FF       		.byte	0xff
 2146 02d0 00       		.byte	0
 2147 02d1 00       		.byte	0
 2148 02d2 11       		.uleb128 0x11
 2149 02d3 78010000 		.4byte	.LASF45
 2150 02d7 01       		.byte	0x1
 2151 02d8 4003     		.2byte	0x340
 2152 02da 00000000 		.4byte	.LFB7
 2153 02de 28000000 		.4byte	.LFE7-.LFB7
 2154 02e2 01       		.uleb128 0x1
 2155 02e3 9C       		.byte	0x9c
 2156 02e4 12       		.uleb128 0x12
 2157 02e5 C8010000 		.4byte	.LASF47
 2158 02e9 01       		.byte	0x1
 2159 02ea 8703     		.2byte	0x387
 2160 02ec 00000000 		.4byte	.LFB9
 2161 02f0 28000000 		.4byte	.LFE9-.LFB9
 2162 02f4 01       		.uleb128 0x1
 2163 02f5 9C       		.byte	0x9c
 2164 02f6 09030000 		.4byte	0x309
 2165 02fa 0C       		.uleb128 0xc
 2166 02fb C0050000 		.4byte	.LASF48
 2167 02ff 01       		.byte	0x1
 2168 0300 8703     		.2byte	0x387
 2169 0302 83000000 		.4byte	0x83
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 79


 2170 0306 01       		.uleb128 0x1
 2171 0307 50       		.byte	0x50
 2172 0308 00       		.byte	0
 2173 0309 12       		.uleb128 0x12
 2174 030a 2F060000 		.4byte	.LASF49
 2175 030e 01       		.byte	0x1
 2176 030f BE03     		.2byte	0x3be
 2177 0311 00000000 		.4byte	.LFB10
 2178 0315 10000000 		.4byte	.LFE10-.LFB10
 2179 0319 01       		.uleb128 0x1
 2180 031a 9C       		.byte	0x9c
 2181 031b 30030000 		.4byte	0x330
 2182 031f 10       		.uleb128 0x10
 2183 0320 1F020000 		.4byte	.LASF50
 2184 0324 01       		.byte	0x1
 2185 0325 BE03     		.2byte	0x3be
 2186 0327 83000000 		.4byte	0x83
 2187 032b EC000000 		.4byte	.LLST7
 2188 032f 00       		.byte	0
 2189 0330 12       		.uleb128 0x12
 2190 0331 34020000 		.4byte	.LASF51
 2191 0335 01       		.byte	0x1
 2192 0336 D303     		.2byte	0x3d3
 2193 0338 00000000 		.4byte	.LFB11
 2194 033c 2C000000 		.4byte	.LFE11-.LFB11
 2195 0340 01       		.uleb128 0x1
 2196 0341 9C       		.byte	0x9c
 2197 0342 65030000 		.4byte	0x365
 2198 0346 10       		.uleb128 0x10
 2199 0347 C8020000 		.4byte	.LASF52
 2200 034b 01       		.byte	0x1
 2201 034c D303     		.2byte	0x3d3
 2202 034e 83000000 		.4byte	0x83
 2203 0352 0D010000 		.4byte	.LLST8
 2204 0356 17       		.uleb128 0x17
 2205 0357 2F000000 		.4byte	.LASF53
 2206 035b 01       		.byte	0x1
 2207 035c D503     		.2byte	0x3d5
 2208 035e 83000000 		.4byte	0x83
 2209 0362 01       		.uleb128 0x1
 2210 0363 52       		.byte	0x52
 2211 0364 00       		.byte	0
 2212 0365 18       		.uleb128 0x18
 2213 0366 AB040000 		.4byte	.LASF56
 2214 036a 01       		.byte	0x1
 2215 036b EF03     		.2byte	0x3ef
 2216 036d 83000000 		.4byte	0x83
 2217 0371 00000000 		.4byte	.LFB12
 2218 0375 38000000 		.4byte	.LFE12-.LFB12
 2219 0379 01       		.uleb128 0x1
 2220 037a 9C       		.byte	0x9c
 2221 037b B0030000 		.4byte	0x3b0
 2222 037f 10       		.uleb128 0x10
 2223 0380 4E020000 		.4byte	.LASF54
 2224 0384 01       		.byte	0x1
 2225 0385 EF03     		.2byte	0x3ef
 2226 0387 83000000 		.4byte	0x83
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 80


 2227 038b 2B010000 		.4byte	.LLST9
 2228 038f 0D       		.uleb128 0xd
 2229 0390 3B070000 		.4byte	.LASF55
 2230 0394 01       		.byte	0x1
 2231 0395 F103     		.2byte	0x3f1
 2232 0397 83000000 		.4byte	0x83
 2233 039b 5F010000 		.4byte	.LLST10
 2234 039f 19       		.uleb128 0x19
 2235 03a0 77647400 		.ascii	"wdt\000"
 2236 03a4 01       		.byte	0x1
 2237 03a5 F203     		.2byte	0x3f2
 2238 03a7 83000000 		.4byte	0x83
 2239 03ab 95010000 		.4byte	.LLST11
 2240 03af 00       		.byte	0
 2241 03b0 18       		.uleb128 0x18
 2242 03b1 39000000 		.4byte	.LASF57
 2243 03b5 01       		.byte	0x1
 2244 03b6 3E04     		.2byte	0x43e
 2245 03b8 8F000000 		.4byte	0x8f
 2246 03bc 00000000 		.4byte	.LFB14
 2247 03c0 54000000 		.4byte	.LFE14-.LFB14
 2248 03c4 01       		.uleb128 0x1
 2249 03c5 9C       		.byte	0x9c
 2250 03c6 FA030000 		.4byte	0x3fa
 2251 03ca 10       		.uleb128 0x10
 2252 03cb B6050000 		.4byte	.LASF39
 2253 03cf 01       		.byte	0x1
 2254 03d0 3E04     		.2byte	0x43e
 2255 03d2 83000000 		.4byte	0x83
 2256 03d6 C8010000 		.4byte	.LLST12
 2257 03da 0D       		.uleb128 0xd
 2258 03db 8D030000 		.4byte	.LASF58
 2259 03df 01       		.byte	0x1
 2260 03e0 4004     		.2byte	0x440
 2261 03e2 83000000 		.4byte	0x83
 2262 03e6 0D020000 		.4byte	.LLST13
 2263 03ea 16       		.uleb128 0x16
 2264 03eb 1E000000 		.4byte	.LVL38
 2265 03ef 1D0A0000 		.4byte	0xa1d
 2266 03f3 15       		.uleb128 0x15
 2267 03f4 01       		.uleb128 0x1
 2268 03f5 50       		.byte	0x50
 2269 03f6 01       		.uleb128 0x1
 2270 03f7 30       		.byte	0x30
 2271 03f8 00       		.byte	0
 2272 03f9 00       		.byte	0
 2273 03fa 18       		.uleb128 0x18
 2274 03fb 0A020000 		.4byte	.LASF59
 2275 03ff 01       		.byte	0x1
 2276 0400 6104     		.2byte	0x461
 2277 0402 9B000000 		.4byte	0x9b
 2278 0406 00000000 		.4byte	.LFB15
 2279 040a 64000000 		.4byte	.LFE15-.LFB15
 2280 040e 01       		.uleb128 0x1
 2281 040f 9C       		.byte	0x9c
 2282 0410 78040000 		.4byte	0x478
 2283 0414 10       		.uleb128 0x10
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 81


 2284 0415 B6050000 		.4byte	.LASF39
 2285 0419 01       		.byte	0x1
 2286 041a 6104     		.2byte	0x461
 2287 041c 83000000 		.4byte	0x83
 2288 0420 2B020000 		.4byte	.LLST14
 2289 0424 0D       		.uleb128 0xd
 2290 0425 8D030000 		.4byte	.LASF58
 2291 0429 01       		.byte	0x1
 2292 042a 6304     		.2byte	0x463
 2293 042c 83000000 		.4byte	0x83
 2294 0430 57020000 		.4byte	.LLST15
 2295 0434 0D       		.uleb128 0xd
 2296 0435 D1040000 		.4byte	.LASF60
 2297 0439 01       		.byte	0x1
 2298 043a 6404     		.2byte	0x464
 2299 043c 8F000000 		.4byte	0x8f
 2300 0440 75020000 		.4byte	.LLST16
 2301 0444 0D       		.uleb128 0xd
 2302 0445 46030000 		.4byte	.LASF61
 2303 0449 01       		.byte	0x1
 2304 044a 6504     		.2byte	0x465
 2305 044c 9B000000 		.4byte	0x9b
 2306 0450 88020000 		.4byte	.LLST17
 2307 0454 14       		.uleb128 0x14
 2308 0455 1E000000 		.4byte	.LVL46
 2309 0459 1D0A0000 		.4byte	0xa1d
 2310 045d 67040000 		.4byte	0x467
 2311 0461 15       		.uleb128 0x15
 2312 0462 01       		.uleb128 0x1
 2313 0463 50       		.byte	0x50
 2314 0464 01       		.uleb128 0x1
 2315 0465 30       		.byte	0x30
 2316 0466 00       		.byte	0
 2317 0467 16       		.uleb128 0x16
 2318 0468 4A000000 		.4byte	.LVL50
 2319 046c 02020000 		.4byte	0x202
 2320 0470 15       		.uleb128 0x15
 2321 0471 01       		.uleb128 0x1
 2322 0472 50       		.byte	0x50
 2323 0473 02       		.uleb128 0x2
 2324 0474 75       		.byte	0x75
 2325 0475 00       		.sleb128 0
 2326 0476 00       		.byte	0
 2327 0477 00       		.byte	0
 2328 0478 12       		.uleb128 0x12
 2329 0479 B3020000 		.4byte	.LASF62
 2330 047d 01       		.byte	0x1
 2331 047e 8D04     		.2byte	0x48d
 2332 0480 00000000 		.4byte	.LFB16
 2333 0484 1C000000 		.4byte	.LFE16-.LFB16
 2334 0488 01       		.uleb128 0x1
 2335 0489 9C       		.byte	0x9c
 2336 048a 9F040000 		.4byte	0x49f
 2337 048e 10       		.uleb128 0x10
 2338 048f A8030000 		.4byte	.LASF63
 2339 0493 01       		.byte	0x1
 2340 0494 8D04     		.2byte	0x48d
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 82


 2341 0496 83000000 		.4byte	0x83
 2342 049a A6020000 		.4byte	.LLST18
 2343 049e 00       		.byte	0
 2344 049f 12       		.uleb128 0x12
 2345 04a0 F4010000 		.4byte	.LASF64
 2346 04a4 01       		.byte	0x1
 2347 04a5 A104     		.2byte	0x4a1
 2348 04a7 00000000 		.4byte	.LFB17
 2349 04ab 18000000 		.4byte	.LFE17-.LFB17
 2350 04af 01       		.uleb128 0x1
 2351 04b0 9C       		.byte	0x9c
 2352 04b1 C6040000 		.4byte	0x4c6
 2353 04b5 10       		.uleb128 0x10
 2354 04b6 55040000 		.4byte	.LASF65
 2355 04ba 01       		.byte	0x1
 2356 04bb A104     		.2byte	0x4a1
 2357 04bd 83000000 		.4byte	0x83
 2358 04c1 C7020000 		.4byte	.LLST19
 2359 04c5 00       		.byte	0
 2360 04c6 12       		.uleb128 0x12
 2361 04c7 BE000000 		.4byte	.LASF66
 2362 04cb 01       		.byte	0x1
 2363 04cc B804     		.2byte	0x4b8
 2364 04ce 00000000 		.4byte	.LFB18
 2365 04d2 2C000000 		.4byte	.LFE18-.LFB18
 2366 04d6 01       		.uleb128 0x1
 2367 04d7 9C       		.byte	0x9c
 2368 04d8 FB040000 		.4byte	0x4fb
 2369 04dc 10       		.uleb128 0x10
 2370 04dd 52030000 		.4byte	.LASF67
 2371 04e1 01       		.byte	0x1
 2372 04e2 B804     		.2byte	0x4b8
 2373 04e4 83000000 		.4byte	0x83
 2374 04e8 E8020000 		.4byte	.LLST20
 2375 04ec 17       		.uleb128 0x17
 2376 04ed 2F000000 		.4byte	.LASF53
 2377 04f1 01       		.byte	0x1
 2378 04f2 BA04     		.2byte	0x4ba
 2379 04f4 83000000 		.4byte	0x83
 2380 04f8 01       		.uleb128 0x1
 2381 04f9 52       		.byte	0x52
 2382 04fa 00       		.byte	0
 2383 04fb 12       		.uleb128 0x12
 2384 04fc 90000000 		.4byte	.LASF68
 2385 0500 01       		.byte	0x1
 2386 0501 D004     		.2byte	0x4d0
 2387 0503 00000000 		.4byte	.LFB19
 2388 0507 2C000000 		.4byte	.LFE19-.LFB19
 2389 050b 01       		.uleb128 0x1
 2390 050c 9C       		.byte	0x9c
 2391 050d 30050000 		.4byte	0x530
 2392 0511 10       		.uleb128 0x10
 2393 0512 1C040000 		.4byte	.LASF69
 2394 0516 01       		.byte	0x1
 2395 0517 D004     		.2byte	0x4d0
 2396 0519 83000000 		.4byte	0x83
 2397 051d 06030000 		.4byte	.LLST21
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 83


 2398 0521 17       		.uleb128 0x17
 2399 0522 2F000000 		.4byte	.LASF53
 2400 0526 01       		.byte	0x1
 2401 0527 D204     		.2byte	0x4d2
 2402 0529 83000000 		.4byte	0x83
 2403 052d 01       		.uleb128 0x1
 2404 052e 52       		.byte	0x52
 2405 052f 00       		.byte	0
 2406 0530 12       		.uleb128 0x12
 2407 0531 6D060000 		.4byte	.LASF70
 2408 0535 01       		.byte	0x1
 2409 0536 F104     		.2byte	0x4f1
 2410 0538 00000000 		.4byte	.LFB20
 2411 053c 44000000 		.4byte	.LFE20-.LFB20
 2412 0540 01       		.uleb128 0x1
 2413 0541 9C       		.byte	0x9c
 2414 0542 76050000 		.4byte	0x576
 2415 0546 10       		.uleb128 0x10
 2416 0547 B6050000 		.4byte	.LASF39
 2417 054b 01       		.byte	0x1
 2418 054c F104     		.2byte	0x4f1
 2419 054e 83000000 		.4byte	0x83
 2420 0552 24030000 		.4byte	.LLST22
 2421 0556 10       		.uleb128 0x10
 2422 0557 23060000 		.4byte	.LASF71
 2423 055b 01       		.byte	0x1
 2424 055c F104     		.2byte	0x4f1
 2425 055e 8F000000 		.4byte	0x8f
 2426 0562 50030000 		.4byte	.LLST23
 2427 0566 16       		.uleb128 0x16
 2428 0567 20000000 		.4byte	.LVL69
 2429 056b 1D0A0000 		.4byte	0xa1d
 2430 056f 15       		.uleb128 0x15
 2431 0570 01       		.uleb128 0x1
 2432 0571 50       		.byte	0x50
 2433 0572 01       		.uleb128 0x1
 2434 0573 30       		.byte	0x30
 2435 0574 00       		.byte	0
 2436 0575 00       		.byte	0
 2437 0576 12       		.uleb128 0x12
 2438 0577 6B020000 		.4byte	.LASF72
 2439 057b 01       		.byte	0x1
 2440 057c 1105     		.2byte	0x511
 2441 057e 00000000 		.4byte	.LFB21
 2442 0582 44000000 		.4byte	.LFE21-.LFB21
 2443 0586 01       		.uleb128 0x1
 2444 0587 9C       		.byte	0x9c
 2445 0588 BC050000 		.4byte	0x5bc
 2446 058c 10       		.uleb128 0x10
 2447 058d B6050000 		.4byte	.LASF39
 2448 0591 01       		.byte	0x1
 2449 0592 1105     		.2byte	0x511
 2450 0594 83000000 		.4byte	0x83
 2451 0598 71030000 		.4byte	.LLST24
 2452 059c 10       		.uleb128 0x10
 2453 059d 4E000000 		.4byte	.LASF73
 2454 05a1 01       		.byte	0x1
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 84


 2455 05a2 1105     		.2byte	0x511
 2456 05a4 9B000000 		.4byte	0x9b
 2457 05a8 9D030000 		.4byte	.LLST25
 2458 05ac 16       		.uleb128 0x16
 2459 05ad 20000000 		.4byte	.LVL73
 2460 05b1 1D0A0000 		.4byte	0xa1d
 2461 05b5 15       		.uleb128 0x15
 2462 05b6 01       		.uleb128 0x1
 2463 05b7 50       		.byte	0x50
 2464 05b8 01       		.uleb128 0x1
 2465 05b9 30       		.byte	0x30
 2466 05ba 00       		.byte	0
 2467 05bb 00       		.byte	0
 2468 05bc 18       		.uleb128 0x18
 2469 05bd A4000000 		.4byte	.LASF74
 2470 05c1 01       		.byte	0x1
 2471 05c2 2A05     		.2byte	0x52a
 2472 05c4 8F000000 		.4byte	0x8f
 2473 05c8 00000000 		.4byte	.LFB22
 2474 05cc 3C000000 		.4byte	.LFE22-.LFB22
 2475 05d0 01       		.uleb128 0x1
 2476 05d1 9C       		.byte	0x9c
 2477 05d2 2E060000 		.4byte	0x62e
 2478 05d6 10       		.uleb128 0x10
 2479 05d7 B6050000 		.4byte	.LASF39
 2480 05db 01       		.byte	0x1
 2481 05dc 2A05     		.2byte	0x52a
 2482 05de 83000000 		.4byte	0x83
 2483 05e2 CA030000 		.4byte	.LLST26
 2484 05e6 10       		.uleb128 0x10
 2485 05e7 4E060000 		.4byte	.LASF75
 2486 05eb 01       		.byte	0x1
 2487 05ec 2A05     		.2byte	0x52a
 2488 05ee 8F000000 		.4byte	0x8f
 2489 05f2 EB030000 		.4byte	.LLST27
 2490 05f6 1A       		.uleb128 0x1a
 2491 05f7 49020000 		.4byte	.LASF76
 2492 05fb 01       		.byte	0x1
 2493 05fc 2C05     		.2byte	0x52c
 2494 05fe 83000000 		.4byte	0x83
 2495 0602 1A       		.uleb128 0x1a
 2496 0603 F0020000 		.4byte	.LASF77
 2497 0607 01       		.byte	0x1
 2498 0608 2D05     		.2byte	0x52d
 2499 060a 83000000 		.4byte	0x83
 2500 060e 0D       		.uleb128 0xd
 2501 060f 5C030000 		.4byte	.LASF78
 2502 0613 01       		.byte	0x1
 2503 0614 2E05     		.2byte	0x52e
 2504 0616 83000000 		.4byte	0x83
 2505 061a 22040000 		.4byte	.LLST28
 2506 061e 16       		.uleb128 0x16
 2507 061f 22000000 		.4byte	.LVL80
 2508 0623 1D0A0000 		.4byte	0xa1d
 2509 0627 15       		.uleb128 0x15
 2510 0628 01       		.uleb128 0x1
 2511 0629 50       		.byte	0x50
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 85


 2512 062a 01       		.uleb128 0x1
 2513 062b 30       		.byte	0x30
 2514 062c 00       		.byte	0
 2515 062d 00       		.byte	0
 2516 062e 1B       		.uleb128 0x1b
 2517 062f D9050000 		.4byte	.LASF79
 2518 0633 01       		.byte	0x1
 2519 0634 7F05     		.2byte	0x57f
 2520 0636 A7000000 		.4byte	0xa7
 2521 063a 00000000 		.4byte	.LFB23
 2522 063e 54000000 		.4byte	.LFE23-.LFB23
 2523 0642 01       		.uleb128 0x1
 2524 0643 9C       		.byte	0x9c
 2525 0644 9A060000 		.4byte	0x69a
 2526 0648 10       		.uleb128 0x10
 2527 0649 B6050000 		.4byte	.LASF39
 2528 064d 01       		.byte	0x1
 2529 064e 7F05     		.2byte	0x57f
 2530 0650 83000000 		.4byte	0x83
 2531 0654 35040000 		.4byte	.LLST29
 2532 0658 10       		.uleb128 0x10
 2533 0659 4E060000 		.4byte	.LASF75
 2534 065d 01       		.byte	0x1
 2535 065e 7F05     		.2byte	0x57f
 2536 0660 8F000000 		.4byte	0x8f
 2537 0664 6F040000 		.4byte	.LLST30
 2538 0668 0D       		.uleb128 0xd
 2539 0669 C4040000 		.4byte	.LASF80
 2540 066d 01       		.byte	0x1
 2541 066e 8105     		.2byte	0x581
 2542 0670 A7000000 		.4byte	0xa7
 2543 0674 A6040000 		.4byte	.LLST31
 2544 0678 0D       		.uleb128 0xd
 2545 0679 5C030000 		.4byte	.LASF78
 2546 067d 01       		.byte	0x1
 2547 067e 8205     		.2byte	0x582
 2548 0680 83000000 		.4byte	0x83
 2549 0684 E4040000 		.4byte	.LLST32
 2550 0688 16       		.uleb128 0x16
 2551 0689 1E000000 		.4byte	.LVL86
 2552 068d BC050000 		.4byte	0x5bc
 2553 0691 15       		.uleb128 0x15
 2554 0692 01       		.uleb128 0x1
 2555 0693 50       		.byte	0x50
 2556 0694 03       		.uleb128 0x3
 2557 0695 F3       		.byte	0xf3
 2558 0696 01       		.uleb128 0x1
 2559 0697 50       		.byte	0x50
 2560 0698 00       		.byte	0
 2561 0699 00       		.byte	0
 2562 069a 1B       		.uleb128 0x1b
 2563 069b 62070000 		.4byte	.LASF81
 2564 069f 01       		.byte	0x1
 2565 06a0 B205     		.2byte	0x5b2
 2566 06a2 8F000000 		.4byte	0x8f
 2567 06a6 00000000 		.4byte	.LFB24
 2568 06aa 68000000 		.4byte	.LFE24-.LFB24
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 86


 2569 06ae 01       		.uleb128 0x1
 2570 06af 9C       		.byte	0x9c
 2571 06b0 06070000 		.4byte	0x706
 2572 06b4 10       		.uleb128 0x10
 2573 06b5 B6050000 		.4byte	.LASF39
 2574 06b9 01       		.byte	0x1
 2575 06ba B205     		.2byte	0x5b2
 2576 06bc 83000000 		.4byte	0x83
 2577 06c0 02050000 		.4byte	.LLST33
 2578 06c4 10       		.uleb128 0x10
 2579 06c5 4E060000 		.4byte	.LASF75
 2580 06c9 01       		.byte	0x1
 2581 06ca B205     		.2byte	0x5b2
 2582 06cc 8F000000 		.4byte	0x8f
 2583 06d0 3C050000 		.4byte	.LLST34
 2584 06d4 0D       		.uleb128 0xd
 2585 06d5 21070000 		.4byte	.LASF82
 2586 06d9 01       		.byte	0x1
 2587 06da B405     		.2byte	0x5b4
 2588 06dc 8F000000 		.4byte	0x8f
 2589 06e0 7E050000 		.4byte	.LLST35
 2590 06e4 0D       		.uleb128 0xd
 2591 06e5 5C030000 		.4byte	.LASF78
 2592 06e9 01       		.byte	0x1
 2593 06ea B505     		.2byte	0x5b5
 2594 06ec 83000000 		.4byte	0x83
 2595 06f0 B4050000 		.4byte	.LLST36
 2596 06f4 16       		.uleb128 0x16
 2597 06f5 1E000000 		.4byte	.LVL97
 2598 06f9 BC050000 		.4byte	0x5bc
 2599 06fd 15       		.uleb128 0x15
 2600 06fe 01       		.uleb128 0x1
 2601 06ff 50       		.byte	0x50
 2602 0700 03       		.uleb128 0x3
 2603 0701 F3       		.byte	0xf3
 2604 0702 01       		.uleb128 0x1
 2605 0703 50       		.byte	0x50
 2606 0704 00       		.byte	0
 2607 0705 00       		.byte	0
 2608 0706 1B       		.uleb128 0x1b
 2609 0707 22030000 		.4byte	.LASF83
 2610 070b 01       		.byte	0x1
 2611 070c E805     		.2byte	0x5e8
 2612 070e 9B000000 		.4byte	0x9b
 2613 0712 00000000 		.4byte	.LFB25
 2614 0716 4C000000 		.4byte	.LFE25-.LFB25
 2615 071a 01       		.uleb128 0x1
 2616 071b 9C       		.byte	0x9c
 2617 071c 72070000 		.4byte	0x772
 2618 0720 10       		.uleb128 0x10
 2619 0721 B6050000 		.4byte	.LASF39
 2620 0725 01       		.byte	0x1
 2621 0726 E805     		.2byte	0x5e8
 2622 0728 83000000 		.4byte	0x83
 2623 072c 0A060000 		.4byte	.LLST37
 2624 0730 10       		.uleb128 0x10
 2625 0731 4E060000 		.4byte	.LASF75
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 87


 2626 0735 01       		.byte	0x1
 2627 0736 E805     		.2byte	0x5e8
 2628 0738 8F000000 		.4byte	0x8f
 2629 073c 44060000 		.4byte	.LLST38
 2630 0740 0D       		.uleb128 0xd
 2631 0741 F1050000 		.4byte	.LASF84
 2632 0745 01       		.byte	0x1
 2633 0746 EA05     		.2byte	0x5ea
 2634 0748 C1000000 		.4byte	0xc1
 2635 074c 7B060000 		.4byte	.LLST39
 2636 0750 0D       		.uleb128 0xd
 2637 0751 5C030000 		.4byte	.LASF78
 2638 0755 01       		.byte	0x1
 2639 0756 EB05     		.2byte	0x5eb
 2640 0758 83000000 		.4byte	0x83
 2641 075c AB060000 		.4byte	.LLST40
 2642 0760 16       		.uleb128 0x16
 2643 0761 1E000000 		.4byte	.LVL110
 2644 0765 BC050000 		.4byte	0x5bc
 2645 0769 15       		.uleb128 0x15
 2646 076a 01       		.uleb128 0x1
 2647 076b 50       		.byte	0x50
 2648 076c 03       		.uleb128 0x3
 2649 076d F3       		.byte	0xf3
 2650 076e 01       		.uleb128 0x1
 2651 076f 50       		.byte	0x50
 2652 0770 00       		.byte	0
 2653 0771 00       		.byte	0
 2654 0772 1C       		.uleb128 0x1c
 2655 0773 F5040000 		.4byte	.LASF85
 2656 0777 01       		.byte	0x1
 2657 0778 F007     		.2byte	0x7f0
 2658 077a 00000000 		.4byte	.LFB26
 2659 077e DC000000 		.4byte	.LFE26-.LFB26
 2660 0782 01       		.uleb128 0x1
 2661 0783 9C       		.byte	0x9c
 2662 0784 F4070000 		.4byte	0x7f4
 2663 0788 0D       		.uleb128 0xd
 2664 0789 EF040000 		.4byte	.LASF43
 2665 078d 01       		.byte	0x1
 2666 078e F207     		.2byte	0x7f2
 2667 0790 83000000 		.4byte	0x83
 2668 0794 01070000 		.4byte	.LLST41
 2669 0798 0D       		.uleb128 0xd
 2670 0799 05030000 		.4byte	.LASF86
 2671 079d 01       		.byte	0x1
 2672 079e F307     		.2byte	0x7f3
 2673 07a0 83000000 		.4byte	0x83
 2674 07a4 37070000 		.4byte	.LLST42
 2675 07a8 0D       		.uleb128 0xd
 2676 07a9 56000000 		.4byte	.LASF87
 2677 07ad 01       		.byte	0x1
 2678 07ae F407     		.2byte	0x7f4
 2679 07b0 9B000000 		.4byte	0x9b
 2680 07b4 79070000 		.4byte	.LLST43
 2681 07b8 14       		.uleb128 0x14
 2682 07b9 90000000 		.4byte	.LVL124
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 88


 2683 07bd 280A0000 		.4byte	0xa28
 2684 07c1 D0070000 		.4byte	0x7d0
 2685 07c5 15       		.uleb128 0x15
 2686 07c6 01       		.uleb128 0x1
 2687 07c7 50       		.byte	0x50
 2688 07c8 01       		.uleb128 0x1
 2689 07c9 3F       		.byte	0x3f
 2690 07ca 15       		.uleb128 0x15
 2691 07cb 01       		.uleb128 0x1
 2692 07cc 51       		.byte	0x51
 2693 07cd 01       		.uleb128 0x1
 2694 07ce 33       		.byte	0x33
 2695 07cf 00       		.byte	0
 2696 07d0 14       		.uleb128 0x14
 2697 07d1 98000000 		.4byte	.LVL125
 2698 07d5 330A0000 		.4byte	0xa33
 2699 07d9 E3070000 		.4byte	0x7e3
 2700 07dd 15       		.uleb128 0x15
 2701 07de 01       		.uleb128 0x1
 2702 07df 50       		.byte	0x50
 2703 07e0 01       		.uleb128 0x1
 2704 07e1 3F       		.byte	0x3f
 2705 07e2 00       		.byte	0
 2706 07e3 16       		.uleb128 0x16
 2707 07e4 AE000000 		.4byte	.LVL128
 2708 07e8 5F020000 		.4byte	0x25f
 2709 07ec 15       		.uleb128 0x15
 2710 07ed 01       		.uleb128 0x1
 2711 07ee 50       		.byte	0x50
 2712 07ef 02       		.uleb128 0x2
 2713 07f0 74       		.byte	0x74
 2714 07f1 00       		.sleb128 0
 2715 07f2 00       		.byte	0
 2716 07f3 00       		.byte	0
 2717 07f4 12       		.uleb128 0x12
 2718 07f5 FF050000 		.4byte	.LASF88
 2719 07f9 01       		.byte	0x1
 2720 07fa 5C08     		.2byte	0x85c
 2721 07fc 00000000 		.4byte	.LFB27
 2722 0800 48000000 		.4byte	.LFE27-.LFB27
 2723 0804 01       		.uleb128 0x1
 2724 0805 9C       		.byte	0x9c
 2725 0806 27080000 		.4byte	0x827
 2726 080a 14       		.uleb128 0x14
 2727 080b 24000000 		.4byte	.LVL130
 2728 080f 3E0A0000 		.4byte	0xa3e
 2729 0813 1D080000 		.4byte	0x81d
 2730 0817 15       		.uleb128 0x15
 2731 0818 01       		.uleb128 0x1
 2732 0819 50       		.byte	0x50
 2733 081a 01       		.uleb128 0x1
 2734 081b 3A       		.byte	0x3a
 2735 081c 00       		.byte	0
 2736 081d 13       		.uleb128 0x13
 2737 081e 36000000 		.4byte	.LVL131
 2738 0822 C2010000 		.4byte	0x1c2
 2739 0826 00       		.byte	0
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 89


 2740 0827 12       		.uleb128 0x12
 2741 0828 92040000 		.4byte	.LASF89
 2742 082c 01       		.byte	0x1
 2743 082d 2B02     		.2byte	0x22b
 2744 082f 00000000 		.4byte	.LFB1
 2745 0833 24000000 		.4byte	.LFE1-.LFB1
 2746 0837 01       		.uleb128 0x1
 2747 0838 9C       		.byte	0x9c
 2748 0839 50080000 		.4byte	0x850
 2749 083d 13       		.uleb128 0x13
 2750 083e 0E000000 		.4byte	.LVL132
 2751 0842 72070000 		.4byte	0x772
 2752 0846 13       		.uleb128 0x13
 2753 0847 1C000000 		.4byte	.LVL133
 2754 084b F4070000 		.4byte	0x7f4
 2755 084f 00       		.byte	0
 2756 0850 12       		.uleb128 0x12
 2757 0851 DD030000 		.4byte	.LASF90
 2758 0855 01       		.byte	0x1
 2759 0856 4802     		.2byte	0x248
 2760 0858 00000000 		.4byte	.LFB2
 2761 085c 10000000 		.4byte	.LFE2-.LFB2
 2762 0860 01       		.uleb128 0x1
 2763 0861 9C       		.byte	0x9c
 2764 0862 90080000 		.4byte	0x890
 2765 0866 10       		.uleb128 0x10
 2766 0867 BD030000 		.4byte	.LASF91
 2767 086b 01       		.byte	0x1
 2768 086c 4802     		.2byte	0x248
 2769 086e E5000000 		.4byte	0xe5
 2770 0872 8F070000 		.4byte	.LLST44
 2771 0876 13       		.uleb128 0x13
 2772 0877 08000000 		.4byte	.LVL135
 2773 087b 27080000 		.4byte	0x827
 2774 087f 16       		.uleb128 0x16
 2775 0880 0E000000 		.4byte	.LVL136
 2776 0884 490A0000 		.4byte	0xa49
 2777 0888 15       		.uleb128 0x15
 2778 0889 01       		.uleb128 0x1
 2779 088a 50       		.byte	0x50
 2780 088b 02       		.uleb128 0x2
 2781 088c 74       		.byte	0x74
 2782 088d 00       		.sleb128 0
 2783 088e 00       		.byte	0
 2784 088f 00       		.byte	0
 2785 0890 12       		.uleb128 0x12
 2786 0891 06040000 		.4byte	.LASF92
 2787 0895 01       		.byte	0x1
 2788 0896 0303     		.2byte	0x303
 2789 0898 00000000 		.4byte	.LFB6
 2790 089c 70000000 		.4byte	.LFE6-.LFB6
 2791 08a0 01       		.uleb128 0x1
 2792 08a1 9C       		.byte	0x9c
 2793 08a2 FF080000 		.4byte	0x8ff
 2794 08a6 10       		.uleb128 0x10
 2795 08a7 D2050000 		.4byte	.LASF38
 2796 08ab 01       		.byte	0x1
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 90


 2797 08ac 0303     		.2byte	0x303
 2798 08ae 83000000 		.4byte	0x83
 2799 08b2 BB070000 		.4byte	.LLST45
 2800 08b6 10       		.uleb128 0x10
 2801 08b7 56020000 		.4byte	.LASF93
 2802 08bb 01       		.byte	0x1
 2803 08bc 0303     		.2byte	0x303
 2804 08be 83000000 		.4byte	0x83
 2805 08c2 E7070000 		.4byte	.LLST46
 2806 08c6 13       		.uleb128 0x13
 2807 08c7 0E000000 		.4byte	.LVL139
 2808 08cb 4D020000 		.4byte	0x24d
 2809 08cf 13       		.uleb128 0x13
 2810 08d0 1E000000 		.4byte	.LVL140
 2811 08d4 72070000 		.4byte	0x772
 2812 08d8 14       		.uleb128 0x14
 2813 08d9 38000000 		.4byte	.LVL141
 2814 08dd 5F020000 		.4byte	0x25f
 2815 08e1 EC080000 		.4byte	0x8ec
 2816 08e5 15       		.uleb128 0x15
 2817 08e6 01       		.uleb128 0x1
 2818 08e7 50       		.byte	0x50
 2819 08e8 02       		.uleb128 0x2
 2820 08e9 75       		.byte	0x75
 2821 08ea 00       		.sleb128 0
 2822 08eb 00       		.byte	0
 2823 08ec 13       		.uleb128 0x13
 2824 08ed 56000000 		.4byte	.LVL142
 2825 08f1 27080000 		.4byte	0x827
 2826 08f5 13       		.uleb128 0x13
 2827 08f6 5A000000 		.4byte	.LVL143
 2828 08fa D2020000 		.4byte	0x2d2
 2829 08fe 00       		.byte	0
 2830 08ff 12       		.uleb128 0x12
 2831 0900 03050000 		.4byte	.LASF94
 2832 0904 01       		.byte	0x1
 2833 0905 6003     		.2byte	0x360
 2834 0907 00000000 		.4byte	.LFB8
 2835 090b 44000000 		.4byte	.LFE8-.LFB8
 2836 090f 01       		.uleb128 0x1
 2837 0910 9C       		.byte	0x9c
 2838 0911 28090000 		.4byte	0x928
 2839 0915 13       		.uleb128 0x13
 2840 0916 2C000000 		.4byte	.LVL146
 2841 091a 4D020000 		.4byte	0x24d
 2842 091e 13       		.uleb128 0x13
 2843 091f 30000000 		.4byte	.LVL147
 2844 0923 27080000 		.4byte	0x827
 2845 0927 00       		.byte	0
 2846 0928 1D       		.uleb128 0x1d
 2847 0929 4B070000 		.4byte	.LASF95
 2848 092d 01       		.byte	0x1
 2849 092e 43       		.byte	0x43
 2850 092f 83000000 		.4byte	0x83
 2851 0933 05       		.uleb128 0x5
 2852 0934 03       		.byte	0x3
 2853 0935 00000000 		.4byte	ADC_Temp_currentConfig
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 91


 2854 0939 1E       		.uleb128 0x1e
 2855 093a 49090000 		.4byte	0x949
 2856 093e 49090000 		.4byte	0x949
 2857 0942 1F       		.uleb128 0x1f
 2858 0943 FF000000 		.4byte	0xff
 2859 0947 00       		.byte	0
 2860 0948 00       		.byte	0
 2861 0949 0E       		.uleb128 0xe
 2862 094a 83000000 		.4byte	0x83
 2863 094e 20       		.uleb128 0x20
 2864 094f C5030000 		.4byte	.LASF96
 2865 0953 01       		.byte	0x1
 2866 0954 49       		.byte	0x49
 2867 0955 5E090000 		.4byte	0x95e
 2868 0959 04       		.byte	0x4
 2869 095a 00       		.byte	0
 2870 095b 00       		.byte	0
 2871 095c 00       		.byte	0
 2872 095d 00       		.byte	0
 2873 095e 0E       		.uleb128 0xe
 2874 095f 39090000 		.4byte	0x939
 2875 0963 21       		.uleb128 0x21
 2876 0964 7F000000 		.4byte	.LASF97
 2877 0968 01       		.byte	0x1
 2878 0969 3D       		.byte	0x3d
 2879 096a 6B000000 		.4byte	0x6b
 2880 096e 05       		.uleb128 0x5
 2881 096f 03       		.byte	0x3
 2882 0970 00000000 		.4byte	ADC_Temp_initVar
 2883 0974 21       		.uleb128 0x21
 2884 0975 DD040000 		.4byte	.LASF98
 2885 0979 01       		.byte	0x1
 2886 097a 3F       		.byte	0x3f
 2887 097b 6B000000 		.4byte	0x6b
 2888 097f 05       		.uleb128 0x5
 2889 0980 03       		.byte	0x3
 2890 0981 00000000 		.4byte	ADC_Temp_selected
 2891 0985 1E       		.uleb128 0x1e
 2892 0986 95090000 		.4byte	0x995
 2893 098a 95090000 		.4byte	0x995
 2894 098e 1F       		.uleb128 0x1f
 2895 098f FF000000 		.4byte	0xff
 2896 0993 00       		.byte	0
 2897 0994 00       		.byte	0
 2898 0995 05       		.uleb128 0x5
 2899 0996 8F000000 		.4byte	0x8f
 2900 099a 21       		.uleb128 0x21
 2901 099b 24020000 		.4byte	.LASF99
 2902 099f 01       		.byte	0x1
 2903 09a0 40       		.byte	0x40
 2904 09a1 AB090000 		.4byte	0x9ab
 2905 09a5 05       		.uleb128 0x5
 2906 09a6 03       		.byte	0x3
 2907 09a7 00000000 		.4byte	ADC_Temp_offset
 2908 09ab 05       		.uleb128 0x5
 2909 09ac 85090000 		.4byte	0x985
 2910 09b0 1E       		.uleb128 0x1e
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 92


 2911 09b1 C0090000 		.4byte	0x9c0
 2912 09b5 C0090000 		.4byte	0x9c0
 2913 09b9 1F       		.uleb128 0x1f
 2914 09ba FF000000 		.4byte	0xff
 2915 09be 00       		.byte	0
 2916 09bf 00       		.byte	0
 2917 09c0 05       		.uleb128 0x5
 2918 09c1 9B000000 		.4byte	0x9b
 2919 09c5 21       		.uleb128 0x21
 2920 09c6 0F000000 		.4byte	.LASF100
 2921 09ca 01       		.byte	0x1
 2922 09cb 41       		.byte	0x41
 2923 09cc D6090000 		.4byte	0x9d6
 2924 09d0 05       		.uleb128 0x5
 2925 09d1 03       		.byte	0x3
 2926 09d2 00000000 		.4byte	ADC_Temp_countsPer10Volt
 2927 09d6 05       		.uleb128 0x5
 2928 09d7 B0090000 		.4byte	0x9b0
 2929 09db 1E       		.uleb128 0x1e
 2930 09dc FD010000 		.4byte	0x1fd
 2931 09e0 EB090000 		.4byte	0x9eb
 2932 09e4 1F       		.uleb128 0x1f
 2933 09e5 FF000000 		.4byte	0xff
 2934 09e9 00       		.byte	0
 2935 09ea 00       		.byte	0
 2936 09eb 22       		.uleb128 0x22
 2937 09ec 0F060000 		.4byte	.LASF101
 2938 09f0 03       		.byte	0x3
 2939 09f1 EC01     		.2byte	0x1ec
 2940 09f3 F7090000 		.4byte	0x9f7
 2941 09f7 0E       		.uleb128 0xe
 2942 09f8 DB090000 		.4byte	0x9db
 2943 09fc 23       		.uleb128 0x23
 2944 09fd 9D010000 		.4byte	.LASF102
 2945 0a01 9D010000 		.4byte	.LASF102
 2946 0a05 04       		.byte	0x4
 2947 0a06 27       		.byte	0x27
 2948 0a07 23       		.uleb128 0x23
 2949 0a08 EB000000 		.4byte	.LASF103
 2950 0a0c EB000000 		.4byte	.LASF103
 2951 0a10 04       		.byte	0x4
 2952 0a11 29       		.byte	0x29
 2953 0a12 23       		.uleb128 0x23
 2954 0a13 D3020000 		.4byte	.LASF104
 2955 0a17 D3020000 		.4byte	.LASF104
 2956 0a1b 04       		.byte	0x4
 2957 0a1c 1D       		.byte	0x1d
 2958 0a1d 23       		.uleb128 0x23
 2959 0a1e 7D040000 		.4byte	.LASF105
 2960 0a22 7D040000 		.4byte	.LASF105
 2961 0a26 05       		.byte	0x5
 2962 0a27 FA       		.byte	0xfa
 2963 0a28 23       		.uleb128 0x23
 2964 0a29 2A040000 		.4byte	.LASF106
 2965 0a2d 2A040000 		.4byte	.LASF106
 2966 0a31 05       		.byte	0x5
 2967 0a32 D3       		.byte	0xd3
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 93


 2968 0a33 23       		.uleb128 0x23
 2969 0a34 00000000 		.4byte	.LASF107
 2970 0a38 00000000 		.4byte	.LASF107
 2971 0a3c 05       		.byte	0x5
 2972 0a3d D0       		.byte	0xd0
 2973 0a3e 23       		.uleb128 0x23
 2974 0a3f B7010000 		.4byte	.LASF108
 2975 0a43 B7010000 		.4byte	.LASF108
 2976 0a47 05       		.byte	0x5
 2977 0a48 ED       		.byte	0xed
 2978 0a49 23       		.uleb128 0x23
 2979 0a4a 58060000 		.4byte	.LASF109
 2980 0a4e 58060000 		.4byte	.LASF109
 2981 0a52 06       		.byte	0x6
 2982 0a53 18       		.byte	0x18
 2983 0a54 00       		.byte	0
 2984              		.section	.debug_abbrev,"",%progbits
 2985              	.Ldebug_abbrev0:
 2986 0000 01       		.uleb128 0x1
 2987 0001 11       		.uleb128 0x11
 2988 0002 01       		.byte	0x1
 2989 0003 25       		.uleb128 0x25
 2990 0004 0E       		.uleb128 0xe
 2991 0005 13       		.uleb128 0x13
 2992 0006 0B       		.uleb128 0xb
 2993 0007 03       		.uleb128 0x3
 2994 0008 0E       		.uleb128 0xe
 2995 0009 1B       		.uleb128 0x1b
 2996 000a 0E       		.uleb128 0xe
 2997 000b 55       		.uleb128 0x55
 2998 000c 17       		.uleb128 0x17
 2999 000d 11       		.uleb128 0x11
 3000 000e 01       		.uleb128 0x1
 3001 000f 10       		.uleb128 0x10
 3002 0010 17       		.uleb128 0x17
 3003 0011 00       		.byte	0
 3004 0012 00       		.byte	0
 3005 0013 02       		.uleb128 0x2
 3006 0014 24       		.uleb128 0x24
 3007 0015 00       		.byte	0
 3008 0016 0B       		.uleb128 0xb
 3009 0017 0B       		.uleb128 0xb
 3010 0018 3E       		.uleb128 0x3e
 3011 0019 0B       		.uleb128 0xb
 3012 001a 03       		.uleb128 0x3
 3013 001b 0E       		.uleb128 0xe
 3014 001c 00       		.byte	0
 3015 001d 00       		.byte	0
 3016 001e 03       		.uleb128 0x3
 3017 001f 24       		.uleb128 0x24
 3018 0020 00       		.byte	0
 3019 0021 0B       		.uleb128 0xb
 3020 0022 0B       		.uleb128 0xb
 3021 0023 3E       		.uleb128 0x3e
 3022 0024 0B       		.uleb128 0xb
 3023 0025 03       		.uleb128 0x3
 3024 0026 08       		.uleb128 0x8
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 94


 3025 0027 00       		.byte	0
 3026 0028 00       		.byte	0
 3027 0029 04       		.uleb128 0x4
 3028 002a 16       		.uleb128 0x16
 3029 002b 00       		.byte	0
 3030 002c 03       		.uleb128 0x3
 3031 002d 0E       		.uleb128 0xe
 3032 002e 3A       		.uleb128 0x3a
 3033 002f 0B       		.uleb128 0xb
 3034 0030 3B       		.uleb128 0x3b
 3035 0031 05       		.uleb128 0x5
 3036 0032 49       		.uleb128 0x49
 3037 0033 13       		.uleb128 0x13
 3038 0034 00       		.byte	0
 3039 0035 00       		.byte	0
 3040 0036 05       		.uleb128 0x5
 3041 0037 35       		.uleb128 0x35
 3042 0038 00       		.byte	0
 3043 0039 49       		.uleb128 0x49
 3044 003a 13       		.uleb128 0x13
 3045 003b 00       		.byte	0
 3046 003c 00       		.byte	0
 3047 003d 06       		.uleb128 0x6
 3048 003e 0F       		.uleb128 0xf
 3049 003f 00       		.byte	0
 3050 0040 0B       		.uleb128 0xb
 3051 0041 0B       		.uleb128 0xb
 3052 0042 49       		.uleb128 0x49
 3053 0043 13       		.uleb128 0x13
 3054 0044 00       		.byte	0
 3055 0045 00       		.byte	0
 3056 0046 07       		.uleb128 0x7
 3057 0047 15       		.uleb128 0x15
 3058 0048 00       		.byte	0
 3059 0049 27       		.uleb128 0x27
 3060 004a 19       		.uleb128 0x19
 3061 004b 00       		.byte	0
 3062 004c 00       		.byte	0
 3063 004d 08       		.uleb128 0x8
 3064 004e 13       		.uleb128 0x13
 3065 004f 01       		.byte	0x1
 3066 0050 0B       		.uleb128 0xb
 3067 0051 0B       		.uleb128 0xb
 3068 0052 3A       		.uleb128 0x3a
 3069 0053 0B       		.uleb128 0xb
 3070 0054 3B       		.uleb128 0x3b
 3071 0055 0B       		.uleb128 0xb
 3072 0056 01       		.uleb128 0x1
 3073 0057 13       		.uleb128 0x13
 3074 0058 00       		.byte	0
 3075 0059 00       		.byte	0
 3076 005a 09       		.uleb128 0x9
 3077 005b 0D       		.uleb128 0xd
 3078 005c 00       		.byte	0
 3079 005d 03       		.uleb128 0x3
 3080 005e 0E       		.uleb128 0xe
 3081 005f 3A       		.uleb128 0x3a
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 95


 3082 0060 0B       		.uleb128 0xb
 3083 0061 3B       		.uleb128 0x3b
 3084 0062 0B       		.uleb128 0xb
 3085 0063 49       		.uleb128 0x49
 3086 0064 13       		.uleb128 0x13
 3087 0065 38       		.uleb128 0x38
 3088 0066 0B       		.uleb128 0xb
 3089 0067 00       		.byte	0
 3090 0068 00       		.byte	0
 3091 0069 0A       		.uleb128 0xa
 3092 006a 16       		.uleb128 0x16
 3093 006b 00       		.byte	0
 3094 006c 03       		.uleb128 0x3
 3095 006d 0E       		.uleb128 0xe
 3096 006e 3A       		.uleb128 0x3a
 3097 006f 0B       		.uleb128 0xb
 3098 0070 3B       		.uleb128 0x3b
 3099 0071 0B       		.uleb128 0xb
 3100 0072 49       		.uleb128 0x49
 3101 0073 13       		.uleb128 0x13
 3102 0074 00       		.byte	0
 3103 0075 00       		.byte	0
 3104 0076 0B       		.uleb128 0xb
 3105 0077 2E       		.uleb128 0x2e
 3106 0078 01       		.byte	0x1
 3107 0079 03       		.uleb128 0x3
 3108 007a 0E       		.uleb128 0xe
 3109 007b 3A       		.uleb128 0x3a
 3110 007c 0B       		.uleb128 0xb
 3111 007d 3B       		.uleb128 0x3b
 3112 007e 05       		.uleb128 0x5
 3113 007f 27       		.uleb128 0x27
 3114 0080 19       		.uleb128 0x19
 3115 0081 11       		.uleb128 0x11
 3116 0082 01       		.uleb128 0x1
 3117 0083 12       		.uleb128 0x12
 3118 0084 06       		.uleb128 0x6
 3119 0085 40       		.uleb128 0x40
 3120 0086 18       		.uleb128 0x18
 3121 0087 9742     		.uleb128 0x2117
 3122 0089 19       		.uleb128 0x19
 3123 008a 01       		.uleb128 0x1
 3124 008b 13       		.uleb128 0x13
 3125 008c 00       		.byte	0
 3126 008d 00       		.byte	0
 3127 008e 0C       		.uleb128 0xc
 3128 008f 05       		.uleb128 0x5
 3129 0090 00       		.byte	0
 3130 0091 03       		.uleb128 0x3
 3131 0092 0E       		.uleb128 0xe
 3132 0093 3A       		.uleb128 0x3a
 3133 0094 0B       		.uleb128 0xb
 3134 0095 3B       		.uleb128 0x3b
 3135 0096 05       		.uleb128 0x5
 3136 0097 49       		.uleb128 0x49
 3137 0098 13       		.uleb128 0x13
 3138 0099 02       		.uleb128 0x2
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 96


 3139 009a 18       		.uleb128 0x18
 3140 009b 00       		.byte	0
 3141 009c 00       		.byte	0
 3142 009d 0D       		.uleb128 0xd
 3143 009e 34       		.uleb128 0x34
 3144 009f 00       		.byte	0
 3145 00a0 03       		.uleb128 0x3
 3146 00a1 0E       		.uleb128 0xe
 3147 00a2 3A       		.uleb128 0x3a
 3148 00a3 0B       		.uleb128 0xb
 3149 00a4 3B       		.uleb128 0x3b
 3150 00a5 05       		.uleb128 0x5
 3151 00a6 49       		.uleb128 0x49
 3152 00a7 13       		.uleb128 0x13
 3153 00a8 02       		.uleb128 0x2
 3154 00a9 17       		.uleb128 0x17
 3155 00aa 00       		.byte	0
 3156 00ab 00       		.byte	0
 3157 00ac 0E       		.uleb128 0xe
 3158 00ad 26       		.uleb128 0x26
 3159 00ae 00       		.byte	0
 3160 00af 49       		.uleb128 0x49
 3161 00b0 13       		.uleb128 0x13
 3162 00b1 00       		.byte	0
 3163 00b2 00       		.byte	0
 3164 00b3 0F       		.uleb128 0xf
 3165 00b4 2E       		.uleb128 0x2e
 3166 00b5 01       		.byte	0x1
 3167 00b6 03       		.uleb128 0x3
 3168 00b7 0E       		.uleb128 0xe
 3169 00b8 3A       		.uleb128 0x3a
 3170 00b9 0B       		.uleb128 0xb
 3171 00ba 3B       		.uleb128 0x3b
 3172 00bb 05       		.uleb128 0x5
 3173 00bc 27       		.uleb128 0x27
 3174 00bd 19       		.uleb128 0x19
 3175 00be 49       		.uleb128 0x49
 3176 00bf 13       		.uleb128 0x13
 3177 00c0 11       		.uleb128 0x11
 3178 00c1 01       		.uleb128 0x1
 3179 00c2 12       		.uleb128 0x12
 3180 00c3 06       		.uleb128 0x6
 3181 00c4 40       		.uleb128 0x40
 3182 00c5 18       		.uleb128 0x18
 3183 00c6 9742     		.uleb128 0x2117
 3184 00c8 19       		.uleb128 0x19
 3185 00c9 01       		.uleb128 0x1
 3186 00ca 13       		.uleb128 0x13
 3187 00cb 00       		.byte	0
 3188 00cc 00       		.byte	0
 3189 00cd 10       		.uleb128 0x10
 3190 00ce 05       		.uleb128 0x5
 3191 00cf 00       		.byte	0
 3192 00d0 03       		.uleb128 0x3
 3193 00d1 0E       		.uleb128 0xe
 3194 00d2 3A       		.uleb128 0x3a
 3195 00d3 0B       		.uleb128 0xb
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 97


 3196 00d4 3B       		.uleb128 0x3b
 3197 00d5 05       		.uleb128 0x5
 3198 00d6 49       		.uleb128 0x49
 3199 00d7 13       		.uleb128 0x13
 3200 00d8 02       		.uleb128 0x2
 3201 00d9 17       		.uleb128 0x17
 3202 00da 00       		.byte	0
 3203 00db 00       		.byte	0
 3204 00dc 11       		.uleb128 0x11
 3205 00dd 2E       		.uleb128 0x2e
 3206 00de 00       		.byte	0
 3207 00df 3F       		.uleb128 0x3f
 3208 00e0 19       		.uleb128 0x19
 3209 00e1 03       		.uleb128 0x3
 3210 00e2 0E       		.uleb128 0xe
 3211 00e3 3A       		.uleb128 0x3a
 3212 00e4 0B       		.uleb128 0xb
 3213 00e5 3B       		.uleb128 0x3b
 3214 00e6 05       		.uleb128 0x5
 3215 00e7 27       		.uleb128 0x27
 3216 00e8 19       		.uleb128 0x19
 3217 00e9 11       		.uleb128 0x11
 3218 00ea 01       		.uleb128 0x1
 3219 00eb 12       		.uleb128 0x12
 3220 00ec 06       		.uleb128 0x6
 3221 00ed 40       		.uleb128 0x40
 3222 00ee 18       		.uleb128 0x18
 3223 00ef 9742     		.uleb128 0x2117
 3224 00f1 19       		.uleb128 0x19
 3225 00f2 00       		.byte	0
 3226 00f3 00       		.byte	0
 3227 00f4 12       		.uleb128 0x12
 3228 00f5 2E       		.uleb128 0x2e
 3229 00f6 01       		.byte	0x1
 3230 00f7 3F       		.uleb128 0x3f
 3231 00f8 19       		.uleb128 0x19
 3232 00f9 03       		.uleb128 0x3
 3233 00fa 0E       		.uleb128 0xe
 3234 00fb 3A       		.uleb128 0x3a
 3235 00fc 0B       		.uleb128 0xb
 3236 00fd 3B       		.uleb128 0x3b
 3237 00fe 05       		.uleb128 0x5
 3238 00ff 27       		.uleb128 0x27
 3239 0100 19       		.uleb128 0x19
 3240 0101 11       		.uleb128 0x11
 3241 0102 01       		.uleb128 0x1
 3242 0103 12       		.uleb128 0x12
 3243 0104 06       		.uleb128 0x6
 3244 0105 40       		.uleb128 0x40
 3245 0106 18       		.uleb128 0x18
 3246 0107 9742     		.uleb128 0x2117
 3247 0109 19       		.uleb128 0x19
 3248 010a 01       		.uleb128 0x1
 3249 010b 13       		.uleb128 0x13
 3250 010c 00       		.byte	0
 3251 010d 00       		.byte	0
 3252 010e 13       		.uleb128 0x13
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 98


 3253 010f 898201   		.uleb128 0x4109
 3254 0112 00       		.byte	0
 3255 0113 11       		.uleb128 0x11
 3256 0114 01       		.uleb128 0x1
 3257 0115 31       		.uleb128 0x31
 3258 0116 13       		.uleb128 0x13
 3259 0117 00       		.byte	0
 3260 0118 00       		.byte	0
 3261 0119 14       		.uleb128 0x14
 3262 011a 898201   		.uleb128 0x4109
 3263 011d 01       		.byte	0x1
 3264 011e 11       		.uleb128 0x11
 3265 011f 01       		.uleb128 0x1
 3266 0120 31       		.uleb128 0x31
 3267 0121 13       		.uleb128 0x13
 3268 0122 01       		.uleb128 0x1
 3269 0123 13       		.uleb128 0x13
 3270 0124 00       		.byte	0
 3271 0125 00       		.byte	0
 3272 0126 15       		.uleb128 0x15
 3273 0127 8A8201   		.uleb128 0x410a
 3274 012a 00       		.byte	0
 3275 012b 02       		.uleb128 0x2
 3276 012c 18       		.uleb128 0x18
 3277 012d 9142     		.uleb128 0x2111
 3278 012f 18       		.uleb128 0x18
 3279 0130 00       		.byte	0
 3280 0131 00       		.byte	0
 3281 0132 16       		.uleb128 0x16
 3282 0133 898201   		.uleb128 0x4109
 3283 0136 01       		.byte	0x1
 3284 0137 11       		.uleb128 0x11
 3285 0138 01       		.uleb128 0x1
 3286 0139 31       		.uleb128 0x31
 3287 013a 13       		.uleb128 0x13
 3288 013b 00       		.byte	0
 3289 013c 00       		.byte	0
 3290 013d 17       		.uleb128 0x17
 3291 013e 34       		.uleb128 0x34
 3292 013f 00       		.byte	0
 3293 0140 03       		.uleb128 0x3
 3294 0141 0E       		.uleb128 0xe
 3295 0142 3A       		.uleb128 0x3a
 3296 0143 0B       		.uleb128 0xb
 3297 0144 3B       		.uleb128 0x3b
 3298 0145 05       		.uleb128 0x5
 3299 0146 49       		.uleb128 0x49
 3300 0147 13       		.uleb128 0x13
 3301 0148 02       		.uleb128 0x2
 3302 0149 18       		.uleb128 0x18
 3303 014a 00       		.byte	0
 3304 014b 00       		.byte	0
 3305 014c 18       		.uleb128 0x18
 3306 014d 2E       		.uleb128 0x2e
 3307 014e 01       		.byte	0x1
 3308 014f 3F       		.uleb128 0x3f
 3309 0150 19       		.uleb128 0x19
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 99


 3310 0151 03       		.uleb128 0x3
 3311 0152 0E       		.uleb128 0xe
 3312 0153 3A       		.uleb128 0x3a
 3313 0154 0B       		.uleb128 0xb
 3314 0155 3B       		.uleb128 0x3b
 3315 0156 05       		.uleb128 0x5
 3316 0157 27       		.uleb128 0x27
 3317 0158 19       		.uleb128 0x19
 3318 0159 49       		.uleb128 0x49
 3319 015a 13       		.uleb128 0x13
 3320 015b 11       		.uleb128 0x11
 3321 015c 01       		.uleb128 0x1
 3322 015d 12       		.uleb128 0x12
 3323 015e 06       		.uleb128 0x6
 3324 015f 40       		.uleb128 0x40
 3325 0160 18       		.uleb128 0x18
 3326 0161 9742     		.uleb128 0x2117
 3327 0163 19       		.uleb128 0x19
 3328 0164 01       		.uleb128 0x1
 3329 0165 13       		.uleb128 0x13
 3330 0166 00       		.byte	0
 3331 0167 00       		.byte	0
 3332 0168 19       		.uleb128 0x19
 3333 0169 34       		.uleb128 0x34
 3334 016a 00       		.byte	0
 3335 016b 03       		.uleb128 0x3
 3336 016c 08       		.uleb128 0x8
 3337 016d 3A       		.uleb128 0x3a
 3338 016e 0B       		.uleb128 0xb
 3339 016f 3B       		.uleb128 0x3b
 3340 0170 05       		.uleb128 0x5
 3341 0171 49       		.uleb128 0x49
 3342 0172 13       		.uleb128 0x13
 3343 0173 02       		.uleb128 0x2
 3344 0174 17       		.uleb128 0x17
 3345 0175 00       		.byte	0
 3346 0176 00       		.byte	0
 3347 0177 1A       		.uleb128 0x1a
 3348 0178 34       		.uleb128 0x34
 3349 0179 00       		.byte	0
 3350 017a 03       		.uleb128 0x3
 3351 017b 0E       		.uleb128 0xe
 3352 017c 3A       		.uleb128 0x3a
 3353 017d 0B       		.uleb128 0xb
 3354 017e 3B       		.uleb128 0x3b
 3355 017f 05       		.uleb128 0x5
 3356 0180 49       		.uleb128 0x49
 3357 0181 13       		.uleb128 0x13
 3358 0182 00       		.byte	0
 3359 0183 00       		.byte	0
 3360 0184 1B       		.uleb128 0x1b
 3361 0185 2E       		.uleb128 0x2e
 3362 0186 01       		.byte	0x1
 3363 0187 3F       		.uleb128 0x3f
 3364 0188 19       		.uleb128 0x19
 3365 0189 03       		.uleb128 0x3
 3366 018a 0E       		.uleb128 0xe
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 100


 3367 018b 3A       		.uleb128 0x3a
 3368 018c 0B       		.uleb128 0xb
 3369 018d 3B       		.uleb128 0x3b
 3370 018e 05       		.uleb128 0x5
 3371 018f 27       		.uleb128 0x27
 3372 0190 19       		.uleb128 0x19
 3373 0191 49       		.uleb128 0x49
 3374 0192 13       		.uleb128 0x13
 3375 0193 11       		.uleb128 0x11
 3376 0194 01       		.uleb128 0x1
 3377 0195 12       		.uleb128 0x12
 3378 0196 06       		.uleb128 0x6
 3379 0197 40       		.uleb128 0x40
 3380 0198 18       		.uleb128 0x18
 3381 0199 9642     		.uleb128 0x2116
 3382 019b 19       		.uleb128 0x19
 3383 019c 01       		.uleb128 0x1
 3384 019d 13       		.uleb128 0x13
 3385 019e 00       		.byte	0
 3386 019f 00       		.byte	0
 3387 01a0 1C       		.uleb128 0x1c
 3388 01a1 2E       		.uleb128 0x2e
 3389 01a2 01       		.byte	0x1
 3390 01a3 3F       		.uleb128 0x3f
 3391 01a4 19       		.uleb128 0x19
 3392 01a5 03       		.uleb128 0x3
 3393 01a6 0E       		.uleb128 0xe
 3394 01a7 3A       		.uleb128 0x3a
 3395 01a8 0B       		.uleb128 0xb
 3396 01a9 3B       		.uleb128 0x3b
 3397 01aa 05       		.uleb128 0x5
 3398 01ab 27       		.uleb128 0x27
 3399 01ac 19       		.uleb128 0x19
 3400 01ad 11       		.uleb128 0x11
 3401 01ae 01       		.uleb128 0x1
 3402 01af 12       		.uleb128 0x12
 3403 01b0 06       		.uleb128 0x6
 3404 01b1 40       		.uleb128 0x40
 3405 01b2 18       		.uleb128 0x18
 3406 01b3 9642     		.uleb128 0x2116
 3407 01b5 19       		.uleb128 0x19
 3408 01b6 01       		.uleb128 0x1
 3409 01b7 13       		.uleb128 0x13
 3410 01b8 00       		.byte	0
 3411 01b9 00       		.byte	0
 3412 01ba 1D       		.uleb128 0x1d
 3413 01bb 34       		.uleb128 0x34
 3414 01bc 00       		.byte	0
 3415 01bd 03       		.uleb128 0x3
 3416 01be 0E       		.uleb128 0xe
 3417 01bf 3A       		.uleb128 0x3a
 3418 01c0 0B       		.uleb128 0xb
 3419 01c1 3B       		.uleb128 0x3b
 3420 01c2 0B       		.uleb128 0xb
 3421 01c3 49       		.uleb128 0x49
 3422 01c4 13       		.uleb128 0x13
 3423 01c5 02       		.uleb128 0x2
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 101


 3424 01c6 18       		.uleb128 0x18
 3425 01c7 00       		.byte	0
 3426 01c8 00       		.byte	0
 3427 01c9 1E       		.uleb128 0x1e
 3428 01ca 01       		.uleb128 0x1
 3429 01cb 01       		.byte	0x1
 3430 01cc 49       		.uleb128 0x49
 3431 01cd 13       		.uleb128 0x13
 3432 01ce 01       		.uleb128 0x1
 3433 01cf 13       		.uleb128 0x13
 3434 01d0 00       		.byte	0
 3435 01d1 00       		.byte	0
 3436 01d2 1F       		.uleb128 0x1f
 3437 01d3 21       		.uleb128 0x21
 3438 01d4 00       		.byte	0
 3439 01d5 49       		.uleb128 0x49
 3440 01d6 13       		.uleb128 0x13
 3441 01d7 2F       		.uleb128 0x2f
 3442 01d8 0B       		.uleb128 0xb
 3443 01d9 00       		.byte	0
 3444 01da 00       		.byte	0
 3445 01db 20       		.uleb128 0x20
 3446 01dc 34       		.uleb128 0x34
 3447 01dd 00       		.byte	0
 3448 01de 03       		.uleb128 0x3
 3449 01df 0E       		.uleb128 0xe
 3450 01e0 3A       		.uleb128 0x3a
 3451 01e1 0B       		.uleb128 0xb
 3452 01e2 3B       		.uleb128 0x3b
 3453 01e3 0B       		.uleb128 0xb
 3454 01e4 49       		.uleb128 0x49
 3455 01e5 13       		.uleb128 0x13
 3456 01e6 1C       		.uleb128 0x1c
 3457 01e7 0A       		.uleb128 0xa
 3458 01e8 00       		.byte	0
 3459 01e9 00       		.byte	0
 3460 01ea 21       		.uleb128 0x21
 3461 01eb 34       		.uleb128 0x34
 3462 01ec 00       		.byte	0
 3463 01ed 03       		.uleb128 0x3
 3464 01ee 0E       		.uleb128 0xe
 3465 01ef 3A       		.uleb128 0x3a
 3466 01f0 0B       		.uleb128 0xb
 3467 01f1 3B       		.uleb128 0x3b
 3468 01f2 0B       		.uleb128 0xb
 3469 01f3 49       		.uleb128 0x49
 3470 01f4 13       		.uleb128 0x13
 3471 01f5 3F       		.uleb128 0x3f
 3472 01f6 19       		.uleb128 0x19
 3473 01f7 02       		.uleb128 0x2
 3474 01f8 18       		.uleb128 0x18
 3475 01f9 00       		.byte	0
 3476 01fa 00       		.byte	0
 3477 01fb 22       		.uleb128 0x22
 3478 01fc 34       		.uleb128 0x34
 3479 01fd 00       		.byte	0
 3480 01fe 03       		.uleb128 0x3
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 102


 3481 01ff 0E       		.uleb128 0xe
 3482 0200 3A       		.uleb128 0x3a
 3483 0201 0B       		.uleb128 0xb
 3484 0202 3B       		.uleb128 0x3b
 3485 0203 05       		.uleb128 0x5
 3486 0204 49       		.uleb128 0x49
 3487 0205 13       		.uleb128 0x13
 3488 0206 3F       		.uleb128 0x3f
 3489 0207 19       		.uleb128 0x19
 3490 0208 3C       		.uleb128 0x3c
 3491 0209 19       		.uleb128 0x19
 3492 020a 00       		.byte	0
 3493 020b 00       		.byte	0
 3494 020c 23       		.uleb128 0x23
 3495 020d 2E       		.uleb128 0x2e
 3496 020e 00       		.byte	0
 3497 020f 3F       		.uleb128 0x3f
 3498 0210 19       		.uleb128 0x19
 3499 0211 3C       		.uleb128 0x3c
 3500 0212 19       		.uleb128 0x19
 3501 0213 6E       		.uleb128 0x6e
 3502 0214 0E       		.uleb128 0xe
 3503 0215 03       		.uleb128 0x3
 3504 0216 0E       		.uleb128 0xe
 3505 0217 3A       		.uleb128 0x3a
 3506 0218 0B       		.uleb128 0xb
 3507 0219 3B       		.uleb128 0x3b
 3508 021a 0B       		.uleb128 0xb
 3509 021b 00       		.byte	0
 3510 021c 00       		.byte	0
 3511 021d 00       		.byte	0
 3512              		.section	.debug_loc,"",%progbits
 3513              	.Ldebug_loc0:
 3514              	.LLST0:
 3515 0000 04000000 		.4byte	.LVL1
 3516 0004 1C000000 		.4byte	.LVL4
 3517 0008 0100     		.2byte	0x1
 3518 000a 53       		.byte	0x53
 3519 000b 1C000000 		.4byte	.LVL4
 3520 000f 20000000 		.4byte	.LVL5
 3521 0013 0700     		.2byte	0x7
 3522 0015 73       		.byte	0x73
 3523 0016 00       		.sleb128 0
 3524 0017 40       		.byte	0x40
 3525 0018 49       		.byte	0x49
 3526 0019 24       		.byte	0x24
 3527 001a 21       		.byte	0x21
 3528 001b 9F       		.byte	0x9f
 3529 001c 26000000 		.4byte	.LVL6
 3530 0020 34000000 		.4byte	.LFE5
 3531 0024 0100     		.2byte	0x1
 3532 0026 53       		.byte	0x53
 3533 0027 00000000 		.4byte	0
 3534 002b 00000000 		.4byte	0
 3535              	.LLST1:
 3536 002f 00000000 		.4byte	.LVL7
 3537 0033 02000000 		.4byte	.LVL8
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 103


 3538 0037 0100     		.2byte	0x1
 3539 0039 50       		.byte	0x50
 3540 003a 02000000 		.4byte	.LVL8
 3541 003e 58000000 		.4byte	.LFE13
 3542 0042 0400     		.2byte	0x4
 3543 0044 F3       		.byte	0xf3
 3544 0045 01       		.uleb128 0x1
 3545 0046 50       		.byte	0x50
 3546 0047 9F       		.byte	0x9f
 3547 0048 00000000 		.4byte	0
 3548 004c 00000000 		.4byte	0
 3549              	.LLST2:
 3550 0050 00000000 		.4byte	.LVL7
 3551 0054 46000000 		.4byte	.LVL13
 3552 0058 0200     		.2byte	0x2
 3553 005a 30       		.byte	0x30
 3554 005b 9F       		.byte	0x9f
 3555 005c 46000000 		.4byte	.LVL13
 3556 0060 58000000 		.4byte	.LFE13
 3557 0064 0100     		.2byte	0x1
 3558 0066 50       		.byte	0x50
 3559 0067 00000000 		.4byte	0
 3560 006b 00000000 		.4byte	0
 3561              	.LLST3:
 3562 006f 0A000000 		.4byte	.LVL9
 3563 0073 14000000 		.4byte	.LVL10
 3564 0077 0100     		.2byte	0x1
 3565 0079 52       		.byte	0x52
 3566 007a 28000000 		.4byte	.LVL11
 3567 007e 2C000000 		.4byte	.LVL12
 3568 0082 0100     		.2byte	0x1
 3569 0084 52       		.byte	0x52
 3570 0085 00000000 		.4byte	0
 3571 0089 00000000 		.4byte	0
 3572              	.LLST4:
 3573 008d 00000000 		.4byte	.LVL14
 3574 0091 07000000 		.4byte	.LVL15-1
 3575 0095 0100     		.2byte	0x1
 3576 0097 50       		.byte	0x50
 3577 0098 07000000 		.4byte	.LVL15-1
 3578 009c 7C000000 		.4byte	.LVL21
 3579 00a0 0100     		.2byte	0x1
 3580 00a2 54       		.byte	0x54
 3581 00a3 7C000000 		.4byte	.LVL21
 3582 00a7 AC000000 		.4byte	.LFE4
 3583 00ab 0400     		.2byte	0x4
 3584 00ad F3       		.byte	0xf3
 3585 00ae 01       		.uleb128 0x1
 3586 00af 50       		.byte	0x50
 3587 00b0 9F       		.byte	0x9f
 3588 00b1 00000000 		.4byte	0
 3589 00b5 00000000 		.4byte	0
 3590              	.LLST5:
 3591 00b9 64000000 		.4byte	.LVL18
 3592 00bd 68000000 		.4byte	.LVL19
 3593 00c1 0200     		.2byte	0x2
 3594 00c3 30       		.byte	0x30
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 104


 3595 00c4 9F       		.byte	0x9f
 3596 00c5 68000000 		.4byte	.LVL19
 3597 00c9 AC000000 		.4byte	.LFE4
 3598 00cd 0100     		.2byte	0x1
 3599 00cf 53       		.byte	0x53
 3600 00d0 00000000 		.4byte	0
 3601 00d4 00000000 		.4byte	0
 3602              	.LLST6:
 3603 00d8 68000000 		.4byte	.LVL19
 3604 00dc 76000000 		.4byte	.LVL20
 3605 00e0 0200     		.2byte	0x2
 3606 00e2 30       		.byte	0x30
 3607 00e3 9F       		.byte	0x9f
 3608 00e4 00000000 		.4byte	0
 3609 00e8 00000000 		.4byte	0
 3610              	.LLST7:
 3611 00ec 00000000 		.4byte	.LVL23
 3612 00f0 04000000 		.4byte	.LVL24
 3613 00f4 0100     		.2byte	0x1
 3614 00f6 50       		.byte	0x50
 3615 00f7 04000000 		.4byte	.LVL24
 3616 00fb 10000000 		.4byte	.LFE10
 3617 00ff 0400     		.2byte	0x4
 3618 0101 F3       		.byte	0xf3
 3619 0102 01       		.uleb128 0x1
 3620 0103 50       		.byte	0x50
 3621 0104 9F       		.byte	0x9f
 3622 0105 00000000 		.4byte	0
 3623 0109 00000000 		.4byte	0
 3624              	.LLST8:
 3625 010d 00000000 		.4byte	.LVL25
 3626 0111 18000000 		.4byte	.LVL27
 3627 0115 0100     		.2byte	0x1
 3628 0117 50       		.byte	0x50
 3629 0118 18000000 		.4byte	.LVL27
 3630 011c 2C000000 		.4byte	.LFE11
 3631 0120 0100     		.2byte	0x1
 3632 0122 50       		.byte	0x50
 3633 0123 00000000 		.4byte	0
 3634 0127 00000000 		.4byte	0
 3635              	.LLST9:
 3636 012b 00000000 		.4byte	.LVL28
 3637 012f 0A000000 		.4byte	.LVL30
 3638 0133 0100     		.2byte	0x1
 3639 0135 50       		.byte	0x50
 3640 0136 0A000000 		.4byte	.LVL30
 3641 013a 2C000000 		.4byte	.LVL34
 3642 013e 0100     		.2byte	0x1
 3643 0140 51       		.byte	0x51
 3644 0141 2C000000 		.4byte	.LVL34
 3645 0145 2E000000 		.4byte	.LVL35
 3646 0149 0100     		.2byte	0x1
 3647 014b 50       		.byte	0x50
 3648 014c 2E000000 		.4byte	.LVL35
 3649 0150 38000000 		.4byte	.LFE12
 3650 0154 0100     		.2byte	0x1
 3651 0156 51       		.byte	0x51
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 105


 3652 0157 00000000 		.4byte	0
 3653 015b 00000000 		.4byte	0
 3654              	.LLST10:
 3655 015f 02000000 		.4byte	.LVL29
 3656 0163 0A000000 		.4byte	.LVL30
 3657 0167 0200     		.2byte	0x2
 3658 0169 30       		.byte	0x30
 3659 016a 9F       		.byte	0x9f
 3660 016b 12000000 		.4byte	.LVL31
 3661 016f 2C000000 		.4byte	.LVL34
 3662 0173 0100     		.2byte	0x1
 3663 0175 50       		.byte	0x50
 3664 0176 2C000000 		.4byte	.LVL34
 3665 017a 2E000000 		.4byte	.LVL35
 3666 017e 0200     		.2byte	0x2
 3667 0180 30       		.byte	0x30
 3668 0181 9F       		.byte	0x9f
 3669 0182 2E000000 		.4byte	.LVL35
 3670 0186 38000000 		.4byte	.LFE12
 3671 018a 0100     		.2byte	0x1
 3672 018c 50       		.byte	0x50
 3673 018d 00000000 		.4byte	0
 3674 0191 00000000 		.4byte	0
 3675              	.LLST11:
 3676 0195 02000000 		.4byte	.LVL29
 3677 0199 0A000000 		.4byte	.LVL30
 3678 019d 0600     		.2byte	0x6
 3679 019f 0C       		.byte	0xc
 3680 01a0 FFFFFF03 		.4byte	0x3ffffff
 3681 01a4 9F       		.byte	0x9f
 3682 01a5 0A000000 		.4byte	.LVL30
 3683 01a9 26000000 		.4byte	.LVL33
 3684 01ad 0100     		.2byte	0x1
 3685 01af 52       		.byte	0x52
 3686 01b0 2C000000 		.4byte	.LVL34
 3687 01b4 2E000000 		.4byte	.LVL35
 3688 01b8 0600     		.2byte	0x6
 3689 01ba 0C       		.byte	0xc
 3690 01bb FFFFFF03 		.4byte	0x3ffffff
 3691 01bf 9F       		.byte	0x9f
 3692 01c0 00000000 		.4byte	0
 3693 01c4 00000000 		.4byte	0
 3694              	.LLST12:
 3695 01c8 00000000 		.4byte	.LVL36
 3696 01cc 1A000000 		.4byte	.LVL37
 3697 01d0 0100     		.2byte	0x1
 3698 01d2 50       		.byte	0x50
 3699 01d3 1A000000 		.4byte	.LVL37
 3700 01d7 34000000 		.4byte	.LVL39
 3701 01db 0100     		.2byte	0x1
 3702 01dd 54       		.byte	0x54
 3703 01de 34000000 		.4byte	.LVL39
 3704 01e2 42000000 		.4byte	.LVL41
 3705 01e6 0400     		.2byte	0x4
 3706 01e8 F3       		.byte	0xf3
 3707 01e9 01       		.uleb128 0x1
 3708 01ea 50       		.byte	0x50
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 106


 3709 01eb 9F       		.byte	0x9f
 3710 01ec 42000000 		.4byte	.LVL41
 3711 01f0 44000000 		.4byte	.LVL42
 3712 01f4 0100     		.2byte	0x1
 3713 01f6 54       		.byte	0x54
 3714 01f7 44000000 		.4byte	.LVL42
 3715 01fb 54000000 		.4byte	.LFE14
 3716 01ff 0400     		.2byte	0x4
 3717 0201 F3       		.byte	0xf3
 3718 0202 01       		.uleb128 0x1
 3719 0203 50       		.byte	0x50
 3720 0204 9F       		.byte	0x9f
 3721 0205 00000000 		.4byte	0
 3722 0209 00000000 		.4byte	0
 3723              	.LLST13:
 3724 020d 40000000 		.4byte	.LVL40
 3725 0211 42000000 		.4byte	.LVL41
 3726 0215 0100     		.2byte	0x1
 3727 0217 50       		.byte	0x50
 3728 0218 44000000 		.4byte	.LVL42
 3729 021c 46000000 		.4byte	.LVL43
 3730 0220 0100     		.2byte	0x1
 3731 0222 50       		.byte	0x50
 3732 0223 00000000 		.4byte	0
 3733 0227 00000000 		.4byte	0
 3734              	.LLST14:
 3735 022b 00000000 		.4byte	.LVL44
 3736 022f 1A000000 		.4byte	.LVL45
 3737 0233 0100     		.2byte	0x1
 3738 0235 50       		.byte	0x50
 3739 0236 1A000000 		.4byte	.LVL45
 3740 023a 54000000 		.4byte	.LVL56
 3741 023e 0100     		.2byte	0x1
 3742 0240 55       		.byte	0x55
 3743 0241 54000000 		.4byte	.LVL56
 3744 0245 64000000 		.4byte	.LFE15
 3745 0249 0400     		.2byte	0x4
 3746 024b F3       		.byte	0xf3
 3747 024c 01       		.uleb128 0x1
 3748 024d 50       		.byte	0x50
 3749 024e 9F       		.byte	0x9f
 3750 024f 00000000 		.4byte	0
 3751 0253 00000000 		.4byte	0
 3752              	.LLST15:
 3753 0257 40000000 		.4byte	.LVL47
 3754 025b 42000000 		.4byte	.LVL48
 3755 025f 0100     		.2byte	0x1
 3756 0261 54       		.byte	0x54
 3757 0262 44000000 		.4byte	.LVL49
 3758 0266 54000000 		.4byte	.LVL55
 3759 026a 0100     		.2byte	0x1
 3760 026c 54       		.byte	0x54
 3761 026d 00000000 		.4byte	0
 3762 0271 00000000 		.4byte	0
 3763              	.LLST16:
 3764 0275 4E000000 		.4byte	.LVL51
 3765 0279 52000000 		.4byte	.LVL53
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 107


 3766 027d 0100     		.2byte	0x1
 3767 027f 54       		.byte	0x54
 3768 0280 00000000 		.4byte	0
 3769 0284 00000000 		.4byte	0
 3770              	.LLST17:
 3771 0288 50000000 		.4byte	.LVL52
 3772 028c 52000000 		.4byte	.LVL53
 3773 0290 0100     		.2byte	0x1
 3774 0292 50       		.byte	0x50
 3775 0293 54000000 		.4byte	.LVL54
 3776 0297 64000000 		.4byte	.LFE15
 3777 029b 0100     		.2byte	0x1
 3778 029d 50       		.byte	0x50
 3779 029e 00000000 		.4byte	0
 3780 02a2 00000000 		.4byte	0
 3781              	.LLST18:
 3782 02a6 00000000 		.4byte	.LVL57
 3783 02aa 0E000000 		.4byte	.LVL58
 3784 02ae 0100     		.2byte	0x1
 3785 02b0 50       		.byte	0x50
 3786 02b1 0E000000 		.4byte	.LVL58
 3787 02b5 1C000000 		.4byte	.LFE16
 3788 02b9 0400     		.2byte	0x4
 3789 02bb F3       		.byte	0xf3
 3790 02bc 01       		.uleb128 0x1
 3791 02bd 50       		.byte	0x50
 3792 02be 9F       		.byte	0x9f
 3793 02bf 00000000 		.4byte	0
 3794 02c3 00000000 		.4byte	0
 3795              	.LLST19:
 3796 02c7 00000000 		.4byte	.LVL59
 3797 02cb 0E000000 		.4byte	.LVL60
 3798 02cf 0100     		.2byte	0x1
 3799 02d1 50       		.byte	0x50
 3800 02d2 0E000000 		.4byte	.LVL60
 3801 02d6 18000000 		.4byte	.LFE17
 3802 02da 0400     		.2byte	0x4
 3803 02dc F3       		.byte	0xf3
 3804 02dd 01       		.uleb128 0x1
 3805 02de 50       		.byte	0x50
 3806 02df 9F       		.byte	0x9f
 3807 02e0 00000000 		.4byte	0
 3808 02e4 00000000 		.4byte	0
 3809              	.LLST20:
 3810 02e8 00000000 		.4byte	.LVL61
 3811 02ec 18000000 		.4byte	.LVL63
 3812 02f0 0100     		.2byte	0x1
 3813 02f2 50       		.byte	0x50
 3814 02f3 18000000 		.4byte	.LVL63
 3815 02f7 2C000000 		.4byte	.LFE18
 3816 02fb 0100     		.2byte	0x1
 3817 02fd 50       		.byte	0x50
 3818 02fe 00000000 		.4byte	0
 3819 0302 00000000 		.4byte	0
 3820              	.LLST21:
 3821 0306 00000000 		.4byte	.LVL64
 3822 030a 18000000 		.4byte	.LVL66
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 108


 3823 030e 0100     		.2byte	0x1
 3824 0310 50       		.byte	0x50
 3825 0311 18000000 		.4byte	.LVL66
 3826 0315 2C000000 		.4byte	.LFE19
 3827 0319 0100     		.2byte	0x1
 3828 031b 50       		.byte	0x50
 3829 031c 00000000 		.4byte	0
 3830 0320 00000000 		.4byte	0
 3831              	.LLST22:
 3832 0324 00000000 		.4byte	.LVL67
 3833 0328 1C000000 		.4byte	.LVL68
 3834 032c 0100     		.2byte	0x1
 3835 032e 50       		.byte	0x50
 3836 032f 1C000000 		.4byte	.LVL68
 3837 0333 36000000 		.4byte	.LVL70
 3838 0337 0100     		.2byte	0x1
 3839 0339 55       		.byte	0x55
 3840 033a 36000000 		.4byte	.LVL70
 3841 033e 44000000 		.4byte	.LFE20
 3842 0342 0400     		.2byte	0x4
 3843 0344 F3       		.byte	0xf3
 3844 0345 01       		.uleb128 0x1
 3845 0346 50       		.byte	0x50
 3846 0347 9F       		.byte	0x9f
 3847 0348 00000000 		.4byte	0
 3848 034c 00000000 		.4byte	0
 3849              	.LLST23:
 3850 0350 00000000 		.4byte	.LVL67
 3851 0354 1F000000 		.4byte	.LVL69-1
 3852 0358 0100     		.2byte	0x1
 3853 035a 51       		.byte	0x51
 3854 035b 1F000000 		.4byte	.LVL69-1
 3855 035f 44000000 		.4byte	.LFE20
 3856 0363 0400     		.2byte	0x4
 3857 0365 F3       		.byte	0xf3
 3858 0366 01       		.uleb128 0x1
 3859 0367 51       		.byte	0x51
 3860 0368 9F       		.byte	0x9f
 3861 0369 00000000 		.4byte	0
 3862 036d 00000000 		.4byte	0
 3863              	.LLST24:
 3864 0371 00000000 		.4byte	.LVL71
 3865 0375 1C000000 		.4byte	.LVL72
 3866 0379 0100     		.2byte	0x1
 3867 037b 50       		.byte	0x50
 3868 037c 1C000000 		.4byte	.LVL72
 3869 0380 36000000 		.4byte	.LVL75
 3870 0384 0100     		.2byte	0x1
 3871 0386 55       		.byte	0x55
 3872 0387 36000000 		.4byte	.LVL75
 3873 038b 44000000 		.4byte	.LFE21
 3874 038f 0400     		.2byte	0x4
 3875 0391 F3       		.byte	0xf3
 3876 0392 01       		.uleb128 0x1
 3877 0393 50       		.byte	0x50
 3878 0394 9F       		.byte	0x9f
 3879 0395 00000000 		.4byte	0
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 109


 3880 0399 00000000 		.4byte	0
 3881              	.LLST25:
 3882 039d 00000000 		.4byte	.LVL71
 3883 03a1 1F000000 		.4byte	.LVL73-1
 3884 03a5 0100     		.2byte	0x1
 3885 03a7 51       		.byte	0x51
 3886 03a8 1F000000 		.4byte	.LVL73-1
 3887 03ac 36000000 		.4byte	.LVL74
 3888 03b0 0100     		.2byte	0x1
 3889 03b2 54       		.byte	0x54
 3890 03b3 36000000 		.4byte	.LVL74
 3891 03b7 44000000 		.4byte	.LFE21
 3892 03bb 0500     		.2byte	0x5
 3893 03bd 73       		.byte	0x73
 3894 03be 00       		.sleb128 0
 3895 03bf 70       		.byte	0x70
 3896 03c0 00       		.sleb128 0
 3897 03c1 22       		.byte	0x22
 3898 03c2 00000000 		.4byte	0
 3899 03c6 00000000 		.4byte	0
 3900              	.LLST26:
 3901 03ca 00000000 		.4byte	.LVL76
 3902 03ce 1E000000 		.4byte	.LVL79
 3903 03d2 0100     		.2byte	0x1
 3904 03d4 50       		.byte	0x50
 3905 03d5 1E000000 		.4byte	.LVL79
 3906 03d9 3C000000 		.4byte	.LFE22
 3907 03dd 0400     		.2byte	0x4
 3908 03df F3       		.byte	0xf3
 3909 03e0 01       		.uleb128 0x1
 3910 03e1 50       		.byte	0x50
 3911 03e2 9F       		.byte	0x9f
 3912 03e3 00000000 		.4byte	0
 3913 03e7 00000000 		.4byte	0
 3914              	.LLST27:
 3915 03eb 00000000 		.4byte	.LVL76
 3916 03ef 08000000 		.4byte	.LVL77
 3917 03f3 0100     		.2byte	0x1
 3918 03f5 51       		.byte	0x51
 3919 03f6 08000000 		.4byte	.LVL77
 3920 03fa 22000000 		.4byte	.LVL80
 3921 03fe 0400     		.2byte	0x4
 3922 0400 F3       		.byte	0xf3
 3923 0401 01       		.uleb128 0x1
 3924 0402 51       		.byte	0x51
 3925 0403 9F       		.byte	0x9f
 3926 0404 22000000 		.4byte	.LVL80
 3927 0408 2E000000 		.4byte	.LVL82
 3928 040c 0100     		.2byte	0x1
 3929 040e 54       		.byte	0x54
 3930 040f 2E000000 		.4byte	.LVL82
 3931 0413 3C000000 		.4byte	.LFE22
 3932 0417 0100     		.2byte	0x1
 3933 0419 50       		.byte	0x50
 3934 041a 00000000 		.4byte	0
 3935 041e 00000000 		.4byte	0
 3936              	.LLST28:
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 110


 3937 0422 14000000 		.4byte	.LVL78
 3938 0426 24000000 		.4byte	.LVL81
 3939 042a 0100     		.2byte	0x1
 3940 042c 55       		.byte	0x55
 3941 042d 00000000 		.4byte	0
 3942 0431 00000000 		.4byte	0
 3943              	.LLST29:
 3944 0435 00000000 		.4byte	.LVL83
 3945 0439 1D000000 		.4byte	.LVL86-1
 3946 043d 0100     		.2byte	0x1
 3947 043f 50       		.byte	0x50
 3948 0440 1D000000 		.4byte	.LVL86-1
 3949 0444 3E000000 		.4byte	.LVL92
 3950 0448 0400     		.2byte	0x4
 3951 044a F3       		.byte	0xf3
 3952 044b 01       		.uleb128 0x1
 3953 044c 50       		.byte	0x50
 3954 044d 9F       		.byte	0x9f
 3955 044e 3E000000 		.4byte	.LVL92
 3956 0452 40000000 		.4byte	.LVL93
 3957 0456 0100     		.2byte	0x1
 3958 0458 50       		.byte	0x50
 3959 0459 40000000 		.4byte	.LVL93
 3960 045d 54000000 		.4byte	.LFE23
 3961 0461 0400     		.2byte	0x4
 3962 0463 F3       		.byte	0xf3
 3963 0464 01       		.uleb128 0x1
 3964 0465 50       		.byte	0x50
 3965 0466 9F       		.byte	0x9f
 3966 0467 00000000 		.4byte	0
 3967 046b 00000000 		.4byte	0
 3968              	.LLST30:
 3969 046f 00000000 		.4byte	.LVL83
 3970 0473 1D000000 		.4byte	.LVL86-1
 3971 0477 0100     		.2byte	0x1
 3972 0479 51       		.byte	0x51
 3973 047a 1D000000 		.4byte	.LVL86-1
 3974 047e 1E000000 		.4byte	.LVL86
 3975 0482 0400     		.2byte	0x4
 3976 0484 F3       		.byte	0xf3
 3977 0485 01       		.uleb128 0x1
 3978 0486 51       		.byte	0x51
 3979 0487 9F       		.byte	0x9f
 3980 0488 1E000000 		.4byte	.LVL86
 3981 048c 21000000 		.4byte	.LVL87-1
 3982 0490 0100     		.2byte	0x1
 3983 0492 50       		.byte	0x50
 3984 0493 3E000000 		.4byte	.LVL92
 3985 0497 40000000 		.4byte	.LVL93
 3986 049b 0100     		.2byte	0x1
 3987 049d 51       		.byte	0x51
 3988 049e 00000000 		.4byte	0
 3989 04a2 00000000 		.4byte	0
 3990              	.LLST31:
 3991 04a6 02000000 		.4byte	.LVL84
 3992 04aa 3C000000 		.4byte	.LVL91
 3993 04ae 0600     		.2byte	0x6
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 111


 3994 04b0 9E       		.byte	0x9e
 3995 04b1 04       		.uleb128 0x4
 3996 04b2 00000000 		.4byte	0
 3997 04b6 3C000000 		.4byte	.LVL91
 3998 04ba 3E000000 		.4byte	.LVL92
 3999 04be 0100     		.2byte	0x1
 4000 04c0 50       		.byte	0x50
 4001 04c1 3E000000 		.4byte	.LVL92
 4002 04c5 40000000 		.4byte	.LVL93
 4003 04c9 0600     		.2byte	0x6
 4004 04cb 9E       		.byte	0x9e
 4005 04cc 04       		.uleb128 0x4
 4006 04cd 00000000 		.4byte	0
 4007 04d1 40000000 		.4byte	.LVL93
 4008 04d5 54000000 		.4byte	.LFE23
 4009 04d9 0100     		.2byte	0x1
 4010 04db 50       		.byte	0x50
 4011 04dc 00000000 		.4byte	0
 4012 04e0 00000000 		.4byte	0
 4013              	.LLST32:
 4014 04e4 12000000 		.4byte	.LVL85
 4015 04e8 2C000000 		.4byte	.LVL89
 4016 04ec 0100     		.2byte	0x1
 4017 04ee 54       		.byte	0x54
 4018 04ef 3E000000 		.4byte	.LVL92
 4019 04f3 40000000 		.4byte	.LVL93
 4020 04f7 0100     		.2byte	0x1
 4021 04f9 54       		.byte	0x54
 4022 04fa 00000000 		.4byte	0
 4023 04fe 00000000 		.4byte	0
 4024              	.LLST33:
 4025 0502 00000000 		.4byte	.LVL94
 4026 0506 1D000000 		.4byte	.LVL97-1
 4027 050a 0100     		.2byte	0x1
 4028 050c 50       		.byte	0x50
 4029 050d 1D000000 		.4byte	.LVL97-1
 4030 0511 52000000 		.4byte	.LVL104
 4031 0515 0400     		.2byte	0x4
 4032 0517 F3       		.byte	0xf3
 4033 0518 01       		.uleb128 0x1
 4034 0519 50       		.byte	0x50
 4035 051a 9F       		.byte	0x9f
 4036 051b 52000000 		.4byte	.LVL104
 4037 051f 54000000 		.4byte	.LVL105
 4038 0523 0100     		.2byte	0x1
 4039 0525 50       		.byte	0x50
 4040 0526 54000000 		.4byte	.LVL105
 4041 052a 68000000 		.4byte	.LFE24
 4042 052e 0400     		.2byte	0x4
 4043 0530 F3       		.byte	0xf3
 4044 0531 01       		.uleb128 0x1
 4045 0532 50       		.byte	0x50
 4046 0533 9F       		.byte	0x9f
 4047 0534 00000000 		.4byte	0
 4048 0538 00000000 		.4byte	0
 4049              	.LLST34:
 4050 053c 00000000 		.4byte	.LVL94
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 112


 4051 0540 1D000000 		.4byte	.LVL97-1
 4052 0544 0100     		.2byte	0x1
 4053 0546 51       		.byte	0x51
 4054 0547 1D000000 		.4byte	.LVL97-1
 4055 054b 1E000000 		.4byte	.LVL97
 4056 054f 0400     		.2byte	0x4
 4057 0551 F3       		.byte	0xf3
 4058 0552 01       		.uleb128 0x1
 4059 0553 51       		.byte	0x51
 4060 0554 9F       		.byte	0x9f
 4061 0555 1E000000 		.4byte	.LVL97
 4062 0559 2E000000 		.4byte	.LVL98
 4063 055d 0100     		.2byte	0x1
 4064 055f 50       		.byte	0x50
 4065 0560 34000000 		.4byte	.LVL99
 4066 0564 42000000 		.4byte	.LVL100
 4067 0568 0100     		.2byte	0x1
 4068 056a 50       		.byte	0x50
 4069 056b 52000000 		.4byte	.LVL104
 4070 056f 54000000 		.4byte	.LVL105
 4071 0573 0100     		.2byte	0x1
 4072 0575 51       		.byte	0x51
 4073 0576 00000000 		.4byte	0
 4074 057a 00000000 		.4byte	0
 4075              	.LLST35:
 4076 057e 02000000 		.4byte	.LVL95
 4077 0582 50000000 		.4byte	.LVL103
 4078 0586 0200     		.2byte	0x2
 4079 0588 30       		.byte	0x30
 4080 0589 9F       		.byte	0x9f
 4081 058a 50000000 		.4byte	.LVL103
 4082 058e 52000000 		.4byte	.LVL104
 4083 0592 0100     		.2byte	0x1
 4084 0594 50       		.byte	0x50
 4085 0595 52000000 		.4byte	.LVL104
 4086 0599 54000000 		.4byte	.LVL105
 4087 059d 0200     		.2byte	0x2
 4088 059f 30       		.byte	0x30
 4089 05a0 9F       		.byte	0x9f
 4090 05a1 54000000 		.4byte	.LVL105
 4091 05a5 68000000 		.4byte	.LFE24
 4092 05a9 0100     		.2byte	0x1
 4093 05ab 50       		.byte	0x50
 4094 05ac 00000000 		.4byte	0
 4095 05b0 00000000 		.4byte	0
 4096              	.LLST36:
 4097 05b4 12000000 		.4byte	.LVL96
 4098 05b8 46000000 		.4byte	.LVL101
 4099 05bc 0100     		.2byte	0x1
 4100 05be 54       		.byte	0x54
 4101 05bf 46000000 		.4byte	.LVL101
 4102 05c3 52000000 		.4byte	.LVL104
 4103 05c7 1200     		.2byte	0x12
 4104 05c9 75       		.byte	0x75
 4105 05ca 00       		.sleb128 0
 4106 05cb 33       		.byte	0x33
 4107 05cc 24       		.byte	0x24
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 113


 4108 05cd 75       		.byte	0x75
 4109 05ce 00       		.sleb128 0
 4110 05cf 1C       		.byte	0x1c
 4111 05d0 33       		.byte	0x33
 4112 05d1 24       		.byte	0x24
 4113 05d2 76       		.byte	0x76
 4114 05d3 00       		.sleb128 0
 4115 05d4 22       		.byte	0x22
 4116 05d5 06       		.byte	0x6
 4117 05d6 F3       		.byte	0xf3
 4118 05d7 01       		.uleb128 0x1
 4119 05d8 50       		.byte	0x50
 4120 05d9 22       		.byte	0x22
 4121 05da 9F       		.byte	0x9f
 4122 05db 52000000 		.4byte	.LVL104
 4123 05df 54000000 		.4byte	.LVL105
 4124 05e3 0100     		.2byte	0x1
 4125 05e5 54       		.byte	0x54
 4126 05e6 54000000 		.4byte	.LVL105
 4127 05ea 54000000 		.4byte	.LVL106
 4128 05ee 1200     		.2byte	0x12
 4129 05f0 75       		.byte	0x75
 4130 05f1 00       		.sleb128 0
 4131 05f2 33       		.byte	0x33
 4132 05f3 24       		.byte	0x24
 4133 05f4 75       		.byte	0x75
 4134 05f5 00       		.sleb128 0
 4135 05f6 1C       		.byte	0x1c
 4136 05f7 33       		.byte	0x33
 4137 05f8 24       		.byte	0x24
 4138 05f9 76       		.byte	0x76
 4139 05fa 00       		.sleb128 0
 4140 05fb 22       		.byte	0x22
 4141 05fc 06       		.byte	0x6
 4142 05fd F3       		.byte	0xf3
 4143 05fe 01       		.uleb128 0x1
 4144 05ff 50       		.byte	0x50
 4145 0600 22       		.byte	0x22
 4146 0601 9F       		.byte	0x9f
 4147 0602 00000000 		.4byte	0
 4148 0606 00000000 		.4byte	0
 4149              	.LLST37:
 4150 060a 00000000 		.4byte	.LVL107
 4151 060e 1D000000 		.4byte	.LVL110-1
 4152 0612 0100     		.2byte	0x1
 4153 0614 50       		.byte	0x50
 4154 0615 1D000000 		.4byte	.LVL110-1
 4155 0619 36000000 		.4byte	.LVL114
 4156 061d 0400     		.2byte	0x4
 4157 061f F3       		.byte	0xf3
 4158 0620 01       		.uleb128 0x1
 4159 0621 50       		.byte	0x50
 4160 0622 9F       		.byte	0x9f
 4161 0623 36000000 		.4byte	.LVL114
 4162 0627 38000000 		.4byte	.LVL115
 4163 062b 0100     		.2byte	0x1
 4164 062d 50       		.byte	0x50
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 114


 4165 062e 38000000 		.4byte	.LVL115
 4166 0632 4C000000 		.4byte	.LFE25
 4167 0636 0400     		.2byte	0x4
 4168 0638 F3       		.byte	0xf3
 4169 0639 01       		.uleb128 0x1
 4170 063a 50       		.byte	0x50
 4171 063b 9F       		.byte	0x9f
 4172 063c 00000000 		.4byte	0
 4173 0640 00000000 		.4byte	0
 4174              	.LLST38:
 4175 0644 00000000 		.4byte	.LVL107
 4176 0648 1D000000 		.4byte	.LVL110-1
 4177 064c 0100     		.2byte	0x1
 4178 064e 51       		.byte	0x51
 4179 064f 1D000000 		.4byte	.LVL110-1
 4180 0653 1E000000 		.4byte	.LVL110
 4181 0657 0400     		.2byte	0x4
 4182 0659 F3       		.byte	0xf3
 4183 065a 01       		.uleb128 0x1
 4184 065b 51       		.byte	0x51
 4185 065c 9F       		.byte	0x9f
 4186 065d 1E000000 		.4byte	.LVL110
 4187 0661 27000000 		.4byte	.LVL111-1
 4188 0665 0100     		.2byte	0x1
 4189 0667 50       		.byte	0x50
 4190 0668 36000000 		.4byte	.LVL114
 4191 066c 38000000 		.4byte	.LVL115
 4192 0670 0100     		.2byte	0x1
 4193 0672 51       		.byte	0x51
 4194 0673 00000000 		.4byte	0
 4195 0677 00000000 		.4byte	0
 4196              	.LLST39:
 4197 067b 02000000 		.4byte	.LVL108
 4198 067f 34000000 		.4byte	.LVL113
 4199 0683 0A00     		.2byte	0xa
 4200 0685 9E       		.byte	0x9e
 4201 0686 08       		.uleb128 0x8
 4202 0687 00000000 		.8byte	0
 4202      00000000 
 4203 068f 36000000 		.4byte	.LVL114
 4204 0693 38000000 		.4byte	.LVL115
 4205 0697 0A00     		.2byte	0xa
 4206 0699 9E       		.byte	0x9e
 4207 069a 08       		.uleb128 0x8
 4208 069b 00000000 		.8byte	0
 4208      00000000 
 4209 06a3 00000000 		.4byte	0
 4210 06a7 00000000 		.4byte	0
 4211              	.LLST40:
 4212 06ab 12000000 		.4byte	.LVL109
 4213 06af 2A000000 		.4byte	.LVL112
 4214 06b3 0100     		.2byte	0x1
 4215 06b5 54       		.byte	0x54
 4216 06b6 2A000000 		.4byte	.LVL112
 4217 06ba 36000000 		.4byte	.LVL114
 4218 06be 1200     		.2byte	0x12
 4219 06c0 75       		.byte	0x75
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 115


 4220 06c1 00       		.sleb128 0
 4221 06c2 33       		.byte	0x33
 4222 06c3 24       		.byte	0x24
 4223 06c4 75       		.byte	0x75
 4224 06c5 00       		.sleb128 0
 4225 06c6 1C       		.byte	0x1c
 4226 06c7 33       		.byte	0x33
 4227 06c8 24       		.byte	0x24
 4228 06c9 76       		.byte	0x76
 4229 06ca 00       		.sleb128 0
 4230 06cb 22       		.byte	0x22
 4231 06cc 06       		.byte	0x6
 4232 06cd F3       		.byte	0xf3
 4233 06ce 01       		.uleb128 0x1
 4234 06cf 50       		.byte	0x50
 4235 06d0 22       		.byte	0x22
 4236 06d1 9F       		.byte	0x9f
 4237 06d2 36000000 		.4byte	.LVL114
 4238 06d6 38000000 		.4byte	.LVL115
 4239 06da 0100     		.2byte	0x1
 4240 06dc 54       		.byte	0x54
 4241 06dd 38000000 		.4byte	.LVL115
 4242 06e1 38000000 		.4byte	.LVL116
 4243 06e5 1200     		.2byte	0x12
 4244 06e7 75       		.byte	0x75
 4245 06e8 00       		.sleb128 0
 4246 06e9 33       		.byte	0x33
 4247 06ea 24       		.byte	0x24
 4248 06eb 75       		.byte	0x75
 4249 06ec 00       		.sleb128 0
 4250 06ed 1C       		.byte	0x1c
 4251 06ee 33       		.byte	0x33
 4252 06ef 24       		.byte	0x24
 4253 06f0 76       		.byte	0x76
 4254 06f1 00       		.sleb128 0
 4255 06f2 22       		.byte	0x22
 4256 06f3 06       		.byte	0x6
 4257 06f4 F3       		.byte	0xf3
 4258 06f5 01       		.uleb128 0x1
 4259 06f6 50       		.byte	0x50
 4260 06f7 22       		.byte	0x22
 4261 06f8 9F       		.byte	0x9f
 4262 06f9 00000000 		.4byte	0
 4263 06fd 00000000 		.4byte	0
 4264              	.LLST41:
 4265 0701 06000000 		.4byte	.LVL117
 4266 0705 10000000 		.4byte	.LVL118
 4267 0709 0200     		.2byte	0x2
 4268 070b 30       		.byte	0x30
 4269 070c 9F       		.byte	0x9f
 4270 070d 10000000 		.4byte	.LVL118
 4271 0711 80000000 		.4byte	.LVL122
 4272 0715 0100     		.2byte	0x1
 4273 0717 54       		.byte	0x54
 4274 0718 80000000 		.4byte	.LVL122
 4275 071c 84000000 		.4byte	.LVL123
 4276 0720 0200     		.2byte	0x2
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 116


 4277 0722 30       		.byte	0x30
 4278 0723 9F       		.byte	0x9f
 4279 0724 84000000 		.4byte	.LVL123
 4280 0728 A8000000 		.4byte	.LVL127
 4281 072c 0100     		.2byte	0x1
 4282 072e 54       		.byte	0x54
 4283 072f 00000000 		.4byte	0
 4284 0733 00000000 		.4byte	0
 4285              	.LLST42:
 4286 0737 06000000 		.4byte	.LVL117
 4287 073b 10000000 		.4byte	.LVL118
 4288 073f 0200     		.2byte	0x2
 4289 0741 30       		.byte	0x30
 4290 0742 9F       		.byte	0x9f
 4291 0743 10000000 		.4byte	.LVL118
 4292 0747 80000000 		.4byte	.LVL122
 4293 074b 0100     		.2byte	0x1
 4294 074d 55       		.byte	0x55
 4295 074e 80000000 		.4byte	.LVL122
 4296 0752 84000000 		.4byte	.LVL123
 4297 0756 0200     		.2byte	0x2
 4298 0758 30       		.byte	0x30
 4299 0759 9F       		.byte	0x9f
 4300 075a 84000000 		.4byte	.LVL123
 4301 075e A6000000 		.4byte	.LVL126
 4302 0762 0100     		.2byte	0x1
 4303 0764 55       		.byte	0x55
 4304 0765 A6000000 		.4byte	.LVL126
 4305 0769 B4000000 		.4byte	.LVL129
 4306 076d 0200     		.2byte	0x2
 4307 076f 30       		.byte	0x30
 4308 0770 9F       		.byte	0x9f
 4309 0771 00000000 		.4byte	0
 4310 0775 00000000 		.4byte	0
 4311              	.LLST43:
 4312 0779 10000000 		.4byte	.LVL118
 4313 077d 80000000 		.4byte	.LVL122
 4314 0781 0400     		.2byte	0x4
 4315 0783 0A       		.byte	0xa
 4316 0784 0010     		.2byte	0x1000
 4317 0786 9F       		.byte	0x9f
 4318 0787 00000000 		.4byte	0
 4319 078b 00000000 		.4byte	0
 4320              	.LLST44:
 4321 078f 00000000 		.4byte	.LVL134
 4322 0793 07000000 		.4byte	.LVL135-1
 4323 0797 0100     		.2byte	0x1
 4324 0799 50       		.byte	0x50
 4325 079a 07000000 		.4byte	.LVL135-1
 4326 079e 0E000000 		.4byte	.LVL137
 4327 07a2 0100     		.2byte	0x1
 4328 07a4 54       		.byte	0x54
 4329 07a5 0E000000 		.4byte	.LVL137
 4330 07a9 10000000 		.4byte	.LFE2
 4331 07ad 0400     		.2byte	0x4
 4332 07af F3       		.byte	0xf3
 4333 07b0 01       		.uleb128 0x1
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 117


 4334 07b1 50       		.byte	0x50
 4335 07b2 9F       		.byte	0x9f
 4336 07b3 00000000 		.4byte	0
 4337 07b7 00000000 		.4byte	0
 4338              	.LLST45:
 4339 07bb 00000000 		.4byte	.LVL138
 4340 07bf 0D000000 		.4byte	.LVL139-1
 4341 07c3 0100     		.2byte	0x1
 4342 07c5 50       		.byte	0x50
 4343 07c6 0D000000 		.4byte	.LVL139-1
 4344 07ca 5A000000 		.4byte	.LVL144
 4345 07ce 0100     		.2byte	0x1
 4346 07d0 54       		.byte	0x54
 4347 07d1 5A000000 		.4byte	.LVL144
 4348 07d5 70000000 		.4byte	.LFE6
 4349 07d9 0400     		.2byte	0x4
 4350 07db F3       		.byte	0xf3
 4351 07dc 01       		.uleb128 0x1
 4352 07dd 50       		.byte	0x50
 4353 07de 9F       		.byte	0x9f
 4354 07df 00000000 		.4byte	0
 4355 07e3 00000000 		.4byte	0
 4356              	.LLST46:
 4357 07e7 00000000 		.4byte	.LVL138
 4358 07eb 0D000000 		.4byte	.LVL139-1
 4359 07ef 0100     		.2byte	0x1
 4360 07f1 51       		.byte	0x51
 4361 07f2 0D000000 		.4byte	.LVL139-1
 4362 07f6 5A000000 		.4byte	.LVL145
 4363 07fa 0100     		.2byte	0x1
 4364 07fc 56       		.byte	0x56
 4365 07fd 5A000000 		.4byte	.LVL145
 4366 0801 70000000 		.4byte	.LFE6
 4367 0805 0400     		.2byte	0x4
 4368 0807 F3       		.byte	0xf3
 4369 0808 01       		.uleb128 0x1
 4370 0809 51       		.byte	0x51
 4371 080a 9F       		.byte	0x9f
 4372 080b 00000000 		.4byte	0
 4373 080f 00000000 		.4byte	0
 4374              		.section	.debug_aranges,"",%progbits
 4375 0000 EC000000 		.4byte	0xec
 4376 0004 0200     		.2byte	0x2
 4377 0006 00000000 		.4byte	.Ldebug_info0
 4378 000a 04       		.byte	0x4
 4379 000b 00       		.byte	0
 4380 000c 0000     		.2byte	0
 4381 000e 0000     		.2byte	0
 4382 0010 00000000 		.4byte	.LFB5
 4383 0014 34000000 		.4byte	.LFE5-.LFB5
 4384 0018 00000000 		.4byte	.LFB13
 4385 001c 58000000 		.4byte	.LFE13-.LFB13
 4386 0020 00000000 		.4byte	.LFB3
 4387 0024 10000000 		.4byte	.LFE3-.LFB3
 4388 0028 00000000 		.4byte	.LFB4
 4389 002c AC000000 		.4byte	.LFE4-.LFB4
 4390 0030 00000000 		.4byte	.LFB7
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 118


 4391 0034 28000000 		.4byte	.LFE7-.LFB7
 4392 0038 00000000 		.4byte	.LFB9
 4393 003c 28000000 		.4byte	.LFE9-.LFB9
 4394 0040 00000000 		.4byte	.LFB10
 4395 0044 10000000 		.4byte	.LFE10-.LFB10
 4396 0048 00000000 		.4byte	.LFB11
 4397 004c 2C000000 		.4byte	.LFE11-.LFB11
 4398 0050 00000000 		.4byte	.LFB12
 4399 0054 38000000 		.4byte	.LFE12-.LFB12
 4400 0058 00000000 		.4byte	.LFB14
 4401 005c 54000000 		.4byte	.LFE14-.LFB14
 4402 0060 00000000 		.4byte	.LFB15
 4403 0064 64000000 		.4byte	.LFE15-.LFB15
 4404 0068 00000000 		.4byte	.LFB16
 4405 006c 1C000000 		.4byte	.LFE16-.LFB16
 4406 0070 00000000 		.4byte	.LFB17
 4407 0074 18000000 		.4byte	.LFE17-.LFB17
 4408 0078 00000000 		.4byte	.LFB18
 4409 007c 2C000000 		.4byte	.LFE18-.LFB18
 4410 0080 00000000 		.4byte	.LFB19
 4411 0084 2C000000 		.4byte	.LFE19-.LFB19
 4412 0088 00000000 		.4byte	.LFB20
 4413 008c 44000000 		.4byte	.LFE20-.LFB20
 4414 0090 00000000 		.4byte	.LFB21
 4415 0094 44000000 		.4byte	.LFE21-.LFB21
 4416 0098 00000000 		.4byte	.LFB22
 4417 009c 3C000000 		.4byte	.LFE22-.LFB22
 4418 00a0 00000000 		.4byte	.LFB23
 4419 00a4 54000000 		.4byte	.LFE23-.LFB23
 4420 00a8 00000000 		.4byte	.LFB24
 4421 00ac 68000000 		.4byte	.LFE24-.LFB24
 4422 00b0 00000000 		.4byte	.LFB25
 4423 00b4 4C000000 		.4byte	.LFE25-.LFB25
 4424 00b8 00000000 		.4byte	.LFB26
 4425 00bc DC000000 		.4byte	.LFE26-.LFB26
 4426 00c0 00000000 		.4byte	.LFB27
 4427 00c4 48000000 		.4byte	.LFE27-.LFB27
 4428 00c8 00000000 		.4byte	.LFB1
 4429 00cc 24000000 		.4byte	.LFE1-.LFB1
 4430 00d0 00000000 		.4byte	.LFB2
 4431 00d4 10000000 		.4byte	.LFE2-.LFB2
 4432 00d8 00000000 		.4byte	.LFB6
 4433 00dc 70000000 		.4byte	.LFE6-.LFB6
 4434 00e0 00000000 		.4byte	.LFB8
 4435 00e4 44000000 		.4byte	.LFE8-.LFB8
 4436 00e8 00000000 		.4byte	0
 4437 00ec 00000000 		.4byte	0
 4438              		.section	.debug_ranges,"",%progbits
 4439              	.Ldebug_ranges0:
 4440 0000 00000000 		.4byte	.LFB5
 4441 0004 34000000 		.4byte	.LFE5
 4442 0008 00000000 		.4byte	.LFB13
 4443 000c 58000000 		.4byte	.LFE13
 4444 0010 00000000 		.4byte	.LFB3
 4445 0014 10000000 		.4byte	.LFE3
 4446 0018 00000000 		.4byte	.LFB4
 4447 001c AC000000 		.4byte	.LFE4
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 119


 4448 0020 00000000 		.4byte	.LFB7
 4449 0024 28000000 		.4byte	.LFE7
 4450 0028 00000000 		.4byte	.LFB9
 4451 002c 28000000 		.4byte	.LFE9
 4452 0030 00000000 		.4byte	.LFB10
 4453 0034 10000000 		.4byte	.LFE10
 4454 0038 00000000 		.4byte	.LFB11
 4455 003c 2C000000 		.4byte	.LFE11
 4456 0040 00000000 		.4byte	.LFB12
 4457 0044 38000000 		.4byte	.LFE12
 4458 0048 00000000 		.4byte	.LFB14
 4459 004c 54000000 		.4byte	.LFE14
 4460 0050 00000000 		.4byte	.LFB15
 4461 0054 64000000 		.4byte	.LFE15
 4462 0058 00000000 		.4byte	.LFB16
 4463 005c 1C000000 		.4byte	.LFE16
 4464 0060 00000000 		.4byte	.LFB17
 4465 0064 18000000 		.4byte	.LFE17
 4466 0068 00000000 		.4byte	.LFB18
 4467 006c 2C000000 		.4byte	.LFE18
 4468 0070 00000000 		.4byte	.LFB19
 4469 0074 2C000000 		.4byte	.LFE19
 4470 0078 00000000 		.4byte	.LFB20
 4471 007c 44000000 		.4byte	.LFE20
 4472 0080 00000000 		.4byte	.LFB21
 4473 0084 44000000 		.4byte	.LFE21
 4474 0088 00000000 		.4byte	.LFB22
 4475 008c 3C000000 		.4byte	.LFE22
 4476 0090 00000000 		.4byte	.LFB23
 4477 0094 54000000 		.4byte	.LFE23
 4478 0098 00000000 		.4byte	.LFB24
 4479 009c 68000000 		.4byte	.LFE24
 4480 00a0 00000000 		.4byte	.LFB25
 4481 00a4 4C000000 		.4byte	.LFE25
 4482 00a8 00000000 		.4byte	.LFB26
 4483 00ac DC000000 		.4byte	.LFE26
 4484 00b0 00000000 		.4byte	.LFB27
 4485 00b4 48000000 		.4byte	.LFE27
 4486 00b8 00000000 		.4byte	.LFB1
 4487 00bc 24000000 		.4byte	.LFE1
 4488 00c0 00000000 		.4byte	.LFB2
 4489 00c4 10000000 		.4byte	.LFE2
 4490 00c8 00000000 		.4byte	.LFB6
 4491 00cc 70000000 		.4byte	.LFE6
 4492 00d0 00000000 		.4byte	.LFB8
 4493 00d4 44000000 		.4byte	.LFE8
 4494 00d8 00000000 		.4byte	0
 4495 00dc 00000000 		.4byte	0
 4496              		.section	.debug_line,"",%progbits
 4497              	.Ldebug_line0:
 4498 0000 BD030000 		.section	.debug_str,"MS",%progbits,1
 4498      02008A00 
 4498      00000201 
 4498      FB0E0D00 
 4498      01010101 
 4499              	.LASF107:
 4500 0000 4379496E 		.ascii	"CyIntSetVector\000"
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 120


 4500      74536574 
 4500      56656374 
 4500      6F7200
 4501              	.LASF100:
 4502 000f 4144435F 		.ascii	"ADC_Temp_countsPer10Volt\000"
 4502      54656D70 
 4502      5F636F75 
 4502      6E747350 
 4502      65723130 
 4503              	.LASF10:
 4504 0028 75696E74 		.ascii	"uint16\000"
 4504      313600
 4505              	.LASF53:
 4506 002f 6368616E 		.ascii	"chanCount\000"
 4506      436F756E 
 4506      7400
 4507              	.LASF57:
 4508 0039 4144435F 		.ascii	"ADC_Temp_GetResult16\000"
 4508      54656D70 
 4508      5F476574 
 4508      52657375 
 4508      6C743136 
 4509              	.LASF73:
 4510 004e 61646347 		.ascii	"adcGain\000"
 4510      61696E00 
 4511              	.LASF87:
 4512 0056 636F756E 		.ascii	"counts\000"
 4512      747300
 4513              	.LASF111:
 4514 005d 47656E65 		.ascii	"Generated_Source\\PSoC4\\ADC_Temp.c\000"
 4514      72617465 
 4514      645F536F 
 4514      75726365 
 4514      5C50536F 
 4515              	.LASF97:
 4516 007f 4144435F 		.ascii	"ADC_Temp_initVar\000"
 4516      54656D70 
 4516      5F696E69 
 4516      74566172 
 4516      00
 4517              	.LASF68:
 4518 0090 4144435F 		.ascii	"ADC_Temp_SetSatMask\000"
 4518      54656D70 
 4518      5F536574 
 4518      5361744D 
 4518      61736B00 
 4519              	.LASF74:
 4520 00a4 4144435F 		.ascii	"ADC_Temp_RawCounts2Counts\000"
 4520      54656D70 
 4520      5F526177 
 4520      436F756E 
 4520      74733243 
 4521              	.LASF66:
 4522 00be 4144435F 		.ascii	"ADC_Temp_SetLimitMask\000"
 4522      54656D70 
 4522      5F536574 
 4522      4C696D69 
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 121


 4522      744D6173 
 4523              	.LASF7:
 4524 00d4 6C6F6E67 		.ascii	"long long unsigned int\000"
 4524      206C6F6E 
 4524      6720756E 
 4524      7369676E 
 4524      65642069 
 4525              	.LASF103:
 4526 00eb 4144435F 		.ascii	"ADC_Temp_intSarClock_SetFractionalDividerRegister\000"
 4526      54656D70 
 4526      5F696E74 
 4526      53617243 
 4526      6C6F636B 
 4527              	.LASF37:
 4528 011d 4144435F 		.ascii	"ADC_Temp_CONFIG_STRUCT\000"
 4528      54656D70 
 4528      5F434F4E 
 4528      4649475F 
 4528      53545255 
 4529              	.LASF114:
 4530 0134 4144435F 		.ascii	"ADC_Temp_IsChannelSigned\000"
 4530      54656D70 
 4530      5F497343 
 4530      68616E6E 
 4530      656C5369 
 4531              	.LASF6:
 4532 014d 6C6F6E67 		.ascii	"long long int\000"
 4532      206C6F6E 
 4532      6720696E 
 4532      7400
 4533              	.LASF0:
 4534 015b 7369676E 		.ascii	"signed char\000"
 4534      65642063 
 4534      68617200 
 4535              	.LASF36:
 4536 0167 636C6B44 		.ascii	"clkDivider\000"
 4536      69766964 
 4536      657200
 4537              	.LASF13:
 4538 0172 696E7433 		.ascii	"int32\000"
 4538      3200
 4539              	.LASF45:
 4540 0178 4144435F 		.ascii	"ADC_Temp_StartConvert\000"
 4540      54656D70 
 4540      5F537461 
 4540      7274436F 
 4540      6E766572 
 4541              	.LASF4:
 4542 018e 6C6F6E67 		.ascii	"long int\000"
 4542      20696E74 
 4542      00
 4543              	.LASF9:
 4544 0197 75696E74 		.ascii	"uint8\000"
 4544      3800
 4545              	.LASF102:
 4546 019d 4144435F 		.ascii	"ADC_Temp_intSarClock_Stop\000"
 4546      54656D70 
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 122


 4546      5F696E74 
 4546      53617243 
 4546      6C6F636B 
 4547              	.LASF108:
 4548 01b7 43794465 		.ascii	"CyDelayUs\000"
 4548      6C617955 
 4548      7300
 4549              	.LASF16:
 4550 01c1 646F7562 		.ascii	"double\000"
 4550      6C6500
 4551              	.LASF47:
 4552 01c8 4144435F 		.ascii	"ADC_Temp_SetConvertMode\000"
 4552      54656D70 
 4552      5F536574 
 4552      436F6E76 
 4552      6572744D 
 4553              	.LASF27:
 4554 01e0 73616D70 		.ascii	"sampleTime01\000"
 4554      6C655469 
 4554      6D653031 
 4554      00
 4555              	.LASF11:
 4556 01ed 75696E74 		.ascii	"uint32\000"
 4556      333200
 4557              	.LASF64:
 4558 01f4 4144435F 		.ascii	"ADC_Temp_SetHighLimit\000"
 4558      54656D70 
 4558      5F536574 
 4558      48696768 
 4558      4C696D69 
 4559              	.LASF59:
 4560 020a 4144435F 		.ascii	"ADC_Temp_GetResult32\000"
 4560      54656D70 
 4560      5F476574 
 4560      52657375 
 4560      6C743332 
 4561              	.LASF50:
 4562 021f 6D61736B 		.ascii	"mask\000"
 4562      00
 4563              	.LASF99:
 4564 0224 4144435F 		.ascii	"ADC_Temp_offset\000"
 4564      54656D70 
 4564      5F6F6666 
 4564      73657400 
 4565              	.LASF51:
 4566 0234 4144435F 		.ascii	"ADC_Temp_SetChanMask\000"
 4566      54656D70 
 4566      5F536574 
 4566      4368616E 
 4566      4D61736B 
 4567              	.LASF76:
 4568 0249 74656D70 		.ascii	"temp\000"
 4568      00
 4569              	.LASF54:
 4570 024e 7265744D 		.ascii	"retMode\000"
 4570      6F646500 
 4571              	.LASF93:
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 123


 4572 0256 72657374 		.ascii	"restart\000"
 4572      61727400 
 4573              	.LASF8:
 4574 025e 756E7369 		.ascii	"unsigned int\000"
 4574      676E6564 
 4574      20696E74 
 4574      00
 4575              	.LASF72:
 4576 026b 4144435F 		.ascii	"ADC_Temp_SetGain\000"
 4576      54656D70 
 4576      5F536574 
 4576      4761696E 
 4576      00
 4577              	.LASF32:
 4578 027c 72616E67 		.ascii	"rangeIntMask\000"
 4578      65496E74 
 4578      4D61736B 
 4578      00
 4579              	.LASF44:
 4580 0289 4144435F 		.ascii	"ADC_Temp_Stop\000"
 4580      54656D70 
 4580      5F53746F 
 4580      7000
 4581              	.LASF5:
 4582 0297 6C6F6E67 		.ascii	"long unsigned int\000"
 4582      20756E73 
 4582      69676E65 
 4582      6420696E 
 4582      7400
 4583              	.LASF40:
 4584 02a9 746D7052 		.ascii	"tmpRegVal\000"
 4584      65675661 
 4584      6C00
 4585              	.LASF62:
 4586 02b3 4144435F 		.ascii	"ADC_Temp_SetLowLimit\000"
 4586      54656D70 
 4586      5F536574 
 4586      4C6F774C 
 4586      696D6974 
 4587              	.LASF52:
 4588 02c8 656E6162 		.ascii	"enableMask\000"
 4588      6C654D61 
 4588      736B00
 4589              	.LASF104:
 4590 02d3 4144435F 		.ascii	"ADC_Temp_intSarClock_StartEx\000"
 4590      54656D70 
 4590      5F696E74 
 4590      53617243 
 4590      6C6F636B 
 4591              	.LASF77:
 4592 02f0 61766572 		.ascii	"averageAdcSamplesDiv\000"
 4592      61676541 
 4592      64635361 
 4592      6D706C65 
 4592      73446976 
 4593              	.LASF86:
 4594 0305 636F6E66 		.ascii	"configNum\000"
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 124


 4594      69674E75 
 4594      6D00
 4595              	.LASF3:
 4596 030f 73686F72 		.ascii	"short unsigned int\000"
 4596      7420756E 
 4596      7369676E 
 4596      65642069 
 4596      6E7400
 4597              	.LASF83:
 4598 0322 4144435F 		.ascii	"ADC_Temp_CountsTo_uVolts\000"
 4598      54656D70 
 4598      5F436F75 
 4598      6E747354 
 4598      6F5F7556 
 4599              	.LASF29:
 4600 033b 72616E67 		.ascii	"rangeThres\000"
 4600      65546872 
 4600      657300
 4601              	.LASF61:
 4602 0346 66696E61 		.ascii	"finalResult\000"
 4602      6C526573 
 4602      756C7400 
 4603              	.LASF67:
 4604 0352 6C696D69 		.ascii	"limitMask\000"
 4604      744D6173 
 4604      6B00
 4605              	.LASF78:
 4606 035c 72617743 		.ascii	"rawChannel\000"
 4606      68616E6E 
 4606      656C00
 4607              	.LASF24:
 4608 0367 6E756D43 		.ascii	"numChannels\000"
 4608      68616E6E 
 4608      656C7300 
 4609              	.LASF42:
 4610 0373 6368616E 		.ascii	"chanConfig\000"
 4610      436F6E66 
 4610      696700
 4611              	.LASF19:
 4612 037e 72656733 		.ascii	"reg32\000"
 4612      3200
 4613              	.LASF41:
 4614 0384 69735369 		.ascii	"isSigned\000"
 4614      676E6564 
 4614      00
 4615              	.LASF58:
 4616 038d 61646352 		.ascii	"adcResult\000"
 4616      6573756C 
 4616      7400
 4617              	.LASF14:
 4618 0397 666C6F61 		.ascii	"float32\000"
 4618      74333200 
 4619              	.LASF22:
 4620 039f 73697A65 		.ascii	"sizetype\000"
 4620      74797065 
 4620      00
 4621              	.LASF63:
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 125


 4622 03a8 6C6F774C 		.ascii	"lowLimit\000"
 4622      696D6974 
 4622      00
 4623              	.LASF21:
 4624 03b1 6C6F6E67 		.ascii	"long double\000"
 4624      20646F75 
 4624      626C6500 
 4625              	.LASF91:
 4626 03bd 61646472 		.ascii	"address\000"
 4626      65737300 
 4627              	.LASF96:
 4628 03c5 4144435F 		.ascii	"ADC_Temp_channelsConfig\000"
 4628      54656D70 
 4628      5F636861 
 4628      6E6E656C 
 4628      73436F6E 
 4629              	.LASF90:
 4630 03dd 4144435F 		.ascii	"ADC_Temp_StartEx\000"
 4630      54656D70 
 4630      5F537461 
 4630      72744578 
 4630      00
 4631              	.LASF28:
 4632 03ee 73616D70 		.ascii	"sampleTime23\000"
 4632      6C655469 
 4632      6D653233 
 4632      00
 4633              	.LASF33:
 4634 03fb 73617449 		.ascii	"satIntMask\000"
 4634      6E744D61 
 4634      736B00
 4635              	.LASF92:
 4636 0406 4144435F 		.ascii	"ADC_Temp_SelectConfig\000"
 4636      54656D70 
 4636      5F53656C 
 4636      65637443 
 4636      6F6E6669 
 4637              	.LASF69:
 4638 041c 7361744D 		.ascii	"satMask\000"
 4638      61736B00 
 4639              	.LASF17:
 4640 0424 696E7436 		.ascii	"int64\000"
 4640      3400
 4641              	.LASF106:
 4642 042a 4379496E 		.ascii	"CyIntSetPriority\000"
 4642      74536574 
 4642      5072696F 
 4642      72697479 
 4642      00
 4643              	.LASF46:
 4644 043b 4144435F 		.ascii	"ADC_Temp_InitConfig\000"
 4644      54656D70 
 4644      5F496E69 
 4644      74436F6E 
 4644      66696700 
 4645              	.LASF15:
 4646 044f 666C6F61 		.ascii	"float\000"
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 126


 4646      7400
 4647              	.LASF65:
 4648 0455 68696768 		.ascii	"highLimit\000"
 4648      4C696D69 
 4648      7400
 4649              	.LASF113:
 4650 045f 4144435F 		.ascii	"ADC_Temp_SetDFTControl\000"
 4650      54656D70 
 4650      5F536574 
 4650      44465443 
 4650      6F6E7472 
 4651              	.LASF31:
 4652 0476 6368616E 		.ascii	"chanEn\000"
 4652      456E00
 4653              	.LASF105:
 4654 047d 43794861 		.ascii	"CyHalt\000"
 4654      6C7400
 4655              	.LASF1:
 4656 0484 756E7369 		.ascii	"unsigned char\000"
 4656      676E6564 
 4656      20636861 
 4656      7200
 4657              	.LASF89:
 4658 0492 4144435F 		.ascii	"ADC_Temp_Start\000"
 4658      54656D70 
 4658      5F537461 
 4658      727400
 4659              	.LASF2:
 4660 04a1 73686F72 		.ascii	"short int\000"
 4660      7420696E 
 4660      7400
 4661              	.LASF56:
 4662 04ab 4144435F 		.ascii	"ADC_Temp_IsEndConversion\000"
 4662      54656D70 
 4662      5F497345 
 4662      6E64436F 
 4662      6E766572 
 4663              	.LASF80:
 4664 04c4 72657375 		.ascii	"result_Volts\000"
 4664      6C745F56 
 4664      6F6C7473 
 4664      00
 4665              	.LASF60:
 4666 04d1 61646352 		.ascii	"adcResult16\000"
 4666      6573756C 
 4666      74313600 
 4667              	.LASF98:
 4668 04dd 4144435F 		.ascii	"ADC_Temp_selected\000"
 4668      54656D70 
 4668      5F73656C 
 4668      65637465 
 4668      6400
 4669              	.LASF43:
 4670 04ef 63684E75 		.ascii	"chNum\000"
 4670      6D00
 4671              	.LASF85:
 4672 04f5 4144435F 		.ascii	"ADC_Temp_Init\000"
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 127


 4672      54656D70 
 4672      5F496E69 
 4672      7400
 4673              	.LASF94:
 4674 0503 4144435F 		.ascii	"ADC_Temp_StopConvert\000"
 4674      54656D70 
 4674      5F53746F 
 4674      70436F6E 
 4674      76657274 
 4675              	.LASF34:
 4676 0518 76726566 		.ascii	"vrefMvValue\000"
 4676      4D765661 
 4676      6C756500 
 4677              	.LASF110:
 4678 0524 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4678      43313120 
 4678      352E342E 
 4678      31203230 
 4678      31363036 
 4679 0557 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 4679      20726576 
 4679      6973696F 
 4679      6E203233 
 4679      37373135 
 4680 058a 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 4680      67202D66 
 4680      66756E63 
 4680      74696F6E 
 4680      2D736563 
 4681              	.LASF39:
 4682 05b6 6368616E 		.ascii	"chan\000"
 4682      00
 4683              	.LASF18:
 4684 05bb 63686172 		.ascii	"char\000"
 4684      00
 4685              	.LASF48:
 4686 05c0 6D6F6465 		.ascii	"mode\000"
 4686      00
 4687              	.LASF20:
 4688 05c5 63796973 		.ascii	"cyisraddress\000"
 4688      72616464 
 4688      72657373 
 4688      00
 4689              	.LASF38:
 4690 05d2 636F6E66 		.ascii	"config\000"
 4690      696700
 4691              	.LASF79:
 4692 05d9 4144435F 		.ascii	"ADC_Temp_CountsTo_Volts\000"
 4692      54656D70 
 4692      5F436F75 
 4692      6E747354 
 4692      6F5F566F 
 4693              	.LASF84:
 4694 05f1 72657375 		.ascii	"result_uVolts\000"
 4694      6C745F75 
 4694      566F6C74 
 4694      7300
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 128


 4695              	.LASF88:
 4696 05ff 4144435F 		.ascii	"ADC_Temp_Enable\000"
 4696      54656D70 
 4696      5F456E61 
 4696      626C6500 
 4697              	.LASF101:
 4698 060f 4144435F 		.ascii	"ADC_Temp_allConfigs\000"
 4698      54656D70 
 4698      5F616C6C 
 4698      436F6E66 
 4698      69677300 
 4699              	.LASF71:
 4700 0623 6F666673 		.ascii	"offset\000"
 4700      657400
 4701              	.LASF25:
 4702 062a 6374726C 		.ascii	"ctrl\000"
 4702      00
 4703              	.LASF49:
 4704 062f 4144435F 		.ascii	"ADC_Temp_SetEosMask\000"
 4704      54656D70 
 4704      5F536574 
 4704      456F734D 
 4704      61736B00 
 4705              	.LASF35:
 4706 0643 6D697363 		.ascii	"miscConfig\000"
 4706      436F6E66 
 4706      696700
 4707              	.LASF75:
 4708 064e 61646343 		.ascii	"adcCounts\000"
 4708      6F756E74 
 4708      7300
 4709              	.LASF109:
 4710 0658 4144435F 		.ascii	"ADC_Temp_IRQ_StartEx\000"
 4710      54656D70 
 4710      5F495251 
 4710      5F537461 
 4710      72744578 
 4711              	.LASF70:
 4712 066d 4144435F 		.ascii	"ADC_Temp_SetOffset\000"
 4712      54656D70 
 4712      5F536574 
 4712      4F666673 
 4712      657400
 4713              	.LASF30:
 4714 0680 72616E67 		.ascii	"rangeCond\000"
 4714      65436F6E 
 4714      6400
 4715              	.LASF26:
 4716 068a 73616D70 		.ascii	"sampleCtrl\000"
 4716      6C654374 
 4716      726C00
 4717              	.LASF12:
 4718 0695 696E7431 		.ascii	"int16\000"
 4718      3600
 4719              	.LASF112:
 4720 069b 433A5C55 		.ascii	"C:\\Users\\gcristini\\OneDrive - Datalogic S.p.a\\D"
 4720      73657273 
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccOO0ieV.s 			page 129


 4720      5C676372 
 4720      69737469 
 4720      6E695C4F 
 4721 06ca 6174615C 		.ascii	"ata\\PhytonWorkspace\\SkorpioTemperatureTest\\PSOC-"
 4721      50687974 
 4721      6F6E576F 
 4721      726B7370 
 4721      6163655C 
 4722 06fa 4669726D 		.ascii	"Firmware\\SerialTemperatureSensor.cydsn\000"
 4722      77617265 
 4722      5C536572 
 4722      69616C54 
 4722      656D7065 
 4723              	.LASF82:
 4724 0721 72657375 		.ascii	"result_mVolts\000"
 4724      6C745F6D 
 4724      566F6C74 
 4724      7300
 4725              	.LASF23:
 4726 072f 6368616E 		.ascii	"channelBase\000"
 4726      6E656C42 
 4726      61736500 
 4727              	.LASF55:
 4728 073b 656E644F 		.ascii	"endOfConversion\000"
 4728      66436F6E 
 4728      76657273 
 4728      696F6E00 
 4729              	.LASF95:
 4730 074b 4144435F 		.ascii	"ADC_Temp_currentConfig\000"
 4730      54656D70 
 4730      5F637572 
 4730      72656E74 
 4730      436F6E66 
 4731              	.LASF81:
 4732 0762 4144435F 		.ascii	"ADC_Temp_CountsTo_mVolts\000"
 4732      54656D70 
 4732      5F436F75 
 4732      6E747354 
 4732      6F5F6D56 
 4733              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
