ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CyLFClk.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CySysClkGetTimerSource,"ax",%progbits
  20              		.align	2
  21              		.code	16
  22              		.thumb_func
  23              		.type	CySysClkGetTimerSource, %function
  24              	CySysClkGetTimerSource:
  25              	.LFB25:
  26              		.file 1 "Generated_Source\\PSoC4\\CyLFClk.c"
   1:Generated_Source\PSoC4/CyLFClk.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLFClk.c **** * \file .c
   3:Generated_Source\PSoC4/CyLFClk.c **** * \version 1.20
   4:Generated_Source\PSoC4/CyLFClk.c **** *
   5:Generated_Source\PSoC4/CyLFClk.c **** * \brief
   6:Generated_Source\PSoC4/CyLFClk.c **** *  This file provides the source code for configuring watchdog timers WDTs, 
   7:Generated_Source\PSoC4/CyLFClk.c **** *  low frequency clocks (LFCLK) and the Real-time Clock (RTC) component in
   8:Generated_Source\PSoC4/CyLFClk.c **** *  PSoC Creator for the PSoC 4 families.
   9:Generated_Source\PSoC4/CyLFClk.c **** *
  10:Generated_Source\PSoC4/CyLFClk.c **** ********************************************************************************
  11:Generated_Source\PSoC4/CyLFClk.c **** * \copyright
  12:Generated_Source\PSoC4/CyLFClk.c **** * Copyright 2008-2017, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/CyLFClk.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/CyLFClk.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/CyLFClk.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/CyLFClk.c **** 
  18:Generated_Source\PSoC4/CyLFClk.c **** 
  19:Generated_Source\PSoC4/CyLFClk.c **** #include "CyLFClk.h"
  20:Generated_Source\PSoC4/CyLFClk.c **** #include "CyLib.h"
  21:Generated_Source\PSoC4/CyLFClk.c **** 
  22:Generated_Source\PSoC4/CyLFClk.c **** #if (CY_IP_WCO && CY_IP_SRSSV2)
  23:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkGetLfclkSource(void);
  24:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_WCO && CY_IP_SRSSV2) */
  25:Generated_Source\PSoC4/CyLFClk.c **** 
  26:Generated_Source\PSoC4/CyLFClk.c **** 
  27:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2 && (!CY_IP_CPUSS))
  28:Generated_Source\PSoC4/CyLFClk.c ****     /* Default Ilo Trim Register value for ILO trimming*/
  29:Generated_Source\PSoC4/CyLFClk.c ****     static volatile uint16 defaultIloTrimRegValue = CY_SYS_CLK_ILO_TRIM_DEFAULT_VALUE;
  30:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2 && (!CY_IP_CPUSS)) */
  31:Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 2


  32:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2)
  33:Generated_Source\PSoC4/CyLFClk.c ****     /* CySysClkLfclkPosedgeCatch() / CySysClkLfclkPosedgeRestore() */
  34:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 lfclkPosedgeWdtCounter0Enabled = 0u;
  35:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 lfclkPosedgeWdtCounter0Mode    = CY_SYS_WDT_MODE_NONE;
  36:Generated_Source\PSoC4/CyLFClk.c **** 
  37:Generated_Source\PSoC4/CyLFClk.c ****     static volatile uint32 disableServicedIsr = 0uL;
  38:Generated_Source\PSoC4/CyLFClk.c ****     static volatile uint32 wdtIsrMask = CY_SYS_WDT_COUNTER0_INT |\
  39:Generated_Source\PSoC4/CyLFClk.c ****                                         CY_SYS_WDT_COUNTER1_INT |\
  40:Generated_Source\PSoC4/CyLFClk.c ****                                         CY_SYS_WDT_COUNTER2_INT;
  41:Generated_Source\PSoC4/CyLFClk.c **** 
  42:Generated_Source\PSoC4/CyLFClk.c ****     static const uint32 counterIntMaskTbl[CY_WDT_NUM_OF_WDT] = {CY_SYS_WDT_COUNTER0_INT,
  43:Generated_Source\PSoC4/CyLFClk.c ****                                                                 CY_SYS_WDT_COUNTER1_INT,
  44:Generated_Source\PSoC4/CyLFClk.c ****                                                                 CY_SYS_WDT_COUNTER2_INT};
  45:Generated_Source\PSoC4/CyLFClk.c **** 
  46:Generated_Source\PSoC4/CyLFClk.c ****     static void CySysClkLfclkPosedgeCatch(void);
  47:Generated_Source\PSoC4/CyLFClk.c ****     static void CySysClkLfclkPosedgeRestore(void);
  48:Generated_Source\PSoC4/CyLFClk.c **** 
  49:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysWdtLocked(void);
  50:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkIloEnabled(void);
  51:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2) */
  52:Generated_Source\PSoC4/CyLFClk.c **** 
  53:Generated_Source\PSoC4/CyLFClk.c **** #if (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
  54:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkGetTimerSource(void);
  55:Generated_Source\PSoC4/CyLFClk.c ****     static volatile uint32 disableTimerServicedIsr = 0uL;
  56:Generated_Source\PSoC4/CyLFClk.c ****     static volatile uint32 timerIsrMask = CY_SYS_TIMER0_INT |\
  57:Generated_Source\PSoC4/CyLFClk.c ****                                           CY_SYS_TIMER1_INT |\
  58:Generated_Source\PSoC4/CyLFClk.c ****                                           CY_SYS_TIMER2_INT;
  59:Generated_Source\PSoC4/CyLFClk.c **** 
  60:Generated_Source\PSoC4/CyLFClk.c ****     static const uint32 counterTimerIntMaskTbl[CY_SYS_NUM_OF_TIMERS] = {CY_SYS_TIMER0_INT,
  61:Generated_Source\PSoC4/CyLFClk.c ****                                                                         CY_SYS_TIMER1_INT,
  62:Generated_Source\PSoC4/CyLFClk.c ****                                                                         CY_SYS_TIMER2_INT};
  63:Generated_Source\PSoC4/CyLFClk.c **** 
  64:Generated_Source\PSoC4/CyLFClk.c ****     static cyTimerCallback cySysTimerCallback[CY_SYS_NUM_OF_TIMERS] = {(void *)0, (void *)0, (void 
  65:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_DWT_EN) */
  66:Generated_Source\PSoC4/CyLFClk.c **** 
  67:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2)
  68:Generated_Source\PSoC4/CyLFClk.c ****     static cyWdtCallback cySysWdtCallback[CY_WDT_NUM_OF_WDT] = {(void *)0, (void *)0, (void *)0};
  69:Generated_Source\PSoC4/CyLFClk.c **** #else
  70:Generated_Source\PSoC4/CyLFClk.c ****     static cyWdtCallback cySysWdtCallback = (void *)0;
  71:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2) */
  72:Generated_Source\PSoC4/CyLFClk.c **** 
  73:Generated_Source\PSoC4/CyLFClk.c **** 
  74:Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
  75:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloStart
  76:Generated_Source\PSoC4/CyLFClk.c **** ****************************************************************************//**
  77:Generated_Source\PSoC4/CyLFClk.c **** * \brief
  78:Generated_Source\PSoC4/CyLFClk.c **** *  Enables ILO.
  79:Generated_Source\PSoC4/CyLFClk.c **** *
  80:Generated_Source\PSoC4/CyLFClk.c **** *  Refer to the device datasheet for the ILO startup time.
  81:Generated_Source\PSoC4/CyLFClk.c **** *
  82:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
  83:Generated_Source\PSoC4/CyLFClk.c **** void CySysClkIloStart(void)
  84:Generated_Source\PSoC4/CyLFClk.c **** {
  85:Generated_Source\PSoC4/CyLFClk.c ****     CY_SYS_CLK_ILO_CONFIG_REG |= CY_SYS_CLK_ILO_CONFIG_ENABLE;
  86:Generated_Source\PSoC4/CyLFClk.c **** }
  87:Generated_Source\PSoC4/CyLFClk.c **** 
  88:Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 3


  89:Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
  90:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloStop
  91:Generated_Source\PSoC4/CyLFClk.c **** ****************************************************************************//**
  92:Generated_Source\PSoC4/CyLFClk.c **** * \brief
  93:Generated_Source\PSoC4/CyLFClk.c **** *  Disables the ILO.
  94:Generated_Source\PSoC4/CyLFClk.c **** *
  95:Generated_Source\PSoC4/CyLFClk.c **** *  This function has no effect if WDT is locked (CySysWdtLock() is
  96:Generated_Source\PSoC4/CyLFClk.c **** *  called). Call CySysWdtUnlock() to unlock WDT and stop ILO.
  97:Generated_Source\PSoC4/CyLFClk.c **** *
  98:Generated_Source\PSoC4/CyLFClk.c **** *  PSoC 4100 / PSoC 4200: Note that ILO is required for WDT's operation.
  99:Generated_Source\PSoC4/CyLFClk.c **** *
 100:Generated_Source\PSoC4/CyLFClk.c **** *  PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L / PSoC 4100M / 
 101:Generated_Source\PSoC4/CyLFClk.c **** *  PSoC 4200M:
 102:Generated_Source\PSoC4/CyLFClk.c **** *  Stopping ILO affects the peripheral clocked by LFCLK, if
 103:Generated_Source\PSoC4/CyLFClk.c **** *  LFCLK is configured to be sourced by ILO.
 104:Generated_Source\PSoC4/CyLFClk.c **** *
 105:Generated_Source\PSoC4/CyLFClk.c **** *  If the ILO is disabled, all blocks run by ILO will stop functioning.
 106:Generated_Source\PSoC4/CyLFClk.c **** *
 107:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
 108:Generated_Source\PSoC4/CyLFClk.c **** void CySysClkIloStop(void)
 109:Generated_Source\PSoC4/CyLFClk.c **** {
 110:Generated_Source\PSoC4/CyLFClk.c ****     #if(CY_IP_SRSSV2)
 111:Generated_Source\PSoC4/CyLFClk.c ****         uint8  interruptState;
 112:Generated_Source\PSoC4/CyLFClk.c **** 
 113:Generated_Source\PSoC4/CyLFClk.c ****         /* Do nothing if WDT is locked or ILO is disabled */
 114:Generated_Source\PSoC4/CyLFClk.c ****         if (0u == CySysWdtLocked())
 115:Generated_Source\PSoC4/CyLFClk.c ****         {
 116:Generated_Source\PSoC4/CyLFClk.c ****             if (0u != CySysClkIloEnabled())
 117:Generated_Source\PSoC4/CyLFClk.c ****             {
 118:Generated_Source\PSoC4/CyLFClk.c **** 
 119:Generated_Source\PSoC4/CyLFClk.c ****             #if (CY_IP_WCO)
 120:Generated_Source\PSoC4/CyLFClk.c ****                 if (CY_SYS_CLK_LFCLK_SRC_ILO == CySysClkGetLfclkSource())
 121:Generated_Source\PSoC4/CyLFClk.c ****                 {
 122:Generated_Source\PSoC4/CyLFClk.c ****             #endif /* (CY_IP_WCO) */
 123:Generated_Source\PSoC4/CyLFClk.c **** 
 124:Generated_Source\PSoC4/CyLFClk.c ****                 interruptState = CyEnterCriticalSection();
 125:Generated_Source\PSoC4/CyLFClk.c ****                 CySysClkLfclkPosedgeCatch();
 126:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CLK_ILO_CONFIG_REG &= (uint32) ( ~(uint32)CY_SYS_CLK_ILO_CONFIG_ENABLE);
 127:Generated_Source\PSoC4/CyLFClk.c ****                 CySysClkLfclkPosedgeRestore();
 128:Generated_Source\PSoC4/CyLFClk.c ****                 CyExitCriticalSection(interruptState);
 129:Generated_Source\PSoC4/CyLFClk.c **** 
 130:Generated_Source\PSoC4/CyLFClk.c ****             #if (CY_IP_WCO)
 131:Generated_Source\PSoC4/CyLFClk.c ****                 }
 132:Generated_Source\PSoC4/CyLFClk.c ****                 else /* Safe to disable - shortened pulse does not impact peripheral */
 133:Generated_Source\PSoC4/CyLFClk.c ****                 {
 134:Generated_Source\PSoC4/CyLFClk.c ****                     CY_SYS_CLK_ILO_CONFIG_REG &= (uint32) ( ~(uint32)CY_SYS_CLK_ILO_CONFIG_ENABLE);
 135:Generated_Source\PSoC4/CyLFClk.c ****                 }
 136:Generated_Source\PSoC4/CyLFClk.c ****             #endif /* (CY_IP_WCO) */
 137:Generated_Source\PSoC4/CyLFClk.c **** 
 138:Generated_Source\PSoC4/CyLFClk.c ****             }
 139:Generated_Source\PSoC4/CyLFClk.c ****         }
 140:Generated_Source\PSoC4/CyLFClk.c ****     #else
 141:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_CLK_ILO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_ILO_CONFIG_ENABLE);
 142:Generated_Source\PSoC4/CyLFClk.c ****     #endif /* (CY_IP_SRSSV2) */
 143:Generated_Source\PSoC4/CyLFClk.c **** }
 144:Generated_Source\PSoC4/CyLFClk.c **** 
 145:Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 4


 146:Generated_Source\PSoC4/CyLFClk.c **** /******************************************************************************
 147:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloStartMeasurement
 148:Generated_Source\PSoC4/CyLFClk.c **** ***************************************************************************//**
 149:Generated_Source\PSoC4/CyLFClk.c **** * \brief
 150:Generated_Source\PSoC4/CyLFClk.c **** * Starts the ILO accuracy measurement.
 151:Generated_Source\PSoC4/CyLFClk.c **** *
 152:Generated_Source\PSoC4/CyLFClk.c **** * This function is non-blocking and needs to be called before using the 
 153:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloTrim() and CySysClkIloCompensate() API.
 154:Generated_Source\PSoC4/CyLFClk.c **** *
 155:Generated_Source\PSoC4/CyLFClk.c **** * This API configures measurement counters to be sourced by SysClk (Counter 1)
 156:Generated_Source\PSoC4/CyLFClk.c **** * and ILO (Counter 2). 
 157:Generated_Source\PSoC4/CyLFClk.c **** *
 158:Generated_Source\PSoC4/CyLFClk.c **** * \note SysClk should be sourced by IMO. Otherwise CySysClkIloTrim() and 
 159:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloCompensate() API can give incorrect results.
 160:Generated_Source\PSoC4/CyLFClk.c **** *
 161:Generated_Source\PSoC4/CyLFClk.c **** * In addition, this API stores the factory ILO trim settings on the first call 
 162:Generated_Source\PSoC4/CyLFClk.c **** * after reset. This stored factory setting is used by the 
 163:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloRestoreFactoryTrim() API to restore the ILO factory trim. 
 164:Generated_Source\PSoC4/CyLFClk.c **** * Hence, it is important to call this API before restoring the ILO 
 165:Generated_Source\PSoC4/CyLFClk.c **** * factory trim settings.
 166:Generated_Source\PSoC4/CyLFClk.c **** *
 167:Generated_Source\PSoC4/CyLFClk.c **** ******************************************************************************/
 168:Generated_Source\PSoC4/CyLFClk.c **** void CySysClkIloStartMeasurement(void)
 169:Generated_Source\PSoC4/CyLFClk.c **** {
 170:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2 && (!CY_IP_CPUSS))
 171:Generated_Source\PSoC4/CyLFClk.c ****     static uint8 iloTrimTrig = 0u;
 172:Generated_Source\PSoC4/CyLFClk.c **** 
 173:Generated_Source\PSoC4/CyLFClk.c ****     /* Write default ILO trim value while ILO starting ( Cypress ID 225244 )*/
 174:Generated_Source\PSoC4/CyLFClk.c ****     if (0u == iloTrimTrig)
 175:Generated_Source\PSoC4/CyLFClk.c ****     {
 176:Generated_Source\PSoC4/CyLFClk.c ****         defaultIloTrimRegValue = ((uint8)(CY_SYS_CLK_ILO_TRIM_REG & CY_SYS_CLK_ILO_TRIM_MASK));
 177:Generated_Source\PSoC4/CyLFClk.c ****         iloTrimTrig = 1u;
 178:Generated_Source\PSoC4/CyLFClk.c ****     }
 179:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2 && (!CY_IP_CPUSS)) */
 180:Generated_Source\PSoC4/CyLFClk.c **** 
 181:Generated_Source\PSoC4/CyLFClk.c ****     /* Configure measurement counters to source by SysClk (Counter 1) and ILO (Counter 2)*/
 182:Generated_Source\PSoC4/CyLFClk.c ****     CY_SYS_CLK_DFT_REG = (CY_SYS_CLK_DFT_REG & (uint32) ~CY_SYS_CLK_DFT_SELECT_DEFAULT_MASK) |
 183:Generated_Source\PSoC4/CyLFClk.c ****                             CY_SYS_CLK_SEL_ILO_DFT_SOURCE; 
 184:Generated_Source\PSoC4/CyLFClk.c **** 
 185:Generated_Source\PSoC4/CyLFClk.c ****     CY_SYS_TST_DDFT_CTRL_REG = (CY_SYS_TST_DDFT_CTRL_REG & (uint32) ~ CY_SYS_TST_DDFT_CTRL_REG_DEFA
 186:Generated_Source\PSoC4/CyLFClk.c ****                             CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1;
 187:Generated_Source\PSoC4/CyLFClk.c **** }
 188:Generated_Source\PSoC4/CyLFClk.c **** 
 189:Generated_Source\PSoC4/CyLFClk.c **** 
 190:Generated_Source\PSoC4/CyLFClk.c **** /******************************************************************************
 191:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloStopMeasurement
 192:Generated_Source\PSoC4/CyLFClk.c **** ***************************************************************************//**
 193:Generated_Source\PSoC4/CyLFClk.c **** * \brief
 194:Generated_Source\PSoC4/CyLFClk.c **** * Stops the ILO accuracy measurement.
 195:Generated_Source\PSoC4/CyLFClk.c **** *
 196:Generated_Source\PSoC4/CyLFClk.c **** * Calling this function immediately stops the the ILO frequency measurement.
 197:Generated_Source\PSoC4/CyLFClk.c **** * This function should be called before placing the device to deepsleep, if 
 198:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloStartMeasurement() API was called before. 
 199:Generated_Source\PSoC4/CyLFClk.c **** *
 200:Generated_Source\PSoC4/CyLFClk.c **** ******************************************************************************/
 201:Generated_Source\PSoC4/CyLFClk.c **** void CySysClkIloStopMeasurement(void)
 202:Generated_Source\PSoC4/CyLFClk.c **** {
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 5


 203:Generated_Source\PSoC4/CyLFClk.c ****     /* Set default configurations in 11...8 DFT register bits to zero */
 204:Generated_Source\PSoC4/CyLFClk.c ****     CY_SYS_CLK_DFT_REG &= ~CY_SYS_CLK_DFT_SELECT_DEFAULT_MASK;
 205:Generated_Source\PSoC4/CyLFClk.c ****     #if(CY_IP_SRSSLT)
 206:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_TST_DDFT_CTRL_REG &= ((uint32) CY_SYS_TST_DDFT_CTRL_REG_DEFAULT_MASK);
 207:Generated_Source\PSoC4/CyLFClk.c ****     #endif /* (CY_IP_SRSSLT) */
 208:Generated_Source\PSoC4/CyLFClk.c **** }
 209:Generated_Source\PSoC4/CyLFClk.c **** 
 210:Generated_Source\PSoC4/CyLFClk.c **** 
 211:Generated_Source\PSoC4/CyLFClk.c **** /******************************************************************************
 212:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloCompensate
 213:Generated_Source\PSoC4/CyLFClk.c **** ***************************************************************************//**
 214:Generated_Source\PSoC4/CyLFClk.c **** * \brief
 215:Generated_Source\PSoC4/CyLFClk.c **** * This API measures the current ILO accuracy.
 216:Generated_Source\PSoC4/CyLFClk.c **** *
 217:Generated_Source\PSoC4/CyLFClk.c **** * Basing on the measured frequency the required number of ILO cycles for a 
 218:Generated_Source\PSoC4/CyLFClk.c **** * given delay (in microseconds) is obtained. The desired delay that needs to 
 219:Generated_Source\PSoC4/CyLFClk.c **** * be compensated is passed through the desiredDelay parameter. The compensated 
 220:Generated_Source\PSoC4/CyLFClk.c **** * cycle count is returned through the compesatedCycles pointer.
 221:Generated_Source\PSoC4/CyLFClk.c **** * The compensated ILO cycles can then be used to define the WDT period value, 
 222:Generated_Source\PSoC4/CyLFClk.c **** * effectively compensating for the ILO inaccuracy and allowing a more 
 223:Generated_Source\PSoC4/CyLFClk.c **** * accurate WDT interrupt generation.
 224:Generated_Source\PSoC4/CyLFClk.c **** *
 225:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloStartMeasurement() API should be called prior to calling this API. 
 226:Generated_Source\PSoC4/CyLFClk.c **** *
 227:Generated_Source\PSoC4/CyLFClk.c **** * \note SysClk should be sourced by IMO. Otherwise CySysClkIloTrim() and 
 228:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloCompensate() API can give incorrect results.
 229:Generated_Source\PSoC4/CyLFClk.c **** *
 230:Generated_Source\PSoC4/CyLFClk.c **** * \note If the System clock frequency is changed in runtime, the CyDelayFreq() 
 231:Generated_Source\PSoC4/CyLFClk.c **** * with the appropriate parameter (Frequency of bus clock in Hertz) should be 
 232:Generated_Source\PSoC4/CyLFClk.c **** * called before calling a next CySysClkIloCompensate().
 233:Generated_Source\PSoC4/CyLFClk.c **** *
 234:Generated_Source\PSoC4/CyLFClk.c **** * \warning Do not enter deep sleep mode until the function returns CYRET_SUCCESS.
 235:Generated_Source\PSoC4/CyLFClk.c **** *
 236:Generated_Source\PSoC4/CyLFClk.c **** * \param desiredDelay Required delay in microseconds.
 237:Generated_Source\PSoC4/CyLFClk.c **** *
 238:Generated_Source\PSoC4/CyLFClk.c **** * \param *compensatedCycles The pointer to the variable in which the required
 239:Generated_Source\PSoC4/CyLFClk.c **** * number of ILO cycles for the given delay will be returned.
 240:Generated_Source\PSoC4/CyLFClk.c **** *
 241:Generated_Source\PSoC4/CyLFClk.c **** * \details
 242:Generated_Source\PSoC4/CyLFClk.c **** * The value returned in *compensatedCycles pointer is not valid until the 
 243:Generated_Source\PSoC4/CyLFClk.c **** * function returns CYRET_SUCCESS.
 244:Generated_Source\PSoC4/CyLFClk.c **** *
 245:Generated_Source\PSoC4/CyLFClk.c **** * The desiredDelay parameter value should be in next range: <br>From 100 to 
 246:Generated_Source\PSoC4/CyLFClk.c **** * 2 000 000 microseconds for PSoC 4000 / PSoC 4000S / PSoC 4100S / PSoC Analog 
 247:Generated_Source\PSoC4/CyLFClk.c **** * Coprocessor devices.<br>From 100 to 4 000 000 000 microseconds for 
 248:Generated_Source\PSoC4/CyLFClk.c **** * PSoC 4100 / PSoC 4200 / PSoC 4100 BLE / PSoC 4200 BLE / PRoC BLE /
 249:Generated_Source\PSoC4/CyLFClk.c **** * PSoC 4200L / PSoC 4100M /PSoC 4200M devices.
 250:Generated_Source\PSoC4/CyLFClk.c **** *
 251:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_SUCCESS - The compensation process is complete and the 
 252:Generated_Source\PSoC4/CyLFClk.c **** * compensated cycles value is returned in the compensatedCycles pointer.
 253:Generated_Source\PSoC4/CyLFClk.c **** *
 254:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_STARTED - Indicates measurement is in progress. It is 
 255:Generated_Source\PSoC4/CyLFClk.c **** * strongly recommended to do not make pauses between API calling. The 
 256:Generated_Source\PSoC4/CyLFClk.c **** * function should be called repeatedly until the API returns CYRET_SUCCESS.
 257:Generated_Source\PSoC4/CyLFClk.c **** *
 258:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_INVALID_STATE - Indicates that measurement not started. 
 259:Generated_Source\PSoC4/CyLFClk.c **** * The user should call CySysClkIloStartMeasurement() API before calling 
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 6


 260:Generated_Source\PSoC4/CyLFClk.c **** * this API.
 261:Generated_Source\PSoC4/CyLFClk.c **** *
 262:Generated_Source\PSoC4/CyLFClk.c **** * \note For a correct WDT or DeepSleep Timers functioning with ILO compensating 
 263:Generated_Source\PSoC4/CyLFClk.c **** * the CySysClkIloCompensate() should be called before WDT or DeepSleep Timers 
 264:Generated_Source\PSoC4/CyLFClk.c **** * enabling.
 265:Generated_Source\PSoC4/CyLFClk.c **** *
 266:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
 267:Generated_Source\PSoC4/CyLFClk.c **** cystatus CySysClkIloCompensate(uint32 desiredDelay , uint32* compensatedCycles)
 268:Generated_Source\PSoC4/CyLFClk.c **** {
 269:Generated_Source\PSoC4/CyLFClk.c ****     uint32 iloCompensatedCycles;
 270:Generated_Source\PSoC4/CyLFClk.c ****     uint32 desiredDelayInCounts;
 271:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 compensateRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_FINISHED;
 272:Generated_Source\PSoC4/CyLFClk.c ****     uint32 checkStatus;
 273:Generated_Source\PSoC4/CyLFClk.c ****     cystatus returnStatus;
 274:Generated_Source\PSoC4/CyLFClk.c **** 
 275:Generated_Source\PSoC4/CyLFClk.c ****     checkStatus = (uint32) (CY_SYS_CLK_DFT_REG & (uint32) CY_SYS_TST_DDFT_CTRL_REG_DEFAULT_MASK);
 276:Generated_Source\PSoC4/CyLFClk.c **** 
 277:Generated_Source\PSoC4/CyLFClk.c ****     /* Check if CySysStartMeasurement was called before */
 278:Generated_Source\PSoC4/CyLFClk.c ****     if((checkStatus == CY_SYS_CLK_SEL_ILO_DFT_SOURCE) && 
 279:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_TST_DDFT_CTRL_REG == CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1) &&
 280:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_CLK_MAX_DELAY_US >= desiredDelay) &&
 281:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_CLK_MIN_DELAY_US <= desiredDelay) &&
 282:Generated_Source\PSoC4/CyLFClk.c ****        (compensatedCycles !=  NULL))
 283:Generated_Source\PSoC4/CyLFClk.c ****     {
 284:Generated_Source\PSoC4/CyLFClk.c ****         if(CY_SYS_CLK_TRIM_OR_COMP_FINISHED != compensateRunningStatus)
 285:Generated_Source\PSoC4/CyLFClk.c ****         {
 286:Generated_Source\PSoC4/CyLFClk.c ****             /* Wait until counter 1 stopped counting and after it calculate compensated cycles */
 287:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_CNT_REG1_REG & CY_SYS_CLK_ILO_CALIBR_COMPLETE_MASK))
 288:Generated_Source\PSoC4/CyLFClk.c ****             {
 289:Generated_Source\PSoC4/CyLFClk.c ****                 if (0u != CY_SYS_CNT_REG2_REG)
 290:Generated_Source\PSoC4/CyLFClk.c ****                 {
 291:Generated_Source\PSoC4/CyLFClk.c ****                     /* Calculate required number of ILO cycles for given delay */
 292:Generated_Source\PSoC4/CyLFClk.c ****                     #if(CY_IP_SRSSV2)
 293:Generated_Source\PSoC4/CyLFClk.c ****                         if (CY_SYS_CLK_DELAY_COUNTS_LIMIT < desiredDelay)
 294:Generated_Source\PSoC4/CyLFClk.c ****                         {
 295:Generated_Source\PSoC4/CyLFClk.c ****                             desiredDelayInCounts = (desiredDelay / CY_SYS_CLK_ILO_PERIOD);
 296:Generated_Source\PSoC4/CyLFClk.c ****                             iloCompensatedCycles = 
 297:Generated_Source\PSoC4/CyLFClk.c ****                             (((CY_SYS_CNT_REG2_REG * cydelayFreqHz) / (cydelayFreqHz >> CY_SYS_CLK_
 298:Generated_Source\PSoC4/CyLFClk.c ****                                 CY_SYS_CLK_ILO_FREQ_2MSB) * (desiredDelayInCounts / CY_SYS_CLK_ILO_
 299:Generated_Source\PSoC4/CyLFClk.c ****                         }
 300:Generated_Source\PSoC4/CyLFClk.c ****                         else
 301:Generated_Source\PSoC4/CyLFClk.c ****                         {
 302:Generated_Source\PSoC4/CyLFClk.c ****                             desiredDelayInCounts = ((desiredDelay * CY_SYS_CLK_COEF_PHUNDRED) + 
 303:Generated_Source\PSoC4/CyLFClk.c ****                                                      CY_SYS_CLK_HALF_OF_CLOCK) / CY_SYS_CLK_ILO_PER
 304:Generated_Source\PSoC4/CyLFClk.c **** 
 305:Generated_Source\PSoC4/CyLFClk.c ****                             iloCompensatedCycles = (((CY_SYS_CNT_REG2_REG * cydelayFreqHz) / 
 306:Generated_Source\PSoC4/CyLFClk.c ****                                                      (cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER))
 307:Generated_Source\PSoC4/CyLFClk.c ****                                                      desiredDelayInCounts) / CY_SYS_CLK_ILO_DESIRED
 308:Generated_Source\PSoC4/CyLFClk.c ****                         }
 309:Generated_Source\PSoC4/CyLFClk.c ****                     #else /* (CY_IP_SRSSLT) */
 310:Generated_Source\PSoC4/CyLFClk.c ****                         desiredDelayInCounts = ((desiredDelay * CY_SYS_CLK_COEF_PHUNDRED) + CY_SYS_
 311:Generated_Source\PSoC4/CyLFClk.c ****                                                                                            CY_SYS_C
 312:Generated_Source\PSoC4/CyLFClk.c ****                         if(CY_SYS_CLK_MAX_LITE_NUMBER < desiredDelayInCounts)
 313:Generated_Source\PSoC4/CyLFClk.c ****                         {
 314:Generated_Source\PSoC4/CyLFClk.c ****                             iloCompensatedCycles = (((CY_SYS_CNT_REG2_REG * cydelayFreqHz) / (cydel
 315:Generated_Source\PSoC4/CyLFClk.c ****                                                    CY_SYS_CLK_SYS_CLK_DEVIDER)) / CY_SYS_CLK_ILO_FR
 316:Generated_Source\PSoC4/CyLFClk.c ****                                                    (desiredDelayInCounts / CY_SYS_CLK_ILO_FREQ_3LSB
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 7


 317:Generated_Source\PSoC4/CyLFClk.c ****                         }
 318:Generated_Source\PSoC4/CyLFClk.c ****                         else
 319:Generated_Source\PSoC4/CyLFClk.c ****                         {
 320:Generated_Source\PSoC4/CyLFClk.c ****                             iloCompensatedCycles = (((CY_SYS_CNT_REG2_REG * cydelayFreqHz) / 
 321:Generated_Source\PSoC4/CyLFClk.c ****                                                      (cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER))
 322:Generated_Source\PSoC4/CyLFClk.c ****                                                      desiredDelayInCounts) / CY_SYS_CLK_ILO_DESIRED
 323:Generated_Source\PSoC4/CyLFClk.c ****                         }
 324:Generated_Source\PSoC4/CyLFClk.c ****                     #endif /* (CY_IP_SRSSV2) */
 325:Generated_Source\PSoC4/CyLFClk.c **** 
 326:Generated_Source\PSoC4/CyLFClk.c ****                     *compensatedCycles = iloCompensatedCycles;
 327:Generated_Source\PSoC4/CyLFClk.c ****                     compensateRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_FINISHED;
 328:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CYRET_SUCCESS;
 329:Generated_Source\PSoC4/CyLFClk.c ****                 }
 330:Generated_Source\PSoC4/CyLFClk.c ****                 else
 331:Generated_Source\PSoC4/CyLFClk.c ****                 {
 332:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus  = CYRET_INVALID_STATE;
 333:Generated_Source\PSoC4/CyLFClk.c ****                 }
 334:Generated_Source\PSoC4/CyLFClk.c ****             }
 335:Generated_Source\PSoC4/CyLFClk.c ****             else
 336:Generated_Source\PSoC4/CyLFClk.c ****             {
 337:Generated_Source\PSoC4/CyLFClk.c ****                 returnStatus = CYRET_STARTED;
 338:Generated_Source\PSoC4/CyLFClk.c ****             }
 339:Generated_Source\PSoC4/CyLFClk.c ****         }
 340:Generated_Source\PSoC4/CyLFClk.c ****         else
 341:Generated_Source\PSoC4/CyLFClk.c ****         {
 342:Generated_Source\PSoC4/CyLFClk.c ****             /* Reload CNTR 1 count value for next measurement cycle*/
 343:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_CNT_REG1_REG = (cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER);
 344:Generated_Source\PSoC4/CyLFClk.c ****             compensateRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_STARTED;
 345:Generated_Source\PSoC4/CyLFClk.c ****             returnStatus = CYRET_STARTED;
 346:Generated_Source\PSoC4/CyLFClk.c ****         }
 347:Generated_Source\PSoC4/CyLFClk.c ****     }
 348:Generated_Source\PSoC4/CyLFClk.c ****     else
 349:Generated_Source\PSoC4/CyLFClk.c ****     {
 350:Generated_Source\PSoC4/CyLFClk.c ****         returnStatus = CYRET_INVALID_STATE;
 351:Generated_Source\PSoC4/CyLFClk.c ****     }
 352:Generated_Source\PSoC4/CyLFClk.c **** 
 353:Generated_Source\PSoC4/CyLFClk.c ****     return (returnStatus);
 354:Generated_Source\PSoC4/CyLFClk.c **** }
 355:Generated_Source\PSoC4/CyLFClk.c **** 
 356:Generated_Source\PSoC4/CyLFClk.c **** 
 357:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2)
 358:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 359:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkIloEnabled
 360:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 361:Generated_Source\PSoC4/CyLFClk.c ****     *
 362:Generated_Source\PSoC4/CyLFClk.c ****     * \internal
 363:Generated_Source\PSoC4/CyLFClk.c ****     * Reports the ILO enable state.
 364:Generated_Source\PSoC4/CyLFClk.c ****     *
 365:Generated_Source\PSoC4/CyLFClk.c ****     * \return
 366:Generated_Source\PSoC4/CyLFClk.c ****     * 1 if ILO is enabled, and 0 if ILO is disabled.
 367:Generated_Source\PSoC4/CyLFClk.c ****     *
 368:Generated_Source\PSoC4/CyLFClk.c ****     * \endinternal
 369:Generated_Source\PSoC4/CyLFClk.c ****     ********************************************************************************/
 370:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkIloEnabled(void)
 371:Generated_Source\PSoC4/CyLFClk.c ****     {
 372:Generated_Source\PSoC4/CyLFClk.c ****         /* Prohibits writing to WDT registers and ILO/WCO registers when not equal to 0 */
 373:Generated_Source\PSoC4/CyLFClk.c ****         return ((0u != (CY_SYS_CLK_ILO_CONFIG_REG & (uint32)(CY_SYS_CLK_ILO_CONFIG_ENABLE))) ?
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 8


 374:Generated_Source\PSoC4/CyLFClk.c ****             (uint32) 1u :
 375:Generated_Source\PSoC4/CyLFClk.c ****             (uint32) 0u);
 376:Generated_Source\PSoC4/CyLFClk.c ****     }
 377:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2) */
 378:Generated_Source\PSoC4/CyLFClk.c **** 
 379:Generated_Source\PSoC4/CyLFClk.c **** 
 380:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2 && (!CY_IP_CPUSS))
 381:Generated_Source\PSoC4/CyLFClk.c **** /********************************************************************************
 382:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloTrim
 383:Generated_Source\PSoC4/CyLFClk.c **** *****************************************************************************//**
 384:Generated_Source\PSoC4/CyLFClk.c **** * \brief
 385:Generated_Source\PSoC4/CyLFClk.c **** * The API trims the ILO frequency to +/- 10% accuracy range using accurate 
 386:Generated_Source\PSoC4/CyLFClk.c **** * SysClk.
 387:Generated_Source\PSoC4/CyLFClk.c **** *
 388:Generated_Source\PSoC4/CyLFClk.c **** * The API can be blocking or non-blocking depending on the value of the mode 
 389:Generated_Source\PSoC4/CyLFClk.c **** * parameter passed. The accuracy of ILO after trimming in parts per thousand 
 390:Generated_Source\PSoC4/CyLFClk.c **** * is returned through the iloAccuracyInPPT pointer. A positive number indicates 
 391:Generated_Source\PSoC4/CyLFClk.c **** * that the ILO is running fast and a negative number indicates that the ILO is 
 392:Generated_Source\PSoC4/CyLFClk.c **** * running slowly. This error is relative to the error in the reference clock 
 393:Generated_Source\PSoC4/CyLFClk.c **** * (SysClk), so the absolute error will be higher and depends on the accuracy 
 394:Generated_Source\PSoC4/CyLFClk.c **** * of the reference.
 395:Generated_Source\PSoC4/CyLFClk.c **** *
 396:Generated_Source\PSoC4/CyLFClk.c **** * The CySysClkIloStartMeasurement() API should be called prior to calling this 
 397:Generated_Source\PSoC4/CyLFClk.c **** * API. Otherwise it will return CYRET_INVALID_STATE as the measurement was not 
 398:Generated_Source\PSoC4/CyLFClk.c **** * started.
 399:Generated_Source\PSoC4/CyLFClk.c **** *
 400:Generated_Source\PSoC4/CyLFClk.c **** * \note SysClk should be sourced by IMO. Otherwise CySysClkIloTrim() and 
 401:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloCompensate() API can give incorrect results.
 402:Generated_Source\PSoC4/CyLFClk.c **** *
 403:Generated_Source\PSoC4/CyLFClk.c **** * \note If System clock frequency is changed in runtime, the CyDelayFreq() 
 404:Generated_Source\PSoC4/CyLFClk.c **** * with the appropriate parameter (Frequency of bus clock in Hertz) should be 
 405:Generated_Source\PSoC4/CyLFClk.c **** * called before next CySysClkIloCompensate() usage.
 406:Generated_Source\PSoC4/CyLFClk.c **** *
 407:Generated_Source\PSoC4/CyLFClk.c **** * \warning Do not enter deep sleep mode until the function returns CYRET_SUCCESS
 408:Generated_Source\PSoC4/CyLFClk.c **** * or CYRET_TIMEOUT.
 409:Generated_Source\PSoC4/CyLFClk.c **** *
 410:Generated_Source\PSoC4/CyLFClk.c **** * Available for all PSoC 4 devices with ILO trim capability. This excludes 
 411:Generated_Source\PSoC4/CyLFClk.c **** * PSoC 4000 / PSoC 4100 / PSoC 4200 / PSoC 4000S / PSoC 4100S / PSoC
 412:Generated_Source\PSoC4/CyLFClk.c **** * Analog Coprocessor devices.
 413:Generated_Source\PSoC4/CyLFClk.c **** *
 414:Generated_Source\PSoC4/CyLFClk.c **** * \param mode
 415:Generated_Source\PSoC4/CyLFClk.c **** *  CY_SYS_CLK_BLOCKING -  The function does not return until the ILO is 
 416:Generated_Source\PSoC4/CyLFClk.c **** * within +/-10% accuracy range or time out has occurred.<br>
 417:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_NON_BLOCKING - The function returns immediately after 
 418:Generated_Source\PSoC4/CyLFClk.c **** * performing a single iteration of the trim process. The function should be 
 419:Generated_Source\PSoC4/CyLFClk.c **** * called repeatedly until the trimming is completed successfully.
 420:Generated_Source\PSoC4/CyLFClk.c **** *
 421:Generated_Source\PSoC4/CyLFClk.c **** * \param *iloAccuracyInPPT Pointer to an integer in which the trimmed ILO 
 422:Generated_Source\PSoC4/CyLFClk.c **** * accuracy will be returned.
 423:Generated_Source\PSoC4/CyLFClk.c **** *
 424:Generated_Source\PSoC4/CyLFClk.c **** * \details The value returned in *iloAccuracyInPPT pointer is not valid 
 425:Generated_Source\PSoC4/CyLFClk.c **** * until the function returns CYRET_SUCCESS. ILO accuracy in PPT is given by:
 426:Generated_Source\PSoC4/CyLFClk.c **** *
 427:Generated_Source\PSoC4/CyLFClk.c **** * IloAccuracyInPPT = ((MeasuredIloFreq - DesiredIloFreq) * 
 428:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_PERTHOUSAND) / DesiredIloFreq);
 429:Generated_Source\PSoC4/CyLFClk.c **** *
 430:Generated_Source\PSoC4/CyLFClk.c **** * DesiredIloFreq  = 32000, CY_SYS_CLK_PERTHOUSAND = 1000;
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 9


 431:Generated_Source\PSoC4/CyLFClk.c **** *
 432:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_SUCCESS - Indicates trimming is complete. This value indicates 
 433:Generated_Source\PSoC4/CyLFClk.c **** * trimming is successful and iloAccuracyInPPT is within +/- 10%.
 434:Generated_Source\PSoC4/CyLFClk.c **** *
 435:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_STARTED - Indicates measurement is in progress. This is applicable 
 436:Generated_Source\PSoC4/CyLFClk.c **** * only for non-blocking mode.
 437:Generated_Source\PSoC4/CyLFClk.c **** *
 438:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_INVALID_STATE - Indicates trimming was unsuccessful. You should 
 439:Generated_Source\PSoC4/CyLFClk.c **** * call CySysClkIloStartMeasurement() before calling this API.
 440:Generated_Source\PSoC4/CyLFClk.c **** *
 441:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_TIMEOUT - Indicates trimming was unsuccessful. This is applicable 
 442:Generated_Source\PSoC4/CyLFClk.c **** * only for blocking mode. Timeout means the trimming was tried 5 times without 
 443:Generated_Source\PSoC4/CyLFClk.c **** * success (i.e. ILO accuracy > +/- 10%). The user can call the API again for 
 444:Generated_Source\PSoC4/CyLFClk.c **** * another try or wait for some time before calling it again (to let the system 
 445:Generated_Source\PSoC4/CyLFClk.c **** * to settle to another operating point change in temperature etc.) and continue 
 446:Generated_Source\PSoC4/CyLFClk.c **** * using the previous trim value till the next call.
 447:Generated_Source\PSoC4/CyLFClk.c **** *
 448:Generated_Source\PSoC4/CyLFClk.c **** **********************************************************************************/
 449:Generated_Source\PSoC4/CyLFClk.c **** cystatus CySysClkIloTrim(uint32 mode, int32* iloAccuracyInPPT)
 450:Generated_Source\PSoC4/CyLFClk.c **** {
 451:Generated_Source\PSoC4/CyLFClk.c ****     uint32 timeOutClocks = CY_SYS_CLK_TIMEOUT;
 452:Generated_Source\PSoC4/CyLFClk.c ****     uint32 waitUntilCntr1Stops;
 453:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 trimRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_FINISHED;
 454:Generated_Source\PSoC4/CyLFClk.c ****     uint32 checkStatus;
 455:Generated_Source\PSoC4/CyLFClk.c ****     cystatus returnStatus;
 456:Generated_Source\PSoC4/CyLFClk.c **** 
 457:Generated_Source\PSoC4/CyLFClk.c ****     checkStatus = (uint32) (CY_SYS_CLK_DFT_REG & (uint32) CY_SYS_TST_DDFT_CTRL_REG_DEFAULT_MASK);
 458:Generated_Source\PSoC4/CyLFClk.c **** 
 459:Generated_Source\PSoC4/CyLFClk.c ****     /* Check if DFT and CTRL registers were configures in CySysStartMeasurement*/
 460:Generated_Source\PSoC4/CyLFClk.c ****     if((checkStatus == CY_SYS_CLK_SEL_ILO_DFT_SOURCE) &&
 461:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_TST_DDFT_CTRL_REG == CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1) &&
 462:Generated_Source\PSoC4/CyLFClk.c ****        (iloAccuracyInPPT != NULL))
 463:Generated_Source\PSoC4/CyLFClk.c ****     {
 464:Generated_Source\PSoC4/CyLFClk.c ****         if(CY_SYS_CLK_BLOCKING == mode)
 465:Generated_Source\PSoC4/CyLFClk.c ****         {
 466:Generated_Source\PSoC4/CyLFClk.c ****             waitUntilCntr1Stops = cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER;
 467:Generated_Source\PSoC4/CyLFClk.c ****             do
 468:Generated_Source\PSoC4/CyLFClk.c ****             {
 469:Generated_Source\PSoC4/CyLFClk.c ****                 /* Reload CNTR 1 count value for measuring cycle*/
 470:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CNT_REG1_REG = cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER; 
 471:Generated_Source\PSoC4/CyLFClk.c **** 
 472:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait until counter CNTR 1 will finish down-counting */
 473:Generated_Source\PSoC4/CyLFClk.c ****                 while (0u == (CY_SYS_CNT_REG1_REG & CY_SYS_CLK_ILO_CALIBR_COMPLETE_MASK))
 474:Generated_Source\PSoC4/CyLFClk.c ****                 {
 475:Generated_Source\PSoC4/CyLFClk.c ****                     waitUntilCntr1Stops--;
 476:Generated_Source\PSoC4/CyLFClk.c ****                     if (0u == waitUntilCntr1Stops)
 477:Generated_Source\PSoC4/CyLFClk.c ****                     {
 478:Generated_Source\PSoC4/CyLFClk.c ****                         break;
 479:Generated_Source\PSoC4/CyLFClk.c ****                     }
 480:Generated_Source\PSoC4/CyLFClk.c ****                 }
 481:Generated_Source\PSoC4/CyLFClk.c ****                 trimRunningStatus = CySysClkIloUpdateTrimReg(iloAccuracyInPPT);
 482:Generated_Source\PSoC4/CyLFClk.c ****                 timeOutClocks--;
 483:Generated_Source\PSoC4/CyLFClk.c **** 
 484:Generated_Source\PSoC4/CyLFClk.c ****             /* Untill ILO accuracy will be in range less than +/- 10% or timeout occurs*/
 485:Generated_Source\PSoC4/CyLFClk.c ****             } while((CYRET_SUCCESS != trimRunningStatus) && 
 486:Generated_Source\PSoC4/CyLFClk.c ****               (CYRET_INVALID_STATE != trimRunningStatus) && 
 487:Generated_Source\PSoC4/CyLFClk.c ****                                (0u != timeOutClocks));
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 10


 488:Generated_Source\PSoC4/CyLFClk.c **** 
 489:Generated_Source\PSoC4/CyLFClk.c ****             if (CYRET_SUCCESS == trimRunningStatus)
 490:Generated_Source\PSoC4/CyLFClk.c ****             {
 491:Generated_Source\PSoC4/CyLFClk.c ****                 returnStatus = CYRET_SUCCESS;
 492:Generated_Source\PSoC4/CyLFClk.c ****             }
 493:Generated_Source\PSoC4/CyLFClk.c ****             else
 494:Generated_Source\PSoC4/CyLFClk.c ****             {
 495:Generated_Source\PSoC4/CyLFClk.c ****                 if(0u == timeOutClocks)
 496:Generated_Source\PSoC4/CyLFClk.c ****                 {
 497:Generated_Source\PSoC4/CyLFClk.c ****                     trimRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_FINISHED;
 498:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CYRET_TIMEOUT;
 499:Generated_Source\PSoC4/CyLFClk.c ****                 }
 500:Generated_Source\PSoC4/CyLFClk.c ****                 else
 501:Generated_Source\PSoC4/CyLFClk.c ****                 {
 502:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CYRET_INVALID_STATE;
 503:Generated_Source\PSoC4/CyLFClk.c ****                 }
 504:Generated_Source\PSoC4/CyLFClk.c ****             }
 505:Generated_Source\PSoC4/CyLFClk.c ****         }
 506:Generated_Source\PSoC4/CyLFClk.c ****         /* Non - blocking mode */
 507:Generated_Source\PSoC4/CyLFClk.c ****         else
 508:Generated_Source\PSoC4/CyLFClk.c ****         {
 509:Generated_Source\PSoC4/CyLFClk.c ****             if (CY_SYS_CLK_TRIM_OR_COMP_FINISHED != trimRunningStatus)
 510:Generated_Source\PSoC4/CyLFClk.c ****             {
 511:Generated_Source\PSoC4/CyLFClk.c ****                 /* Checking if the counter CNTR 1 finished down-counting */
 512:Generated_Source\PSoC4/CyLFClk.c ****                 if(0u != (CY_SYS_CNT_REG1_REG & CY_SYS_CLK_ILO_CALIBR_COMPLETE_MASK))
 513:Generated_Source\PSoC4/CyLFClk.c ****                 {
 514:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CySysClkIloUpdateTrimReg(iloAccuracyInPPT);
 515:Generated_Source\PSoC4/CyLFClk.c ****                     trimRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_FINISHED;
 516:Generated_Source\PSoC4/CyLFClk.c ****                 }
 517:Generated_Source\PSoC4/CyLFClk.c ****                 else
 518:Generated_Source\PSoC4/CyLFClk.c ****                 {
 519:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CYRET_STARTED;
 520:Generated_Source\PSoC4/CyLFClk.c ****                 }
 521:Generated_Source\PSoC4/CyLFClk.c ****             }
 522:Generated_Source\PSoC4/CyLFClk.c ****             else
 523:Generated_Source\PSoC4/CyLFClk.c ****             {
 524:Generated_Source\PSoC4/CyLFClk.c ****                 /* Reload CNTR 1 count value for next measuring */
 525:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CNT_REG1_REG = cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER;
 526:Generated_Source\PSoC4/CyLFClk.c ****                 trimRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_STARTED;
 527:Generated_Source\PSoC4/CyLFClk.c ****                 returnStatus = CYRET_STARTED;
 528:Generated_Source\PSoC4/CyLFClk.c ****             }
 529:Generated_Source\PSoC4/CyLFClk.c ****         }
 530:Generated_Source\PSoC4/CyLFClk.c ****     }
 531:Generated_Source\PSoC4/CyLFClk.c ****     else
 532:Generated_Source\PSoC4/CyLFClk.c ****     {
 533:Generated_Source\PSoC4/CyLFClk.c ****         returnStatus = CYRET_INVALID_STATE;
 534:Generated_Source\PSoC4/CyLFClk.c ****     }
 535:Generated_Source\PSoC4/CyLFClk.c **** 
 536:Generated_Source\PSoC4/CyLFClk.c ****     return (returnStatus);
 537:Generated_Source\PSoC4/CyLFClk.c **** }
 538:Generated_Source\PSoC4/CyLFClk.c **** 
 539:Generated_Source\PSoC4/CyLFClk.c **** 
 540:Generated_Source\PSoC4/CyLFClk.c **** /********************************************************************************
 541:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloUpdateTrimReg
 542:Generated_Source\PSoC4/CyLFClk.c **** *********************************************************************************
 543:Generated_Source\PSoC4/CyLFClk.c **** *
 544:Generated_Source\PSoC4/CyLFClk.c **** * \internal
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 11


 545:Generated_Source\PSoC4/CyLFClk.c **** * Function calculates ILO accuracy and check is error range is higher than 
 546:Generated_Source\PSoC4/CyLFClk.c **** * +/- 10%. If Measured frequency is higher than +/- 10% function updates 
 547:Generated_Source\PSoC4/CyLFClk.c **** * ILO Trim register.
 548:Generated_Source\PSoC4/CyLFClk.c **** *
 549:Generated_Source\PSoC4/CyLFClk.c **** * \param
 550:Generated_Source\PSoC4/CyLFClk.c **** * iloAccuracyInPPT Pointer to an integer in which the trimmed ILO 
 551:Generated_Source\PSoC4/CyLFClk.c **** * accuracy will be returned. The value returned in this pointer is not valid 
 552:Generated_Source\PSoC4/CyLFClk.c **** * until the function returns CYRET_SUCCESS. If ILO frequency error is lower 
 553:Generated_Source\PSoC4/CyLFClk.c **** * than +/- 10% then the value returned in this pointer will be updated.
 554:Generated_Source\PSoC4/CyLFClk.c **** *
 555:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_SUCCESS - Indicates that ILO frequency error is lower than 
 556:Generated_Source\PSoC4/CyLFClk.c **** * +/- 10% and no actions are required.
 557:Generated_Source\PSoC4/CyLFClk.c **** *
 558:Generated_Source\PSoC4/CyLFClk.c **** * \return  CYRET_STARTED - Indicates that ILO frequency error is higher than 
 559:Generated_Source\PSoC4/CyLFClk.c **** * +/- 10% and ILO Trim register was updated.
 560:Generated_Source\PSoC4/CyLFClk.c **** *
 561:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_INVALID_STATE - Indicates trimming was unsuccessful.
 562:Generated_Source\PSoC4/CyLFClk.c **** *
 563:Generated_Source\PSoC4/CyLFClk.c **** * Post #1 - To obtain 10% ILO accuracy the calculated accuracy should be equal 
 564:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_ERROR_RANGE = 5.6%. Error value should take to account IMO error of 
 565:Generated_Source\PSoC4/CyLFClk.c **** * +/-2% (+/-0.64kHz), trim step of 2.36kHz (+/-1.18kHz) and error while ILO 
 566:Generated_Source\PSoC4/CyLFClk.c **** * frequency measuring.
 567:Generated_Source\PSoC4/CyLFClk.c **** *
 568:Generated_Source\PSoC4/CyLFClk.c **** * \endinternal
 569:Generated_Source\PSoC4/CyLFClk.c **** *
 570:Generated_Source\PSoC4/CyLFClk.c **** **********************************************************************************/
 571:Generated_Source\PSoC4/CyLFClk.c **** cystatus CySysClkIloUpdateTrimReg(int32* iloAccuracyInPPT)
 572:Generated_Source\PSoC4/CyLFClk.c **** {
 573:Generated_Source\PSoC4/CyLFClk.c ****     uint32 measuredIloFreq;
 574:Generated_Source\PSoC4/CyLFClk.c ****     uint32 currentIloTrimValue;
 575:Generated_Source\PSoC4/CyLFClk.c ****     int32 iloAccuracyValue;
 576:Generated_Source\PSoC4/CyLFClk.c ****     int32 trimStep;
 577:Generated_Source\PSoC4/CyLFClk.c ****     cystatus errorRangeStatus;
 578:Generated_Source\PSoC4/CyLFClk.c **** 
 579:Generated_Source\PSoC4/CyLFClk.c ****     if(0u != CY_SYS_CNT_REG2_REG)
 580:Generated_Source\PSoC4/CyLFClk.c ****     {
 581:Generated_Source\PSoC4/CyLFClk.c ****         measuredIloFreq = (CY_SYS_CNT_REG2_REG * cydelayFreqHz) / (cydelayFreqHz >> CY_SYS_CLK_SYS_
 582:Generated_Source\PSoC4/CyLFClk.c **** 
 583:Generated_Source\PSoC4/CyLFClk.c ****         /* Calculate value of error in PPT according to formula - 
 584:Generated_Source\PSoC4/CyLFClk.c ****         *       ((measuredIlofrequency - iloDesired frequency) * 1000 / iloDesired frequency) */
 585:Generated_Source\PSoC4/CyLFClk.c ****         iloAccuracyValue = (((int32) measuredIloFreq - (int32) CY_SYS_CLK_ILO_DESIRED_FREQ_HZ) * \
 586:Generated_Source\PSoC4/CyLFClk.c ****                             ((int32) CY_SYS_CLK_PERTHOUSAND)) / ((int32) CY_SYS_CLK_ILO_DESIRED_FRE
 587:Generated_Source\PSoC4/CyLFClk.c **** 
 588:Generated_Source\PSoC4/CyLFClk.c ****         /* Check if ILO accuracy is more than +/- CY_SYS_CLK_ERROR_RANGE. See post #1 of API descri
 589:Generated_Source\PSoC4/CyLFClk.c ****         if(CY_SYS_CLK_ERROR_RANGE < (uint32) (CY_SYS_CLK_ABS_MACRO(iloAccuracyValue)))
 590:Generated_Source\PSoC4/CyLFClk.c ****         {
 591:Generated_Source\PSoC4/CyLFClk.c ****             if (0 < iloAccuracyValue)
 592:Generated_Source\PSoC4/CyLFClk.c ****             {
 593:Generated_Source\PSoC4/CyLFClk.c ****                 trimStep = (int32) (((iloAccuracyValue * (int32) CY_SYS_CLK_ERROR_COEF) + 
 594:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CLK_HALF_OF_STEP) / CY_SYS_CLK_ERROR_STEP);
 595:Generated_Source\PSoC4/CyLFClk.c ****             }
 596:Generated_Source\PSoC4/CyLFClk.c ****             else
 597:Generated_Source\PSoC4/CyLFClk.c ****             {
 598:Generated_Source\PSoC4/CyLFClk.c ****                 trimStep = (int32) (((iloAccuracyValue * (int32) CY_SYS_CLK_ERROR_COEF) - 
 599:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CLK_HALF_OF_STEP) / CY_SYS_CLK_ERROR_STEP);
 600:Generated_Source\PSoC4/CyLFClk.c ****             }
 601:Generated_Source\PSoC4/CyLFClk.c ****             currentIloTrimValue = (CY_SYS_CLK_ILO_TRIM_REG & CY_SYS_CLK_ILO_TRIM_MASK);
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 12


 602:Generated_Source\PSoC4/CyLFClk.c ****             trimStep = (int32) currentIloTrimValue - trimStep;
 603:Generated_Source\PSoC4/CyLFClk.c **** 
 604:Generated_Source\PSoC4/CyLFClk.c ****             if(trimStep > CY_SYS_CLK_FOURBITS_MAX)
 605:Generated_Source\PSoC4/CyLFClk.c ****             {
 606:Generated_Source\PSoC4/CyLFClk.c ****                 trimStep = CY_SYS_CLK_FOURBITS_MAX;
 607:Generated_Source\PSoC4/CyLFClk.c ****             }
 608:Generated_Source\PSoC4/CyLFClk.c ****             if(trimStep < 0)
 609:Generated_Source\PSoC4/CyLFClk.c ****             {
 610:Generated_Source\PSoC4/CyLFClk.c ****                 trimStep = 0;
 611:Generated_Source\PSoC4/CyLFClk.c ****             }
 612:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_CLK_ILO_TRIM_REG = (CY_SYS_CLK_ILO_TRIM_REG & (uint32)(~CY_SYS_CLK_ILO_TRIM_MASK
 613:Generated_Source\PSoC4/CyLFClk.c ****                                                                  ((uint32) trimStep);
 614:Generated_Source\PSoC4/CyLFClk.c ****             errorRangeStatus = CYRET_STARTED;
 615:Generated_Source\PSoC4/CyLFClk.c ****         } /* Else return success because error is in +/- 10% range*/
 616:Generated_Source\PSoC4/CyLFClk.c ****         else
 617:Generated_Source\PSoC4/CyLFClk.c ****         {
 618:Generated_Source\PSoC4/CyLFClk.c ****             /* Write trimmed ILO accuracy through pointer. */
 619:Generated_Source\PSoC4/CyLFClk.c ****             *iloAccuracyInPPT = iloAccuracyValue;
 620:Generated_Source\PSoC4/CyLFClk.c ****             errorRangeStatus = CYRET_SUCCESS;
 621:Generated_Source\PSoC4/CyLFClk.c ****         }
 622:Generated_Source\PSoC4/CyLFClk.c ****     }
 623:Generated_Source\PSoC4/CyLFClk.c ****     else
 624:Generated_Source\PSoC4/CyLFClk.c ****     {
 625:Generated_Source\PSoC4/CyLFClk.c ****         errorRangeStatus = CYRET_INVALID_STATE;
 626:Generated_Source\PSoC4/CyLFClk.c ****     }
 627:Generated_Source\PSoC4/CyLFClk.c **** return (errorRangeStatus);
 628:Generated_Source\PSoC4/CyLFClk.c **** }
 629:Generated_Source\PSoC4/CyLFClk.c **** 
 630:Generated_Source\PSoC4/CyLFClk.c **** 
 631:Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
 632:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloRestoreFactoryTrim
 633:Generated_Source\PSoC4/CyLFClk.c **** ****************************************************************************//**
 634:Generated_Source\PSoC4/CyLFClk.c **** * \brief
 635:Generated_Source\PSoC4/CyLFClk.c **** * Restores the ILO Trim Register to factory value.
 636:Generated_Source\PSoC4/CyLFClk.c **** *
 637:Generated_Source\PSoC4/CyLFClk.c **** * The CySysClkIloStartMeasurement() API should be called prior to 
 638:Generated_Source\PSoC4/CyLFClk.c **** * calling this API. Otherwise CYRET_UNKNOWN will be returned.
 639:Generated_Source\PSoC4/CyLFClk.c **** *
 640:Generated_Source\PSoC4/CyLFClk.c **** * Available for all PSoC 4 devices except for PSoC 4000 / PSoC 4100 / PSoC 4200 
 641:Generated_Source\PSoC4/CyLFClk.c **** * / PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices.
 642:Generated_Source\PSoC4/CyLFClk.c **** *
 643:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_SUCCESS - Operation was successful. 
 644:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_UNKNOWN - CySysClkIloStartMeasurement() was not called 
 645:Generated_Source\PSoC4/CyLFClk.c **** * before this API. Hence the trim value cannot be updated.
 646:Generated_Source\PSoC4/CyLFClk.c **** *
 647:Generated_Source\PSoC4/CyLFClk.c **** ******************************************************************************/
 648:Generated_Source\PSoC4/CyLFClk.c **** cystatus CySysClkIloRestoreFactoryTrim(void)
 649:Generated_Source\PSoC4/CyLFClk.c **** {
 650:Generated_Source\PSoC4/CyLFClk.c ****     cystatus returnStatus = CYRET_SUCCESS;
 651:Generated_Source\PSoC4/CyLFClk.c **** 
 652:Generated_Source\PSoC4/CyLFClk.c ****     /* Check was defaultIloTrimRegValue modified in CySysClkIloStartMeasurement */
 653:Generated_Source\PSoC4/CyLFClk.c ****     if(CY_SYS_CLK_ILO_TRIM_DEFAULT_VALUE != defaultIloTrimRegValue)
 654:Generated_Source\PSoC4/CyLFClk.c ****         {
 655:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_CLK_ILO_TRIM_REG = ((CY_SYS_CLK_ILO_TRIM_REG & (uint32)(~CY_SYS_CLK_ILO_TRIM_MAS
 656:Generated_Source\PSoC4/CyLFClk.c ****                                        (defaultIloTrimRegValue & CY_SYS_CLK_ILO_TRIM_MASK));
 657:Generated_Source\PSoC4/CyLFClk.c ****         }
 658:Generated_Source\PSoC4/CyLFClk.c ****         else
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 13


 659:Generated_Source\PSoC4/CyLFClk.c ****         {
 660:Generated_Source\PSoC4/CyLFClk.c ****             returnStatus = CYRET_UNKNOWN;
 661:Generated_Source\PSoC4/CyLFClk.c ****         }
 662:Generated_Source\PSoC4/CyLFClk.c **** 
 663:Generated_Source\PSoC4/CyLFClk.c ****         return (returnStatus);
 664:Generated_Source\PSoC4/CyLFClk.c **** }
 665:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2 && (!CY_IP_CPUSS)) */
 666:Generated_Source\PSoC4/CyLFClk.c **** 
 667:Generated_Source\PSoC4/CyLFClk.c **** 
 668:Generated_Source\PSoC4/CyLFClk.c **** #if (CY_IP_WCO && CY_IP_SRSSV2)
 669:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 670:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkGetLfclkSource
 671:Generated_Source\PSoC4/CyLFClk.c ****     ********************************************************************************
 672:Generated_Source\PSoC4/CyLFClk.c ****     *
 673:Generated_Source\PSoC4/CyLFClk.c ****     * \internal
 674:Generated_Source\PSoC4/CyLFClk.c ****     *  Gets the clock source for the LFCLK clock.
 675:Generated_Source\PSoC4/CyLFClk.c ****     *  The function is applicable only for PSoC 4100 BLE / PSoC 4200 BLE / 
 676:Generated_Source\PSoC4/CyLFClk.c ****     *  PSoC 4100M / PSoC 4200M / PSoC 4200L.
 677:Generated_Source\PSoC4/CyLFClk.c ****     *
 678:Generated_Source\PSoC4/CyLFClk.c ****     * \return The LFCLK source:
 679:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_CLK_LFCLK_SRC_ILO Internal Low Frequency (32 kHz) Oscillator (ILO)
 680:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_CLK_LFCLK_SRC_WCO Low Frequency Watch Crystal Oscillator (WCO)
 681:Generated_Source\PSoC4/CyLFClk.c ****     *
 682:Generated_Source\PSoC4/CyLFClk.c ****     * \endinternal
 683:Generated_Source\PSoC4/CyLFClk.c ****     *
 684:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 685:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkGetLfclkSource(void)
 686:Generated_Source\PSoC4/CyLFClk.c ****     {
 687:Generated_Source\PSoC4/CyLFClk.c ****         uint32 lfclkSource;
 688:Generated_Source\PSoC4/CyLFClk.c ****         lfclkSource = CY_SYS_WDT_CONFIG_REG & CY_SYS_CLK_LFCLK_SEL_MASK;
 689:Generated_Source\PSoC4/CyLFClk.c ****         return (lfclkSource);
 690:Generated_Source\PSoC4/CyLFClk.c ****     }
 691:Generated_Source\PSoC4/CyLFClk.c **** 
 692:Generated_Source\PSoC4/CyLFClk.c **** 
 693:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 694:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkSetLfclkSource
 695:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 696:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 697:Generated_Source\PSoC4/CyLFClk.c ****     *  Sets the clock source for the LFCLK clock.
 698:Generated_Source\PSoC4/CyLFClk.c ****     *
 699:Generated_Source\PSoC4/CyLFClk.c ****     * The switch between LFCLK sources must be done between the positive edges of
 700:Generated_Source\PSoC4/CyLFClk.c ****     * LFCLK, because the glitch risk is around the LFCLK positive edge. To ensure
 701:Generated_Source\PSoC4/CyLFClk.c ****     * that the switch can be done safely, the WDT counter value is read until it
 702:Generated_Source\PSoC4/CyLFClk.c ****     * changes.
 703:Generated_Source\PSoC4/CyLFClk.c ****     *
 704:Generated_Source\PSoC4/CyLFClk.c ****     * That means that the positive edge just finished and the switch is performed.
 705:Generated_Source\PSoC4/CyLFClk.c ****     * The enabled WDT counter is used for that purpose. If no counters are enabled,
 706:Generated_Source\PSoC4/CyLFClk.c ****     * counter 0 is enabled. And after the LFCLK source is switched, counter 0
 707:Generated_Source\PSoC4/CyLFClk.c ****     * configuration is restored.
 708:Generated_Source\PSoC4/CyLFClk.c ****     *
 709:Generated_Source\PSoC4/CyLFClk.c ****     *  The function is applicable only for devices with more than one source for 
 710:Generated_Source\PSoC4/CyLFClk.c ****     * LFCLK - PSoC 4100 BLE / PSoC 4200 BLE / PRoC BLE / PSoC 4100M / PSoC 4200M / 
 711:Generated_Source\PSoC4/CyLFClk.c ****     * PSoC 4200L.
 712:Generated_Source\PSoC4/CyLFClk.c ****     *
 713:Generated_Source\PSoC4/CyLFClk.c ****     * \note For PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices LFCLK can
 714:Generated_Source\PSoC4/CyLFClk.c ****     * only be sourced from ILO even though WCO is available.
 715:Generated_Source\PSoC4/CyLFClk.c ****     *
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 14


 716:Generated_Source\PSoC4/CyLFClk.c ****     * \param
 717:Generated_Source\PSoC4/CyLFClk.c ****     * source
 718:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_CLK_LFCLK_SRC_ILO - Internal Low Frequency (32 kHz) 
 719:Generated_Source\PSoC4/CyLFClk.c ****     * Oscillator (ILO).<br>
 720:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_CLK_LFCLK_SRC_WCO - Low Frequency Watch Crystal Oscillator (WCO).
 721:Generated_Source\PSoC4/CyLFClk.c ****     *
 722:Generated_Source\PSoC4/CyLFClk.c ****     * \details
 723:Generated_Source\PSoC4/CyLFClk.c ****     * This function has no effect if WDT is locked (CySysWdtLock() is called). 
 724:Generated_Source\PSoC4/CyLFClk.c ****     * Call CySysWdtUnlock() to unlock WDT.
 725:Generated_Source\PSoC4/CyLFClk.c ****     *
 726:Generated_Source\PSoC4/CyLFClk.c ****     * Both the current source and the new source must be running and stable before
 727:Generated_Source\PSoC4/CyLFClk.c ****     * calling this function.
 728:Generated_Source\PSoC4/CyLFClk.c ****     *
 729:Generated_Source\PSoC4/CyLFClk.c ****     * Changing the LFCLK clock source may change the LFCLK clock frequency and
 730:Generated_Source\PSoC4/CyLFClk.c ****     * affect the functionality that uses this clock. For example, watchdog timer
 731:Generated_Source\PSoC4/CyLFClk.c ****     * "uses this clock" or "this clock uses" (WDT) is clocked by LFCLK.
 732:Generated_Source\PSoC4/CyLFClk.c ****     *
 733:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 734:Generated_Source\PSoC4/CyLFClk.c ****     void CySysClkSetLfclkSource(uint32 source)
 735:Generated_Source\PSoC4/CyLFClk.c ****     {
 736:Generated_Source\PSoC4/CyLFClk.c ****         uint8  interruptState;
 737:Generated_Source\PSoC4/CyLFClk.c **** 
 738:Generated_Source\PSoC4/CyLFClk.c ****         if (CySysClkGetLfclkSource() != source)
 739:Generated_Source\PSoC4/CyLFClk.c ****         {
 740:Generated_Source\PSoC4/CyLFClk.c ****             interruptState = CyEnterCriticalSection();
 741:Generated_Source\PSoC4/CyLFClk.c ****             CySysClkLfclkPosedgeCatch();
 742:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONFIG_REG = (CY_SYS_WDT_CONFIG_REG & (uint32)(~CY_SYS_CLK_LFCLK_SEL_MASK)) 
 743:Generated_Source\PSoC4/CyLFClk.c ****                                     (source & CY_SYS_CLK_LFCLK_SEL_MASK);
 744:Generated_Source\PSoC4/CyLFClk.c ****             CySysClkLfclkPosedgeRestore();
 745:Generated_Source\PSoC4/CyLFClk.c ****             CyExitCriticalSection(interruptState);
 746:Generated_Source\PSoC4/CyLFClk.c ****         }
 747:Generated_Source\PSoC4/CyLFClk.c ****     }
 748:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_WCO && CY_IP_SRSSV2) */
 749:Generated_Source\PSoC4/CyLFClk.c **** 
 750:Generated_Source\PSoC4/CyLFClk.c **** 
 751:Generated_Source\PSoC4/CyLFClk.c **** #if (CY_IP_WCO)
 752:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 753:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkWcoStart
 754:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 755:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 756:Generated_Source\PSoC4/CyLFClk.c ****     *  Enables Watch Crystal Oscillator (WCO).
 757:Generated_Source\PSoC4/CyLFClk.c ****     * 
 758:Generated_Source\PSoC4/CyLFClk.c ****     * This API enables WCO which is used as a source for LFCLK. Similar to ILO, 
 759:Generated_Source\PSoC4/CyLFClk.c ****     * WCO is also available in all modes except Hibernate and Stop modes.
 760:Generated_Source\PSoC4/CyLFClk.c ****     * \note In PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices
 761:Generated_Source\PSoC4/CyLFClk.c ****     * WCO cannot be a source for the LFCLK. 
 762:Generated_Source\PSoC4/CyLFClk.c ****     *
 763:Generated_Source\PSoC4/CyLFClk.c ****     *  WCO is always enabled in High Power Mode (HPM). Refer to the device
 764:Generated_Source\PSoC4/CyLFClk.c ****     *  datasheet for the  WCO startup time. Once WCO becomes stable it can be
 765:Generated_Source\PSoC4/CyLFClk.c ****     *  switched to Low Power Mode (LPM). Note that oscillator can be unstable
 766:Generated_Source\PSoC4/CyLFClk.c ****     *  during a switch and hence its output should not be used at that moment.
 767:Generated_Source\PSoC4/CyLFClk.c ****     *
 768:Generated_Source\PSoC4/CyLFClk.c ****     *  The CySysClkWcoSetPowerMode() function configures the WCO power mode.
 769:Generated_Source\PSoC4/CyLFClk.c ****     *
 770:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 771:Generated_Source\PSoC4/CyLFClk.c ****     void CySysClkWcoStart(void)
 772:Generated_Source\PSoC4/CyLFClk.c ****     {
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 15


 773:Generated_Source\PSoC4/CyLFClk.c ****         CySysClkWcoSetHighPowerMode();
 774:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE;
 775:Generated_Source\PSoC4/CyLFClk.c ****     }
 776:Generated_Source\PSoC4/CyLFClk.c **** 
 777:Generated_Source\PSoC4/CyLFClk.c **** 
 778:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 779:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkWcoStop
 780:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 781:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 782:Generated_Source\PSoC4/CyLFClk.c ****     * Disables the 32 KHz Crystal Oscillator.
 783:Generated_Source\PSoC4/CyLFClk.c ****     *
 784:Generated_Source\PSoC4/CyLFClk.c ****     * API switch of WCO.
 785:Generated_Source\PSoC4/CyLFClk.c ****     * \note PSoC 4100S / PSoC Analog Coprocessor: WCO is required for DeepSleep 
 786:Generated_Source\PSoC4/CyLFClk.c ****     * Timer's operation.
 787:Generated_Source\PSoC4/CyLFClk.c ****     *
 788:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 789:Generated_Source\PSoC4/CyLFClk.c ****     void  CySysClkWcoStop(void)
 790:Generated_Source\PSoC4/CyLFClk.c ****     {
 791:Generated_Source\PSoC4/CyLFClk.c ****         #if (CY_IP_SRSSV2)
 792:Generated_Source\PSoC4/CyLFClk.c ****             uint8  interruptState;
 793:Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (CY_IP_SRSSV2) */
 794:Generated_Source\PSoC4/CyLFClk.c **** 
 795:Generated_Source\PSoC4/CyLFClk.c ****         if (0u != CySysClkWcoEnabled())
 796:Generated_Source\PSoC4/CyLFClk.c ****         {
 797:Generated_Source\PSoC4/CyLFClk.c ****             #if (CY_IP_SRSSV2)
 798:Generated_Source\PSoC4/CyLFClk.c ****                 if (CY_SYS_CLK_LFCLK_SRC_WCO == CySysClkGetLfclkSource())
 799:Generated_Source\PSoC4/CyLFClk.c ****                 {
 800:Generated_Source\PSoC4/CyLFClk.c ****                     interruptState = CyEnterCriticalSection();
 801:Generated_Source\PSoC4/CyLFClk.c ****                     CySysClkLfclkPosedgeCatch();
 802:Generated_Source\PSoC4/CyLFClk.c ****                     CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE;
 803:Generated_Source\PSoC4/CyLFClk.c ****                     CySysClkLfclkPosedgeRestore();
 804:Generated_Source\PSoC4/CyLFClk.c ****                     CyExitCriticalSection(interruptState);
 805:Generated_Source\PSoC4/CyLFClk.c ****                 }
 806:Generated_Source\PSoC4/CyLFClk.c ****                 else /* Safe to disable - shortened pulse does not impact peripheral */
 807:Generated_Source\PSoC4/CyLFClk.c ****             #endif /* (CY_IP_SRSSV2) */
 808:Generated_Source\PSoC4/CyLFClk.c ****             {
 809:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE;
 810:Generated_Source\PSoC4/CyLFClk.c ****             }
 811:Generated_Source\PSoC4/CyLFClk.c ****         } /* Otherwise do nothing. WCO configuration cannot be changed. */
 812:Generated_Source\PSoC4/CyLFClk.c ****     }
 813:Generated_Source\PSoC4/CyLFClk.c **** 
 814:Generated_Source\PSoC4/CyLFClk.c **** 
 815:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 816:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkWcoEnabled
 817:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 818:Generated_Source\PSoC4/CyLFClk.c ****     * \internal Reports the WCO enable state.
 819:Generated_Source\PSoC4/CyLFClk.c ****     *
 820:Generated_Source\PSoC4/CyLFClk.c ****     * \return 1 if WCO is enabled
 821:Generated_Source\PSoC4/CyLFClk.c ****     * \return 0 if WCO is disabled.
 822:Generated_Source\PSoC4/CyLFClk.c ****     * \endinternal
 823:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 824:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysClkWcoEnabled(void)
 825:Generated_Source\PSoC4/CyLFClk.c ****     {
 826:Generated_Source\PSoC4/CyLFClk.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & (uint32)(CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE))) ?
 827:Generated_Source\PSoC4/CyLFClk.c ****                 (uint32) 1u :
 828:Generated_Source\PSoC4/CyLFClk.c ****                 (uint32) 0u);
 829:Generated_Source\PSoC4/CyLFClk.c ****     }
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 16


 830:Generated_Source\PSoC4/CyLFClk.c **** 
 831:Generated_Source\PSoC4/CyLFClk.c **** 
 832:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 833:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkWcoSetPowerMode
 834:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 835:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 836:Generated_Source\PSoC4/CyLFClk.c ****     * Sets the power mode for the 32 KHz WCO.
 837:Generated_Source\PSoC4/CyLFClk.c ****     *
 838:Generated_Source\PSoC4/CyLFClk.c ****     * By default (if this function is not called), the WCO is in High power mode 
 839:Generated_Source\PSoC4/CyLFClk.c ****     * during Active and device's low power modes
 840:Generated_Source\PSoC4/CyLFClk.c ****     *
 841:Generated_Source\PSoC4/CyLFClk.c ****     * \param mode
 842:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_CLK_WCO_HPM - The High Power mode.<br>
 843:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_CLK_WCO_LPM - The Low Power mode.
 844:Generated_Source\PSoC4/CyLFClk.c ****     *
 845:Generated_Source\PSoC4/CyLFClk.c ****     * \return A previous power mode. The same as the parameters.
 846:Generated_Source\PSoC4/CyLFClk.c ****     *
 847:Generated_Source\PSoC4/CyLFClk.c ****     * \note
 848:Generated_Source\PSoC4/CyLFClk.c ****     * The WCO Low Power mode is applicable for PSoC 4100 BLE / PSoC 4200 BLE devices.
 849:Generated_Source\PSoC4/CyLFClk.c ****     *
 850:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 851:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysClkWcoSetPowerMode(uint32 mode)
 852:Generated_Source\PSoC4/CyLFClk.c ****     {
 853:Generated_Source\PSoC4/CyLFClk.c ****         uint32 powerModeStatus;
 854:Generated_Source\PSoC4/CyLFClk.c **** 
 855:Generated_Source\PSoC4/CyLFClk.c ****         powerModeStatus = CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_LPM_EN;
 856:Generated_Source\PSoC4/CyLFClk.c **** 
 857:Generated_Source\PSoC4/CyLFClk.c ****         switch(mode)
 858:Generated_Source\PSoC4/CyLFClk.c ****         {
 859:Generated_Source\PSoC4/CyLFClk.c ****         case CY_SYS_CLK_WCO_HPM:
 860:Generated_Source\PSoC4/CyLFClk.c ****                 CySysClkWcoSetHighPowerMode();
 861:Generated_Source\PSoC4/CyLFClk.c ****             break;
 862:Generated_Source\PSoC4/CyLFClk.c **** 
 863:Generated_Source\PSoC4/CyLFClk.c ****         #if(CY_IP_BLESS)
 864:Generated_Source\PSoC4/CyLFClk.c ****             case CY_SYS_CLK_WCO_LPM:
 865:Generated_Source\PSoC4/CyLFClk.c ****                     CySysClkWcoSetLowPowerMode();
 866:Generated_Source\PSoC4/CyLFClk.c ****                 break;
 867:Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (CY_IP_BLESS) */
 868:Generated_Source\PSoC4/CyLFClk.c **** 
 869:Generated_Source\PSoC4/CyLFClk.c ****         default:
 870:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
 871:Generated_Source\PSoC4/CyLFClk.c ****             break;
 872:Generated_Source\PSoC4/CyLFClk.c ****         }
 873:Generated_Source\PSoC4/CyLFClk.c **** 
 874:Generated_Source\PSoC4/CyLFClk.c ****         return (powerModeStatus);
 875:Generated_Source\PSoC4/CyLFClk.c ****     }
 876:Generated_Source\PSoC4/CyLFClk.c **** 
 877:Generated_Source\PSoC4/CyLFClk.c **** 
 878:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 879:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkWcoClockOutSelect
 880:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 881:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 882:Generated_Source\PSoC4/CyLFClk.c ****     * Selects the WCO block output source.
 883:Generated_Source\PSoC4/CyLFClk.c ****     *
 884:Generated_Source\PSoC4/CyLFClk.c ****     * In addition to generating 32.768 kHz clock from external crystals, WCO 
 885:Generated_Source\PSoC4/CyLFClk.c ****     * can be sourced by external clock source using wco_out pin. The API help to
 886:Generated_Source\PSoC4/CyLFClk.c ****     * lets you select between the sources: External crystal or external pin.
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 17


 887:Generated_Source\PSoC4/CyLFClk.c ****     *
 888:Generated_Source\PSoC4/CyLFClk.c ****     * If you want to use external pin to drive WCO the next procedure is required:
 889:Generated_Source\PSoC4/CyLFClk.c ****     * <br> 1) Disable the WCO.
 890:Generated_Source\PSoC4/CyLFClk.c ****     * <br> 2) Drive the wco_out pin to an external signal source.
 891:Generated_Source\PSoC4/CyLFClk.c ****     * <br> 3) Call CySysClkWcoClockOutSelect(CY_SYS_CLK_WCO_SEL_PIN).
 892:Generated_Source\PSoC4/CyLFClk.c ****     * <br> 4) Enable the WCO and wait for 15 us before clocking the XO pad at the high 
 893:Generated_Source\PSoC4/CyLFClk.c ****     * potential. Let's assume you are using the 1.6v clock amplitude, then the
 894:Generated_Source\PSoC4/CyLFClk.c ****     * sequence would start at 1.6v, then 0v, then 1.6v etc at a chosen frequency.
 895:Generated_Source\PSoC4/CyLFClk.c ****     *
 896:Generated_Source\PSoC4/CyLFClk.c ****     * If you want to use WCO after using an external pin source:
 897:Generated_Source\PSoC4/CyLFClk.c ****     * <br> 1) Disable the WCO.
 898:Generated_Source\PSoC4/CyLFClk.c ****     * <br> 2) Drive off wco_out pin with external signal source.
 899:Generated_Source\PSoC4/CyLFClk.c ****     * <br> 3) Call CySysClkWcoClockOutSelect(CY_SYS_CLK_WCO_SEL_CRYSTAL).
 900:Generated_Source\PSoC4/CyLFClk.c ****     * <br> 4) Enable the WCO.
 901:Generated_Source\PSoC4/CyLFClk.c ****     *
 902:Generated_Source\PSoC4/CyLFClk.c ****     * \warning 
 903:Generated_Source\PSoC4/CyLFClk.c ****     * Do not use the oscillator output clock prior to a 15uS delay in your system.
 904:Generated_Source\PSoC4/CyLFClk.c ****     * There are no limitations on the external clock frequency.
 905:Generated_Source\PSoC4/CyLFClk.c ****     * \warning 
 906:Generated_Source\PSoC4/CyLFClk.c ****     * When external clock source was selected to drive WCO block the IMO can be 
 907:Generated_Source\PSoC4/CyLFClk.c ****     * trimmed only when external clock source period is equal to WCO external
 908:Generated_Source\PSoC4/CyLFClk.c ****     * crystal period. Also external clock source accuracy should be higher 
 909:Generated_Source\PSoC4/CyLFClk.c ****     * or equal to WCO external crystal accuracy.
 910:Generated_Source\PSoC4/CyLFClk.c ****     *
 911:Generated_Source\PSoC4/CyLFClk.c ****     * \param clockSel
 912:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_CLK_WCO_SEL_CRYSTAL - Selects External crystal as clock 
 913:Generated_Source\PSoC4/CyLFClk.c ****     * source of WCO.<br>
 914:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_CLK_WCO_SEL_PIN - Selects External clock input on wco_in pin as 
 915:Generated_Source\PSoC4/CyLFClk.c ****     * clock source of WCO.
 916:Generated_Source\PSoC4/CyLFClk.c ****     *
 917:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 918:Generated_Source\PSoC4/CyLFClk.c ****     void CySysClkWcoClockOutSelect(uint32 clockSel)
 919:Generated_Source\PSoC4/CyLFClk.c ****     {
 920:Generated_Source\PSoC4/CyLFClk.c ****         if (0u != CySysClkWcoEnabled())
 921:Generated_Source\PSoC4/CyLFClk.c ****         {
 922:Generated_Source\PSoC4/CyLFClk.c ****             if (1u >= clockSel)
 923:Generated_Source\PSoC4/CyLFClk.c ****             {
 924:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CLK_WCO_CONFIG_REG = (CY_SYS_CLK_WCO_CONFIG_REG & (uint32)(~CY_SYS_CLK_WCO_S
 925:Generated_Source\PSoC4/CyLFClk.c ****                                         (clockSel << CY_SYS_CLK_WCO_SELECT_PIN_OFFSET);
 926:Generated_Source\PSoC4/CyLFClk.c ****             }
 927:Generated_Source\PSoC4/CyLFClk.c ****             else
 928:Generated_Source\PSoC4/CyLFClk.c ****             {
 929:Generated_Source\PSoC4/CyLFClk.c ****                 CYASSERT(0u != 0u);
 930:Generated_Source\PSoC4/CyLFClk.c ****             }
 931:Generated_Source\PSoC4/CyLFClk.c ****         }
 932:Generated_Source\PSoC4/CyLFClk.c ****     }
 933:Generated_Source\PSoC4/CyLFClk.c **** #endif  /* (CY_IP_WCO) */
 934:Generated_Source\PSoC4/CyLFClk.c **** 
 935:Generated_Source\PSoC4/CyLFClk.c **** 
 936:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2)
 937:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 938:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtLock
 939:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 940:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 941:Generated_Source\PSoC4/CyLFClk.c ****     * Locks out configuration changes to the Watchdog timer registers and ILO
 942:Generated_Source\PSoC4/CyLFClk.c ****     * configuration register.
 943:Generated_Source\PSoC4/CyLFClk.c ****     *
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 18


 944:Generated_Source\PSoC4/CyLFClk.c ****     * After this function is called, ILO clock can't be disabled until
 945:Generated_Source\PSoC4/CyLFClk.c ****     * CySysWdtUnlock() is called.
 946:Generated_Source\PSoC4/CyLFClk.c ****     *
 947:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 948:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtLock(void)
 949:Generated_Source\PSoC4/CyLFClk.c ****     {
 950:Generated_Source\PSoC4/CyLFClk.c ****         uint8 interruptState;
 951:Generated_Source\PSoC4/CyLFClk.c ****         interruptState = CyEnterCriticalSection();
 952:Generated_Source\PSoC4/CyLFClk.c **** 
 953:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_CLK_SELECT_REG = (CY_SYS_CLK_SELECT_REG & (uint32)(~CY_SYS_WDT_CLK_LOCK_BITS_MASK)) 
 954:Generated_Source\PSoC4/CyLFClk.c ****                  CY_SYS_WDT_CLK_LOCK_BITS_MASK;
 955:Generated_Source\PSoC4/CyLFClk.c **** 
 956:Generated_Source\PSoC4/CyLFClk.c ****         CyExitCriticalSection(interruptState);
 957:Generated_Source\PSoC4/CyLFClk.c ****     }
 958:Generated_Source\PSoC4/CyLFClk.c **** 
 959:Generated_Source\PSoC4/CyLFClk.c **** 
 960:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 961:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtLocked
 962:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 963:Generated_Source\PSoC4/CyLFClk.c ****     * \internal
 964:Generated_Source\PSoC4/CyLFClk.c ****     * Reports the WDT lock state.
 965:Generated_Source\PSoC4/CyLFClk.c ****     *
 966:Generated_Source\PSoC4/CyLFClk.c ****     * \return 1 - WDT is locked, and 0 - WDT is unlocked.
 967:Generated_Source\PSoC4/CyLFClk.c ****     * \endinternal
 968:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 969:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysWdtLocked(void)
 970:Generated_Source\PSoC4/CyLFClk.c ****     {
 971:Generated_Source\PSoC4/CyLFClk.c ****         /* Prohibits writing to WDT registers and ILO/WCO registers when not equal 0 */
 972:Generated_Source\PSoC4/CyLFClk.c ****         return ((0u != (CY_SYS_CLK_SELECT_REG & (uint32)(CY_SYS_WDT_CLK_LOCK_BITS_MASK))) ? (uint32
 973:Generated_Source\PSoC4/CyLFClk.c ****     }
 974:Generated_Source\PSoC4/CyLFClk.c **** 
 975:Generated_Source\PSoC4/CyLFClk.c **** 
 976:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 977:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtUnlock
 978:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 979:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 980:Generated_Source\PSoC4/CyLFClk.c ****     *  Unlocks the Watchdog Timer configuration register.
 981:Generated_Source\PSoC4/CyLFClk.c ****     *
 982:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 983:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtUnlock(void)
 984:Generated_Source\PSoC4/CyLFClk.c ****     {
 985:Generated_Source\PSoC4/CyLFClk.c ****         uint8 interruptState;
 986:Generated_Source\PSoC4/CyLFClk.c ****         interruptState = CyEnterCriticalSection();
 987:Generated_Source\PSoC4/CyLFClk.c **** 
 988:Generated_Source\PSoC4/CyLFClk.c ****         /* Removing WDT lock requires two writes */
 989:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & (uint32)(~CY_SYS_WDT_CLK_LOCK_BITS_MASK))
 990:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_WDT_CLK_LOCK_BIT0);
 991:Generated_Source\PSoC4/CyLFClk.c **** 
 992:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & (uint32)(~CY_SYS_WDT_CLK_LOCK_BITS_MASK))
 993:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_WDT_CLK_LOCK_BIT1);
 994:Generated_Source\PSoC4/CyLFClk.c **** 
 995:Generated_Source\PSoC4/CyLFClk.c ****         CyExitCriticalSection(interruptState);
 996:Generated_Source\PSoC4/CyLFClk.c ****     }
 997:Generated_Source\PSoC4/CyLFClk.c **** 
 998:Generated_Source\PSoC4/CyLFClk.c **** 
 999:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1000:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetEnabledStatus
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 19


1001:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1002:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1003:Generated_Source\PSoC4/CyLFClk.c ****     *  Reads the enabled status of one of the three WDT counters.
1004:Generated_Source\PSoC4/CyLFClk.c ****     *
1005:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum: Valid range [0-2].  The number of the WDT counter.
1006:Generated_Source\PSoC4/CyLFClk.c ****     *
1007:Generated_Source\PSoC4/CyLFClk.c ****     * \return The status of the WDT counter:
1008:Generated_Source\PSoC4/CyLFClk.c ****     * \return 0 - If the counter is disabled.
1009:Generated_Source\PSoC4/CyLFClk.c ****     * \return 1 - If the counter is enabled.
1010:Generated_Source\PSoC4/CyLFClk.c ****     *
1011:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1012:Generated_Source\PSoC4/CyLFClk.c ****     * This function returns an actual WDT counter status from the status register. It may
1013:Generated_Source\PSoC4/CyLFClk.c ****     * take up to 3 LFCLK cycles for the WDT status register to contain actual data
1014:Generated_Source\PSoC4/CyLFClk.c ****     * after the WDT counter is enabled.
1015:Generated_Source\PSoC4/CyLFClk.c ****     *
1016:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1017:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetEnabledStatus(uint32 counterNum)
1018:Generated_Source\PSoC4/CyLFClk.c ****     {
1019:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT(counterNum < CY_SYS_WDT_COUNTERS_MAX);
1020:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WDT_CONTROL_REG >> ((CY_SYS_WDT_CNT_SHIFT * counterNum) + CY_SYS_WDT_CNT_ST
1021:Generated_Source\PSoC4/CyLFClk.c ****     }
1022:Generated_Source\PSoC4/CyLFClk.c **** 
1023:Generated_Source\PSoC4/CyLFClk.c **** 
1024:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1025:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetMode
1026:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1027:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1028:Generated_Source\PSoC4/CyLFClk.c ****     * Writes the mode of one of the three WDT counters.
1029:Generated_Source\PSoC4/CyLFClk.c ****     *
1030:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum: Valid range [0-2].  The number of the WDT counter.
1031:Generated_Source\PSoC4/CyLFClk.c ****     *
1032:Generated_Source\PSoC4/CyLFClk.c ****     * \param mode
1033:Generated_Source\PSoC4/CyLFClk.c ****     *  CY_SYS_WDT_MODE_NONE - Free running.<br>
1034:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_MODE_INT - The interrupt generated on match for counter 0
1035:Generated_Source\PSoC4/CyLFClk.c ****     * and 1, and on bit toggle for counter 2.<br>
1036:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_MODE_RESET - Reset on match (valid for counter 0 and 1 only).<br>
1037:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_MODE_INT_RESET - Generate an interrupt.  Generate a reset on
1038:Generated_Source\PSoC4/CyLFClk.c ****     * the 3rd non-handled interrupt (valid for counter 0 and counter 1 only).
1039:Generated_Source\PSoC4/CyLFClk.c ****     *
1040:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1041:Generated_Source\PSoC4/CyLFClk.c ****     * WDT counter counterNum should be disabled to set a mode. Otherwise, this
1042:Generated_Source\PSoC4/CyLFClk.c ****     * function call has no effect. If the specified counter is enabled,
1043:Generated_Source\PSoC4/CyLFClk.c ****     * call the CySysWdtDisable() function with the corresponding parameter to
1044:Generated_Source\PSoC4/CyLFClk.c ****     * disable the specified counter and wait for it to stop.
1045:Generated_Source\PSoC4/CyLFClk.c ****     *
1046:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1047:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetMode(uint32 counterNum, uint32 mode)
1048:Generated_Source\PSoC4/CyLFClk.c ****     {
1049:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
1050:Generated_Source\PSoC4/CyLFClk.c **** 
1051:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT(counterNum < CY_SYS_WDT_COUNTERS_MAX);
1052:Generated_Source\PSoC4/CyLFClk.c **** 
1053:Generated_Source\PSoC4/CyLFClk.c ****         if(0u == CySysWdtGetEnabledStatus(counterNum))
1054:Generated_Source\PSoC4/CyLFClk.c ****         {
1055:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WDT_CONFIG_REG &
1056:Generated_Source\PSoC4/CyLFClk.c ****                                 (uint32)~((uint32)(CY_SYS_WDT_MODE_MASK << (counterNum * CY_SYS_WDT
1057:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue |= (uint32)((mode & CY_SYS_WDT_MODE_MASK) << (counterNum * CY_SYS_WDT_CN
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 20


1058:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONFIG_REG = configRegValue;
1059:Generated_Source\PSoC4/CyLFClk.c ****         }
1060:Generated_Source\PSoC4/CyLFClk.c ****     }
1061:Generated_Source\PSoC4/CyLFClk.c **** 
1062:Generated_Source\PSoC4/CyLFClk.c **** 
1063:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1064:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetMode
1065:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1066:Generated_Source\PSoC4/CyLFClk.c ****     * 
1067:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the mode of one of the three WDT counters.
1068:Generated_Source\PSoC4/CyLFClk.c ****     *
1069:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the WDT counter.
1070:Generated_Source\PSoC4/CyLFClk.c ****     *
1071:Generated_Source\PSoC4/CyLFClk.c ****     * \return The mode of the counter. The same enumerated values as the mode 
1072:Generated_Source\PSoC4/CyLFClk.c ****     * parameter used in CySysWdtSetMode().
1073:Generated_Source\PSoC4/CyLFClk.c ****     *
1074:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1075:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetMode(uint32 counterNum)
1076:Generated_Source\PSoC4/CyLFClk.c ****     {
1077:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WDT_CONFIG_REG >> (counterNum * CY_SYS_WDT_CNT_SHIFT)) & CY_SYS_WDT_MODE_MA
1078:Generated_Source\PSoC4/CyLFClk.c ****     }
1079:Generated_Source\PSoC4/CyLFClk.c **** 
1080:Generated_Source\PSoC4/CyLFClk.c **** 
1081:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1082:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetClearOnMatch
1083:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1084:Generated_Source\PSoC4/CyLFClk.c ****     * 
1085:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Configures the WDT counter "clear on match" setting.
1086:Generated_Source\PSoC4/CyLFClk.c ****     *
1087:Generated_Source\PSoC4/CyLFClk.c ****     * If configured to "clear on match", the counter counts from 0 to MatchValue
1088:Generated_Source\PSoC4/CyLFClk.c ****     * giving it a period of (MatchValue + 1).
1089:Generated_Source\PSoC4/CyLFClk.c ****     *
1090:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum
1091:Generated_Source\PSoC4/CyLFClk.c ****     * Valid range [0-1]. The number of the WDT counter. The match values are not
1092:Generated_Source\PSoC4/CyLFClk.c ****     * supported by counter 2.
1093:Generated_Source\PSoC4/CyLFClk.c ****     *
1094:Generated_Source\PSoC4/CyLFClk.c ****     * \param enable 0 to disable appropriate counter <br>
1095:Generated_Source\PSoC4/CyLFClk.c ****     *  1 to enable appropriate counter
1096:Generated_Source\PSoC4/CyLFClk.c ****     *
1097:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1098:Generated_Source\PSoC4/CyLFClk.c ****     * WDT counter counterNum should be disabled. Otherwise this function call
1099:Generated_Source\PSoC4/CyLFClk.c ****     * has no effect. If the specified counter is enabled, call the CySysWdtDisable()
1100:Generated_Source\PSoC4/CyLFClk.c ****     * function with the corresponding parameter to disable the specified counter and
1101:Generated_Source\PSoC4/CyLFClk.c ****     * wait for it to stop. This may take up to three LFCLK cycles.
1102:Generated_Source\PSoC4/CyLFClk.c ****     *
1103:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1104:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetClearOnMatch(uint32 counterNum, uint32 enable)
1105:Generated_Source\PSoC4/CyLFClk.c ****     {
1106:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
1107:Generated_Source\PSoC4/CyLFClk.c **** 
1108:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_WDT_COUNTER0) ||
1109:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_WDT_COUNTER1));
1110:Generated_Source\PSoC4/CyLFClk.c **** 
1111:Generated_Source\PSoC4/CyLFClk.c ****         if(0u == CySysWdtGetEnabledStatus(counterNum))
1112:Generated_Source\PSoC4/CyLFClk.c ****         {
1113:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WDT_CONFIG_REG & (uint32)~((uint32)((uint32)1u << 
1114:Generated_Source\PSoC4/CyLFClk.c ****                                      ((counterNum * CY_SYS_WDT_CNT_SHIFT) + CY_SYS_WDT_CNT_MATCH_CL
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 21


1115:Generated_Source\PSoC4/CyLFClk.c **** 
1116:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue
1117:Generated_Source\PSoC4/CyLFClk.c ****                 |= (uint32)(enable << ((counterNum * CY_SYS_WDT_CNT_SHIFT) + CY_SYS_WDT_CNT_MATCH_C
1118:Generated_Source\PSoC4/CyLFClk.c **** 
1119:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONFIG_REG = configRegValue;
1120:Generated_Source\PSoC4/CyLFClk.c ****         }
1121:Generated_Source\PSoC4/CyLFClk.c ****     }
1122:Generated_Source\PSoC4/CyLFClk.c **** 
1123:Generated_Source\PSoC4/CyLFClk.c **** 
1124:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1125:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetClearOnMatch
1126:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1127:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1128:Generated_Source\PSoC4/CyLFClk.c ****     * Reads the "clear on match" setting for the specified counter.
1129:Generated_Source\PSoC4/CyLFClk.c ****     *
1130:Generated_Source\PSoC4/CyLFClk.c ****     * \param
1131:Generated_Source\PSoC4/CyLFClk.c ****     * counterNum Valid range [0-1]. The number of the WDT counter. The match values
1132:Generated_Source\PSoC4/CyLFClk.c ****     * are not supported by counter 2.
1133:Generated_Source\PSoC4/CyLFClk.c ****     *
1134:Generated_Source\PSoC4/CyLFClk.c ****     * \return The "clear on match" status: <br>1 if enabled <br>0 if disabled
1135:Generated_Source\PSoC4/CyLFClk.c ****     *
1136:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1137:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetClearOnMatch(uint32 counterNum)
1138:Generated_Source\PSoC4/CyLFClk.c ****     {
1139:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_WDT_COUNTER0) ||
1140:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_WDT_COUNTER1));
1141:Generated_Source\PSoC4/CyLFClk.c **** 
1142:Generated_Source\PSoC4/CyLFClk.c ****         return (uint32)((CY_SYS_WDT_CONFIG_REG >>
1143:Generated_Source\PSoC4/CyLFClk.c ****                         ((counterNum * CY_SYS_WDT_CNT_SHIFT) + CY_SYS_WDT_CNT_MATCH_CLR_SHIFT)) & 0
1144:Generated_Source\PSoC4/CyLFClk.c ****     }
1145:Generated_Source\PSoC4/CyLFClk.c **** 
1146:Generated_Source\PSoC4/CyLFClk.c **** 
1147:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1148:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtEnable
1149:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1150:Generated_Source\PSoC4/CyLFClk.c ****     *
1151:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Enables the specified WDT counters.
1152:Generated_Source\PSoC4/CyLFClk.c ****     *
1153:Generated_Source\PSoC4/CyLFClk.c ****     * All the counters specified in the mask are enabled.
1154:Generated_Source\PSoC4/CyLFClk.c ****     *
1155:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterMask
1156:Generated_Source\PSoC4/CyLFClk.c ****     *  CY_SYS_WDT_COUNTER0_MASK - The mask for counter 0 to enable.<br>
1157:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER1_MASK - The mask for counter 1 to enable.<br>
1158:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER2_MASK - The mask for counter 2 to enable.
1159:Generated_Source\PSoC4/CyLFClk.c ****     *
1160:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1161:Generated_Source\PSoC4/CyLFClk.c ****     * Enabling or disabling WDT requires 3 LFCLK cycles to come into effect.
1162:Generated_Source\PSoC4/CyLFClk.c ****     * Therefore, the WDT enable state must not be changed more than once in
1163:Generated_Source\PSoC4/CyLFClk.c ****     * that period.
1164:Generated_Source\PSoC4/CyLFClk.c ****     *
1165:Generated_Source\PSoC4/CyLFClk.c ****     * After WDT is enabled, it is illegal to write WDT configuration (WDT_CONFIG)
1166:Generated_Source\PSoC4/CyLFClk.c ****     * and control (WDT_CONTROL) registers. This means that all WDT functions that
1167:Generated_Source\PSoC4/CyLFClk.c ****     * contain 'write' in the name (with the exception of CySysWdtSetMatch()
1168:Generated_Source\PSoC4/CyLFClk.c ****     * function) are illegal to call if WDT is enabled.
1169:Generated_Source\PSoC4/CyLFClk.c ****     *
1170:Generated_Source\PSoC4/CyLFClk.c ****     * PSoC 4100 / PSoC 4200: This function enables ILO.
1171:Generated_Source\PSoC4/CyLFClk.c ****     *
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 22


1172:Generated_Source\PSoC4/CyLFClk.c ****     * PSoC 4100 BLE / PSoC 4200 BLE / PSoC4200L / PSoC 4100M 
1173:Generated_Source\PSoC4/CyLFClk.c ****     * / PSoC 4200M:
1174:Generated_Source\PSoC4/CyLFClk.c ****     * LFLCK should be configured before calling this function. The desired
1175:Generated_Source\PSoC4/CyLFClk.c ****     * source should be enabled and configured to be the source for LFCLK.
1176:Generated_Source\PSoC4/CyLFClk.c ****     *
1177:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1178:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtEnable(uint32 counterMask)
1179:Generated_Source\PSoC4/CyLFClk.c ****     {
1180:Generated_Source\PSoC4/CyLFClk.c ****         #if (!CY_IP_WCO)
1181:Generated_Source\PSoC4/CyLFClk.c ****             CySysClkIloStart();
1182:Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (!CY_IP_WCO) */
1183:Generated_Source\PSoC4/CyLFClk.c **** 
1184:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_CONTROL_REG |= counterMask;
1185:Generated_Source\PSoC4/CyLFClk.c **** 
1186:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_WDT_COUNTER0_MASK))
1187:Generated_Source\PSoC4/CyLFClk.c ****         {
1188:Generated_Source\PSoC4/CyLFClk.c ****             while (0u == CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER0))
1189:Generated_Source\PSoC4/CyLFClk.c ****             {
1190:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
1191:Generated_Source\PSoC4/CyLFClk.c ****             }
1192:Generated_Source\PSoC4/CyLFClk.c ****         }
1193:Generated_Source\PSoC4/CyLFClk.c **** 
1194:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_WDT_COUNTER1_MASK))
1195:Generated_Source\PSoC4/CyLFClk.c ****         {
1196:Generated_Source\PSoC4/CyLFClk.c ****             while (0u == CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER1))
1197:Generated_Source\PSoC4/CyLFClk.c ****             {
1198:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
1199:Generated_Source\PSoC4/CyLFClk.c ****             }
1200:Generated_Source\PSoC4/CyLFClk.c ****         }
1201:Generated_Source\PSoC4/CyLFClk.c **** 
1202:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_WDT_COUNTER2_MASK))
1203:Generated_Source\PSoC4/CyLFClk.c ****         {
1204:Generated_Source\PSoC4/CyLFClk.c ****             while (0u == CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER2))
1205:Generated_Source\PSoC4/CyLFClk.c ****             {
1206:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
1207:Generated_Source\PSoC4/CyLFClk.c ****             }
1208:Generated_Source\PSoC4/CyLFClk.c ****         }
1209:Generated_Source\PSoC4/CyLFClk.c ****     }
1210:Generated_Source\PSoC4/CyLFClk.c **** 
1211:Generated_Source\PSoC4/CyLFClk.c **** 
1212:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1213:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtDisable
1214:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1215:Generated_Source\PSoC4/CyLFClk.c ****     *
1216:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Disables the specified WDT counters.
1217:Generated_Source\PSoC4/CyLFClk.c ****     * All the counters specified in the mask are disabled. The function waits for 
1218:Generated_Source\PSoC4/CyLFClk.c ****     * the changes to come into effect.
1219:Generated_Source\PSoC4/CyLFClk.c ****     *
1220:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterMask
1221:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER0_MASK - The mask for counter 0 to disable. <br>
1222:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER1_MASK - The mask for counter 1 to disable. <br>
1223:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER2_MASK - The mask for counter 2 to disable.
1224:Generated_Source\PSoC4/CyLFClk.c ****     *
1225:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1226:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtDisable(uint32 counterMask)
1227:Generated_Source\PSoC4/CyLFClk.c ****     {
1228:Generated_Source\PSoC4/CyLFClk.c ****         if (0uL == CySysWdtLocked())
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 23


1229:Generated_Source\PSoC4/CyLFClk.c ****         {
1230:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONTROL_REG &= ~counterMask;
1231:Generated_Source\PSoC4/CyLFClk.c **** 
1232:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (counterMask & CY_SYS_WDT_COUNTER0_MASK))
1233:Generated_Source\PSoC4/CyLFClk.c ****             {
1234:Generated_Source\PSoC4/CyLFClk.c ****                 while (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER0))
1235:Generated_Source\PSoC4/CyLFClk.c ****                 {
1236:Generated_Source\PSoC4/CyLFClk.c ****                     /* Wait for changes to come into effect */
1237:Generated_Source\PSoC4/CyLFClk.c ****                 }
1238:Generated_Source\PSoC4/CyLFClk.c ****             }
1239:Generated_Source\PSoC4/CyLFClk.c **** 
1240:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (counterMask & CY_SYS_WDT_COUNTER1_MASK))
1241:Generated_Source\PSoC4/CyLFClk.c ****             {
1242:Generated_Source\PSoC4/CyLFClk.c ****                 while (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER1))
1243:Generated_Source\PSoC4/CyLFClk.c ****                 {
1244:Generated_Source\PSoC4/CyLFClk.c ****                     /* Wait for changes to come into effect */
1245:Generated_Source\PSoC4/CyLFClk.c ****                 }
1246:Generated_Source\PSoC4/CyLFClk.c ****             }
1247:Generated_Source\PSoC4/CyLFClk.c **** 
1248:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (counterMask & CY_SYS_WDT_COUNTER2_MASK))
1249:Generated_Source\PSoC4/CyLFClk.c ****             {
1250:Generated_Source\PSoC4/CyLFClk.c ****                 while (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER2))
1251:Generated_Source\PSoC4/CyLFClk.c ****                 {
1252:Generated_Source\PSoC4/CyLFClk.c ****                     /* Wait for changes to come into effect */
1253:Generated_Source\PSoC4/CyLFClk.c ****                 }
1254:Generated_Source\PSoC4/CyLFClk.c ****             }
1255:Generated_Source\PSoC4/CyLFClk.c ****         }
1256:Generated_Source\PSoC4/CyLFClk.c ****     }
1257:Generated_Source\PSoC4/CyLFClk.c **** 
1258:Generated_Source\PSoC4/CyLFClk.c **** 
1259:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1260:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetCascade
1261:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1262:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1263:Generated_Source\PSoC4/CyLFClk.c ****     * Writes the two WDT cascade values based on the combination of mask values
1264:Generated_Source\PSoC4/CyLFClk.c ****     * specified.
1265:Generated_Source\PSoC4/CyLFClk.c ****     *
1266:Generated_Source\PSoC4/CyLFClk.c ****     * \param cascadeMask The mask value used to set or clear the cascade values:
1267:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_CASCADE_NONE - Neither <br>
1268:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_CASCADE_01 - Cascade 01 <br>
1269:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_CASCADE_12 - Cascade 12
1270:Generated_Source\PSoC4/CyLFClk.c ****     *
1271:Generated_Source\PSoC4/CyLFClk.c ****     * If only one cascade mask is specified, the second cascade is disabled.
1272:Generated_Source\PSoC4/CyLFClk.c ****     * To set both cascade modes, two defines should be ORed:
1273:Generated_Source\PSoC4/CyLFClk.c ****     * (CY_SYS_TIMER_CASCADE_01 | CY_SYS_TIMER_CASCADE_12).
1274:Generated_Source\PSoC4/CyLFClk.c ****     * \note If CySysWdtSetCascade() was called with ORed defines it is necessary 
1275:Generated_Source\PSoC4/CyLFClk.c ****     * to call CySysWdtSetClearOnMatch(1,1). It is needed to make sure that 
1276:Generated_Source\PSoC4/CyLFClk.c ****     * Counter 2 will be updated in the expected way.
1277:Generated_Source\PSoC4/CyLFClk.c ****     *
1278:Generated_Source\PSoC4/CyLFClk.c ****     * WDT counters that are part of the specified cascade should be disabled.
1279:Generated_Source\PSoC4/CyLFClk.c ****     * Otherwise this function call has no effect. If the specified
1280:Generated_Source\PSoC4/CyLFClk.c ****     * counter is enabled, call CySysWdtDisable() function with the corresponding
1281:Generated_Source\PSoC4/CyLFClk.c ****     * parameter to disable the specified counter and wait for it to stop. This may
1282:Generated_Source\PSoC4/CyLFClk.c ****     * take up to 3 LFCLK cycles.
1283:Generated_Source\PSoC4/CyLFClk.c ****     *
1284:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1285:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetCascade(uint32 cascadeMask)
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 24


1286:Generated_Source\PSoC4/CyLFClk.c ****     {
1287:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
1288:Generated_Source\PSoC4/CyLFClk.c ****         uint32 countersEnableStatus;
1289:Generated_Source\PSoC4/CyLFClk.c **** 
1290:Generated_Source\PSoC4/CyLFClk.c ****         countersEnableStatus = CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER0) |
1291:Generated_Source\PSoC4/CyLFClk.c ****                             CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER1) |
1292:Generated_Source\PSoC4/CyLFClk.c ****                             CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER2);
1293:Generated_Source\PSoC4/CyLFClk.c **** 
1294:Generated_Source\PSoC4/CyLFClk.c ****         if (0u == countersEnableStatus)
1295:Generated_Source\PSoC4/CyLFClk.c ****         {
1296:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WDT_CONFIG_REG;
1297:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue &= ((uint32)(~(CY_SYS_WDT_CASCADE_01|CY_SYS_WDT_CASCADE_12)));
1298:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue |= cascadeMask;
1299:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONFIG_REG = configRegValue;
1300:Generated_Source\PSoC4/CyLFClk.c ****         }
1301:Generated_Source\PSoC4/CyLFClk.c ****     }
1302:Generated_Source\PSoC4/CyLFClk.c **** 
1303:Generated_Source\PSoC4/CyLFClk.c **** 
1304:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1305:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetCascade
1306:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1307:Generated_Source\PSoC4/CyLFClk.c ****     *
1308:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the two WDT cascade values returning a mask of the bits set.
1309:Generated_Source\PSoC4/CyLFClk.c ****     *
1310:Generated_Source\PSoC4/CyLFClk.c ****     * \return The mask of the cascade values set.
1311:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_CASCADE_NONE - Neither
1312:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_CASCADE_01 - Cascade 01
1313:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_CASCADE_12 - Cascade 12
1314:Generated_Source\PSoC4/CyLFClk.c ****     *
1315:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1316:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetCascade(void)
1317:Generated_Source\PSoC4/CyLFClk.c ****     {
1318:Generated_Source\PSoC4/CyLFClk.c ****         return (CY_SYS_WDT_CONFIG_REG & (CY_SYS_WDT_CASCADE_01 | CY_SYS_WDT_CASCADE_12));
1319:Generated_Source\PSoC4/CyLFClk.c ****     }
1320:Generated_Source\PSoC4/CyLFClk.c **** 
1321:Generated_Source\PSoC4/CyLFClk.c **** 
1322:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1323:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetMatch
1324:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1325:Generated_Source\PSoC4/CyLFClk.c ****     *
1326:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Configures the WDT counter match comparison value.
1327:Generated_Source\PSoC4/CyLFClk.c ****     *
1328:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum
1329:Generated_Source\PSoC4/CyLFClk.c ****     * Valid range [0-1]. The number of the WDT counter. The match values are not
1330:Generated_Source\PSoC4/CyLFClk.c ****     * supported by counter 2.
1331:Generated_Source\PSoC4/CyLFClk.c ****     *
1332:Generated_Source\PSoC4/CyLFClk.c ****     * \param match
1333:Generated_Source\PSoC4/CyLFClk.c ****     * Valid range [0-65535]. The value to be used to match against the counter.
1334:Generated_Source\PSoC4/CyLFClk.c ****     *
1335:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1336:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetMatch(uint32 counterNum, uint32 match)
1337:Generated_Source\PSoC4/CyLFClk.c ****     {
1338:Generated_Source\PSoC4/CyLFClk.c ****         uint32 regValue;
1339:Generated_Source\PSoC4/CyLFClk.c **** 
1340:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_WDT_COUNTER0) ||
1341:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_WDT_COUNTER1));
1342:Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 25


1343:Generated_Source\PSoC4/CyLFClk.c ****         /* Wait for previous changes to come into effect */
1344:Generated_Source\PSoC4/CyLFClk.c ****         CyDelayUs(CY_SYS_WDT_3LFCLK_DELAY_US);
1345:Generated_Source\PSoC4/CyLFClk.c **** 
1346:Generated_Source\PSoC4/CyLFClk.c ****         regValue = CY_SYS_WDT_MATCH_REG;
1347:Generated_Source\PSoC4/CyLFClk.c ****         regValue &= (uint32)~((uint32)(CY_SYS_WDT_LOWER_16BITS_MASK << (counterNum * CY_SYS_WDT_CNT
1348:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_MATCH_REG = (regValue | (match << (counterNum * CY_SYS_WDT_CNT_MATCH_SHIFT)));
1349:Generated_Source\PSoC4/CyLFClk.c **** 
1350:Generated_Source\PSoC4/CyLFClk.c ****         /* Make sure match synchronization has started */
1351:Generated_Source\PSoC4/CyLFClk.c ****         CyDelayUs(CY_SYS_WDT_1LFCLK_DELAY_US);
1352:Generated_Source\PSoC4/CyLFClk.c ****     }
1353:Generated_Source\PSoC4/CyLFClk.c **** 
1354:Generated_Source\PSoC4/CyLFClk.c **** 
1355:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1356:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetToggleBit
1357:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1358:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1359:Generated_Source\PSoC4/CyLFClk.c ****     * Configures which bit in WDT counter 2 to monitor for a toggle.
1360:Generated_Source\PSoC4/CyLFClk.c ****     *
1361:Generated_Source\PSoC4/CyLFClk.c ****     * When that bit toggles, an interrupt is generated if the mode for counter 2 has
1362:Generated_Source\PSoC4/CyLFClk.c ****     * enabled interrupts.
1363:Generated_Source\PSoC4/CyLFClk.c ****     *
1364:Generated_Source\PSoC4/CyLFClk.c ****     * \param bits Valid range [0-31].  Counter 2 bit to monitor for a toggle.
1365:Generated_Source\PSoC4/CyLFClk.c ****     *
1366:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1367:Generated_Source\PSoC4/CyLFClk.c ****     * WDT Counter 2 should be disabled. Otherwise this function call has no
1368:Generated_Source\PSoC4/CyLFClk.c ****     * effect.
1369:Generated_Source\PSoC4/CyLFClk.c ****     *
1370:Generated_Source\PSoC4/CyLFClk.c ****     * If the specified counter is enabled, call the CySysWdtDisable() function with
1371:Generated_Source\PSoC4/CyLFClk.c ****     * the corresponding parameter to disable the specified counter and wait for it to
1372:Generated_Source\PSoC4/CyLFClk.c ****     * stop. This may take up to 3 LFCLK cycles.
1373:Generated_Source\PSoC4/CyLFClk.c ****     *
1374:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1375:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetToggleBit(uint32 bits)
1376:Generated_Source\PSoC4/CyLFClk.c ****     {
1377:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
1378:Generated_Source\PSoC4/CyLFClk.c **** 
1379:Generated_Source\PSoC4/CyLFClk.c ****         if (0u == CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER2))
1380:Generated_Source\PSoC4/CyLFClk.c ****         {
1381:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WDT_CONFIG_REG;
1382:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue &= (uint32)(~((uint32)(CY_SYS_WDT_CONFIG_BITS2_MASK << CY_SYS_WDT_CONFIG
1383:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue |= ((bits & CY_SYS_WDT_CONFIG_BITS2_MASK) << CY_SYS_WDT_CONFIG_BITS2_POS
1384:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONFIG_REG = configRegValue;
1385:Generated_Source\PSoC4/CyLFClk.c ****         }
1386:Generated_Source\PSoC4/CyLFClk.c ****     }
1387:Generated_Source\PSoC4/CyLFClk.c **** 
1388:Generated_Source\PSoC4/CyLFClk.c **** 
1389:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1390:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetToggleBit
1391:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1392:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1393:Generated_Source\PSoC4/CyLFClk.c ****     * Reads which bit in WDT counter 2 is monitored for a toggle.
1394:Generated_Source\PSoC4/CyLFClk.c ****     *
1395:Generated_Source\PSoC4/CyLFClk.c ****     * \return The bit that is monitored (range of 0 to 31)
1396:Generated_Source\PSoC4/CyLFClk.c ****     *
1397:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1398:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetToggleBit(void)
1399:Generated_Source\PSoC4/CyLFClk.c ****     {
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 26


1400:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WDT_CONFIG_REG >> CY_SYS_WDT_CONFIG_BITS2_POS) & CY_SYS_WDT_CONFIG_BITS2_MA
1401:Generated_Source\PSoC4/CyLFClk.c ****     }
1402:Generated_Source\PSoC4/CyLFClk.c **** 
1403:Generated_Source\PSoC4/CyLFClk.c **** 
1404:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1405:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetMatch
1406:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1407:Generated_Source\PSoC4/CyLFClk.c ****     *
1408:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the WDT counter match comparison value.
1409:Generated_Source\PSoC4/CyLFClk.c ****     *
1410:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-1].  The number of the WDT counter. The match
1411:Generated_Source\PSoC4/CyLFClk.c ****     * values are not supported by counter 2.
1412:Generated_Source\PSoC4/CyLFClk.c ****     *
1413:Generated_Source\PSoC4/CyLFClk.c ****     * \return A 16-bit match value.
1414:Generated_Source\PSoC4/CyLFClk.c ****     *
1415:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1416:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetMatch(uint32 counterNum)
1417:Generated_Source\PSoC4/CyLFClk.c ****     {
1418:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_WDT_COUNTER0) ||
1419:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_WDT_COUNTER1));
1420:Generated_Source\PSoC4/CyLFClk.c **** 
1421:Generated_Source\PSoC4/CyLFClk.c ****         return ((uint32)(CY_SYS_WDT_MATCH_REG >> 
1422:Generated_Source\PSoC4/CyLFClk.c ****                                             (counterNum * CY_SYS_WDT_CNT_MATCH_SHIFT)) & CY_SYS_WDT
1423:Generated_Source\PSoC4/CyLFClk.c ****     }
1424:Generated_Source\PSoC4/CyLFClk.c **** 
1425:Generated_Source\PSoC4/CyLFClk.c **** 
1426:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1427:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetCount
1428:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1429:Generated_Source\PSoC4/CyLFClk.c ****     *
1430:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the current WDT counter value.
1431:Generated_Source\PSoC4/CyLFClk.c ****     *
1432:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum: Valid range [0-2]. The number of the WDT counter.
1433:Generated_Source\PSoC4/CyLFClk.c ****     *
1434:Generated_Source\PSoC4/CyLFClk.c ****     * \return A live counter value.  Counter 0 and Counter 1 are 16 bit counters 
1435:Generated_Source\PSoC4/CyLFClk.c ****     * and counter 2 is a 32 bit counter.
1436:Generated_Source\PSoC4/CyLFClk.c ****     *
1437:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1438:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetCount(uint32 counterNum)
1439:Generated_Source\PSoC4/CyLFClk.c ****     {
1440:Generated_Source\PSoC4/CyLFClk.c ****         uint32 regValue = 0u;
1441:Generated_Source\PSoC4/CyLFClk.c **** 
1442:Generated_Source\PSoC4/CyLFClk.c ****         switch(counterNum)
1443:Generated_Source\PSoC4/CyLFClk.c ****         {
1444:Generated_Source\PSoC4/CyLFClk.c ****             /* WDT Counter 0 */
1445:Generated_Source\PSoC4/CyLFClk.c ****             case 0u:
1446:Generated_Source\PSoC4/CyLFClk.c ****                 regValue = CY_SYS_WDT_CTRLOW_REG & CY_SYS_WDT_LOWER_16BITS_MASK;
1447:Generated_Source\PSoC4/CyLFClk.c ****             break;
1448:Generated_Source\PSoC4/CyLFClk.c **** 
1449:Generated_Source\PSoC4/CyLFClk.c ****             /* WDT Counter 1 */
1450:Generated_Source\PSoC4/CyLFClk.c ****             case 1u:
1451:Generated_Source\PSoC4/CyLFClk.c ****                 regValue = (CY_SYS_WDT_CTRLOW_REG >> CY_SYS_WDT_CNT_MATCH_SHIFT) & CY_SYS_WDT_LOWER
1452:Generated_Source\PSoC4/CyLFClk.c ****             break;
1453:Generated_Source\PSoC4/CyLFClk.c **** 
1454:Generated_Source\PSoC4/CyLFClk.c ****             /* WDT Counter 2 */
1455:Generated_Source\PSoC4/CyLFClk.c ****             case 2u:
1456:Generated_Source\PSoC4/CyLFClk.c ****                 regValue = CY_SYS_WDT_CTRHIGH_REG;
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 27


1457:Generated_Source\PSoC4/CyLFClk.c ****             break;
1458:Generated_Source\PSoC4/CyLFClk.c **** 
1459:Generated_Source\PSoC4/CyLFClk.c ****             default:
1460:Generated_Source\PSoC4/CyLFClk.c ****                 CYASSERT(0u != 0u);
1461:Generated_Source\PSoC4/CyLFClk.c ****             break;
1462:Generated_Source\PSoC4/CyLFClk.c ****         }
1463:Generated_Source\PSoC4/CyLFClk.c **** 
1464:Generated_Source\PSoC4/CyLFClk.c ****         return (regValue);
1465:Generated_Source\PSoC4/CyLFClk.c ****     }
1466:Generated_Source\PSoC4/CyLFClk.c **** 
1467:Generated_Source\PSoC4/CyLFClk.c **** 
1468:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1469:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetInterruptSource
1470:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1471:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1472:Generated_Source\PSoC4/CyLFClk.c ****     * Reads a mask containing all the WDT counters interrupts that are currently
1473:Generated_Source\PSoC4/CyLFClk.c ****     * set by the hardware, if a corresponding mode is selected.
1474:Generated_Source\PSoC4/CyLFClk.c ****     *
1475:Generated_Source\PSoC4/CyLFClk.c ****     * \return The mask of interrupts set
1476:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_COUNTER0_INT - Counter 0
1477:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_COUNTER1_INT - Counter 1
1478:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_COUNTER2_INT - Counter 2
1479:Generated_Source\PSoC4/CyLFClk.c ****     *
1480:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1481:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetInterruptSource(void)
1482:Generated_Source\PSoC4/CyLFClk.c ****     {
1483:Generated_Source\PSoC4/CyLFClk.c ****         return (CY_SYS_WDT_CONTROL_REG & (CY_SYS_WDT_COUNTER0_INT | CY_SYS_WDT_COUNTER1_INT | CY_SY
1484:Generated_Source\PSoC4/CyLFClk.c ****     }
1485:Generated_Source\PSoC4/CyLFClk.c **** 
1486:Generated_Source\PSoC4/CyLFClk.c **** 
1487:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1488:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtClearInterrupt
1489:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1490:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1491:Generated_Source\PSoC4/CyLFClk.c ****     * Clears all the WDT counter interrupts set in the mask.
1492:Generated_Source\PSoC4/CyLFClk.c ****     *
1493:Generated_Source\PSoC4/CyLFClk.c ****     * Calling this function also prevents from Reset when the counter mode is set 
1494:Generated_Source\PSoC4/CyLFClk.c ****     * to generate 3 interrupts and then the device resets.
1495:Generated_Source\PSoC4/CyLFClk.c ****     *
1496:Generated_Source\PSoC4/CyLFClk.c ****     * All the WDT interrupts are to be cleared by the firmware, otherwise
1497:Generated_Source\PSoC4/CyLFClk.c ****     * interrupts are generated continuously.
1498:Generated_Source\PSoC4/CyLFClk.c ****     *
1499:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterMask
1500:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER0_INT - Clears counter 0 interrupts <br>
1501:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER1_INT - Clears counter 1 interrupts <br>
1502:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER2_INT - Clears counter 2 interrupts
1503:Generated_Source\PSoC4/CyLFClk.c ****     *
1504:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1505:Generated_Source\PSoC4/CyLFClk.c ****     * This function temporary removes the watchdog lock, if it was set, and
1506:Generated_Source\PSoC4/CyLFClk.c ****     * restores the lock state after cleaning the WDT interrupts that are set in
1507:Generated_Source\PSoC4/CyLFClk.c ****     * a mask.
1508:Generated_Source\PSoC4/CyLFClk.c ****     *
1509:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1510:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtClearInterrupt(uint32 counterMask)
1511:Generated_Source\PSoC4/CyLFClk.c ****     {
1512:Generated_Source\PSoC4/CyLFClk.c ****         uint8 interruptState;
1513:Generated_Source\PSoC4/CyLFClk.c ****         uint32 wdtLockState;
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 28


1514:Generated_Source\PSoC4/CyLFClk.c **** 
1515:Generated_Source\PSoC4/CyLFClk.c ****         interruptState = CyEnterCriticalSection();
1516:Generated_Source\PSoC4/CyLFClk.c **** 
1517:Generated_Source\PSoC4/CyLFClk.c ****         if (0u != CySysWdtLocked())
1518:Generated_Source\PSoC4/CyLFClk.c ****         {
1519:Generated_Source\PSoC4/CyLFClk.c ****             wdtLockState = 1u;
1520:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtUnlock();
1521:Generated_Source\PSoC4/CyLFClk.c ****         }
1522:Generated_Source\PSoC4/CyLFClk.c ****         else
1523:Generated_Source\PSoC4/CyLFClk.c ****         {
1524:Generated_Source\PSoC4/CyLFClk.c ****             wdtLockState = 0u;
1525:Generated_Source\PSoC4/CyLFClk.c ****         }
1526:Generated_Source\PSoC4/CyLFClk.c **** 
1527:Generated_Source\PSoC4/CyLFClk.c ****         /* Set new WDT control register value */
1528:Generated_Source\PSoC4/CyLFClk.c ****         counterMask &= (CY_SYS_WDT_COUNTER0_INT |
1529:Generated_Source\PSoC4/CyLFClk.c ****                         CY_SYS_WDT_COUNTER1_INT |
1530:Generated_Source\PSoC4/CyLFClk.c ****                         CY_SYS_WDT_COUNTER2_INT);
1531:Generated_Source\PSoC4/CyLFClk.c **** 
1532:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_CONTROL_REG = counterMask | (CY_SYS_WDT_CONTROL_REG & ~(CY_SYS_WDT_COUNTER0_INT 
1533:Generated_Source\PSoC4/CyLFClk.c ****                                                                            CY_SYS_WDT_COUNTER1_INT 
1534:Generated_Source\PSoC4/CyLFClk.c ****                                                                            CY_SYS_WDT_COUNTER2_INT)
1535:Generated_Source\PSoC4/CyLFClk.c **** 
1536:Generated_Source\PSoC4/CyLFClk.c ****         /* Read the CY_SYS_WDT_CONTROL_REG to clear the interrupt request.
1537:Generated_Source\PSoC4/CyLFClk.c ****          * Cypress ID #207093, #206231
1538:Generated_Source\PSoC4/CyLFClk.c ****         */
1539:Generated_Source\PSoC4/CyLFClk.c ****         (void)CY_SYS_WDT_CONTROL_REG;
1540:Generated_Source\PSoC4/CyLFClk.c **** 
1541:Generated_Source\PSoC4/CyLFClk.c ****         if (1u == wdtLockState)
1542:Generated_Source\PSoC4/CyLFClk.c ****         {
1543:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtLock();
1544:Generated_Source\PSoC4/CyLFClk.c ****         }
1545:Generated_Source\PSoC4/CyLFClk.c **** 
1546:Generated_Source\PSoC4/CyLFClk.c ****         CyExitCriticalSection(interruptState);
1547:Generated_Source\PSoC4/CyLFClk.c ****     }
1548:Generated_Source\PSoC4/CyLFClk.c **** 
1549:Generated_Source\PSoC4/CyLFClk.c **** 
1550:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1551:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtResetCounters
1552:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1553:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1554:Generated_Source\PSoC4/CyLFClk.c ****     * Resets all the WDT counters set in the mask.
1555:Generated_Source\PSoC4/CyLFClk.c ****     *
1556:Generated_Source\PSoC4/CyLFClk.c ****     * \param countersMask
1557:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER0_RESET - Reset counter 0 <br>
1558:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER1_RESET - Reset counter 1 <br>
1559:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER2_RESET - Reset counter 2
1560:Generated_Source\PSoC4/CyLFClk.c ****     *
1561:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1562:Generated_Source\PSoC4/CyLFClk.c ****     * This function does not reset counter values if the Watchdog is locked.
1563:Generated_Source\PSoC4/CyLFClk.c ****     * This function waits while corresponding counters will be reset. This may
1564:Generated_Source\PSoC4/CyLFClk.c ****     * take up to 3 LFCLK cycles.
1565:Generated_Source\PSoC4/CyLFClk.c ****     * The LFCLK source must be enabled. Otherwise, the function will never exit.
1566:Generated_Source\PSoC4/CyLFClk.c ****     *
1567:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1568:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtResetCounters(uint32 countersMask)
1569:Generated_Source\PSoC4/CyLFClk.c ****     {
1570:Generated_Source\PSoC4/CyLFClk.c ****         /* Set new WDT reset value */
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 29


1571:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_CONTROL_REG |= (countersMask & CY_SYS_WDT_COUNTERS_RESET);
1572:Generated_Source\PSoC4/CyLFClk.c **** 
1573:Generated_Source\PSoC4/CyLFClk.c ****         while (0uL != (CY_SYS_WDT_CONTROL_REG & CY_SYS_WDT_COUNTERS_RESET))
1574:Generated_Source\PSoC4/CyLFClk.c ****         {
1575:Generated_Source\PSoC4/CyLFClk.c ****             /* Wait for reset to come into effect */
1576:Generated_Source\PSoC4/CyLFClk.c ****         }
1577:Generated_Source\PSoC4/CyLFClk.c ****     }
1578:Generated_Source\PSoC4/CyLFClk.c **** 
1579:Generated_Source\PSoC4/CyLFClk.c **** 
1580:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1581:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetInterruptCallback
1582:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1583:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1584:Generated_Source\PSoC4/CyLFClk.c ****     * Sets the ISR callback function for the particular WDT counter.
1585:Generated_Source\PSoC4/CyLFClk.c ****     * These functions are called on the WDT interrupt.
1586:Generated_Source\PSoC4/CyLFClk.c ****     *
1587:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum The number of the WDT counter.
1588:Generated_Source\PSoC4/CyLFClk.c ****     * \param function The pointer to the callback function.
1589:Generated_Source\PSoC4/CyLFClk.c ****     *
1590:Generated_Source\PSoC4/CyLFClk.c ****     * \return The pointer to the previous callback function.
1591:Generated_Source\PSoC4/CyLFClk.c ****     * \return NULL is returned if the specified address is not set.
1592:Generated_Source\PSoC4/CyLFClk.c ****     *
1593:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1594:Generated_Source\PSoC4/CyLFClk.c ****     cyWdtCallback CySysWdtSetInterruptCallback(uint32 counterNum, cyWdtCallback function)
1595:Generated_Source\PSoC4/CyLFClk.c ****     {
1596:Generated_Source\PSoC4/CyLFClk.c ****         cyWdtCallback prevCallback = (void *)0;
1597:Generated_Source\PSoC4/CyLFClk.c **** 
1598:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum < CY_WDT_NUM_OF_WDT)
1599:Generated_Source\PSoC4/CyLFClk.c ****         {
1600:Generated_Source\PSoC4/CyLFClk.c ****             prevCallback = cySysWdtCallback[counterNum];
1601:Generated_Source\PSoC4/CyLFClk.c ****             cySysWdtCallback[counterNum] = function;
1602:Generated_Source\PSoC4/CyLFClk.c ****         }
1603:Generated_Source\PSoC4/CyLFClk.c ****         else
1604:Generated_Source\PSoC4/CyLFClk.c ****         {
1605:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
1606:Generated_Source\PSoC4/CyLFClk.c ****         }
1607:Generated_Source\PSoC4/CyLFClk.c **** 
1608:Generated_Source\PSoC4/CyLFClk.c ****         return((cyWdtCallback)prevCallback);
1609:Generated_Source\PSoC4/CyLFClk.c ****     }
1610:Generated_Source\PSoC4/CyLFClk.c **** 
1611:Generated_Source\PSoC4/CyLFClk.c **** 
1612:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1613:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetInterruptCallback
1614:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1615:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1616:Generated_Source\PSoC4/CyLFClk.c ****     * Gets the ISR callback function for the particular WDT counter.
1617:Generated_Source\PSoC4/CyLFClk.c ****     *
1618:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum The number of the WDT counter.
1619:Generated_Source\PSoC4/CyLFClk.c ****     *
1620:Generated_Source\PSoC4/CyLFClk.c ****     * \return The pointer to the callback function registered for a particular WDT by
1621:Generated_Source\PSoC4/CyLFClk.c ****     * a particular address that are passed through arguments.
1622:Generated_Source\PSoC4/CyLFClk.c ****     *
1623:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1624:Generated_Source\PSoC4/CyLFClk.c ****     cyWdtCallback CySysWdtGetInterruptCallback(uint32 counterNum)
1625:Generated_Source\PSoC4/CyLFClk.c ****     {
1626:Generated_Source\PSoC4/CyLFClk.c ****         cyWdtCallback retCallback = (void *)0;
1627:Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 30


1628:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum < CY_WDT_NUM_OF_WDT)
1629:Generated_Source\PSoC4/CyLFClk.c ****         {
1630:Generated_Source\PSoC4/CyLFClk.c ****             retCallback = (cyWdtCallback)cySysWdtCallback[counterNum];
1631:Generated_Source\PSoC4/CyLFClk.c ****         }
1632:Generated_Source\PSoC4/CyLFClk.c ****         else
1633:Generated_Source\PSoC4/CyLFClk.c ****         {
1634:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
1635:Generated_Source\PSoC4/CyLFClk.c ****         }
1636:Generated_Source\PSoC4/CyLFClk.c **** 
1637:Generated_Source\PSoC4/CyLFClk.c ****         return(retCallback);
1638:Generated_Source\PSoC4/CyLFClk.c ****     }
1639:Generated_Source\PSoC4/CyLFClk.c **** 
1640:Generated_Source\PSoC4/CyLFClk.c **** 
1641:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1642:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtEnableCounterIsr
1643:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1644:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1645:Generated_Source\PSoC4/CyLFClk.c ****     * Enables the ISR callback servicing for the particular WDT counter
1646:Generated_Source\PSoC4/CyLFClk.c ****     *
1647:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the WDT counter.
1648:Generated_Source\PSoC4/CyLFClk.c ****     *
1649:Generated_Source\PSoC4/CyLFClk.c ****     * Value corresponds to appropriate WDT counter. For example value 1 
1650:Generated_Source\PSoC4/CyLFClk.c ****     * corresponds to second WDT counter.
1651:Generated_Source\PSoC4/CyLFClk.c ****     *
1652:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1653:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtEnableCounterIsr(uint32 counterNum)
1654:Generated_Source\PSoC4/CyLFClk.c ****     {
1655:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum <= CY_SYS_WDT_COUNTER2)
1656:Generated_Source\PSoC4/CyLFClk.c ****         {
1657:Generated_Source\PSoC4/CyLFClk.c ****             disableServicedIsr &= ~counterIntMaskTbl[counterNum];
1658:Generated_Source\PSoC4/CyLFClk.c ****             wdtIsrMask |= counterIntMaskTbl[counterNum];
1659:Generated_Source\PSoC4/CyLFClk.c ****         }
1660:Generated_Source\PSoC4/CyLFClk.c ****         else
1661:Generated_Source\PSoC4/CyLFClk.c ****         {
1662:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
1663:Generated_Source\PSoC4/CyLFClk.c ****         }
1664:Generated_Source\PSoC4/CyLFClk.c ****     }
1665:Generated_Source\PSoC4/CyLFClk.c **** 
1666:Generated_Source\PSoC4/CyLFClk.c **** 
1667:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1668:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtDisableCounterIsr
1669:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1670:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1671:Generated_Source\PSoC4/CyLFClk.c ****     * Disables the ISR callback servicing for the particular WDT counter
1672:Generated_Source\PSoC4/CyLFClk.c ****     *
1673:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the WDT counter.
1674:Generated_Source\PSoC4/CyLFClk.c ****     *
1675:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1676:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtDisableCounterIsr(uint32 counterNum)
1677:Generated_Source\PSoC4/CyLFClk.c ****     {
1678:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum <= CY_SYS_WDT_COUNTER2)
1679:Generated_Source\PSoC4/CyLFClk.c ****         {
1680:Generated_Source\PSoC4/CyLFClk.c ****             wdtIsrMask &= ~counterIntMaskTbl[counterNum];
1681:Generated_Source\PSoC4/CyLFClk.c ****         }
1682:Generated_Source\PSoC4/CyLFClk.c ****         else
1683:Generated_Source\PSoC4/CyLFClk.c ****         {
1684:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 31


1685:Generated_Source\PSoC4/CyLFClk.c ****         }
1686:Generated_Source\PSoC4/CyLFClk.c ****     }
1687:Generated_Source\PSoC4/CyLFClk.c **** 
1688:Generated_Source\PSoC4/CyLFClk.c **** 
1689:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1690:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtIsr
1691:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1692:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1693:Generated_Source\PSoC4/CyLFClk.c ****     * This is the handler of the WDT interrupt in CPU NVIC.
1694:Generated_Source\PSoC4/CyLFClk.c ****     *
1695:Generated_Source\PSoC4/CyLFClk.c ****     * The handler checks which WDT triggered in the interrupt and calls the 
1696:Generated_Source\PSoC4/CyLFClk.c ****     * respective callback functions configured by the user by using 
1697:Generated_Source\PSoC4/CyLFClk.c ****     * CySysWdtSetIsrCallback() API.
1698:Generated_Source\PSoC4/CyLFClk.c ****     *
1699:Generated_Source\PSoC4/CyLFClk.c ****     * The order of the callback execution is incremental. Callback-0 is
1700:Generated_Source\PSoC4/CyLFClk.c ****     * run as the first one and callback-2 is called as the last one.
1701:Generated_Source\PSoC4/CyLFClk.c ****     *
1702:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1703:Generated_Source\PSoC4/CyLFClk.c ****     * This function clears the WDT interrupt every time when it is called.
1704:Generated_Source\PSoC4/CyLFClk.c ****     * Reset after the 3rd interrupt does not happen if this function is registered
1705:Generated_Source\PSoC4/CyLFClk.c ****     * as the interrupt handler even if the "Watchdog with Interrupt" mode is
1706:Generated_Source\PSoC4/CyLFClk.c ****     * selected on the "Low Frequency Clocks" tab.
1707:Generated_Source\PSoC4/CyLFClk.c ****     *
1708:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1709:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtIsr(void)
1710:Generated_Source\PSoC4/CyLFClk.c ****     {
1711:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (CY_SYS_WDT_COUNTER0_INT & CY_SYS_WDT_CONTROL_REG))
1712:Generated_Source\PSoC4/CyLFClk.c ****         {
1713:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_WDT_COUNTER0_INT & wdtIsrMask))
1714:Generated_Source\PSoC4/CyLFClk.c ****             {
1715:Generated_Source\PSoC4/CyLFClk.c ****                 wdtIsrMask &= ~(disableServicedIsr & CY_SYS_WDT_COUNTER0_INT);
1716:Generated_Source\PSoC4/CyLFClk.c ****                 disableServicedIsr  &= ~CY_SYS_WDT_COUNTER0_INT;
1717:Generated_Source\PSoC4/CyLFClk.c ****                 if(cySysWdtCallback[CY_SYS_WDT_COUNTER0] != (void *) 0)
1718:Generated_Source\PSoC4/CyLFClk.c ****                 {
1719:Generated_Source\PSoC4/CyLFClk.c ****                     (void)(cySysWdtCallback[CY_SYS_WDT_COUNTER0])();
1720:Generated_Source\PSoC4/CyLFClk.c ****                 }
1721:Generated_Source\PSoC4/CyLFClk.c ****             }
1722:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER0_INT);
1723:Generated_Source\PSoC4/CyLFClk.c ****         }
1724:Generated_Source\PSoC4/CyLFClk.c **** 
1725:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (CY_SYS_WDT_COUNTER1_INT & CY_SYS_WDT_CONTROL_REG))
1726:Generated_Source\PSoC4/CyLFClk.c ****         {
1727:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_WDT_COUNTER1_INT & wdtIsrMask))
1728:Generated_Source\PSoC4/CyLFClk.c ****             {
1729:Generated_Source\PSoC4/CyLFClk.c ****                 wdtIsrMask &= ~(disableServicedIsr & CY_SYS_WDT_COUNTER1_INT);
1730:Generated_Source\PSoC4/CyLFClk.c ****                 disableServicedIsr  &= ~CY_SYS_WDT_COUNTER1_INT;
1731:Generated_Source\PSoC4/CyLFClk.c ****                 if(cySysWdtCallback[CY_SYS_WDT_COUNTER1] != (void *) 0)
1732:Generated_Source\PSoC4/CyLFClk.c ****                 {
1733:Generated_Source\PSoC4/CyLFClk.c ****                     (void)(cySysWdtCallback[CY_SYS_WDT_COUNTER1])();
1734:Generated_Source\PSoC4/CyLFClk.c ****                 }
1735:Generated_Source\PSoC4/CyLFClk.c ****             }
1736:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER1_INT);
1737:Generated_Source\PSoC4/CyLFClk.c ****         }
1738:Generated_Source\PSoC4/CyLFClk.c **** 
1739:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (CY_SYS_WDT_COUNTER2_INT & CY_SYS_WDT_CONTROL_REG))
1740:Generated_Source\PSoC4/CyLFClk.c ****         {
1741:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_WDT_COUNTER2_INT & wdtIsrMask))
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 32


1742:Generated_Source\PSoC4/CyLFClk.c ****             {
1743:Generated_Source\PSoC4/CyLFClk.c ****                 if(cySysWdtCallback[CY_SYS_WDT_COUNTER2] != (void *) 0)
1744:Generated_Source\PSoC4/CyLFClk.c ****                 {
1745:Generated_Source\PSoC4/CyLFClk.c ****                     (void)(cySysWdtCallback[CY_SYS_WDT_COUNTER2])();
1746:Generated_Source\PSoC4/CyLFClk.c ****                 }
1747:Generated_Source\PSoC4/CyLFClk.c ****             }
1748:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER2_INT);
1749:Generated_Source\PSoC4/CyLFClk.c ****         }
1750:Generated_Source\PSoC4/CyLFClk.c ****     }
1751:Generated_Source\PSoC4/CyLFClk.c **** 
1752:Generated_Source\PSoC4/CyLFClk.c **** 
1753:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1754:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWatchdogFeed
1755:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1756:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1757:Generated_Source\PSoC4/CyLFClk.c ****     * Feeds the corresponded Watchdog Counter before it causes the device reset.
1758:Generated_Source\PSoC4/CyLFClk.c ****     *
1759:Generated_Source\PSoC4/CyLFClk.c ****     * Supported only for first WDT0 and second WDT1 counters in the "Watchdog" or 
1760:Generated_Source\PSoC4/CyLFClk.c ****     * "Watchdog w/ Interrupts" modes.
1761:Generated_Source\PSoC4/CyLFClk.c ****     *
1762:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum
1763:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER0 - Feeds the Counter 0 <br>
1764:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER1 - Feeds the Counter 1
1765:Generated_Source\PSoC4/CyLFClk.c ****     *
1766:Generated_Source\PSoC4/CyLFClk.c ****     * Value of counterNum corresponds to appropriate counter. For example value 1 
1767:Generated_Source\PSoC4/CyLFClk.c ****     * corresponds to second WDT1 Counter.
1768:Generated_Source\PSoC4/CyLFClk.c ****     *
1769:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1770:Generated_Source\PSoC4/CyLFClk.c ****     * Clears the WDT counter in the "Watchdog" mode or clears the WDT interrupt in
1771:Generated_Source\PSoC4/CyLFClk.c ****     * "Watchdog w/ Interrupts" mode. Does nothing in other modes.
1772:Generated_Source\PSoC4/CyLFClk.c ****     *
1773:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1774:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWatchdogFeed(uint32 counterNum)
1775:Generated_Source\PSoC4/CyLFClk.c ****     {
1776:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum == CY_SYS_WDT_COUNTER0)
1777:Generated_Source\PSoC4/CyLFClk.c ****         {
1778:Generated_Source\PSoC4/CyLFClk.c ****             if(CY_SYS_WDT_MODE_INT_RESET == CySysWdtGetMode(counterNum))
1779:Generated_Source\PSoC4/CyLFClk.c ****             {
1780:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER0_INT);
1781:Generated_Source\PSoC4/CyLFClk.c ****             }
1782:Generated_Source\PSoC4/CyLFClk.c ****             else if(CY_SYS_WDT_MODE_RESET == CySysWdtGetMode(counterNum))
1783:Generated_Source\PSoC4/CyLFClk.c ****             {
1784:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtResetCounters(CY_SYS_WDT_COUNTER0_RESET);
1785:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER0_INT);
1786:Generated_Source\PSoC4/CyLFClk.c ****             }
1787:Generated_Source\PSoC4/CyLFClk.c ****             else
1788:Generated_Source\PSoC4/CyLFClk.c ****             {
1789:Generated_Source\PSoC4/CyLFClk.c ****                 /* Do nothing. */
1790:Generated_Source\PSoC4/CyLFClk.c ****             }
1791:Generated_Source\PSoC4/CyLFClk.c ****         }
1792:Generated_Source\PSoC4/CyLFClk.c ****         else if(counterNum == CY_SYS_WDT_COUNTER1)
1793:Generated_Source\PSoC4/CyLFClk.c ****         {
1794:Generated_Source\PSoC4/CyLFClk.c ****             if(CY_SYS_WDT_MODE_INT_RESET == CySysWdtGetMode(counterNum))
1795:Generated_Source\PSoC4/CyLFClk.c ****             {
1796:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER1_INT);
1797:Generated_Source\PSoC4/CyLFClk.c ****             }
1798:Generated_Source\PSoC4/CyLFClk.c ****             else if(CY_SYS_WDT_MODE_RESET == CySysWdtGetMode(counterNum))
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 33


1799:Generated_Source\PSoC4/CyLFClk.c ****             {
1800:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtResetCounters(CY_SYS_WDT_COUNTER1_RESET);
1801:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER1_INT);
1802:Generated_Source\PSoC4/CyLFClk.c ****             }
1803:Generated_Source\PSoC4/CyLFClk.c ****             else
1804:Generated_Source\PSoC4/CyLFClk.c ****             {
1805:Generated_Source\PSoC4/CyLFClk.c ****                 /* Do nothing. */
1806:Generated_Source\PSoC4/CyLFClk.c ****             }
1807:Generated_Source\PSoC4/CyLFClk.c ****         }
1808:Generated_Source\PSoC4/CyLFClk.c ****         else
1809:Generated_Source\PSoC4/CyLFClk.c ****         {
1810:Generated_Source\PSoC4/CyLFClk.c ****             /* Do nothing. */
1811:Generated_Source\PSoC4/CyLFClk.c ****         }
1812:Generated_Source\PSoC4/CyLFClk.c ****     }
1813:Generated_Source\PSoC4/CyLFClk.c **** 
1814:Generated_Source\PSoC4/CyLFClk.c **** 
1815:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1816:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkLfclkPosedgeCatch
1817:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1818:Generated_Source\PSoC4/CyLFClk.c ****     * \internal
1819:Generated_Source\PSoC4/CyLFClk.c ****     * Returns once the LFCLK positive edge occurred.
1820:Generated_Source\PSoC4/CyLFClk.c ****     *
1821:Generated_Source\PSoC4/CyLFClk.c ****     * CySysClkLfclkPosedgeRestore() should be called after this function
1822:Generated_Source\PSoC4/CyLFClk.c ****     * to restore the WDT configuration.
1823:Generated_Source\PSoC4/CyLFClk.c ****     *
1824:Generated_Source\PSoC4/CyLFClk.c ****     * A pair of the CySysClkLfclkPosedgeCatch() and CySysClkLfclkPosedgeRestore()
1825:Generated_Source\PSoC4/CyLFClk.c ****     * functions is expected to be called inside a critical section.
1826:Generated_Source\PSoC4/CyLFClk.c ****     *
1827:Generated_Source\PSoC4/CyLFClk.c ****     * To ensure that the WDT counter value is read until it changes, the enabled
1828:Generated_Source\PSoC4/CyLFClk.c ****     * WDT counter is used. If no counter is enabled, counter 0 is enabled.
1829:Generated_Source\PSoC4/CyLFClk.c ****     * And after the LFCLK source is switched, the counter 0 configuration
1830:Generated_Source\PSoC4/CyLFClk.c ****     * is restored.
1831:Generated_Source\PSoC4/CyLFClk.c ****     *
1832:Generated_Source\PSoC4/CyLFClk.c ****     * Not applicable for the PSoC 4000 / PSoC 4000S / PSoC 4100S / PSoC Analog 
1833:Generated_Source\PSoC4/CyLFClk.c ****     * Coprocessor devices.
1834:Generated_Source\PSoC4/CyLFClk.c ****     *
1835:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1836:Generated_Source\PSoC4/CyLFClk.c ****     * This function has no effect if WDT is locked (CySysWdtLock() is
1837:Generated_Source\PSoC4/CyLFClk.c ****     * called). Call CySysWdtUnlock() to unlock WDT.
1838:Generated_Source\PSoC4/CyLFClk.c ****     * \endinternal
1839:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1840:Generated_Source\PSoC4/CyLFClk.c ****     static void CySysClkLfclkPosedgeCatch(void)
1841:Generated_Source\PSoC4/CyLFClk.c ****     {
1842:Generated_Source\PSoC4/CyLFClk.c ****         uint32 firstCount;
1843:Generated_Source\PSoC4/CyLFClk.c ****         static uint32 lfclkPosedgeEnabledWdtCounter = 0u;
1844:Generated_Source\PSoC4/CyLFClk.c **** 
1845:Generated_Source\PSoC4/CyLFClk.c ****         if (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER0))
1846:Generated_Source\PSoC4/CyLFClk.c ****         {
1847:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeEnabledWdtCounter = CY_SYS_WDT_COUNTER0;
1848:Generated_Source\PSoC4/CyLFClk.c ****         }
1849:Generated_Source\PSoC4/CyLFClk.c ****         else if (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER1))
1850:Generated_Source\PSoC4/CyLFClk.c ****         {
1851:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeEnabledWdtCounter = CY_SYS_WDT_COUNTER1;
1852:Generated_Source\PSoC4/CyLFClk.c ****         }
1853:Generated_Source\PSoC4/CyLFClk.c ****         else if (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER2))
1854:Generated_Source\PSoC4/CyLFClk.c ****         {
1855:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeEnabledWdtCounter = CY_SYS_WDT_COUNTER2;
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 34


1856:Generated_Source\PSoC4/CyLFClk.c ****         }
1857:Generated_Source\PSoC4/CyLFClk.c ****         else /* All WDT counters are disabled */
1858:Generated_Source\PSoC4/CyLFClk.c ****         {
1859:Generated_Source\PSoC4/CyLFClk.c ****             /* Configure WDT counter # 0 */
1860:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeWdtCounter0Enabled = 1u;
1861:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeEnabledWdtCounter = CY_SYS_WDT_COUNTER0;
1862:Generated_Source\PSoC4/CyLFClk.c **** 
1863:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeWdtCounter0Mode = CySysWdtGetMode(CY_SYS_WDT_COUNTER0);
1864:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtSetMode(CY_SYS_WDT_COUNTER0, CY_SYS_WDT_MODE_NONE);
1865:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtEnable(CY_SYS_WDT_COUNTER0_MASK);
1866:Generated_Source\PSoC4/CyLFClk.c ****         }
1867:Generated_Source\PSoC4/CyLFClk.c **** 
1868:Generated_Source\PSoC4/CyLFClk.c ****         firstCount = CySysWdtGetCount(lfclkPosedgeEnabledWdtCounter);
1869:Generated_Source\PSoC4/CyLFClk.c ****         while (CySysWdtGetCount(lfclkPosedgeEnabledWdtCounter) == firstCount)
1870:Generated_Source\PSoC4/CyLFClk.c ****         {
1871:Generated_Source\PSoC4/CyLFClk.c ****             /* Wait for counter to increment */
1872:Generated_Source\PSoC4/CyLFClk.c ****         }
1873:Generated_Source\PSoC4/CyLFClk.c ****     }
1874:Generated_Source\PSoC4/CyLFClk.c **** 
1875:Generated_Source\PSoC4/CyLFClk.c **** 
1876:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1877:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkLfclkPosedgeRestore
1878:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1879:Generated_Source\PSoC4/CyLFClk.c ****     * \internal
1880:Generated_Source\PSoC4/CyLFClk.c ****     *  Restores the WDT configuration after a CySysClkLfclkPosedgeCatch() call.
1881:Generated_Source\PSoC4/CyLFClk.c ****     *
1882:Generated_Source\PSoC4/CyLFClk.c ****     *  A pair of the CySysClkLfclkPosedgeCatch() and CySysClkLfclkPosedgeRestore()
1883:Generated_Source\PSoC4/CyLFClk.c ****     *  functions is expected to be called inside a critical section.
1884:Generated_Source\PSoC4/CyLFClk.c ****     *
1885:Generated_Source\PSoC4/CyLFClk.c ****     * Not applicable for the PSoC 4000/PSoC 4000S / PSoC 4100S / PSoC Analog 
1886:Generated_Source\PSoC4/CyLFClk.c ****     * Coprocessor devices.
1887:Generated_Source\PSoC4/CyLFClk.c ****     *
1888:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1889:Generated_Source\PSoC4/CyLFClk.c ****     *  This function has no effect if WDT is locked (CySysWdtLock() is
1890:Generated_Source\PSoC4/CyLFClk.c ****     *  called). Call CySysWdtUnlock() to unlock WDT.
1891:Generated_Source\PSoC4/CyLFClk.c ****     *
1892:Generated_Source\PSoC4/CyLFClk.c ****     * \endinternal
1893:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1894:Generated_Source\PSoC4/CyLFClk.c ****     static void CySysClkLfclkPosedgeRestore(void)
1895:Generated_Source\PSoC4/CyLFClk.c ****     {
1896:Generated_Source\PSoC4/CyLFClk.c ****         if (lfclkPosedgeWdtCounter0Enabled != 0u)
1897:Generated_Source\PSoC4/CyLFClk.c ****         {
1898:Generated_Source\PSoC4/CyLFClk.c ****             /* Restore counter # 0 configuration and force its shutdown */
1899:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONTROL_REG &= (uint32)(~CY_SYS_WDT_COUNTER0_MASK);
1900:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtSetMode(CY_SYS_WDT_COUNTER0, lfclkPosedgeWdtCounter0Mode);
1901:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeWdtCounter0Enabled = 0u;
1902:Generated_Source\PSoC4/CyLFClk.c ****         }
1903:Generated_Source\PSoC4/CyLFClk.c ****     }
1904:Generated_Source\PSoC4/CyLFClk.c **** 
1905:Generated_Source\PSoC4/CyLFClk.c **** #else
1906:Generated_Source\PSoC4/CyLFClk.c **** 
1907:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1908:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetEnabledStatus
1909:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1910:Generated_Source\PSoC4/CyLFClk.c ****     *
1911:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the enabled status of the WDT counter.
1912:Generated_Source\PSoC4/CyLFClk.c ****     *
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 35


1913:Generated_Source\PSoC4/CyLFClk.c ****     * \return The status of the WDT counter:
1914:Generated_Source\PSoC4/CyLFClk.c ****     * \return 0 - Counter is disabled
1915:Generated_Source\PSoC4/CyLFClk.c ****     * \return 1 - Counter is enabled
1916:Generated_Source\PSoC4/CyLFClk.c ****     *
1917:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1918:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetEnabledStatus(void)
1919:Generated_Source\PSoC4/CyLFClk.c ****     {
1920:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WDT_DISABLE_KEY_REG == CY_SYS_WDT_KEY) ? (uint32) 0u : (uint32) 1u);
1921:Generated_Source\PSoC4/CyLFClk.c ****     }
1922:Generated_Source\PSoC4/CyLFClk.c **** 
1923:Generated_Source\PSoC4/CyLFClk.c **** 
1924:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1925:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtEnable
1926:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1927:Generated_Source\PSoC4/CyLFClk.c ****     *
1928:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1929:Generated_Source\PSoC4/CyLFClk.c ****     * Enables watchdog timer reset generation.
1930:Generated_Source\PSoC4/CyLFClk.c ****     *
1931:Generated_Source\PSoC4/CyLFClk.c ****     * CySysWdtClearInterrupt() feeds the watchdog. Two unserviced interrupts lead 
1932:Generated_Source\PSoC4/CyLFClk.c ****     * to a system reset (i.e. at the third match).
1933:Generated_Source\PSoC4/CyLFClk.c ****     *
1934:Generated_Source\PSoC4/CyLFClk.c ****     * ILO is enabled by the hardware once WDT is started.
1935:Generated_Source\PSoC4/CyLFClk.c ****     *
1936:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1937:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtEnable(void)
1938:Generated_Source\PSoC4/CyLFClk.c ****     {
1939:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_DISABLE_KEY_REG = 0u;
1940:Generated_Source\PSoC4/CyLFClk.c ****     }
1941:Generated_Source\PSoC4/CyLFClk.c **** 
1942:Generated_Source\PSoC4/CyLFClk.c **** 
1943:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1944:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtDisable
1945:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1946:Generated_Source\PSoC4/CyLFClk.c ****     *
1947:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Disables the WDT reset generation.
1948:Generated_Source\PSoC4/CyLFClk.c ****     *
1949:Generated_Source\PSoC4/CyLFClk.c ****     * This function unlocks the ENABLE bit in the CLK_ILO_CONFIG registers and
1950:Generated_Source\PSoC4/CyLFClk.c ****     * enables the user to disable ILO.
1951:Generated_Source\PSoC4/CyLFClk.c ****     *
1952:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1953:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtDisable(void)
1954:Generated_Source\PSoC4/CyLFClk.c ****     {
1955:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_DISABLE_KEY_REG = CY_SYS_WDT_KEY;
1956:Generated_Source\PSoC4/CyLFClk.c ****     }
1957:Generated_Source\PSoC4/CyLFClk.c **** 
1958:Generated_Source\PSoC4/CyLFClk.c **** 
1959:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1960:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetMatch
1961:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1962:Generated_Source\PSoC4/CyLFClk.c ****     *
1963:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Configures the WDT counter match comparison value.
1964:Generated_Source\PSoC4/CyLFClk.c ****     *
1965:Generated_Source\PSoC4/CyLFClk.c ****     * \param match Valid range [0-65535]. The value to be used to match against 
1966:Generated_Source\PSoC4/CyLFClk.c ****     * the counter.
1967:Generated_Source\PSoC4/CyLFClk.c ****     *
1968:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1969:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetMatch(uint32 match)
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 36


1970:Generated_Source\PSoC4/CyLFClk.c ****     {
1971:Generated_Source\PSoC4/CyLFClk.c ****         match &= CY_SYS_WDT_MATCH_MASK;
1972:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_MATCH_REG = (CY_SYS_WDT_MATCH_REG & (uint32)(~CY_SYS_WDT_MATCH_MASK)) | match;
1973:Generated_Source\PSoC4/CyLFClk.c ****     }
1974:Generated_Source\PSoC4/CyLFClk.c **** 
1975:Generated_Source\PSoC4/CyLFClk.c **** 
1976:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1977:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetMatch
1978:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1979:Generated_Source\PSoC4/CyLFClk.c ****     *
1980:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the WDT counter match comparison value.
1981:Generated_Source\PSoC4/CyLFClk.c ****     *
1982:Generated_Source\PSoC4/CyLFClk.c ****     * \return The counter match value.
1983:Generated_Source\PSoC4/CyLFClk.c ****     *
1984:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1985:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetMatch(void)
1986:Generated_Source\PSoC4/CyLFClk.c ****     {
1987:Generated_Source\PSoC4/CyLFClk.c ****         return (CY_SYS_WDT_MATCH_REG & CY_SYS_WDT_MATCH_MASK);
1988:Generated_Source\PSoC4/CyLFClk.c ****     }
1989:Generated_Source\PSoC4/CyLFClk.c **** 
1990:Generated_Source\PSoC4/CyLFClk.c **** 
1991:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1992:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetCount
1993:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1994:Generated_Source\PSoC4/CyLFClk.c ****     *
1995:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the current WDT counter value.
1996:Generated_Source\PSoC4/CyLFClk.c ****     *
1997:Generated_Source\PSoC4/CyLFClk.c ****     * \return A live counter value.
1998:Generated_Source\PSoC4/CyLFClk.c ****     *
1999:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2000:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetCount(void)
2001:Generated_Source\PSoC4/CyLFClk.c ****     {
2002:Generated_Source\PSoC4/CyLFClk.c ****         return ((uint32)CY_SYS_WDT_COUNTER_REG);
2003:Generated_Source\PSoC4/CyLFClk.c ****     }
2004:Generated_Source\PSoC4/CyLFClk.c **** 
2005:Generated_Source\PSoC4/CyLFClk.c **** 
2006:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2007:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetIgnoreBits
2008:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2009:Generated_Source\PSoC4/CyLFClk.c ****     *
2010:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2011:Generated_Source\PSoC4/CyLFClk.c ****     * Configures the number of the MSB bits of the watchdog timer that are not
2012:Generated_Source\PSoC4/CyLFClk.c ****     * checked against the match.
2013:Generated_Source\PSoC4/CyLFClk.c ****     *
2014:Generated_Source\PSoC4/CyLFClk.c ****     * \param bitsNum Valid range [0-15]. The number of the MSB bits.
2015:Generated_Source\PSoC4/CyLFClk.c ****     *
2016:Generated_Source\PSoC4/CyLFClk.c ****     * \details The value of bitsNum controls the time-to-reset of the watchdog
2017:Generated_Source\PSoC4/CyLFClk.c ****     * (which happens after 3 successive matches).
2018:Generated_Source\PSoC4/CyLFClk.c ****     *
2019:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2020:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetIgnoreBits(uint32 bitsNum)
2021:Generated_Source\PSoC4/CyLFClk.c ****     {
2022:Generated_Source\PSoC4/CyLFClk.c ****         bitsNum = ((uint32)(bitsNum << CY_SYS_WDT_IGNORE_BITS_SHIFT) & CY_SYS_WDT_IGNORE_BITS_MASK)
2023:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_MATCH_REG = (CY_SYS_WDT_MATCH_REG & (uint32)(~CY_SYS_WDT_IGNORE_BITS_MASK)) | bi
2024:Generated_Source\PSoC4/CyLFClk.c ****     }
2025:Generated_Source\PSoC4/CyLFClk.c **** 
2026:Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 37


2027:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2028:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetIgnoreBits
2029:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2030:Generated_Source\PSoC4/CyLFClk.c ****     *
2031:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2032:Generated_Source\PSoC4/CyLFClk.c ****     * Reads the number of the  MSB bits of the watchdog timer that are not
2033:Generated_Source\PSoC4/CyLFClk.c ****     * checked against the match.
2034:Generated_Source\PSoC4/CyLFClk.c ****     *
2035:Generated_Source\PSoC4/CyLFClk.c ****     * \return The number of the MSB bits.
2036:Generated_Source\PSoC4/CyLFClk.c ****     *
2037:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2038:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetIgnoreBits(void)
2039:Generated_Source\PSoC4/CyLFClk.c ****     {
2040:Generated_Source\PSoC4/CyLFClk.c ****         return((uint32)((CY_SYS_WDT_MATCH_REG & CY_SYS_WDT_IGNORE_BITS_MASK) >> CY_SYS_WDT_IGNORE_B
2041:Generated_Source\PSoC4/CyLFClk.c ****     }
2042:Generated_Source\PSoC4/CyLFClk.c **** 
2043:Generated_Source\PSoC4/CyLFClk.c **** 
2044:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2045:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtClearInterrupt
2046:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2047:Generated_Source\PSoC4/CyLFClk.c ****     *
2048:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2049:Generated_Source\PSoC4/CyLFClk.c ****     * Feeds the watchdog.
2050:Generated_Source\PSoC4/CyLFClk.c ****     * Cleans the WDT match flag which is set every time the WDT counter reaches a 
2051:Generated_Source\PSoC4/CyLFClk.c ****     * WDT match value. Two unserviced interrupts lead to a system reset 
2052:Generated_Source\PSoC4/CyLFClk.c ****     * (i.e. at the third match).
2053:Generated_Source\PSoC4/CyLFClk.c ****     *
2054:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2055:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtClearInterrupt(void)
2056:Generated_Source\PSoC4/CyLFClk.c ****     {
2057:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_SRSS_INTR_REG |= CY_SYS_WDT_LOWER_BIT_MASK;
2058:Generated_Source\PSoC4/CyLFClk.c ****     }
2059:Generated_Source\PSoC4/CyLFClk.c **** 
2060:Generated_Source\PSoC4/CyLFClk.c **** 
2061:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2062:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtMaskInterrupt
2063:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2064:Generated_Source\PSoC4/CyLFClk.c ****     *
2065:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2066:Generated_Source\PSoC4/CyLFClk.c ****     * After masking interrupts from WDT, they are not passed to CPU.
2067:Generated_Source\PSoC4/CyLFClk.c ****     * This function does not disable WDT reset generation.
2068:Generated_Source\PSoC4/CyLFClk.c ****     *
2069:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2070:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtMaskInterrupt(void)
2071:Generated_Source\PSoC4/CyLFClk.c ****     {
2072:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_SRSS_INTR_MASK_REG &= (uint32)(~ (uint32)CY_SYS_WDT_LOWER_BIT_MASK);
2073:Generated_Source\PSoC4/CyLFClk.c ****     }
2074:Generated_Source\PSoC4/CyLFClk.c **** 
2075:Generated_Source\PSoC4/CyLFClk.c **** 
2076:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2077:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtUnmaskInterrupt
2078:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2079:Generated_Source\PSoC4/CyLFClk.c ****     *
2080:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2081:Generated_Source\PSoC4/CyLFClk.c ****     * After unmasking interrupts from WDT, they are passed to CPU.
2082:Generated_Source\PSoC4/CyLFClk.c ****     * This function does not impact the reset generation.
2083:Generated_Source\PSoC4/CyLFClk.c ****     *
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 38


2084:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2085:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtUnmaskInterrupt(void)
2086:Generated_Source\PSoC4/CyLFClk.c ****     {
2087:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_SRSS_INTR_MASK_REG |= CY_SYS_WDT_LOWER_BIT_MASK;
2088:Generated_Source\PSoC4/CyLFClk.c ****     }
2089:Generated_Source\PSoC4/CyLFClk.c **** 
2090:Generated_Source\PSoC4/CyLFClk.c **** 
2091:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2092:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetIsrCallback
2093:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2094:Generated_Source\PSoC4/CyLFClk.c ****     *
2095:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2096:Generated_Source\PSoC4/CyLFClk.c ****     * Sets the ISR callback function for the WDT counter
2097:Generated_Source\PSoC4/CyLFClk.c ****     *
2098:Generated_Source\PSoC4/CyLFClk.c ****     * \param function The pointer to the callback function.
2099:Generated_Source\PSoC4/CyLFClk.c ****     *
2100:Generated_Source\PSoC4/CyLFClk.c ****     * \return The pointer to a previous callback function.
2101:Generated_Source\PSoC4/CyLFClk.c ****     *
2102:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2103:Generated_Source\PSoC4/CyLFClk.c ****     cyWdtCallback CySysWdtSetInterruptCallback(cyWdtCallback function)
2104:Generated_Source\PSoC4/CyLFClk.c ****     {
2105:Generated_Source\PSoC4/CyLFClk.c ****         cyWdtCallback prevCallback = (void *)0;
2106:Generated_Source\PSoC4/CyLFClk.c **** 
2107:Generated_Source\PSoC4/CyLFClk.c ****         prevCallback = cySysWdtCallback;
2108:Generated_Source\PSoC4/CyLFClk.c ****         cySysWdtCallback = function;
2109:Generated_Source\PSoC4/CyLFClk.c **** 
2110:Generated_Source\PSoC4/CyLFClk.c ****         return(prevCallback);
2111:Generated_Source\PSoC4/CyLFClk.c ****     }
2112:Generated_Source\PSoC4/CyLFClk.c **** 
2113:Generated_Source\PSoC4/CyLFClk.c **** 
2114:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2115:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetIsrCallback
2116:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2117:Generated_Source\PSoC4/CyLFClk.c ****     *
2118:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2119:Generated_Source\PSoC4/CyLFClk.c ****     * Gets the ISR callback function for the WDT counter
2120:Generated_Source\PSoC4/CyLFClk.c ****     *
2121:Generated_Source\PSoC4/CyLFClk.c ****     * \return The pointer to the callback function registered for WDT.
2122:Generated_Source\PSoC4/CyLFClk.c ****     *
2123:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2124:Generated_Source\PSoC4/CyLFClk.c ****     cyWdtCallback CySysWdtGetInterruptCallback(void)
2125:Generated_Source\PSoC4/CyLFClk.c ****     {
2126:Generated_Source\PSoC4/CyLFClk.c ****         return(cySysWdtCallback);
2127:Generated_Source\PSoC4/CyLFClk.c ****     }
2128:Generated_Source\PSoC4/CyLFClk.c **** 
2129:Generated_Source\PSoC4/CyLFClk.c **** 
2130:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2131:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtIsr
2132:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2133:Generated_Source\PSoC4/CyLFClk.c ****     *
2134:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2135:Generated_Source\PSoC4/CyLFClk.c ****     * This is the handler of the WDT interrupt in CPU NVIC.
2136:Generated_Source\PSoC4/CyLFClk.c ****     *
2137:Generated_Source\PSoC4/CyLFClk.c ****     * The handler calls the respective callback functions configured by the user 
2138:Generated_Source\PSoC4/CyLFClk.c ****     * by using CySysWdtSetIsrCallback() API.
2139:Generated_Source\PSoC4/CyLFClk.c ****     *
2140:Generated_Source\PSoC4/CyLFClk.c ****     *
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 39


2141:Generated_Source\PSoC4/CyLFClk.c ****     * \details
2142:Generated_Source\PSoC4/CyLFClk.c ****     * This function clears the WDT interrupt every time when it is called.
2143:Generated_Source\PSoC4/CyLFClk.c ****     * Reset after the 3rd interrupt does not happen if this function is registered
2144:Generated_Source\PSoC4/CyLFClk.c ****     * as the interrupt handler even if the "Watchdog with Interrupt" mode is
2145:Generated_Source\PSoC4/CyLFClk.c ****     * selected on the "Low Frequency Clocks" tab.
2146:Generated_Source\PSoC4/CyLFClk.c ****     *
2147:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2148:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtIsr(void)
2149:Generated_Source\PSoC4/CyLFClk.c ****     {
2150:Generated_Source\PSoC4/CyLFClk.c ****         if(cySysWdtCallback != (void *) 0)
2151:Generated_Source\PSoC4/CyLFClk.c ****         {
2152:Generated_Source\PSoC4/CyLFClk.c ****             (void)(cySysWdtCallback)();
2153:Generated_Source\PSoC4/CyLFClk.c ****         }
2154:Generated_Source\PSoC4/CyLFClk.c **** 
2155:Generated_Source\PSoC4/CyLFClk.c ****         CySysWdtClearInterrupt();
2156:Generated_Source\PSoC4/CyLFClk.c ****     }
2157:Generated_Source\PSoC4/CyLFClk.c **** 
2158:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2) */
2159:Generated_Source\PSoC4/CyLFClk.c **** 
2160:Generated_Source\PSoC4/CyLFClk.c **** 
2161:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
2162:Generated_Source\PSoC4/CyLFClk.c **** 
2163:Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
2164:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkGetTimerSource
2165:Generated_Source\PSoC4/CyLFClk.c **** ********************************************************************************
2166:Generated_Source\PSoC4/CyLFClk.c **** *
2167:Generated_Source\PSoC4/CyLFClk.c **** * \brief Gets the clock source for the DeepSleep Timers.
2168:Generated_Source\PSoC4/CyLFClk.c **** *
2169:Generated_Source\PSoC4/CyLFClk.c **** * The function is applicable only for PSoC 4100S / PSoC Analog Coprocessor.
2170:Generated_Source\PSoC4/CyLFClk.c **** *
2171:Generated_Source\PSoC4/CyLFClk.c **** * \return The DeepSleep Timer source
2172:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_TIMER_SRC_ILO Internal Low Frequency (32 kHz) Oscillator (ILO)
2173:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_TIMER_SRC_WCO Low Frequency Watch Crystal Oscillator (WCO)
2174:Generated_Source\PSoC4/CyLFClk.c **** *
2175:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
2176:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkGetTimerSource(void)
2177:Generated_Source\PSoC4/CyLFClk.c ****     {
  27              		.loc 1 2177 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
2178:Generated_Source\PSoC4/CyLFClk.c ****         uint32 timerSource;
2179:Generated_Source\PSoC4/CyLFClk.c ****         timerSource = CY_SYS_WCO_WDT_CONFIG_REG & CY_SYS_CLK_TIMER_SEL_MASK;
  32              		.loc 1 2179 0
  33 0000 024B     		ldr	r3, .L2
  34 0002 1868     		ldr	r0, [r3]
  35 0004 800F     		lsrs	r0, r0, #30
  36 0006 8007     		lsls	r0, r0, #30
  37              	.LVL0:
2180:Generated_Source\PSoC4/CyLFClk.c ****         return (timerSource);
2181:Generated_Source\PSoC4/CyLFClk.c ****     }    
  38              		.loc 1 2181 0
  39              		@ sp needed
  40 0008 7047     		bx	lr
  41              	.L3:
  42 000a C046     		.align	2
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 40


  43              	.L2:
  44 000c 0C020640 		.word	1074135564
  45              		.cfi_endproc
  46              	.LFE25:
  47              		.size	CySysClkGetTimerSource, .-CySysClkGetTimerSource
  48              		.section	.text.CySysClkIloStart,"ax",%progbits
  49              		.align	2
  50              		.global	CySysClkIloStart
  51              		.code	16
  52              		.thumb_func
  53              		.type	CySysClkIloStart, %function
  54              	CySysClkIloStart:
  55              	.LFB1:
  84:Generated_Source\PSoC4/CyLFClk.c ****     CY_SYS_CLK_ILO_CONFIG_REG |= CY_SYS_CLK_ILO_CONFIG_ENABLE;
  56              		.loc 1 84 0
  57              		.cfi_startproc
  58              		@ args = 0, pretend = 0, frame = 0
  59              		@ frame_needed = 0, uses_anonymous_args = 0
  60              		@ link register save eliminated.
  85:Generated_Source\PSoC4/CyLFClk.c **** }
  61              		.loc 1 85 0
  62 0000 034A     		ldr	r2, .L5
  63 0002 1368     		ldr	r3, [r2]
  64 0004 8021     		movs	r1, #128
  65 0006 0906     		lsls	r1, r1, #24
  66 0008 0B43     		orrs	r3, r1
  67 000a 1360     		str	r3, [r2]
  86:Generated_Source\PSoC4/CyLFClk.c **** 
  68              		.loc 1 86 0
  69              		@ sp needed
  70 000c 7047     		bx	lr
  71              	.L6:
  72 000e C046     		.align	2
  73              	.L5:
  74 0010 2C000340 		.word	1073938476
  75              		.cfi_endproc
  76              	.LFE1:
  77              		.size	CySysClkIloStart, .-CySysClkIloStart
  78              		.section	.text.CySysClkIloStop,"ax",%progbits
  79              		.align	2
  80              		.global	CySysClkIloStop
  81              		.code	16
  82              		.thumb_func
  83              		.type	CySysClkIloStop, %function
  84              	CySysClkIloStop:
  85              	.LFB2:
 109:Generated_Source\PSoC4/CyLFClk.c ****     #if(CY_IP_SRSSV2)
  86              		.loc 1 109 0
  87              		.cfi_startproc
  88              		@ args = 0, pretend = 0, frame = 0
  89              		@ frame_needed = 0, uses_anonymous_args = 0
  90              		@ link register save eliminated.
 141:Generated_Source\PSoC4/CyLFClk.c ****     #endif /* (CY_IP_SRSSV2) */
  91              		.loc 1 141 0
  92 0000 024A     		ldr	r2, .L8
  93 0002 1368     		ldr	r3, [r2]
  94 0004 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 41


  95 0006 5B08     		lsrs	r3, r3, #1
  96 0008 1360     		str	r3, [r2]
 143:Generated_Source\PSoC4/CyLFClk.c **** 
  97              		.loc 1 143 0
  98              		@ sp needed
  99 000a 7047     		bx	lr
 100              	.L9:
 101              		.align	2
 102              	.L8:
 103 000c 2C000340 		.word	1073938476
 104              		.cfi_endproc
 105              	.LFE2:
 106              		.size	CySysClkIloStop, .-CySysClkIloStop
 107              		.section	.text.CySysClkIloStartMeasurement,"ax",%progbits
 108              		.align	2
 109              		.global	CySysClkIloStartMeasurement
 110              		.code	16
 111              		.thumb_func
 112              		.type	CySysClkIloStartMeasurement, %function
 113              	CySysClkIloStartMeasurement:
 114              	.LFB3:
 169:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2 && (!CY_IP_CPUSS))
 115              		.loc 1 169 0
 116              		.cfi_startproc
 117              		@ args = 0, pretend = 0, frame = 0
 118              		@ frame_needed = 0, uses_anonymous_args = 0
 119              		@ link register save eliminated.
 182:Generated_Source\PSoC4/CyLFClk.c ****                             CY_SYS_CLK_SEL_ILO_DFT_SOURCE; 
 120              		.loc 1 182 0
 121 0000 074A     		ldr	r2, .L11
 122 0002 1168     		ldr	r1, [r2]
 123 0004 074B     		ldr	r3, .L11+4
 124 0006 0B40     		ands	r3, r1
 125 0008 8021     		movs	r1, #128
 126 000a 4900     		lsls	r1, r1, #1
 127 000c 0B43     		orrs	r3, r1
 128 000e 1360     		str	r3, [r2]
 185:Generated_Source\PSoC4/CyLFClk.c ****                             CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1;
 129              		.loc 1 185 0
 130 0010 054A     		ldr	r2, .L11+8
 131 0012 1168     		ldr	r1, [r2]
 132 0014 054B     		ldr	r3, .L11+12
 133 0016 0B40     		ands	r3, r1
 134 0018 0549     		ldr	r1, .L11+16
 135 001a 0B43     		orrs	r3, r1
 136 001c 1360     		str	r3, [r2]
 187:Generated_Source\PSoC4/CyLFClk.c **** 
 137              		.loc 1 187 0
 138              		@ sp needed
 139 001e 7047     		bx	lr
 140              	.L12:
 141              		.align	2
 142              	.L11:
 143 0020 34000340 		.word	1073938484
 144 0024 FFF0FFFF 		.word	-3841
 145 0028 18000340 		.word	1073938456
 146 002c F0F0FFFF 		.word	-3856
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 42


 147 0030 08090000 		.word	2312
 148              		.cfi_endproc
 149              	.LFE3:
 150              		.size	CySysClkIloStartMeasurement, .-CySysClkIloStartMeasurement
 151              		.section	.text.CySysClkIloStopMeasurement,"ax",%progbits
 152              		.align	2
 153              		.global	CySysClkIloStopMeasurement
 154              		.code	16
 155              		.thumb_func
 156              		.type	CySysClkIloStopMeasurement, %function
 157              	CySysClkIloStopMeasurement:
 158              	.LFB4:
 202:Generated_Source\PSoC4/CyLFClk.c ****     /* Set default configurations in 11...8 DFT register bits to zero */
 159              		.loc 1 202 0
 160              		.cfi_startproc
 161              		@ args = 0, pretend = 0, frame = 0
 162              		@ frame_needed = 0, uses_anonymous_args = 0
 163              		@ link register save eliminated.
 204:Generated_Source\PSoC4/CyLFClk.c ****     #if(CY_IP_SRSSLT)
 164              		.loc 1 204 0
 165 0000 054A     		ldr	r2, .L14
 166 0002 1168     		ldr	r1, [r2]
 167 0004 054B     		ldr	r3, .L14+4
 168 0006 0B40     		ands	r3, r1
 169 0008 1360     		str	r3, [r2]
 206:Generated_Source\PSoC4/CyLFClk.c ****     #endif /* (CY_IP_SRSSLT) */
 170              		.loc 1 206 0
 171 000a 054A     		ldr	r2, .L14+8
 172 000c 1168     		ldr	r1, [r2]
 173 000e 054B     		ldr	r3, .L14+12
 174 0010 0B40     		ands	r3, r1
 175 0012 1360     		str	r3, [r2]
 208:Generated_Source\PSoC4/CyLFClk.c **** 
 176              		.loc 1 208 0
 177              		@ sp needed
 178 0014 7047     		bx	lr
 179              	.L15:
 180 0016 C046     		.align	2
 181              	.L14:
 182 0018 34000340 		.word	1073938484
 183 001c FFF0FFFF 		.word	-3841
 184 0020 18000340 		.word	1073938456
 185 0024 0F0F0000 		.word	3855
 186              		.cfi_endproc
 187              	.LFE4:
 188              		.size	CySysClkIloStopMeasurement, .-CySysClkIloStopMeasurement
 189              		.global	__aeabi_uidiv
 190              		.section	.text.CySysClkIloCompensate,"ax",%progbits
 191              		.align	2
 192              		.global	CySysClkIloCompensate
 193              		.code	16
 194              		.thumb_func
 195              		.type	CySysClkIloCompensate, %function
 196              	CySysClkIloCompensate:
 197              	.LFB5:
 268:Generated_Source\PSoC4/CyLFClk.c ****     uint32 iloCompensatedCycles;
 198              		.loc 1 268 0
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 43


 199              		.cfi_startproc
 200              		@ args = 0, pretend = 0, frame = 0
 201              		@ frame_needed = 0, uses_anonymous_args = 0
 202              	.LVL1:
 203 0000 70B5     		push	{r4, r5, r6, lr}
 204              		.cfi_def_cfa_offset 16
 205              		.cfi_offset 4, -16
 206              		.cfi_offset 5, -12
 207              		.cfi_offset 6, -8
 208              		.cfi_offset 14, -4
 209 0002 0C00     		movs	r4, r1
 275:Generated_Source\PSoC4/CyLFClk.c **** 
 210              		.loc 1 275 0
 211 0004 334B     		ldr	r3, .L28
 212 0006 1A68     		ldr	r2, [r3]
 213 0008 334B     		ldr	r3, .L28+4
 214 000a 1340     		ands	r3, r2
 215              	.LVL2:
 278:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_TST_DDFT_CTRL_REG == CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1) &&
 216              		.loc 1 278 0
 217 000c 8022     		movs	r2, #128
 218 000e 5200     		lsls	r2, r2, #1
 219 0010 9342     		cmp	r3, r2
 220 0012 50D1     		bne	.L21
 279:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_CLK_MAX_DELAY_US >= desiredDelay) &&
 221              		.loc 1 279 0 discriminator 1
 222 0014 314B     		ldr	r3, .L28+8
 223              	.LVL3:
 224 0016 1A68     		ldr	r2, [r3]
 278:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_TST_DDFT_CTRL_REG == CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1) &&
 225              		.loc 1 278 0 discriminator 1
 226 0018 314B     		ldr	r3, .L28+12
 227 001a 9A42     		cmp	r2, r3
 228 001c 4DD1     		bne	.L22
 279:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_CLK_MAX_DELAY_US >= desiredDelay) &&
 229              		.loc 1 279 0
 230 001e 314B     		ldr	r3, .L28+16
 231 0020 9842     		cmp	r0, r3
 232 0022 4CD8     		bhi	.L23
 280:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_CLK_MIN_DELAY_US <= desiredDelay) &&
 233              		.loc 1 280 0
 234 0024 6328     		cmp	r0, #99
 235 0026 4CD9     		bls	.L24
 281:Generated_Source\PSoC4/CyLFClk.c ****        (compensatedCycles !=  NULL))
 236              		.loc 1 281 0
 237 0028 0029     		cmp	r1, #0
 238 002a 4CD0     		beq	.L25
 284:Generated_Source\PSoC4/CyLFClk.c ****         {
 239              		.loc 1 284 0
 240 002c 2E4B     		ldr	r3, .L28+20
 241 002e 1B68     		ldr	r3, [r3]
 242 0030 002B     		cmp	r3, #0
 243 0032 36D0     		beq	.L18
 287:Generated_Source\PSoC4/CyLFClk.c ****             {
 244              		.loc 1 287 0
 245 0034 2D4B     		ldr	r3, .L28+24
 246 0036 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 44


 247 0038 002B     		cmp	r3, #0
 248 003a 46DA     		bge	.L26
 289:Generated_Source\PSoC4/CyLFClk.c ****                 {
 249              		.loc 1 289 0
 250 003c 2C4B     		ldr	r3, .L28+28
 251 003e 1B68     		ldr	r3, [r3]
 252 0040 002B     		cmp	r3, #0
 253 0042 44D0     		beq	.L27
 310:Generated_Source\PSoC4/CyLFClk.c ****                                                                                            CY_SYS_C
 254              		.loc 1 310 0
 255 0044 6425     		movs	r5, #100
 256 0046 6843     		muls	r0, r5
 257              	.LVL4:
 258 0048 2A4B     		ldr	r3, .L28+32
 259 004a C518     		adds	r5, r0, r3
 260 004c 2A49     		ldr	r1, .L28+36
 261              	.LVL5:
 262 004e 2800     		movs	r0, r5
 263 0050 FFF7FEFF 		bl	__aeabi_uidiv
 264              	.LVL6:
 265 0054 0600     		movs	r6, r0
 266              	.LVL7:
 312:Generated_Source\PSoC4/CyLFClk.c ****                         {
 267              		.loc 1 312 0
 268 0056 294B     		ldr	r3, .L28+40
 269 0058 9842     		cmp	r0, r3
 270 005a 11D9     		bls	.L19
 314:Generated_Source\PSoC4/CyLFClk.c ****                                                    CY_SYS_CLK_SYS_CLK_DEVIDER)) / CY_SYS_CLK_ILO_FR
 271              		.loc 1 314 0
 272 005c 244B     		ldr	r3, .L28+28
 273 005e 1868     		ldr	r0, [r3]
 274              	.LVL8:
 275 0060 274B     		ldr	r3, .L28+44
 276 0062 1968     		ldr	r1, [r3]
 277 0064 4843     		muls	r0, r1
 278 0066 890A     		lsrs	r1, r1, #10
 279 0068 FFF7FEFF 		bl	__aeabi_uidiv
 280              	.LVL9:
 315:Generated_Source\PSoC4/CyLFClk.c ****                                                    (desiredDelayInCounts / CY_SYS_CLK_ILO_FREQ_3LSB
 281              		.loc 1 315 0
 282 006c 2821     		movs	r1, #40
 283 006e FFF7FEFF 		bl	__aeabi_uidiv
 284              	.LVL10:
 285 0072 0600     		movs	r6, r0
 286              	.LVL11:
 316:Generated_Source\PSoC4/CyLFClk.c ****                         }
 287              		.loc 1 316 0
 288 0074 2349     		ldr	r1, .L28+48
 289 0076 2800     		movs	r0, r5
 290 0078 FFF7FEFF 		bl	__aeabi_uidiv
 291              	.LVL12:
 314:Generated_Source\PSoC4/CyLFClk.c ****                                                    CY_SYS_CLK_SYS_CLK_DEVIDER)) / CY_SYS_CLK_ILO_FR
 292              		.loc 1 314 0
 293 007c 7043     		muls	r0, r6
 294              	.LVL13:
 295 007e 0BE0     		b	.L20
 296              	.LVL14:
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 45


 297              	.L19:
 320:Generated_Source\PSoC4/CyLFClk.c ****                                                      (cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER))
 298              		.loc 1 320 0
 299 0080 1B4B     		ldr	r3, .L28+28
 300 0082 1868     		ldr	r0, [r3]
 301              	.LVL15:
 302 0084 1E4B     		ldr	r3, .L28+44
 303 0086 1968     		ldr	r1, [r3]
 304 0088 4843     		muls	r0, r1
 321:Generated_Source\PSoC4/CyLFClk.c ****                                                      desiredDelayInCounts) / CY_SYS_CLK_ILO_DESIRED
 305              		.loc 1 321 0
 306 008a 890A     		lsrs	r1, r1, #10
 320:Generated_Source\PSoC4/CyLFClk.c ****                                                      (cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER))
 307              		.loc 1 320 0
 308 008c FFF7FEFF 		bl	__aeabi_uidiv
 309              	.LVL16:
 321:Generated_Source\PSoC4/CyLFClk.c ****                                                      desiredDelayInCounts) / CY_SYS_CLK_ILO_DESIRED
 310              		.loc 1 321 0
 311 0090 7043     		muls	r0, r6
 320:Generated_Source\PSoC4/CyLFClk.c ****                                                      (cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER))
 312              		.loc 1 320 0
 313 0092 1D49     		ldr	r1, .L28+52
 314 0094 FFF7FEFF 		bl	__aeabi_uidiv
 315              	.LVL17:
 316              	.L20:
 326:Generated_Source\PSoC4/CyLFClk.c ****                     compensateRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_FINISHED;
 317              		.loc 1 326 0
 318 0098 2060     		str	r0, [r4]
 327:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CYRET_SUCCESS;
 319              		.loc 1 327 0
 320 009a 0020     		movs	r0, #0
 321              	.LVL18:
 322 009c 124B     		ldr	r3, .L28+20
 323 009e 1860     		str	r0, [r3]
 324              	.LVL19:
 325 00a0 16E0     		b	.L17
 326              	.LVL20:
 327              	.L18:
 343:Generated_Source\PSoC4/CyLFClk.c ****             compensateRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_STARTED;
 328              		.loc 1 343 0
 329 00a2 174B     		ldr	r3, .L28+44
 330 00a4 1B68     		ldr	r3, [r3]
 331 00a6 9B0A     		lsrs	r3, r3, #10
 332 00a8 104A     		ldr	r2, .L28+24
 333 00aa 1360     		str	r3, [r2]
 344:Generated_Source\PSoC4/CyLFClk.c ****             returnStatus = CYRET_STARTED;
 334              		.loc 1 344 0
 335 00ac 0122     		movs	r2, #1
 336 00ae 0E4B     		ldr	r3, .L28+20
 337 00b0 1A60     		str	r2, [r3]
 338              	.LVL21:
 345:Generated_Source\PSoC4/CyLFClk.c ****         }
 339              		.loc 1 345 0
 340 00b2 0720     		movs	r0, #7
 341              	.LVL22:
 342 00b4 0CE0     		b	.L17
 343              	.LVL23:
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 46


 344              	.L21:
 350:Generated_Source\PSoC4/CyLFClk.c ****     }
 345              		.loc 1 350 0
 346 00b6 1120     		movs	r0, #17
 347              	.LVL24:
 348 00b8 0AE0     		b	.L17
 349              	.LVL25:
 350              	.L22:
 351 00ba 1120     		movs	r0, #17
 352              	.LVL26:
 353 00bc 08E0     		b	.L17
 354              	.LVL27:
 355              	.L23:
 356 00be 1120     		movs	r0, #17
 357              	.LVL28:
 358 00c0 06E0     		b	.L17
 359              	.LVL29:
 360              	.L24:
 361 00c2 1120     		movs	r0, #17
 362              	.LVL30:
 363 00c4 04E0     		b	.L17
 364              	.LVL31:
 365              	.L25:
 366 00c6 1120     		movs	r0, #17
 367              	.LVL32:
 368 00c8 02E0     		b	.L17
 369              	.LVL33:
 370              	.L26:
 337:Generated_Source\PSoC4/CyLFClk.c ****             }
 371              		.loc 1 337 0
 372 00ca 0720     		movs	r0, #7
 373              	.LVL34:
 374 00cc 00E0     		b	.L17
 375              	.LVL35:
 376              	.L27:
 332:Generated_Source\PSoC4/CyLFClk.c ****                 }
 377              		.loc 1 332 0
 378 00ce 1120     		movs	r0, #17
 379              	.LVL36:
 380              	.L17:
 354:Generated_Source\PSoC4/CyLFClk.c **** 
 381              		.loc 1 354 0
 382              		@ sp needed
 383              	.LVL37:
 384 00d0 70BD     		pop	{r4, r5, r6, pc}
 385              	.L29:
 386 00d2 C046     		.align	2
 387              	.L28:
 388 00d4 34000340 		.word	1073938484
 389 00d8 0F0F0000 		.word	3855
 390 00dc 18000340 		.word	1073938456
 391 00e0 08090000 		.word	2312
 392 00e4 80841E00 		.word	2000000
 393 00e8 00000000 		.word	.LANCHOR0
 394 00ec 1C000340 		.word	1073938460
 395 00f0 20000340 		.word	1073938464
 396 00f4 71020000 		.word	625
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 47


 397 00f8 C4090000 		.word	2500
 398 00fc 60D10000 		.word	53600
 399 0100 00000000 		.word	cydelayFreqHz
 400 0104 A0252600 		.word	2500000
 401 0108 409C0000 		.word	40000
 402              		.cfi_endproc
 403              	.LFE5:
 404              		.size	CySysClkIloCompensate, .-CySysClkIloCompensate
 405              		.section	.text.CySysClkWcoStart,"ax",%progbits
 406              		.align	2
 407              		.global	CySysClkWcoStart
 408              		.code	16
 409              		.thumb_func
 410              		.type	CySysClkWcoStart, %function
 411              	CySysClkWcoStart:
 412              	.LFB6:
 772:Generated_Source\PSoC4/CyLFClk.c ****         CySysClkWcoSetHighPowerMode();
 413              		.loc 1 772 0
 414              		.cfi_startproc
 415              		@ args = 0, pretend = 0, frame = 0
 416              		@ frame_needed = 0, uses_anonymous_args = 0
 417 0000 10B5     		push	{r4, lr}
 418              		.cfi_def_cfa_offset 8
 419              		.cfi_offset 4, -8
 420              		.cfi_offset 14, -4
 421              	.LBB6:
 422              	.LBB7:
 423              		.file 2 "Generated_Source\\PSoC4\\CyLFClk.h"
   1:Generated_Source\PSoC4/CyLFClk.h **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLFClk.h **** * \file .h
   3:Generated_Source\PSoC4/CyLFClk.h **** * \version 1.20
   4:Generated_Source\PSoC4/CyLFClk.h **** *
   5:Generated_Source\PSoC4/CyLFClk.h **** * \brief
   6:Generated_Source\PSoC4/CyLFClk.h **** *  This file provides the source code to API for the lfclk and wdt.
   7:Generated_Source\PSoC4/CyLFClk.h **** *
   8:Generated_Source\PSoC4/CyLFClk.h **** ********************************************************************************
   9:Generated_Source\PSoC4/CyLFClk.h **** * \copyright
  10:Generated_Source\PSoC4/CyLFClk.h **** * Copyright 2008-2017, Cypress Semiconductor Corporation.  All rights reserved.
  11:Generated_Source\PSoC4/CyLFClk.h **** * You may use this file only in accordance with the license, terms, conditions,
  12:Generated_Source\PSoC4/CyLFClk.h **** * disclaimers, and limitations in the end user license agreement accompanying
  13:Generated_Source\PSoC4/CyLFClk.h **** * the software package with which this file was provided.
  14:Generated_Source\PSoC4/CyLFClk.h **** *******************************************************************************/
  15:Generated_Source\PSoC4/CyLFClk.h **** 
  16:Generated_Source\PSoC4/CyLFClk.h **** 
  17:Generated_Source\PSoC4/CyLFClk.h **** #if !defined(CY_LFCLK_CYLIB_H)
  18:Generated_Source\PSoC4/CyLFClk.h **** #define CY_LFCLK_CYLIB_H
  19:Generated_Source\PSoC4/CyLFClk.h **** 
  20:Generated_Source\PSoC4/CyLFClk.h **** #include "cytypes.h"
  21:Generated_Source\PSoC4/CyLFClk.h **** #include "cydevice_trm.h"
  22:Generated_Source\PSoC4/CyLFClk.h **** 
  23:Generated_Source\PSoC4/CyLFClk.h **** #define CY_IP_WCO_WDT_EN           (1 == 1)
  24:Generated_Source\PSoC4/CyLFClk.h **** 
  25:Generated_Source\PSoC4/CyLFClk.h **** typedef enum
  26:Generated_Source\PSoC4/CyLFClk.h **** {
  27:Generated_Source\PSoC4/CyLFClk.h ****     CY_SYS_TIMER_WAIT = 0u,
  28:Generated_Source\PSoC4/CyLFClk.h ****     CY_SYS_TIMER_INTERRUPT = 1u
  29:Generated_Source\PSoC4/CyLFClk.h **** } cy_sys_timer_delaytype_enum;
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 48


  30:Generated_Source\PSoC4/CyLFClk.h **** 
  31:Generated_Source\PSoC4/CyLFClk.h **** 
  32:Generated_Source\PSoC4/CyLFClk.h **** /***************************************
  33:Generated_Source\PSoC4/CyLFClk.h **** *    Function Prototypes
  34:Generated_Source\PSoC4/CyLFClk.h **** ***************************************/
  35:Generated_Source\PSoC4/CyLFClk.h **** /**
  36:Generated_Source\PSoC4/CyLFClk.h **** * \addtogroup group_general
  37:Generated_Source\PSoC4/CyLFClk.h **** * @{
  38:Generated_Source\PSoC4/CyLFClk.h **** */
  39:Generated_Source\PSoC4/CyLFClk.h **** /* Clocks API */
  40:Generated_Source\PSoC4/CyLFClk.h **** void CySysClkIloStart(void);
  41:Generated_Source\PSoC4/CyLFClk.h **** void CySysClkIloStop(void);
  42:Generated_Source\PSoC4/CyLFClk.h **** /** @} general */
  43:Generated_Source\PSoC4/CyLFClk.h **** 
  44:Generated_Source\PSoC4/CyLFClk.h **** /**
  45:Generated_Source\PSoC4/CyLFClk.h **** * \addtogroup group_compensate
  46:Generated_Source\PSoC4/CyLFClk.h **** * @{
  47:Generated_Source\PSoC4/CyLFClk.h **** */
  48:Generated_Source\PSoC4/CyLFClk.h **** cystatus CySysClkIloCompensate(uint32 desiredDelay, uint32 *compensatedCycles);
  49:Generated_Source\PSoC4/CyLFClk.h **** void CySysClkIloStartMeasurement(void);
  50:Generated_Source\PSoC4/CyLFClk.h **** void CySysClkIloStopMeasurement(void);
  51:Generated_Source\PSoC4/CyLFClk.h **** /** @} compensate */
  52:Generated_Source\PSoC4/CyLFClk.h **** 
  53:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSV2 && (!CY_IP_CPUSS))
  54:Generated_Source\PSoC4/CyLFClk.h ****     /**
  55:Generated_Source\PSoC4/CyLFClk.h ****     * \addtogroup group_compensate
  56:Generated_Source\PSoC4/CyLFClk.h ****     * @{
  57:Generated_Source\PSoC4/CyLFClk.h ****     */
  58:Generated_Source\PSoC4/CyLFClk.h ****     cystatus CySysClkIloTrim(uint32 mode, int32 *iloAccuracyInPPT);
  59:Generated_Source\PSoC4/CyLFClk.h ****     cystatus CySysClkIloRestoreFactoryTrim(void);
  60:Generated_Source\PSoC4/CyLFClk.h ****     /** @} compensate */
  61:Generated_Source\PSoC4/CyLFClk.h ****     cystatus CySysClkIloUpdateTrimReg(int32* iloAccuracyInPPT);
  62:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2 && (!CY_IP_CPUSS)) */
  63:Generated_Source\PSoC4/CyLFClk.h **** 
  64:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSV2 && CY_IP_WCO)
  65:Generated_Source\PSoC4/CyLFClk.h ****     /**
  66:Generated_Source\PSoC4/CyLFClk.h ****     * \addtogroup group_general
  67:Generated_Source\PSoC4/CyLFClk.h ****     * @{
  68:Generated_Source\PSoC4/CyLFClk.h ****     */
  69:Generated_Source\PSoC4/CyLFClk.h ****     void CySysClkSetLfclkSource(uint32 source);
  70:Generated_Source\PSoC4/CyLFClk.h ****     /** @} group_general */
  71:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2 && CY_IP_WCO) */
  72:Generated_Source\PSoC4/CyLFClk.h **** 
  73:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_WCO)
  74:Generated_Source\PSoC4/CyLFClk.h ****     /**
  75:Generated_Source\PSoC4/CyLFClk.h ****     * \addtogroup group_wco
  76:Generated_Source\PSoC4/CyLFClk.h ****     * @{
  77:Generated_Source\PSoC4/CyLFClk.h ****     */
  78:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysClkWcoStart(void);
  79:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysClkWcoStop(void);
  80:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysClkWcoSetPowerMode(uint32 mode);
  81:Generated_Source\PSoC4/CyLFClk.h ****     void CySysClkWcoClockOutSelect(uint32 clockSel);
  82:Generated_Source\PSoC4/CyLFClk.h ****     /** @} wco */
  83:Generated_Source\PSoC4/CyLFClk.h **** 
  84:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysClkWcoEnabled(void);
  85:Generated_Source\PSoC4/CyLFClk.h **** 
  86:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_WCO) */
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 49


  87:Generated_Source\PSoC4/CyLFClk.h **** 
  88:Generated_Source\PSoC4/CyLFClk.h **** typedef void (*cyWdtCallback)(void);
  89:Generated_Source\PSoC4/CyLFClk.h **** 
  90:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
  91:Generated_Source\PSoC4/CyLFClk.h **** 
  92:Generated_Source\PSoC4/CyLFClk.h ****     typedef void (*cyTimerCallback)(void);
  93:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN) */
  94:Generated_Source\PSoC4/CyLFClk.h **** 
  95:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSV2)
  96:Generated_Source\PSoC4/CyLFClk.h ****     /**
  97:Generated_Source\PSoC4/CyLFClk.h ****     * \addtogroup group_wdtsrssv2
  98:Generated_Source\PSoC4/CyLFClk.h ****     * @{
  99:Generated_Source\PSoC4/CyLFClk.h ****     */
 100:Generated_Source\PSoC4/CyLFClk.h ****     /* WDT API */
 101:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtLock(void);
 102:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtUnlock(void);
 103:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtSetMode(uint32 counterNum, uint32 mode);
 104:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetMode(uint32 counterNum);
 105:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetEnabledStatus(uint32 counterNum);
 106:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtSetClearOnMatch(uint32 counterNum, uint32 enable);
 107:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetClearOnMatch(uint32 counterNum);
 108:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtEnable(uint32 counterMask);
 109:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtDisable(uint32 counterMask);
 110:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtSetCascade(uint32 cascadeMask);
 111:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetCascade(void);
 112:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtSetMatch(uint32 counterNum, uint32 match);
 113:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtSetToggleBit(uint32 bits);
 114:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetToggleBit(void);
 115:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetMatch(uint32 counterNum);
 116:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetCount(uint32 counterNum);
 117:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetInterruptSource(void);
 118:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtClearInterrupt(uint32 counterMask);
 119:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtResetCounters(uint32 countersMask);
 120:Generated_Source\PSoC4/CyLFClk.h ****     cyWdtCallback  CySysWdtSetInterruptCallback(uint32 counterNum, cyWdtCallback function);
 121:Generated_Source\PSoC4/CyLFClk.h ****     cyWdtCallback  CySysWdtGetInterruptCallback(uint32 counterNum);
 122:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerDelay(uint32 counterNum, cy_sys_timer_delaytype_enum delayType, uint32 delay);
 123:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerDelayUntilMatch(uint32 counterNum, cy_sys_timer_delaytype_enum delayType, uint
 124:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWatchdogFeed(uint32 counterNum);
 125:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtEnableCounterIsr(uint32 counterNum);
 126:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtDisableCounterIsr(uint32 counterNum);
 127:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtIsr(void);
 128:Generated_Source\PSoC4/CyLFClk.h ****     /** @} wdtsrssv2 */
 129:Generated_Source\PSoC4/CyLFClk.h **** #else
 130:Generated_Source\PSoC4/CyLFClk.h ****     /**
 131:Generated_Source\PSoC4/CyLFClk.h ****     * \addtogroup group_wdtsrsslite
 132:Generated_Source\PSoC4/CyLFClk.h ****     * @{
 133:Generated_Source\PSoC4/CyLFClk.h ****     */
 134:Generated_Source\PSoC4/CyLFClk.h ****     /* WDT API */
 135:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetEnabledStatus(void);
 136:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtEnable(void);
 137:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtDisable(void);
 138:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtSetMatch(uint32 match);
 139:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetMatch(void);
 140:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetCount(void);
 141:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtSetIgnoreBits(uint32 bitsNum);
 142:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetIgnoreBits(void);
 143:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtClearInterrupt(void);
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 50


 144:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtMaskInterrupt(void);
 145:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtUnmaskInterrupt(void);
 146:Generated_Source\PSoC4/CyLFClk.h ****     cyWdtCallback CySysWdtSetInterruptCallback(cyWdtCallback function);
 147:Generated_Source\PSoC4/CyLFClk.h ****     cyWdtCallback CySysWdtGetInterruptCallback(void);
 148:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtIsr(void);
 149:Generated_Source\PSoC4/CyLFClk.h ****     /** @} wdtsrsslite*/
 150:Generated_Source\PSoC4/CyLFClk.h **** #endif  /* (CY_IP_SRSSV2) */
 151:Generated_Source\PSoC4/CyLFClk.h **** 
 152:Generated_Source\PSoC4/CyLFClk.h **** 
 153:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
 154:Generated_Source\PSoC4/CyLFClk.h ****     /**
 155:Generated_Source\PSoC4/CyLFClk.h ****     * \addtogroup group_deepsleepwdt
 156:Generated_Source\PSoC4/CyLFClk.h ****     * @{
 157:Generated_Source\PSoC4/CyLFClk.h ****     */
 158:Generated_Source\PSoC4/CyLFClk.h ****     /* WCO WDT APIs */
 159:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysClkSetTimerSource(uint32 source);
 160:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerSetMode(uint32 counterNum, uint32 mode);
 161:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetMode(uint32 counterNum);
 162:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetEnabledStatus(uint32 counterNum);
 163:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerSetClearOnMatch(uint32 counterNum, uint32 enable);
 164:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetClearOnMatch(uint32 counterNum);
 165:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerEnable(uint32 counterMask);
 166:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerDisable(uint32 counterMask);
 167:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerSetCascade(uint32 cascadeMask);
 168:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetCascade(void);
 169:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerSetMatch(uint32 counterNum, uint32 match);
 170:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerSetToggleBit(uint32 bits);
 171:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetToggleBit(void);
 172:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetMatch(uint32 counterNum);
 173:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetCount(uint32 counterNum);
 174:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetInterruptSource(void);
 175:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerClearInterrupt(uint32 counterMask);
 176:Generated_Source\PSoC4/CyLFClk.h ****     cyTimerCallback CySysTimerSetInterruptCallback(uint32 counterNum, cyTimerCallback function);
 177:Generated_Source\PSoC4/CyLFClk.h ****     cyTimerCallback CySysTimerGetInterruptCallback(uint32 counterNum);
 178:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerDelay(uint32 counterNum, cy_sys_timer_delaytype_enum delayType, uint32 delay);
 179:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerDelayUntilMatch(uint32 counterNum, cy_sys_timer_delaytype_enum delayType, uint
 180:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerResetCounters(uint32 countersMask);
 181:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerEnableIsr(uint32 counterNum);
 182:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerDisableIsr(uint32 counterNum);
 183:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerIsr(void);
 184:Generated_Source\PSoC4/CyLFClk.h ****     /** @} deepsleepwdt */
 185:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN) */
 186:Generated_Source\PSoC4/CyLFClk.h **** 
 187:Generated_Source\PSoC4/CyLFClk.h **** 
 188:Generated_Source\PSoC4/CyLFClk.h **** /*******************************************************************************
 189:Generated_Source\PSoC4/CyLFClk.h **** * API Constants
 190:Generated_Source\PSoC4/CyLFClk.h **** *******************************************************************************/
 191:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_UINT16_MAX_VAL    (0xFFFFu)
 192:Generated_Source\PSoC4/CyLFClk.h **** 
 193:Generated_Source\PSoC4/CyLFClk.h **** 
 194:Generated_Source\PSoC4/CyLFClk.h **** /*******************************************************************************
 195:Generated_Source\PSoC4/CyLFClk.h **** * Clock API Constants
 196:Generated_Source\PSoC4/CyLFClk.h **** *******************************************************************************/
 197:Generated_Source\PSoC4/CyLFClk.h **** 
 198:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkIloStart()/CySysClkIloStop() - implementation definitions */
 199:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_ILO_CONFIG_ENABLE                    ((uint32)(( uint32 )0x01u << 31u))
 200:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_DFT_SELECT_DEFAULT_MASK              ((uint32)(( uint32 )0x0fu << 8u ))
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 51


 201:Generated_Source\PSoC4/CyLFClk.h **** 
 202:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkIloCompensate() - one ILO clock in uS multiplied on thousand */
 203:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSV2)
 204:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_PERIOD_PPH                   ((uint32) (0x0C35u))
 205:Generated_Source\PSoC4/CyLFClk.h **** #else
 206:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_PERIOD_PPH                   ((uint32) (0x09C4u))
 207:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2) */
 208:Generated_Source\PSoC4/CyLFClk.h **** 
 209:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkIloCompensate() - implementation definitions */
 210:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_ILO_CALIBR_COMPLETE_MASK             ((uint32)(( uint32 )0x01u << 31u))
 211:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_ILO_DFT_LSB_MASK                     ((uint32)(0x00000FFFu))
 212:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_TRIM_OR_COMP_STARTED                 (1u)
 213:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_TRIM_OR_COMP_FINISHED                (0u)
 214:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_COEF_PHUNDRED                        ((uint32) (0x64u))
 215:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_HALF_OF_CLOCK                        ((uint32) ((uint32) CY_SYS_CLK_ILO_PERIOD_P
 216:Generated_Source\PSoC4/CyLFClk.h **** 
 217:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkIloCompensate() - maximum value of desiredDelay argument */
 218:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSV2)
 219:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_MAX_DELAY_US                     ((uint32) (0xEE6B2800u))
 220:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_PERIOD                       ((uint32) (0x1Fu))
 221:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_FREQ_2MSB                    ((uint32) 5u)
 222:Generated_Source\PSoC4/CyLFClk.h **** #else
 223:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_MAX_DELAY_US                     ((uint32) (0x1E8480u))
 224:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_FREQ_2MSB                    ((uint32) (0x28u ))
 225:Generated_Source\PSoC4/CyLFClk.h **** 
 226:Generated_Source\PSoC4/CyLFClk.h ****     /**********************************************************************************
 227:Generated_Source\PSoC4/CyLFClk.h ****     * CySysClkIloCompensate() - value to walk over oversamling in calculations with 
 228:Generated_Source\PSoC4/CyLFClk.h ****     * srsslite. The oversample can be obtained when ilo frequency in equal 80 KHz and
 229:Generated_Source\PSoC4/CyLFClk.h ****     * desired clocks are 80 000 clocks.
 230:Generated_Source\PSoC4/CyLFClk.h ****     **********************************************************************************/
 231:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_MAX_LITE_NUMBER                     ((uint32) 53600u)
 232:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2) */
 233:Generated_Source\PSoC4/CyLFClk.h **** 
 234:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_ILO_FREQ_3LSB                       ((uint32) (0x3E8u))
 235:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_DELAY_COUNTS_LIMIT                  ((uint32) (0xD160u))
 236:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_MIN_DELAY_US                        ((uint32) (0x64u))
 237:Generated_Source\PSoC4/CyLFClk.h **** 
 238:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkSetLfclkSource() - parameter definitions */
 239:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSV2 && CY_IP_WCO)
 240:Generated_Source\PSoC4/CyLFClk.h **** 
 241:Generated_Source\PSoC4/CyLFClk.h ****     /** Internal Low Frequency (32 kHz) Oscillator (ILO) */
 242:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_LFCLK_SRC_ILO                    (0u)
 243:Generated_Source\PSoC4/CyLFClk.h **** 
 244:Generated_Source\PSoC4/CyLFClk.h ****     /** Low Frequency Watch Crystal Oscillator (WCO) */
 245:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_LFCLK_SRC_WCO                    ((uint32)(( uint32 )0x01u << 30u))
 246:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2 && CY_IP_WCO) */
 247:Generated_Source\PSoC4/CyLFClk.h **** 
 248:Generated_Source\PSoC4/CyLFClk.h **** 
 249:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_WCO)
 250:Generated_Source\PSoC4/CyLFClk.h **** 
 251:Generated_Source\PSoC4/CyLFClk.h ****     /* CySysClkSetLfclkSource() - implementation definitions */
 252:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_LFCLK_SEL_MASK                   ((uint32)(( uint32 )0x03u << 30u))
 253:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_WCO) */
 254:Generated_Source\PSoC4/CyLFClk.h **** 
 255:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkSetTimerSource() - implementation definitions */
 256:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
 257:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_TIMER_SEL_MASK                   ((uint32)(( uint32 )0x03u << 30u))
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 52


 258:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN) */
 259:Generated_Source\PSoC4/CyLFClk.h **** 
 260:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkSetTimerSource() - parameter definitions */
 261:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
 262:Generated_Source\PSoC4/CyLFClk.h **** 
 263:Generated_Source\PSoC4/CyLFClk.h ****     /** Internal Low Frequency (32 kHz) Oscillator (ILO) */
 264:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_TIMER_SRC_ILO                (0u)
 265:Generated_Source\PSoC4/CyLFClk.h **** 
 266:Generated_Source\PSoC4/CyLFClk.h ****     /** Low Frequency Watch Crystal Oscillator (WCO) */
 267:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_TIMER_SRC_WCO                ((uint32)(( uint32 )0x01u << 30u))
 268:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN) */
 269:Generated_Source\PSoC4/CyLFClk.h **** 
 270:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkWcoClockOutSelect() - parameter definitions */
 271:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_WCO)
 272:Generated_Source\PSoC4/CyLFClk.h **** 
 273:Generated_Source\PSoC4/CyLFClk.h ****     /** Selects External crystal as WCO’s clock source */
 274:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_SEL_CRYSTAL                  (1u)
 275:Generated_Source\PSoC4/CyLFClk.h **** 
 276:Generated_Source\PSoC4/CyLFClk.h ****     /** Selects External clock input on wco_in pin as WCO’s clock source */
 277:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_SEL_PIN                      (0u)
 278:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_WCO) */
 279:Generated_Source\PSoC4/CyLFClk.h **** 
 280:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkWcoClockOutSelect() - implementation definitions */
 281:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_WCO)
 282:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_SELECT_PIN_MASK              ((uint32)(( uint32 )0x01u << 2u))
 283:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_SELECT_PIN_OFFSET            ((uint32) 0x02u)
 284:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_WCO) */
 285:Generated_Source\PSoC4/CyLFClk.h **** 
 286:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkIloRestoreFactoryTrim() - implementation definitions */
 287:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSV2 && CY_IP_WCO && (!CY_IP_CPUSS))
 288:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_TRIM_DEFAULT_VALUE           ((uint8 )(0xF0u))
 289:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_TRIM_DEFAULT_MASK            ((uint32)((uint32)0x01u << 3u))
 290:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_TRIM_MASK                    ((uint32)(0x0Fu))
 291:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2 && CY_IP_WCO && (!CY_IP_CPUSS)) */
 292:Generated_Source\PSoC4/CyLFClk.h **** 
 293:Generated_Source\PSoC4/CyLFClk.h **** /* CySysIloTrim() - parameter definitions and macros*/
 294:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSV2 && CY_IP_WCO && (!CY_IP_CPUSS))
 295:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_BLOCKING                         (0u)
 296:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_NON_BLOCKING                     (1u)
 297:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_PERTHOUSAND                      ((uint32) 0x000003E8u )
 298:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ABS_MACRO(x)                     ((0 > (x)) ? (-(x)) : (x))
 299:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ERROR_RANGE                      ((uint32) 0x38u)
 300:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_TIMEOUT                          ((uint8 ) 0x05u)
 301:Generated_Source\PSoC4/CyLFClk.h **** 
 302:Generated_Source\PSoC4/CyLFClk.h ****     /* ILO error step is 7,37 % error range */
 303:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ERROR_STEP                       (( int32) 0x02E1u)
 304:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ERROR_COEF                       ((uint32) 0x0Au)
 305:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2 && CY_IP_WCO && (!CY_IP_CPUSS)) */
 306:Generated_Source\PSoC4/CyLFClk.h **** 
 307:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_WCO)
 308:Generated_Source\PSoC4/CyLFClk.h **** 
 309:Generated_Source\PSoC4/CyLFClk.h ****     /* WCO Configuration Register */
 310:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_CONFIG_LPM_EN                (( uint32 )(( uint32 )0x01u <<  0u))
 311:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_CONFIG_LPM_AUTO              (( uint32 )(( uint32 )0x01u <<  1u))
 312:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE            (( uint32 )(( uint32 )0x01u << 31u))
 313:Generated_Source\PSoC4/CyLFClk.h **** 
 314:Generated_Source\PSoC4/CyLFClk.h ****     /* WCO Status Register */
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 53


 315:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_STATUS_OUT_BLNK_A            (( uint32 )(( uint32 )0x01u <<  0u))
 316:Generated_Source\PSoC4/CyLFClk.h **** 
 317:Generated_Source\PSoC4/CyLFClk.h ****     /* WCO Trim Register */
 318:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_MASK                (( uint32 ) 0x07u)
 319:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_SHIFT               (( uint32 ) 0x00u)
 320:Generated_Source\PSoC4/CyLFClk.h **** 
 321:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_3370NA              (( uint32 ) 0x00u)
 322:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_2620NA              (( uint32 ) 0x01u)
 323:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_2250NA              (( uint32 ) 0x02u)
 324:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_1500NA              (( uint32 ) 0x03u)
 325:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_1870NA              (( uint32 ) 0x04u)
 326:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_1120NA              (( uint32 ) 0x05u)
 327:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_750NA               (( uint32 ) 0x06u)
 328:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_0NA                 (( uint32 ) 0x07u)
 329:Generated_Source\PSoC4/CyLFClk.h **** 
 330:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_GM_MASK                 (( uint32 )(( uint32 )0x03u << 4u))
 331:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_GM_SHIFT                (( uint32 ) 0x04u)
 332:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_GM_HPM                  (( uint32 ) 0x01u)
 333:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_GM_LPM                  (( uint32 ) 0x02u)
 334:Generated_Source\PSoC4/CyLFClk.h **** #endif  /* (CY_IP_WCO) */
 335:Generated_Source\PSoC4/CyLFClk.h **** 
 336:Generated_Source\PSoC4/CyLFClk.h **** 
 337:Generated_Source\PSoC4/CyLFClk.h **** /*******************************************************************************
 338:Generated_Source\PSoC4/CyLFClk.h **** * WDT API Constants
 339:Generated_Source\PSoC4/CyLFClk.h **** *******************************************************************************/
 340:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSV2)
 341:Generated_Source\PSoC4/CyLFClk.h **** 
 342:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MODE_NONE                (0u)
 343:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MODE_INT                 (1u)
 344:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MODE_RESET               (2u)
 345:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MODE_INT_RESET           (3u)
 346:Generated_Source\PSoC4/CyLFClk.h **** 
 347:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER0_MASK            ((uint32)((uint32)0x01u))           /**< Counter 0 
 348:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER1_MASK            ((uint32)((uint32)0x01u << 8u))     /**< Counter 1 
 349:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER2_MASK            ((uint32)((uint32)0x01u << 16u))    /**< Counter 2 
 350:Generated_Source\PSoC4/CyLFClk.h **** 
 351:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CASCADE_NONE             ((uint32)0x00u)             /**< Neither */
 352:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CASCADE_01               ((uint32)0x01u << 3u)       /**< Cascade 01 */
 353:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CASCADE_12               ((uint32)0x01u << 11u)      /**< Cascade 12 */
 354:Generated_Source\PSoC4/CyLFClk.h **** 
 355:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER0_INT             ((uint32)0x01u << 2u)
 356:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER1_INT             ((uint32)0x01u << 10u)
 357:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER2_INT             ((uint32)0x01u << 18u)
 358:Generated_Source\PSoC4/CyLFClk.h **** 
 359:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER0_RESET           ((uint32)0x01u << 3u)       /**< Counter 0 */
 360:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER1_RESET           ((uint32)0x01u << 11u)      /**< Counter 1 */
 361:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER2_RESET           ((uint32)0x01u << 19u)      /**< Counter 2 */
 362:Generated_Source\PSoC4/CyLFClk.h **** 
 363:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTERS_RESET           (CY_SYS_WDT_COUNTER0_RESET |\
 364:Generated_Source\PSoC4/CyLFClk.h ****                                                  CY_SYS_WDT_COUNTER1_RESET |\
 365:Generated_Source\PSoC4/CyLFClk.h ****                                                  CY_SYS_WDT_COUNTER2_RESET)
 366:Generated_Source\PSoC4/CyLFClk.h **** 
 367:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER0                 (0x00u)
 368:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER1                 (0x01u)
 369:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER2                 (0x02u)
 370:Generated_Source\PSoC4/CyLFClk.h **** 
 371:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER0_OFFSET          (0x00u)
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 54


 372:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER1_OFFSET          (0x02u)
 373:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER2_OFFSET          (0x04u)
 374:Generated_Source\PSoC4/CyLFClk.h **** 
 375:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MODE_MASK                ((uint32)(0x03u))
 376:Generated_Source\PSoC4/CyLFClk.h **** 
 377:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CONFIG_BITS2_MASK        (uint32)(0x1Fu)
 378:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CONFIG_BITS2_POS         (uint32)(24u)
 379:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_LOWER_16BITS_MASK        (uint32)(0x0000FFFFu)
 380:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_HIGHER_16BITS_MASK       (uint32)(0xFFFF0000u)
 381:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTERS_MAX             (0x03u)
 382:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CNT_SHIFT                (0x08u)
 383:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CNT_MATCH_CLR_SHIFT      (0x02u)
 384:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CNT_STTS_SHIFT           (0x01u)
 385:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CNT_MATCH_SHIFT          (0x10u)
 386:Generated_Source\PSoC4/CyLFClk.h **** 
 387:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CLK_LOCK_BITS_MASK       ((uint32)0x03u << 14u)
 388:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CLK_LOCK_BIT0            ((uint32)0x01u << 14u)
 389:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CLK_LOCK_BIT1            ((uint32)0x01u << 15u)
 390:Generated_Source\PSoC4/CyLFClk.h **** 
 391:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_WDT_NUM_OF_WDT                   (3u)
 392:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_WDT_NUM_OF_CALLBACKS             (3u)
 393:Generated_Source\PSoC4/CyLFClk.h **** 
 394:Generated_Source\PSoC4/CyLFClk.h ****     #else
 395:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_WDT_NUM_OF_WDT               (1u)
 396:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_WDT_NUM_OF_CALLBACKS         (3u)
 397:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_KEY                  ((uint32)(0xACED8865u))
 398:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_MATCH_MASK           ((uint32)(0x0000FFFFu))
 399:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_IGNORE_BITS_MASK     ((uint32)(0x000F0000u))
 400:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_IGNORE_BITS_SHIFT    ((uint32)(16u))
 401:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_LOWER_BIT_MASK       ((uint32)(0x00000001u))
 402:Generated_Source\PSoC4/CyLFClk.h **** 
 403:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_COUNTER0             (0x00u)
 404:Generated_Source\PSoC4/CyLFClk.h **** 
 405:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2) */
 406:Generated_Source\PSoC4/CyLFClk.h **** 
 407:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSV2 && CY_IP_WCO)
 408:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_1LFCLK_ILO_DELAY_US    ((uint16)( 67u))
 409:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_3LFCLK_ILO_DELAY_US    ((uint16)(201u))
 410:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_1LFCLK_WCO_DELAY_US    ((uint16)( 31u))
 411:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_3LFCLK_WCO_DELAY_US    ((uint16)( 93u))
 412:Generated_Source\PSoC4/CyLFClk.h **** 
 413:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_1LFCLK_DELAY_US      \
 414:Generated_Source\PSoC4/CyLFClk.h ****         ((CY_SYS_CLK_LFCLK_SRC_ILO == (CY_SYS_WDT_CONFIG_REG & CY_SYS_CLK_LFCLK_SEL_MASK)) ? \
 415:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_WDT_1LFCLK_ILO_DELAY_US) : \
 416:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_WDT_1LFCLK_WCO_DELAY_US))
 417:Generated_Source\PSoC4/CyLFClk.h **** 
 418:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_3LFCLK_DELAY_US      \
 419:Generated_Source\PSoC4/CyLFClk.h ****         ((CY_SYS_CLK_LFCLK_SRC_ILO == (CY_SYS_WDT_CONFIG_REG & CY_SYS_CLK_LFCLK_SEL_MASK)) ? \
 420:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_WDT_3LFCLK_ILO_DELAY_US) : \
 421:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_WDT_3LFCLK_WCO_DELAY_US))
 422:Generated_Source\PSoC4/CyLFClk.h ****     #else
 423:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_1LFCLK_DELAY_US      ((uint16)  (67u))
 424:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_3LFCLK_DELAY_US      ((uint16) (201u))
 425:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2 && CY_IP_WCO) */
 426:Generated_Source\PSoC4/CyLFClk.h **** 
 427:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
 428:Generated_Source\PSoC4/CyLFClk.h **** 
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 55


 429:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_MODE_NONE              (0u)
 430:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_MODE_INT               (1u)
 431:Generated_Source\PSoC4/CyLFClk.h **** 
 432:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER0_MASK                  ((uint32)((uint32)0x01u))           /**< Counter 0 
 433:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER1_MASK                  ((uint32)((uint32)0x01u << 8u))     /**< Counter 1 
 434:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER2_MASK                  ((uint32)((uint32)0x01u << 16u))    /**< Counter 2 
 435:Generated_Source\PSoC4/CyLFClk.h **** 
 436:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER0_RESET                 ((uint32)0x01u << 3u)       /**< Counter 0 */
 437:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER1_RESET                 ((uint32)0x01u << 11u)      /**< Counter 1 */
 438:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER2_RESET                 ((uint32)0x01u << 19u)      /**< Counter 2 */
 439:Generated_Source\PSoC4/CyLFClk.h **** 
 440:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_RESET                  (CY_SYS_TIMER0_RESET |\
 441:Generated_Source\PSoC4/CyLFClk.h ****                                                  CY_SYS_TIMER1_RESET |\
 442:Generated_Source\PSoC4/CyLFClk.h ****                                                  CY_SYS_TIMER2_RESET)
 443:Generated_Source\PSoC4/CyLFClk.h **** 
 444:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CASCADE_NONE           ((uint32)0x00u)             /**< Neither */
 445:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CASCADE_01             ((uint32)0x01u << 3u)       /**< Cascade 01 */
 446:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CASCADE_12             ((uint32)0x01u << 11u)      /**< Cascade 12 */
 447:Generated_Source\PSoC4/CyLFClk.h **** 
 448:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER0_INT                   ((uint32)0x01u << 2u)
 449:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER1_INT                   ((uint32)0x01u << 10u)
 450:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER2_INT                   ((uint32)0x01u << 18u)
 451:Generated_Source\PSoC4/CyLFClk.h **** 
 452:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER0                       (0x00u)
 453:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER1                       (0x01u)
 454:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER2                       (0x02u)
 455:Generated_Source\PSoC4/CyLFClk.h **** 
 456:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_MODE_MASK              ((uint32)(0x01u))
 457:Generated_Source\PSoC4/CyLFClk.h **** 
 458:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CONFIG_BITS2_MASK      (uint32)(0x1Fu)
 459:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CONFIG_BITS2_POS       (uint32)(24u)
 460:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_LOWER_16BITS_MASK      (uint32)(0x0000FFFFu)
 461:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_HIGHER_16BITS_MASK     (uint32)(0xFFFF0000u)
 462:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_COUNTERS_MAX           (0x03u)
 463:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CNT_SHIFT              (0x08u)
 464:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CNT_MATCH_CLR_SHIFT    (0x02u)
 465:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CNT_STTS_SHIFT         (0x01u)
 466:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CNT_MATCH_SHIFT        (0x10u)
 467:Generated_Source\PSoC4/CyLFClk.h **** 
 468:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_NUM_OF_TIMERS                (3u)
 469:Generated_Source\PSoC4/CyLFClk.h **** 
 470:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_SET_NEW_TIMER_SOURCE_ILO     ((uint16)(0x02u))
 471:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_SET_NEW_TIMER_SOURCE_WCO     ((uint16)(0x01u))
 472:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CLKEN_RESET_MASK     ((uint32)(0x03u))
 473:Generated_Source\PSoC4/CyLFClk.h **** 
 474:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_1ILO_DELAY_US          ((uint16)( 67u))
 475:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_4ILO_DELAY_US          ((uint16)(268u))
 476:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_3ILO_DELAY_US          ((uint16)(201u))
 477:Generated_Source\PSoC4/CyLFClk.h **** 
 478:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_1WCO_DELAY_US          ((uint16)( 31u))
 479:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_4WCO_DELAY_US          ((uint16)(124u))
 480:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_3WCO_DELAY_US          ((uint16)( 93u))
 481:Generated_Source\PSoC4/CyLFClk.h **** 
 482:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_1TIMER_DELAY_US      \
 483:Generated_Source\PSoC4/CyLFClk.h ****         ((CY_SYS_CLK_TIMER_SRC_ILO == (CY_SYS_WCO_WDT_CONFIG_REG & CY_SYS_CLK_TIMER_SEL_MASK)) ? \
 484:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_TIMER_1ILO_DELAY_US) : \
 485:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_TIMER_1WCO_DELAY_US))
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 56


 486:Generated_Source\PSoC4/CyLFClk.h **** 
 487:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_4TIMER_DELAY_US      \
 488:Generated_Source\PSoC4/CyLFClk.h ****         ((CY_SYS_CLK_TIMER_SRC_ILO == (CY_SYS_WCO_WDT_CONFIG_REG & CY_SYS_CLK_TIMER_SEL_MASK)) ? \
 489:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_TIMER_4WCO_DELAY_US) : \
 490:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_TIMER_4ILO_DELAY_US))
 491:Generated_Source\PSoC4/CyLFClk.h **** 
 492:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_3TIMER_DELAY_US      \
 493:Generated_Source\PSoC4/CyLFClk.h ****         ((CY_SYS_CLK_TIMER_SRC_ILO == (CY_SYS_WCO_WDT_CONFIG_REG & CY_SYS_CLK_TIMER_SEL_MASK)) ? \
 494:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_TIMER_3ILO_DELAY_US) : \
 495:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_TIMER_3WCO_DELAY_US))
 496:Generated_Source\PSoC4/CyLFClk.h **** 
 497:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_SET_CURRENT_TIMER_SOURCE_BIT      \
 498:Generated_Source\PSoC4/CyLFClk.h ****         ((CY_SYS_CLK_TIMER_SRC_ILO == (CY_SYS_WCO_WDT_CONFIG_REG & CY_SYS_CLK_TIMER_SEL_MASK)) ? \
 499:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_SET_NEW_TIMER_SOURCE_ILO) : \
 500:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_SET_NEW_TIMER_SOURCE_WCO))
 501:Generated_Source\PSoC4/CyLFClk.h **** 
 502:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN) */
 503:Generated_Source\PSoC4/CyLFClk.h **** 
 504:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkWcoSetPowerMode() */
 505:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_WCO_HPM                              (0x0u)     /**< WCO High power mode */
 506:Generated_Source\PSoC4/CyLFClk.h **** 
 507:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_BLESS)
 508:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_LPM                          (0x1u)     /**< WCO Low power mode */
 509:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_BLESS) */
 510:Generated_Source\PSoC4/CyLFClk.h **** 
 511:Generated_Source\PSoC4/CyLFClk.h **** 
 512:Generated_Source\PSoC4/CyLFClk.h **** /*******************************************************************************
 513:Generated_Source\PSoC4/CyLFClk.h **** *       Trim Registers Constants 
 514:Generated_Source\PSoC4/CyLFClk.h **** ********************************************************************************/
 515:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_SYS_CLK_DEVIDER                  ((uint32)0x0Au)
 516:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_SEL_ILO_DFT_SOURCE               ((uint32)0x00000100u)
 517:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_FOURBITS_MAX                     (( int32)0x0f)
 518:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_HALF_OF_STEP                     (( int32)((uint32) CY_SYS_CLK_ERROR_STEP >> 1u)
 519:Generated_Source\PSoC4/CyLFClk.h **** 
 520:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSV2)
 521:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_DESIRED_FREQ_HZ          (32000u)
 522:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_DFT_SELSIZE                  ((uint32) 0x3F)
 523:Generated_Source\PSoC4/CyLFClk.h **** #else
 524:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_DESIRED_FREQ_HZ          (40000u)
 525:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_DFT_SELSIZE                  ((uint32) 0x0F)
 526:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2) */
 527:Generated_Source\PSoC4/CyLFClk.h **** 
 528:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_TST_DDFT_CTRL_REG_DEFAULT_MASK    ((uint32)((CY_SYS_CLK_DFT_SELSIZE << 8u) | (CY_SYS
 529:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_TST_DDFT_SELECT_CLK1              ((uint32) ((uint32) CYDEV_DFT_SELECT_CLK1 << 8u))
 530:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1       ((uint32) (CY_SYS_TST_DDFT_SELECT_CLK1 | CYDEV_DFT
 531:Generated_Source\PSoC4/CyLFClk.h **** 
 532:Generated_Source\PSoC4/CyLFClk.h **** 
 533:Generated_Source\PSoC4/CyLFClk.h **** /*******************************************************************************
 534:Generated_Source\PSoC4/CyLFClk.h **** *       Trim Registers 
 535:Generated_Source\PSoC4/CyLFClk.h **** ********************************************************************************/
 536:Generated_Source\PSoC4/CyLFClk.h **** /* DFT TST Control Register*/
 537:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_TST_DDFT_CTRL_REG                         (*(reg32*) CYREG_TST_DDFT_CTRL)
 538:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CNT_CTRL_PTR                              ( (reg32*) CYREG_TST_DDFT_CTRL)
 539:Generated_Source\PSoC4/CyLFClk.h **** 
 540:Generated_Source\PSoC4/CyLFClk.h **** /* DFT TST Counter 1 Register*/
 541:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CNT_REG1_REG                              (*(reg32*) CYREG_TST_TRIM_CNTR1)
 542:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CNT_REG1_PTR                              ( (reg32*) CYREG_TST_TRIM_CNTR1)
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 57


 543:Generated_Source\PSoC4/CyLFClk.h **** 
 544:Generated_Source\PSoC4/CyLFClk.h **** /* DFT TST Counter 2 Register*/
 545:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CNT_REG2_REG                              (*(reg32*) CYREG_TST_TRIM_CNTR2)
 546:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CNT_REG2_PTR                              ( (reg32*) CYREG_TST_TRIM_CNTR2)
 547:Generated_Source\PSoC4/CyLFClk.h **** 
 548:Generated_Source\PSoC4/CyLFClk.h **** /* DFT Muxes Configuration Register*/
 549:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_DFT_REG                               (*(reg32*) CYREG_CLK_DFT_SELECT)
 550:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_DFT_PTR                               ( (reg32*) CYREG_CLK_DFT_SELECT)
 551:Generated_Source\PSoC4/CyLFClk.h **** 
 552:Generated_Source\PSoC4/CyLFClk.h **** /* ILO Configuration Register*/
 553:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_ILO_CONFIG_REG                        (*(reg32 *) CYREG_CLK_ILO_CONFIG)
 554:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_ILO_CONFIG_PTR                        ( (reg32 *) CYREG_CLK_ILO_CONFIG)
 555:Generated_Source\PSoC4/CyLFClk.h **** 
 556:Generated_Source\PSoC4/CyLFClk.h **** /* ILO Trim Register*/
 557:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSV2 && CY_IP_WCO)
 558:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_TRIM_REG                      (*(reg32 *) CYREG_CLK_ILO_TRIM)
 559:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_TRIM_PTR                      ( (reg32 *) CYREG_CLK_ILO_TRIM)
 560:Generated_Source\PSoC4/CyLFClk.h **** #endif  /* (CY_IP_SRSSV2) && CY_IP_WCO*/
 561:Generated_Source\PSoC4/CyLFClk.h **** 
 562:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_WCO)
 563:Generated_Source\PSoC4/CyLFClk.h ****     #if (CY_IP_BLESS)
 564:Generated_Source\PSoC4/CyLFClk.h **** 
 565:Generated_Source\PSoC4/CyLFClk.h ****         /* WCO Status Register */
 566:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_STATUS_REG               (*(reg32 *) CYREG_BLE_BLESS_WCO_STATUS)
 567:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_STATUS_PTR               ( (reg32 *) CYREG_BLE_BLESS_WCO_STATUS)
 568:Generated_Source\PSoC4/CyLFClk.h **** 
 569:Generated_Source\PSoC4/CyLFClk.h ****         /* WCO Configuration Register */
 570:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_CONFIG_REG               (*(reg32 *) CYREG_BLE_BLESS_WCO_CONFIG)
 571:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_CONFIG_PTR               ( (reg32 *) CYREG_BLE_BLESS_WCO_CONFIG)
 572:Generated_Source\PSoC4/CyLFClk.h **** 
 573:Generated_Source\PSoC4/CyLFClk.h ****         /* WCO Trim Register */
 574:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_TRIM_REG                 (*(reg32 *) CYREG_BLE_BLESS_WCO_TRIM)
 575:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_TRIM_PTR                 ( (reg32 *) CYREG_BLE_BLESS_WCO_TRIM)
 576:Generated_Source\PSoC4/CyLFClk.h ****     #else
 577:Generated_Source\PSoC4/CyLFClk.h **** 
 578:Generated_Source\PSoC4/CyLFClk.h ****         /* WCO Status Register */
 579:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_STATUS_REG               (*(reg32 *) CYREG_WCO_STATUS)
 580:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_STATUS_PTR               ( (reg32 *) CYREG_WCO_STATUS)
 581:Generated_Source\PSoC4/CyLFClk.h **** 
 582:Generated_Source\PSoC4/CyLFClk.h ****         /* WCO Configuration Register */
 583:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_CONFIG_REG               (*(reg32 *) CYREG_WCO_CONFIG)
 584:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_CONFIG_PTR               ( (reg32 *) CYREG_WCO_CONFIG)
 585:Generated_Source\PSoC4/CyLFClk.h **** 
 586:Generated_Source\PSoC4/CyLFClk.h ****         /* WCO Trim Register */
 587:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_TRIM_REG                 (*(reg32 *) CYREG_WCO_TRIM)
 588:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_TRIM_PTR                 ( (reg32 *) CYREG_WCO_TRIM)
 589:Generated_Source\PSoC4/CyLFClk.h ****     #endif /* (CY_IP_BLESS) */
 590:Generated_Source\PSoC4/CyLFClk.h **** #endif  /* (CY_IP_WCO) */
 591:Generated_Source\PSoC4/CyLFClk.h **** 
 592:Generated_Source\PSoC4/CyLFClk.h **** 
 593:Generated_Source\PSoC4/CyLFClk.h **** /*******************************************************************************
 594:Generated_Source\PSoC4/CyLFClk.h **** * WDT API Registers
 595:Generated_Source\PSoC4/CyLFClk.h **** *******************************************************************************/
 596:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSV2)
 597:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CTRLOW_REG               (*(reg32 *) CYREG_WDT_CTRLOW)
 598:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CTRLOW_PTR               ( (reg32 *) CYREG_WDT_CTRLOW)
 599:Generated_Source\PSoC4/CyLFClk.h **** 
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 58


 600:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CTRHIGH_REG              (*(reg32 *) CYREG_WDT_CTRHIGH)
 601:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CTRHIGH_PTR              ( (reg32 *) CYREG_WDT_CTRHIGH)
 602:Generated_Source\PSoC4/CyLFClk.h **** 
 603:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MATCH_REG                (*(reg32 *) CYREG_WDT_MATCH)
 604:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MATCH_PTR                ( (reg32 *) CYREG_WDT_MATCH)
 605:Generated_Source\PSoC4/CyLFClk.h **** 
 606:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CONFIG_REG               (*(reg32 *) CYREG_WDT_CONFIG)
 607:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CONFIG_PTR               ( (reg32 *) CYREG_WDT_CONFIG)
 608:Generated_Source\PSoC4/CyLFClk.h **** 
 609:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CONTROL_REG              (*(reg32 *) CYREG_WDT_CONTROL)
 610:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CONTROL_PTR              ( (reg32 *) CYREG_WDT_CONTROL)
 611:Generated_Source\PSoC4/CyLFClk.h **** #else
 612:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_DISABLE_KEY_REG          (*(reg32 *) CYREG_WDT_DISABLE_KEY)
 613:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_DISABLE_KEY_PTR          ( (reg32 *) CYREG_WDT_DISABLE_KEY)
 614:Generated_Source\PSoC4/CyLFClk.h **** 
 615:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MATCH_REG                (*(reg32 *) CYREG_WDT_MATCH)
 616:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MATCH_PTR                ( (reg32 *) CYREG_WDT_MATCH)
 617:Generated_Source\PSoC4/CyLFClk.h **** 
 618:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER_REG              (*(reg32 *) CYREG_WDT_COUNTER)
 619:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER_PTR              ( (reg32 *) CYREG_WDT_COUNTER)
 620:Generated_Source\PSoC4/CyLFClk.h **** 
 621:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_SRSS_INTR_REG                (*(reg32 *) CYREG_SRSS_INTR)
 622:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_SRSS_INTR_PTR                ( (reg32 *) CYREG_SRSS_INTR)
 623:Generated_Source\PSoC4/CyLFClk.h **** 
 624:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_SRSS_INTR_MASK_REG           (*(reg32 *) CYREG_SRSS_INTR_MASK)
 625:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_SRSS_INTR_MASK_PTR           ( (reg32 *) CYREG_SRSS_INTR_MASK)
 626:Generated_Source\PSoC4/CyLFClk.h **** #endif  /* (CY_IP_SRSSV2) */
 627:Generated_Source\PSoC4/CyLFClk.h **** 
 628:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
 629:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CTRLOW_REG           (*(reg32 *) CYREG_WCO_WDT_CTRLOW)
 630:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CTRLOW_PTR           ( (reg32 *) CYREG_WCO_WDT_CTRLOW)
 631:Generated_Source\PSoC4/CyLFClk.h **** 
 632:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CTRHIGH_REG          (*(reg32 *) CYREG_WCO_WDT_CTRHIGH)
 633:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CTRHIGH_PTR          ( (reg32 *) CYREG_WCO_WDT_CTRHIGH)
 634:Generated_Source\PSoC4/CyLFClk.h **** 
 635:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_MATCH_REG            (*(reg32 *) CYREG_WCO_WDT_MATCH)
 636:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_MATCH_PTR            ( (reg32 *) CYREG_WCO_WDT_MATCH)
 637:Generated_Source\PSoC4/CyLFClk.h **** 
 638:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CONFIG_REG           (*(reg32 *) CYREG_WCO_WDT_CONFIG)
 639:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CONFIG_PTR           ( (reg32 *) CYREG_WCO_WDT_CONFIG)
 640:Generated_Source\PSoC4/CyLFClk.h **** 
 641:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CONTROL_REG          (*(reg32 *) CYREG_WCO_WDT_CONTROL)
 642:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CONTROL_PTR          ( (reg32 *) CYREG_WCO_WDT_CONTROL)
 643:Generated_Source\PSoC4/CyLFClk.h **** 
 644:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CLKEN_REG            (*(reg32 *) CYREG_WCO_WDT_CLKEN)
 645:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CLKEN_PTR            ( (reg32 *) CYREG_WCO_WDT_CLKEN)
 646:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN) */
 647:Generated_Source\PSoC4/CyLFClk.h **** 
 648:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_WCO)
 649:Generated_Source\PSoC4/CyLFClk.h **** 
 650:Generated_Source\PSoC4/CyLFClk.h ****     /*******************************************************************************
 651:Generated_Source\PSoC4/CyLFClk.h ****     * Function Name: CySysClkWcoSetHighPowerMode
 652:Generated_Source\PSoC4/CyLFClk.h ****     ********************************************************************************
 653:Generated_Source\PSoC4/CyLFClk.h ****     *
 654:Generated_Source\PSoC4/CyLFClk.h ****     * Summary:
 655:Generated_Source\PSoC4/CyLFClk.h ****     *  Sets the high power mode for the 32 KHz WCO.
 656:Generated_Source\PSoC4/CyLFClk.h ****     *
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 59


 657:Generated_Source\PSoC4/CyLFClk.h ****     *******************************************************************************/
 658:Generated_Source\PSoC4/CyLFClk.h ****     static CY_INLINE void CySysClkWcoSetHighPowerMode(void)
 659:Generated_Source\PSoC4/CyLFClk.h ****     {
 660:Generated_Source\PSoC4/CyLFClk.h ****         /* Switch off low power mode for WCO */
 661:Generated_Source\PSoC4/CyLFClk.h ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_LPM_EN;
 424              		.loc 2 661 0
 425 0002 0D4B     		ldr	r3, .L31
 426 0004 1A68     		ldr	r2, [r3]
 427 0006 0121     		movs	r1, #1
 428 0008 8A43     		bics	r2, r1
 429 000a 1A60     		str	r2, [r3]
 662:Generated_Source\PSoC4/CyLFClk.h **** 
 663:Generated_Source\PSoC4/CyLFClk.h ****         /* Switch off auto low power mode in WCO */
 664:Generated_Source\PSoC4/CyLFClk.h ****         CY_SYS_CLK_WCO_CONFIG_REG &= ((uint32)~CY_SYS_CLK_WCO_CONFIG_LPM_AUTO);
 430              		.loc 2 664 0
 431 000c 1A68     		ldr	r2, [r3]
 432 000e 0220     		movs	r0, #2
 433 0010 8243     		bics	r2, r0
 434 0012 1A60     		str	r2, [r3]
 665:Generated_Source\PSoC4/CyLFClk.h **** 
 666:Generated_Source\PSoC4/CyLFClk.h ****         /* Restore WCO trim register HPM settings */
 667:Generated_Source\PSoC4/CyLFClk.h ****         CY_SYS_CLK_WCO_TRIM_REG = (CY_SYS_CLK_WCO_TRIM_REG & (uint32)(~CY_SYS_CLK_WCO_TRIM_GM_MASK)
 435              		.loc 2 667 0
 436 0014 094A     		ldr	r2, .L31+4
 437 0016 1068     		ldr	r0, [r2]
 438 0018 3024     		movs	r4, #48
 439 001a A043     		bics	r0, r4
 668:Generated_Source\PSoC4/CyLFClk.h ****                     | (uint32)(CY_SYS_CLK_WCO_TRIM_GM_HPM << CY_SYS_CLK_WCO_TRIM_GM_SHIFT);
 440              		.loc 2 668 0
 441 001c 203C     		subs	r4, r4, #32
 442 001e 2043     		orrs	r0, r4
 667:Generated_Source\PSoC4/CyLFClk.h ****                     | (uint32)(CY_SYS_CLK_WCO_TRIM_GM_HPM << CY_SYS_CLK_WCO_TRIM_GM_SHIFT);
 443              		.loc 2 667 0
 444 0020 1060     		str	r0, [r2]
 669:Generated_Source\PSoC4/CyLFClk.h ****         CY_SYS_CLK_WCO_TRIM_REG = (CY_SYS_CLK_WCO_TRIM_REG & (uint32)(~CY_SYS_CLK_WCO_TRIM_XGM_MASK
 445              		.loc 2 669 0
 446 0022 1068     		ldr	r0, [r2]
 447 0024 093C     		subs	r4, r4, #9
 448 0026 A043     		bics	r0, r4
 670:Generated_Source\PSoC4/CyLFClk.h ****                     | (uint32)(CY_SYS_CLK_WCO_TRIM_XGM_2620NA << CY_SYS_CLK_WCO_TRIM_XGM_SHIFT);
 449              		.loc 2 670 0
 450 0028 0143     		orrs	r1, r0
 669:Generated_Source\PSoC4/CyLFClk.h ****         CY_SYS_CLK_WCO_TRIM_REG = (CY_SYS_CLK_WCO_TRIM_REG & (uint32)(~CY_SYS_CLK_WCO_TRIM_XGM_MASK
 451              		.loc 2 669 0
 452 002a 1160     		str	r1, [r2]
 453              	.LBE7:
 454              	.LBE6:
 774:Generated_Source\PSoC4/CyLFClk.c ****     }
 455              		.loc 1 774 0
 456 002c 1A68     		ldr	r2, [r3]
 457 002e 8021     		movs	r1, #128
 458 0030 0906     		lsls	r1, r1, #24
 459 0032 0A43     		orrs	r2, r1
 460 0034 1A60     		str	r2, [r3]
 775:Generated_Source\PSoC4/CyLFClk.c **** 
 461              		.loc 1 775 0
 462              		@ sp needed
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 60


 463 0036 10BD     		pop	{r4, pc}
 464              	.L32:
 465              		.align	2
 466              	.L31:
 467 0038 00000640 		.word	1074135040
 468 003c 000F0640 		.word	1074138880
 469              		.cfi_endproc
 470              	.LFE6:
 471              		.size	CySysClkWcoStart, .-CySysClkWcoStart
 472              		.section	.text.CySysClkWcoEnabled,"ax",%progbits
 473              		.align	2
 474              		.global	CySysClkWcoEnabled
 475              		.code	16
 476              		.thumb_func
 477              		.type	CySysClkWcoEnabled, %function
 478              	CySysClkWcoEnabled:
 479              	.LFB8:
 825:Generated_Source\PSoC4/CyLFClk.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & (uint32)(CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE))) ?
 480              		.loc 1 825 0
 481              		.cfi_startproc
 482              		@ args = 0, pretend = 0, frame = 0
 483              		@ frame_needed = 0, uses_anonymous_args = 0
 484              		@ link register save eliminated.
 826:Generated_Source\PSoC4/CyLFClk.c ****                 (uint32) 1u :
 485              		.loc 1 826 0
 486 0000 034B     		ldr	r3, .L36
 487 0002 1B68     		ldr	r3, [r3]
 827:Generated_Source\PSoC4/CyLFClk.c ****                 (uint32) 0u);
 488              		.loc 1 827 0
 489 0004 002B     		cmp	r3, #0
 490 0006 01DA     		bge	.L35
 491 0008 0120     		movs	r0, #1
 492 000a 00E0     		b	.L34
 493              	.L35:
 494 000c 0020     		movs	r0, #0
 495              	.L34:
 829:Generated_Source\PSoC4/CyLFClk.c **** 
 496              		.loc 1 829 0
 497              		@ sp needed
 498 000e 7047     		bx	lr
 499              	.L37:
 500              		.align	2
 501              	.L36:
 502 0010 00000640 		.word	1074135040
 503              		.cfi_endproc
 504              	.LFE8:
 505              		.size	CySysClkWcoEnabled, .-CySysClkWcoEnabled
 506              		.section	.text.CySysClkWcoStop,"ax",%progbits
 507              		.align	2
 508              		.global	CySysClkWcoStop
 509              		.code	16
 510              		.thumb_func
 511              		.type	CySysClkWcoStop, %function
 512              	CySysClkWcoStop:
 513              	.LFB7:
 790:Generated_Source\PSoC4/CyLFClk.c ****         #if (CY_IP_SRSSV2)
 514              		.loc 1 790 0
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 61


 515              		.cfi_startproc
 516              		@ args = 0, pretend = 0, frame = 0
 517              		@ frame_needed = 0, uses_anonymous_args = 0
 518 0000 10B5     		push	{r4, lr}
 519              		.cfi_def_cfa_offset 8
 520              		.cfi_offset 4, -8
 521              		.cfi_offset 14, -4
 795:Generated_Source\PSoC4/CyLFClk.c ****         {
 522              		.loc 1 795 0
 523 0002 FFF7FEFF 		bl	CySysClkWcoEnabled
 524              	.LVL38:
 525 0006 0028     		cmp	r0, #0
 526 0008 04D0     		beq	.L38
 809:Generated_Source\PSoC4/CyLFClk.c ****             }
 527              		.loc 1 809 0
 528 000a 034A     		ldr	r2, .L40
 529 000c 1368     		ldr	r3, [r2]
 530 000e 5B00     		lsls	r3, r3, #1
 531 0010 5B08     		lsrs	r3, r3, #1
 532 0012 1360     		str	r3, [r2]
 533              	.L38:
 812:Generated_Source\PSoC4/CyLFClk.c **** 
 534              		.loc 1 812 0
 535              		@ sp needed
 536 0014 10BD     		pop	{r4, pc}
 537              	.L41:
 538 0016 C046     		.align	2
 539              	.L40:
 540 0018 00000640 		.word	1074135040
 541              		.cfi_endproc
 542              	.LFE7:
 543              		.size	CySysClkWcoStop, .-CySysClkWcoStop
 544              		.section	.text.CySysClkWcoSetPowerMode,"ax",%progbits
 545              		.align	2
 546              		.global	CySysClkWcoSetPowerMode
 547              		.code	16
 548              		.thumb_func
 549              		.type	CySysClkWcoSetPowerMode, %function
 550              	CySysClkWcoSetPowerMode:
 551              	.LFB9:
 852:Generated_Source\PSoC4/CyLFClk.c ****         uint32 powerModeStatus;
 552              		.loc 1 852 0
 553              		.cfi_startproc
 554              		@ args = 0, pretend = 0, frame = 0
 555              		@ frame_needed = 0, uses_anonymous_args = 0
 556              	.LVL39:
 557 0000 10B5     		push	{r4, lr}
 558              		.cfi_def_cfa_offset 8
 559              		.cfi_offset 4, -8
 560              		.cfi_offset 14, -4
 855:Generated_Source\PSoC4/CyLFClk.c **** 
 561              		.loc 1 855 0
 562 0002 104B     		ldr	r3, .L47
 563 0004 1B68     		ldr	r3, [r3]
 564 0006 0124     		movs	r4, #1
 565 0008 1C40     		ands	r4, r3
 566              	.LVL40:
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 62


 857:Generated_Source\PSoC4/CyLFClk.c ****         {
 567              		.loc 1 857 0
 568 000a 0028     		cmp	r0, #0
 569 000c 15D1     		bne	.L46
 570              	.LBB8:
 571              	.LBB9:
 661:Generated_Source\PSoC4/CyLFClk.h **** 
 572              		.loc 2 661 0
 573 000e 0D4B     		ldr	r3, .L47
 574 0010 1968     		ldr	r1, [r3]
 575 0012 0122     		movs	r2, #1
 576 0014 9143     		bics	r1, r2
 577 0016 1960     		str	r1, [r3]
 664:Generated_Source\PSoC4/CyLFClk.h **** 
 578              		.loc 2 664 0
 579 0018 1968     		ldr	r1, [r3]
 580 001a 0230     		adds	r0, r0, #2
 581              	.LVL41:
 582 001c 8143     		bics	r1, r0
 583 001e 1960     		str	r1, [r3]
 667:Generated_Source\PSoC4/CyLFClk.h ****                     | (uint32)(CY_SYS_CLK_WCO_TRIM_GM_HPM << CY_SYS_CLK_WCO_TRIM_GM_SHIFT);
 584              		.loc 2 667 0
 585 0020 094B     		ldr	r3, .L47+4
 586 0022 1968     		ldr	r1, [r3]
 587 0024 2E30     		adds	r0, r0, #46
 588              	.LVL42:
 589 0026 8143     		bics	r1, r0
 668:Generated_Source\PSoC4/CyLFClk.h ****         CY_SYS_CLK_WCO_TRIM_REG = (CY_SYS_CLK_WCO_TRIM_REG & (uint32)(~CY_SYS_CLK_WCO_TRIM_XGM_MASK
 590              		.loc 2 668 0
 591 0028 2038     		subs	r0, r0, #32
 592              	.LVL43:
 593 002a 0143     		orrs	r1, r0
 667:Generated_Source\PSoC4/CyLFClk.h ****                     | (uint32)(CY_SYS_CLK_WCO_TRIM_GM_HPM << CY_SYS_CLK_WCO_TRIM_GM_SHIFT);
 594              		.loc 2 667 0
 595 002c 1960     		str	r1, [r3]
 669:Generated_Source\PSoC4/CyLFClk.h ****                     | (uint32)(CY_SYS_CLK_WCO_TRIM_XGM_2620NA << CY_SYS_CLK_WCO_TRIM_XGM_SHIFT);
 596              		.loc 2 669 0
 597 002e 1968     		ldr	r1, [r3]
 598 0030 0938     		subs	r0, r0, #9
 599              	.LVL44:
 600 0032 8143     		bics	r1, r0
 601              		.loc 2 670 0
 602 0034 0A43     		orrs	r2, r1
 669:Generated_Source\PSoC4/CyLFClk.h ****                     | (uint32)(CY_SYS_CLK_WCO_TRIM_XGM_2620NA << CY_SYS_CLK_WCO_TRIM_XGM_SHIFT);
 603              		.loc 2 669 0
 604 0036 1A60     		str	r2, [r3]
 605 0038 02E0     		b	.L45
 606              	.LVL45:
 607              	.L46:
 608              	.LBE9:
 609              	.LBE8:
 870:Generated_Source\PSoC4/CyLFClk.c ****             break;
 610              		.loc 1 870 0 discriminator 1
 611 003a 0020     		movs	r0, #0
 612              	.LVL46:
 613 003c FFF7FEFF 		bl	CyHalt
 614              	.LVL47:
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 63


 615              	.L45:
 875:Generated_Source\PSoC4/CyLFClk.c **** 
 616              		.loc 1 875 0
 617 0040 2000     		movs	r0, r4
 618              		@ sp needed
 619              	.LVL48:
 620 0042 10BD     		pop	{r4, pc}
 621              	.L48:
 622              		.align	2
 623              	.L47:
 624 0044 00000640 		.word	1074135040
 625 0048 000F0640 		.word	1074138880
 626              		.cfi_endproc
 627              	.LFE9:
 628              		.size	CySysClkWcoSetPowerMode, .-CySysClkWcoSetPowerMode
 629              		.section	.text.CySysClkWcoClockOutSelect,"ax",%progbits
 630              		.align	2
 631              		.global	CySysClkWcoClockOutSelect
 632              		.code	16
 633              		.thumb_func
 634              		.type	CySysClkWcoClockOutSelect, %function
 635              	CySysClkWcoClockOutSelect:
 636              	.LFB10:
 919:Generated_Source\PSoC4/CyLFClk.c ****         if (0u != CySysClkWcoEnabled())
 637              		.loc 1 919 0
 638              		.cfi_startproc
 639              		@ args = 0, pretend = 0, frame = 0
 640              		@ frame_needed = 0, uses_anonymous_args = 0
 641              	.LVL49:
 642 0000 10B5     		push	{r4, lr}
 643              		.cfi_def_cfa_offset 8
 644              		.cfi_offset 4, -8
 645              		.cfi_offset 14, -4
 646 0002 0400     		movs	r4, r0
 920:Generated_Source\PSoC4/CyLFClk.c ****         {
 647              		.loc 1 920 0
 648 0004 FFF7FEFF 		bl	CySysClkWcoEnabled
 649              	.LVL50:
 650 0008 0028     		cmp	r0, #0
 651 000a 0CD0     		beq	.L49
 922:Generated_Source\PSoC4/CyLFClk.c ****             {
 652              		.loc 1 922 0
 653 000c 012C     		cmp	r4, #1
 654 000e 07D8     		bhi	.L51
 924:Generated_Source\PSoC4/CyLFClk.c ****                                         (clockSel << CY_SYS_CLK_WCO_SELECT_PIN_OFFSET);
 655              		.loc 1 924 0
 656 0010 054A     		ldr	r2, .L52
 657 0012 1368     		ldr	r3, [r2]
 658 0014 0421     		movs	r1, #4
 659 0016 8B43     		bics	r3, r1
 925:Generated_Source\PSoC4/CyLFClk.c ****             }
 660              		.loc 1 925 0
 661 0018 A400     		lsls	r4, r4, #2
 662              	.LVL51:
 924:Generated_Source\PSoC4/CyLFClk.c ****                                         (clockSel << CY_SYS_CLK_WCO_SELECT_PIN_OFFSET);
 663              		.loc 1 924 0
 664 001a 1C43     		orrs	r4, r3
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 64


 665 001c 1460     		str	r4, [r2]
 666 001e 02E0     		b	.L49
 667              	.LVL52:
 668              	.L51:
 929:Generated_Source\PSoC4/CyLFClk.c ****             }
 669              		.loc 1 929 0 discriminator 1
 670 0020 0020     		movs	r0, #0
 671 0022 FFF7FEFF 		bl	CyHalt
 672              	.LVL53:
 673              	.L49:
 932:Generated_Source\PSoC4/CyLFClk.c **** #endif  /* (CY_IP_WCO) */
 674              		.loc 1 932 0
 675              		@ sp needed
 676 0026 10BD     		pop	{r4, pc}
 677              	.L53:
 678              		.align	2
 679              	.L52:
 680 0028 00000640 		.word	1074135040
 681              		.cfi_endproc
 682              	.LFE10:
 683              		.size	CySysClkWcoClockOutSelect, .-CySysClkWcoClockOutSelect
 684              		.section	.text.CySysWdtGetEnabledStatus,"ax",%progbits
 685              		.align	2
 686              		.global	CySysWdtGetEnabledStatus
 687              		.code	16
 688              		.thumb_func
 689              		.type	CySysWdtGetEnabledStatus, %function
 690              	CySysWdtGetEnabledStatus:
 691              	.LFB11:
1919:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WDT_DISABLE_KEY_REG == CY_SYS_WDT_KEY) ? (uint32) 0u : (uint32) 1u);
 692              		.loc 1 1919 0
 693              		.cfi_startproc
 694              		@ args = 0, pretend = 0, frame = 0
 695              		@ frame_needed = 0, uses_anonymous_args = 0
 696              		@ link register save eliminated.
1920:Generated_Source\PSoC4/CyLFClk.c ****     }
 697              		.loc 1 1920 0
 698 0000 044B     		ldr	r3, .L55
 699 0002 1868     		ldr	r0, [r3]
 700 0004 044B     		ldr	r3, .L55+4
 701 0006 9C46     		mov	ip, r3
 702 0008 6044     		add	r0, r0, ip
 703 000a 431E     		subs	r3, r0, #1
 704 000c 9841     		sbcs	r0, r0, r3
 705 000e C0B2     		uxtb	r0, r0
1921:Generated_Source\PSoC4/CyLFClk.c **** 
 706              		.loc 1 1921 0
 707              		@ sp needed
 708 0010 7047     		bx	lr
 709              	.L56:
 710 0012 C046     		.align	2
 711              	.L55:
 712 0014 38000340 		.word	1073938488
 713 0018 9B771253 		.word	1393719195
 714              		.cfi_endproc
 715              	.LFE11:
 716              		.size	CySysWdtGetEnabledStatus, .-CySysWdtGetEnabledStatus
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 65


 717              		.section	.text.CySysWdtEnable,"ax",%progbits
 718              		.align	2
 719              		.global	CySysWdtEnable
 720              		.code	16
 721              		.thumb_func
 722              		.type	CySysWdtEnable, %function
 723              	CySysWdtEnable:
 724              	.LFB12:
1938:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_DISABLE_KEY_REG = 0u;
 725              		.loc 1 1938 0
 726              		.cfi_startproc
 727              		@ args = 0, pretend = 0, frame = 0
 728              		@ frame_needed = 0, uses_anonymous_args = 0
 729              		@ link register save eliminated.
1939:Generated_Source\PSoC4/CyLFClk.c ****     }
 730              		.loc 1 1939 0
 731 0000 0022     		movs	r2, #0
 732 0002 014B     		ldr	r3, .L58
 733 0004 1A60     		str	r2, [r3]
1940:Generated_Source\PSoC4/CyLFClk.c **** 
 734              		.loc 1 1940 0
 735              		@ sp needed
 736 0006 7047     		bx	lr
 737              	.L59:
 738              		.align	2
 739              	.L58:
 740 0008 38000340 		.word	1073938488
 741              		.cfi_endproc
 742              	.LFE12:
 743              		.size	CySysWdtEnable, .-CySysWdtEnable
 744              		.section	.text.CySysWdtDisable,"ax",%progbits
 745              		.align	2
 746              		.global	CySysWdtDisable
 747              		.code	16
 748              		.thumb_func
 749              		.type	CySysWdtDisable, %function
 750              	CySysWdtDisable:
 751              	.LFB13:
1954:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_DISABLE_KEY_REG = CY_SYS_WDT_KEY;
 752              		.loc 1 1954 0
 753              		.cfi_startproc
 754              		@ args = 0, pretend = 0, frame = 0
 755              		@ frame_needed = 0, uses_anonymous_args = 0
 756              		@ link register save eliminated.
1955:Generated_Source\PSoC4/CyLFClk.c ****     }
 757              		.loc 1 1955 0
 758 0000 014A     		ldr	r2, .L61
 759 0002 024B     		ldr	r3, .L61+4
 760 0004 1A60     		str	r2, [r3]
1956:Generated_Source\PSoC4/CyLFClk.c **** 
 761              		.loc 1 1956 0
 762              		@ sp needed
 763 0006 7047     		bx	lr
 764              	.L62:
 765              		.align	2
 766              	.L61:
 767 0008 6588EDAC 		.word	-1393719195
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 66


 768 000c 38000340 		.word	1073938488
 769              		.cfi_endproc
 770              	.LFE13:
 771              		.size	CySysWdtDisable, .-CySysWdtDisable
 772              		.section	.text.CySysWdtSetMatch,"ax",%progbits
 773              		.align	2
 774              		.global	CySysWdtSetMatch
 775              		.code	16
 776              		.thumb_func
 777              		.type	CySysWdtSetMatch, %function
 778              	CySysWdtSetMatch:
 779              	.LFB14:
1970:Generated_Source\PSoC4/CyLFClk.c ****         match &= CY_SYS_WDT_MATCH_MASK;
 780              		.loc 1 1970 0
 781              		.cfi_startproc
 782              		@ args = 0, pretend = 0, frame = 0
 783              		@ frame_needed = 0, uses_anonymous_args = 0
 784              		@ link register save eliminated.
 785              	.LVL54:
1971:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_MATCH_REG = (CY_SYS_WDT_MATCH_REG & (uint32)(~CY_SYS_WDT_MATCH_MASK)) | match;
 786              		.loc 1 1971 0
 787 0000 0004     		lsls	r0, r0, #16
 788              	.LVL55:
 789 0002 000C     		lsrs	r0, r0, #16
 790              	.LVL56:
1972:Generated_Source\PSoC4/CyLFClk.c ****     }
 791              		.loc 1 1972 0
 792 0004 034A     		ldr	r2, .L64
 793 0006 1368     		ldr	r3, [r2]
 794 0008 1B0C     		lsrs	r3, r3, #16
 795 000a 1B04     		lsls	r3, r3, #16
 796 000c 1843     		orrs	r0, r3
 797              	.LVL57:
 798 000e 1060     		str	r0, [r2]
1973:Generated_Source\PSoC4/CyLFClk.c **** 
 799              		.loc 1 1973 0
 800              		@ sp needed
 801 0010 7047     		bx	lr
 802              	.L65:
 803 0012 C046     		.align	2
 804              	.L64:
 805 0014 40000340 		.word	1073938496
 806              		.cfi_endproc
 807              	.LFE14:
 808              		.size	CySysWdtSetMatch, .-CySysWdtSetMatch
 809              		.section	.text.CySysWdtGetMatch,"ax",%progbits
 810              		.align	2
 811              		.global	CySysWdtGetMatch
 812              		.code	16
 813              		.thumb_func
 814              		.type	CySysWdtGetMatch, %function
 815              	CySysWdtGetMatch:
 816              	.LFB15:
1986:Generated_Source\PSoC4/CyLFClk.c ****         return (CY_SYS_WDT_MATCH_REG & CY_SYS_WDT_MATCH_MASK);
 817              		.loc 1 1986 0
 818              		.cfi_startproc
 819              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 67


 820              		@ frame_needed = 0, uses_anonymous_args = 0
 821              		@ link register save eliminated.
1987:Generated_Source\PSoC4/CyLFClk.c ****     }
 822              		.loc 1 1987 0
 823 0000 024B     		ldr	r3, .L67
 824 0002 1868     		ldr	r0, [r3]
 825 0004 0004     		lsls	r0, r0, #16
 826 0006 000C     		lsrs	r0, r0, #16
1988:Generated_Source\PSoC4/CyLFClk.c **** 
 827              		.loc 1 1988 0
 828              		@ sp needed
 829 0008 7047     		bx	lr
 830              	.L68:
 831 000a C046     		.align	2
 832              	.L67:
 833 000c 40000340 		.word	1073938496
 834              		.cfi_endproc
 835              	.LFE15:
 836              		.size	CySysWdtGetMatch, .-CySysWdtGetMatch
 837              		.section	.text.CySysWdtGetCount,"ax",%progbits
 838              		.align	2
 839              		.global	CySysWdtGetCount
 840              		.code	16
 841              		.thumb_func
 842              		.type	CySysWdtGetCount, %function
 843              	CySysWdtGetCount:
 844              	.LFB16:
2001:Generated_Source\PSoC4/CyLFClk.c ****         return ((uint32)CY_SYS_WDT_COUNTER_REG);
 845              		.loc 1 2001 0
 846              		.cfi_startproc
 847              		@ args = 0, pretend = 0, frame = 0
 848              		@ frame_needed = 0, uses_anonymous_args = 0
 849              		@ link register save eliminated.
2002:Generated_Source\PSoC4/CyLFClk.c ****     }
 850              		.loc 1 2002 0
 851 0000 014B     		ldr	r3, .L70
 852 0002 1868     		ldr	r0, [r3]
2003:Generated_Source\PSoC4/CyLFClk.c **** 
 853              		.loc 1 2003 0
 854              		@ sp needed
 855 0004 7047     		bx	lr
 856              	.L71:
 857 0006 C046     		.align	2
 858              	.L70:
 859 0008 3C000340 		.word	1073938492
 860              		.cfi_endproc
 861              	.LFE16:
 862              		.size	CySysWdtGetCount, .-CySysWdtGetCount
 863              		.section	.text.CySysWdtSetIgnoreBits,"ax",%progbits
 864              		.align	2
 865              		.global	CySysWdtSetIgnoreBits
 866              		.code	16
 867              		.thumb_func
 868              		.type	CySysWdtSetIgnoreBits, %function
 869              	CySysWdtSetIgnoreBits:
 870              	.LFB17:
2021:Generated_Source\PSoC4/CyLFClk.c ****         bitsNum = ((uint32)(bitsNum << CY_SYS_WDT_IGNORE_BITS_SHIFT) & CY_SYS_WDT_IGNORE_BITS_MASK)
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 68


 871              		.loc 1 2021 0
 872              		.cfi_startproc
 873              		@ args = 0, pretend = 0, frame = 0
 874              		@ frame_needed = 0, uses_anonymous_args = 0
 875              		@ link register save eliminated.
 876              	.LVL58:
2022:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_MATCH_REG = (CY_SYS_WDT_MATCH_REG & (uint32)(~CY_SYS_WDT_IGNORE_BITS_MASK)) | bi
 877              		.loc 1 2022 0
 878 0000 0004     		lsls	r0, r0, #16
 879              	.LVL59:
 880 0002 F023     		movs	r3, #240
 881 0004 1B03     		lsls	r3, r3, #12
 882 0006 0200     		movs	r2, r0
 883 0008 1A40     		ands	r2, r3
 884              	.LVL60:
2023:Generated_Source\PSoC4/CyLFClk.c ****     }
 885              		.loc 1 2023 0
 886 000a 0349     		ldr	r1, .L73
 887 000c 0868     		ldr	r0, [r1]
 888 000e 034B     		ldr	r3, .L73+4
 889 0010 0340     		ands	r3, r0
 890 0012 1A43     		orrs	r2, r3
 891              	.LVL61:
 892 0014 0A60     		str	r2, [r1]
2024:Generated_Source\PSoC4/CyLFClk.c **** 
 893              		.loc 1 2024 0
 894              		@ sp needed
 895 0016 7047     		bx	lr
 896              	.L74:
 897              		.align	2
 898              	.L73:
 899 0018 40000340 		.word	1073938496
 900 001c FFFFF0FF 		.word	-983041
 901              		.cfi_endproc
 902              	.LFE17:
 903              		.size	CySysWdtSetIgnoreBits, .-CySysWdtSetIgnoreBits
 904              		.section	.text.CySysWdtGetIgnoreBits,"ax",%progbits
 905              		.align	2
 906              		.global	CySysWdtGetIgnoreBits
 907              		.code	16
 908              		.thumb_func
 909              		.type	CySysWdtGetIgnoreBits, %function
 910              	CySysWdtGetIgnoreBits:
 911              	.LFB18:
2039:Generated_Source\PSoC4/CyLFClk.c ****         return((uint32)((CY_SYS_WDT_MATCH_REG & CY_SYS_WDT_IGNORE_BITS_MASK) >> CY_SYS_WDT_IGNORE_B
 912              		.loc 1 2039 0
 913              		.cfi_startproc
 914              		@ args = 0, pretend = 0, frame = 0
 915              		@ frame_needed = 0, uses_anonymous_args = 0
 916              		@ link register save eliminated.
2040:Generated_Source\PSoC4/CyLFClk.c ****     }
 917              		.loc 1 2040 0
 918 0000 024B     		ldr	r3, .L76
 919 0002 1868     		ldr	r0, [r3]
 920 0004 000C     		lsrs	r0, r0, #16
 921 0006 0F23     		movs	r3, #15
 922 0008 1840     		ands	r0, r3
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 69


2041:Generated_Source\PSoC4/CyLFClk.c **** 
 923              		.loc 1 2041 0
 924              		@ sp needed
 925 000a 7047     		bx	lr
 926              	.L77:
 927              		.align	2
 928              	.L76:
 929 000c 40000340 		.word	1073938496
 930              		.cfi_endproc
 931              	.LFE18:
 932              		.size	CySysWdtGetIgnoreBits, .-CySysWdtGetIgnoreBits
 933              		.section	.text.CySysWdtClearInterrupt,"ax",%progbits
 934              		.align	2
 935              		.global	CySysWdtClearInterrupt
 936              		.code	16
 937              		.thumb_func
 938              		.type	CySysWdtClearInterrupt, %function
 939              	CySysWdtClearInterrupt:
 940              	.LFB19:
2056:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_SRSS_INTR_REG |= CY_SYS_WDT_LOWER_BIT_MASK;
 941              		.loc 1 2056 0
 942              		.cfi_startproc
 943              		@ args = 0, pretend = 0, frame = 0
 944              		@ frame_needed = 0, uses_anonymous_args = 0
 945              		@ link register save eliminated.
2057:Generated_Source\PSoC4/CyLFClk.c ****     }
 946              		.loc 1 2057 0
 947 0000 024A     		ldr	r2, .L79
 948 0002 1168     		ldr	r1, [r2]
 949 0004 0123     		movs	r3, #1
 950 0006 0B43     		orrs	r3, r1
 951 0008 1360     		str	r3, [r2]
2058:Generated_Source\PSoC4/CyLFClk.c **** 
 952              		.loc 1 2058 0
 953              		@ sp needed
 954 000a 7047     		bx	lr
 955              	.L80:
 956              		.align	2
 957              	.L79:
 958 000c 44000340 		.word	1073938500
 959              		.cfi_endproc
 960              	.LFE19:
 961              		.size	CySysWdtClearInterrupt, .-CySysWdtClearInterrupt
 962              		.section	.text.CySysWdtMaskInterrupt,"ax",%progbits
 963              		.align	2
 964              		.global	CySysWdtMaskInterrupt
 965              		.code	16
 966              		.thumb_func
 967              		.type	CySysWdtMaskInterrupt, %function
 968              	CySysWdtMaskInterrupt:
 969              	.LFB20:
2071:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_SRSS_INTR_MASK_REG &= (uint32)(~ (uint32)CY_SYS_WDT_LOWER_BIT_MASK);
 970              		.loc 1 2071 0
 971              		.cfi_startproc
 972              		@ args = 0, pretend = 0, frame = 0
 973              		@ frame_needed = 0, uses_anonymous_args = 0
 974              		@ link register save eliminated.
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 70


2072:Generated_Source\PSoC4/CyLFClk.c ****     }
 975              		.loc 1 2072 0
 976 0000 024A     		ldr	r2, .L82
 977 0002 1368     		ldr	r3, [r2]
 978 0004 0121     		movs	r1, #1
 979 0006 8B43     		bics	r3, r1
 980 0008 1360     		str	r3, [r2]
2073:Generated_Source\PSoC4/CyLFClk.c **** 
 981              		.loc 1 2073 0
 982              		@ sp needed
 983 000a 7047     		bx	lr
 984              	.L83:
 985              		.align	2
 986              	.L82:
 987 000c 4C000340 		.word	1073938508
 988              		.cfi_endproc
 989              	.LFE20:
 990              		.size	CySysWdtMaskInterrupt, .-CySysWdtMaskInterrupt
 991              		.section	.text.CySysWdtUnmaskInterrupt,"ax",%progbits
 992              		.align	2
 993              		.global	CySysWdtUnmaskInterrupt
 994              		.code	16
 995              		.thumb_func
 996              		.type	CySysWdtUnmaskInterrupt, %function
 997              	CySysWdtUnmaskInterrupt:
 998              	.LFB21:
2086:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_SRSS_INTR_MASK_REG |= CY_SYS_WDT_LOWER_BIT_MASK;
 999              		.loc 1 2086 0
 1000              		.cfi_startproc
 1001              		@ args = 0, pretend = 0, frame = 0
 1002              		@ frame_needed = 0, uses_anonymous_args = 0
 1003              		@ link register save eliminated.
2087:Generated_Source\PSoC4/CyLFClk.c ****     }
 1004              		.loc 1 2087 0
 1005 0000 024A     		ldr	r2, .L85
 1006 0002 1168     		ldr	r1, [r2]
 1007 0004 0123     		movs	r3, #1
 1008 0006 0B43     		orrs	r3, r1
 1009 0008 1360     		str	r3, [r2]
2088:Generated_Source\PSoC4/CyLFClk.c **** 
 1010              		.loc 1 2088 0
 1011              		@ sp needed
 1012 000a 7047     		bx	lr
 1013              	.L86:
 1014              		.align	2
 1015              	.L85:
 1016 000c 4C000340 		.word	1073938508
 1017              		.cfi_endproc
 1018              	.LFE21:
 1019              		.size	CySysWdtUnmaskInterrupt, .-CySysWdtUnmaskInterrupt
 1020              		.section	.text.CySysWdtSetInterruptCallback,"ax",%progbits
 1021              		.align	2
 1022              		.global	CySysWdtSetInterruptCallback
 1023              		.code	16
 1024              		.thumb_func
 1025              		.type	CySysWdtSetInterruptCallback, %function
 1026              	CySysWdtSetInterruptCallback:
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 71


 1027              	.LFB22:
2104:Generated_Source\PSoC4/CyLFClk.c ****         cyWdtCallback prevCallback = (void *)0;
 1028              		.loc 1 2104 0
 1029              		.cfi_startproc
 1030              		@ args = 0, pretend = 0, frame = 0
 1031              		@ frame_needed = 0, uses_anonymous_args = 0
 1032              		@ link register save eliminated.
 1033              	.LVL62:
2107:Generated_Source\PSoC4/CyLFClk.c ****         cySysWdtCallback = function;
 1034              		.loc 1 2107 0
 1035 0000 024B     		ldr	r3, .L88
 1036 0002 5A68     		ldr	r2, [r3, #4]
 1037              	.LVL63:
2108:Generated_Source\PSoC4/CyLFClk.c **** 
 1038              		.loc 1 2108 0
 1039 0004 5860     		str	r0, [r3, #4]
2111:Generated_Source\PSoC4/CyLFClk.c **** 
 1040              		.loc 1 2111 0
 1041 0006 1000     		movs	r0, r2
 1042              	.LVL64:
 1043              		@ sp needed
 1044 0008 7047     		bx	lr
 1045              	.L89:
 1046 000a C046     		.align	2
 1047              	.L88:
 1048 000c 00000000 		.word	.LANCHOR0
 1049              		.cfi_endproc
 1050              	.LFE22:
 1051              		.size	CySysWdtSetInterruptCallback, .-CySysWdtSetInterruptCallback
 1052              		.section	.text.CySysWdtGetInterruptCallback,"ax",%progbits
 1053              		.align	2
 1054              		.global	CySysWdtGetInterruptCallback
 1055              		.code	16
 1056              		.thumb_func
 1057              		.type	CySysWdtGetInterruptCallback, %function
 1058              	CySysWdtGetInterruptCallback:
 1059              	.LFB23:
2125:Generated_Source\PSoC4/CyLFClk.c ****         return(cySysWdtCallback);
 1060              		.loc 1 2125 0
 1061              		.cfi_startproc
 1062              		@ args = 0, pretend = 0, frame = 0
 1063              		@ frame_needed = 0, uses_anonymous_args = 0
 1064              		@ link register save eliminated.
2126:Generated_Source\PSoC4/CyLFClk.c ****     }
 1065              		.loc 1 2126 0
 1066 0000 014B     		ldr	r3, .L91
 1067 0002 5868     		ldr	r0, [r3, #4]
2127:Generated_Source\PSoC4/CyLFClk.c **** 
 1068              		.loc 1 2127 0
 1069              		@ sp needed
 1070 0004 7047     		bx	lr
 1071              	.L92:
 1072 0006 C046     		.align	2
 1073              	.L91:
 1074 0008 00000000 		.word	.LANCHOR0
 1075              		.cfi_endproc
 1076              	.LFE23:
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 72


 1077              		.size	CySysWdtGetInterruptCallback, .-CySysWdtGetInterruptCallback
 1078              		.section	.text.CySysWdtIsr,"ax",%progbits
 1079              		.align	2
 1080              		.global	CySysWdtIsr
 1081              		.code	16
 1082              		.thumb_func
 1083              		.type	CySysWdtIsr, %function
 1084              	CySysWdtIsr:
 1085              	.LFB24:
2149:Generated_Source\PSoC4/CyLFClk.c ****         if(cySysWdtCallback != (void *) 0)
 1086              		.loc 1 2149 0
 1087              		.cfi_startproc
 1088              		@ args = 0, pretend = 0, frame = 0
 1089              		@ frame_needed = 0, uses_anonymous_args = 0
 1090 0000 10B5     		push	{r4, lr}
 1091              		.cfi_def_cfa_offset 8
 1092              		.cfi_offset 4, -8
 1093              		.cfi_offset 14, -4
2150:Generated_Source\PSoC4/CyLFClk.c ****         {
 1094              		.loc 1 2150 0
 1095 0002 044B     		ldr	r3, .L95
 1096 0004 5B68     		ldr	r3, [r3, #4]
 1097 0006 002B     		cmp	r3, #0
 1098 0008 00D0     		beq	.L94
2152:Generated_Source\PSoC4/CyLFClk.c ****         }
 1099              		.loc 1 2152 0
 1100 000a 9847     		blx	r3
 1101              	.LVL65:
 1102              	.L94:
2155:Generated_Source\PSoC4/CyLFClk.c ****     }
 1103              		.loc 1 2155 0
 1104 000c FFF7FEFF 		bl	CySysWdtClearInterrupt
 1105              	.LVL66:
2156:Generated_Source\PSoC4/CyLFClk.c **** 
 1106              		.loc 1 2156 0
 1107              		@ sp needed
 1108 0010 10BD     		pop	{r4, pc}
 1109              	.L96:
 1110 0012 C046     		.align	2
 1111              	.L95:
 1112 0014 00000000 		.word	.LANCHOR0
 1113              		.cfi_endproc
 1114              	.LFE24:
 1115              		.size	CySysWdtIsr, .-CySysWdtIsr
 1116              		.section	.text.CySysClkSetTimerSource,"ax",%progbits
 1117              		.align	2
 1118              		.global	CySysClkSetTimerSource
 1119              		.code	16
 1120              		.thumb_func
 1121              		.type	CySysClkSetTimerSource, %function
 1122              	CySysClkSetTimerSource:
 1123              	.LFB26:
2182:Generated_Source\PSoC4/CyLFClk.c **** 
2183:Generated_Source\PSoC4/CyLFClk.c **** 
2184:Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
2185:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkSetTimerSource
2186:Generated_Source\PSoC4/CyLFClk.c **** ****************************************************************************//**
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 73


2187:Generated_Source\PSoC4/CyLFClk.c **** *
2188:Generated_Source\PSoC4/CyLFClk.c **** * \brief Sets the clock source for the DeepSleep Timers.
2189:Generated_Source\PSoC4/CyLFClk.c **** *
2190:Generated_Source\PSoC4/CyLFClk.c **** * The function is applicable only for PSoC 4100S / PSoC Analog Coprocessor 
2191:Generated_Source\PSoC4/CyLFClk.c **** * devices.
2192:Generated_Source\PSoC4/CyLFClk.c **** *
2193:Generated_Source\PSoC4/CyLFClk.c **** * \param source
2194:Generated_Source\PSoC4/CyLFClk.c **** *  CY_SYS_CLK_TIMER_SRC_ILO - Internal Low Frequency (32 kHz) Oscillator 
2195:Generated_Source\PSoC4/CyLFClk.c **** * (ILO).<br>
2196:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_TIMER_SRC_WCO - Low Frequency Watch Crystal Oscillator 
2197:Generated_Source\PSoC4/CyLFClk.c **** * (WCO).
2198:Generated_Source\PSoC4/CyLFClk.c **** *
2199:Generated_Source\PSoC4/CyLFClk.c **** * \details Both the current source and the new source must be running and stable 
2200:Generated_Source\PSoC4/CyLFClk.c **** * before calling this function.
2201:Generated_Source\PSoC4/CyLFClk.c **** *
2202:Generated_Source\PSoC4/CyLFClk.c **** * \warning DeepSleep Timer reset is required if Timer source was switched while 
2203:Generated_Source\PSoC4/CyLFClk.c **** * DeepSleep Timers were running. Call CySysTimerResetCounters() API after 
2204:Generated_Source\PSoC4/CyLFClk.c **** * Timer source switching.
2205:Generated_Source\PSoC4/CyLFClk.c **** * It is highly recommended to disable DeepSleep Timers before Timer source 
2206:Generated_Source\PSoC4/CyLFClk.c **** * switching. Changing the Timer source may change the functionality that uses 
2207:Generated_Source\PSoC4/CyLFClk.c **** * this Timers as clock source.
2208:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
2209:Generated_Source\PSoC4/CyLFClk.c ****     void CySysClkSetTimerSource(uint32 source)
2210:Generated_Source\PSoC4/CyLFClk.c ****     {
 1124              		.loc 1 2210 0
 1125              		.cfi_startproc
 1126              		@ args = 0, pretend = 0, frame = 0
 1127              		@ frame_needed = 0, uses_anonymous_args = 0
 1128              	.LVL67:
 1129 0000 10B5     		push	{r4, lr}
 1130              		.cfi_def_cfa_offset 8
 1131              		.cfi_offset 4, -8
 1132              		.cfi_offset 14, -4
 1133 0002 0400     		movs	r4, r0
2211:Generated_Source\PSoC4/CyLFClk.c ****         uint8  interruptState;
2212:Generated_Source\PSoC4/CyLFClk.c **** 
2213:Generated_Source\PSoC4/CyLFClk.c ****         if (CySysClkGetTimerSource() != source)
 1134              		.loc 1 2213 0
 1135 0004 FFF7FEFF 		bl	CySysClkGetTimerSource
 1136              	.LVL68:
 1137 0008 A042     		cmp	r0, r4
 1138 000a 1AD0     		beq	.L98
2214:Generated_Source\PSoC4/CyLFClk.c ****         {
2215:Generated_Source\PSoC4/CyLFClk.c **** 
2216:Generated_Source\PSoC4/CyLFClk.c ****             /* Reset both _EN bits in WCO_WDT_CLKEN register */
2217:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WCO_WDT_CLKEN_REG &= ~CY_SYS_WCO_WDT_CLKEN_RESET_MASK;
 1139              		.loc 1 2217 0
 1140 000c 144A     		ldr	r2, .L103
 1141 000e 1368     		ldr	r3, [r2]
 1142 0010 0321     		movs	r1, #3
 1143 0012 8B43     		bics	r3, r1
 1144 0014 1360     		str	r3, [r2]
2218:Generated_Source\PSoC4/CyLFClk.c ****             
2219:Generated_Source\PSoC4/CyLFClk.c ****             /* Wait 4 new clock source-cycles for change to come into effect */
2220:Generated_Source\PSoC4/CyLFClk.c ****             CyDelayUs(CY_SYS_4TIMER_DELAY_US);
 1145              		.loc 1 2220 0
 1146 0016 134B     		ldr	r3, .L103+4
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 74


 1147 0018 1B68     		ldr	r3, [r3]
 1148 001a 9B0F     		lsrs	r3, r3, #30
 1149 001c 01D1     		bne	.L101
 1150 001e 7C20     		movs	r0, #124
 1151 0020 01E0     		b	.L99
 1152              	.L101:
 1153 0022 8620     		movs	r0, #134
 1154 0024 4000     		lsls	r0, r0, #1
 1155              	.L99:
 1156              		.loc 1 2220 0 is_stmt 0 discriminator 4
 1157 0026 FFF7FEFF 		bl	CyDelayUs
 1158              	.LVL69:
2221:Generated_Source\PSoC4/CyLFClk.c **** 
2222:Generated_Source\PSoC4/CyLFClk.c ****             interruptState = CyEnterCriticalSection();
 1159              		.loc 1 2222 0 is_stmt 1 discriminator 4
 1160 002a FFF7FEFF 		bl	CyEnterCriticalSection
 1161              	.LVL70:
2223:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WCO_WDT_CONFIG_REG = (CY_SYS_WCO_WDT_CONFIG_REG & (uint32)(~CY_SYS_CLK_TIMER_SEL
 1162              		.loc 1 2223 0 discriminator 4
 1163 002e 0D4A     		ldr	r2, .L103+4
 1164 0030 1368     		ldr	r3, [r2]
 1165 0032 9B00     		lsls	r3, r3, #2
 1166 0034 9B08     		lsrs	r3, r3, #2
2224:Generated_Source\PSoC4/CyLFClk.c ****                                     (source & CY_SYS_CLK_TIMER_SEL_MASK);
 1167              		.loc 1 2224 0 discriminator 4
 1168 0036 A40F     		lsrs	r4, r4, #30
 1169              	.LVL71:
 1170 0038 A407     		lsls	r4, r4, #30
2223:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WCO_WDT_CONFIG_REG = (CY_SYS_WCO_WDT_CONFIG_REG & (uint32)(~CY_SYS_CLK_TIMER_SEL
 1171              		.loc 1 2223 0 discriminator 4
 1172 003a 1C43     		orrs	r4, r3
 1173 003c 1460     		str	r4, [r2]
2225:Generated_Source\PSoC4/CyLFClk.c ****             CyExitCriticalSection(interruptState);
 1174              		.loc 1 2225 0 discriminator 4
 1175 003e FFF7FEFF 		bl	CyExitCriticalSection
 1176              	.LVL72:
 1177              	.L98:
2226:Generated_Source\PSoC4/CyLFClk.c ****         }
2227:Generated_Source\PSoC4/CyLFClk.c **** 
2228:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WCO_WDT_CLKEN_REG = (CY_SYS_WCO_WDT_CLKEN_REG & (uint32)(~CY_SYS_WCO_WDT_CLKEN_RESET
 1178              		.loc 1 2228 0
 1179 0042 074B     		ldr	r3, .L103
 1180 0044 1B68     		ldr	r3, [r3]
 1181 0046 0322     		movs	r2, #3
 1182 0048 9343     		bics	r3, r2
2229:Generated_Source\PSoC4/CyLFClk.c ****                                     CY_SYS_SET_CURRENT_TIMER_SOURCE_BIT;
 1183              		.loc 1 2229 0
 1184 004a 064A     		ldr	r2, .L103+4
 1185 004c 1268     		ldr	r2, [r2]
 1186 004e 920F     		lsrs	r2, r2, #30
2228:Generated_Source\PSoC4/CyLFClk.c ****                                     CY_SYS_SET_CURRENT_TIMER_SOURCE_BIT;
 1187              		.loc 1 2228 0
 1188 0050 01D1     		bne	.L102
 1189 0052 0232     		adds	r2, r2, #2
 1190 0054 00E0     		b	.L100
 1191              	.L102:
 1192 0056 0122     		movs	r2, #1
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 75


 1193              	.L100:
2228:Generated_Source\PSoC4/CyLFClk.c ****                                     CY_SYS_SET_CURRENT_TIMER_SOURCE_BIT;
 1194              		.loc 1 2228 0 is_stmt 0 discriminator 4
 1195 0058 1343     		orrs	r3, r2
 1196 005a 014A     		ldr	r2, .L103
 1197 005c 1360     		str	r3, [r2]
2230:Generated_Source\PSoC4/CyLFClk.c ****     }
 1198              		.loc 1 2230 0 is_stmt 1 discriminator 4
 1199              		@ sp needed
 1200 005e 10BD     		pop	{r4, pc}
 1201              	.L104:
 1202              		.align	2
 1203              	.L103:
 1204 0060 14020640 		.word	1074135572
 1205 0064 0C020640 		.word	1074135564
 1206              		.cfi_endproc
 1207              	.LFE26:
 1208              		.size	CySysClkSetTimerSource, .-CySysClkSetTimerSource
 1209              		.section	.text.CySysTimerGetEnabledStatus,"ax",%progbits
 1210              		.align	2
 1211              		.global	CySysTimerGetEnabledStatus
 1212              		.code	16
 1213              		.thumb_func
 1214              		.type	CySysTimerGetEnabledStatus, %function
 1215              	CySysTimerGetEnabledStatus:
 1216              	.LFB27:
2231:Generated_Source\PSoC4/CyLFClk.c **** 
2232:Generated_Source\PSoC4/CyLFClk.c **** 
2233:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2234:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetEnabledStatus
2235:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2236:Generated_Source\PSoC4/CyLFClk.c ****     *
2237:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the enabled status of one of the three DeepSleep Timer 
2238:Generated_Source\PSoC4/CyLFClk.c ****     * counters.
2239:Generated_Source\PSoC4/CyLFClk.c ****     *
2240:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum: Valid range [0-2]. The number of the DeepSleep Timer 
2241:Generated_Source\PSoC4/CyLFClk.c ****     * counter.
2242:Generated_Source\PSoC4/CyLFClk.c ****     *
2243:Generated_Source\PSoC4/CyLFClk.c ****     * \return The status of the Timers counter:
2244:Generated_Source\PSoC4/CyLFClk.c ****     * \return 0 - If the Counter is disabled.
2245:Generated_Source\PSoC4/CyLFClk.c ****     * \return 1 - If the Counter is enabled.
2246:Generated_Source\PSoC4/CyLFClk.c ****     *
2247:Generated_Source\PSoC4/CyLFClk.c ****     * \details
2248:Generated_Source\PSoC4/CyLFClk.c ****     * This function returns an actual DeepSleep Timer counter status from the 
2249:Generated_Source\PSoC4/CyLFClk.c ****     * status register. It may take up to 3 LFCLK cycles for the Timer status 
2250:Generated_Source\PSoC4/CyLFClk.c ****     * register to contain actual data after the Timer counter is enabled.
2251:Generated_Source\PSoC4/CyLFClk.c ****     *
2252:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2253:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetEnabledStatus(uint32 counterNum)
2254:Generated_Source\PSoC4/CyLFClk.c ****     {
 1217              		.loc 1 2254 0
 1218              		.cfi_startproc
 1219              		@ args = 0, pretend = 0, frame = 0
 1220              		@ frame_needed = 0, uses_anonymous_args = 0
 1221              	.LVL73:
 1222 0000 10B5     		push	{r4, lr}
 1223              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 76


 1224              		.cfi_offset 4, -8
 1225              		.cfi_offset 14, -4
 1226 0002 0400     		movs	r4, r0
2255:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT(counterNum < CY_SYS_TIMER_COUNTERS_MAX);
 1227              		.loc 1 2255 0
 1228 0004 0228     		cmp	r0, #2
 1229 0006 02D9     		bls	.L106
 1230              		.loc 1 2255 0 is_stmt 0 discriminator 1
 1231 0008 0020     		movs	r0, #0
 1232              	.LVL74:
 1233 000a FFF7FEFF 		bl	CyHalt
 1234              	.LVL75:
 1235              	.L106:
2256:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WCO_WDT_CONTROL_REG >> ((CY_SYS_TIMER_CNT_SHIFT * counterNum) + 
 1236              		.loc 1 2256 0 is_stmt 1
 1237 000e 044B     		ldr	r3, .L107
 1238 0010 1868     		ldr	r0, [r3]
 1239 0012 E400     		lsls	r4, r4, #3
 1240              	.LVL76:
 1241 0014 0134     		adds	r4, r4, #1
 1242 0016 E040     		lsrs	r0, r0, r4
 1243 0018 0123     		movs	r3, #1
 1244 001a 1840     		ands	r0, r3
2257:Generated_Source\PSoC4/CyLFClk.c ****                                                  CY_SYS_TIMER_CNT_STTS_SHIFT)) & 0x01u);
2258:Generated_Source\PSoC4/CyLFClk.c ****     }
 1245              		.loc 1 2258 0
 1246              		@ sp needed
 1247 001c 10BD     		pop	{r4, pc}
 1248              	.L108:
 1249 001e C046     		.align	2
 1250              	.L107:
 1251 0020 10020640 		.word	1074135568
 1252              		.cfi_endproc
 1253              	.LFE27:
 1254              		.size	CySysTimerGetEnabledStatus, .-CySysTimerGetEnabledStatus
 1255              		.section	.text.CySysTimerSetMode,"ax",%progbits
 1256              		.align	2
 1257              		.global	CySysTimerSetMode
 1258              		.code	16
 1259              		.thumb_func
 1260              		.type	CySysTimerSetMode, %function
 1261              	CySysTimerSetMode:
 1262              	.LFB28:
2259:Generated_Source\PSoC4/CyLFClk.c **** 
2260:Generated_Source\PSoC4/CyLFClk.c **** 
2261:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2262:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerSetMode
2263:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2264:Generated_Source\PSoC4/CyLFClk.c ****     *
2265:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Writes the mode of one of the three DeepSleep Timer counters.
2266:Generated_Source\PSoC4/CyLFClk.c ****     *
2267:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum: Valid range [0-2]. The number of the DeepSleep Timer 
2268:Generated_Source\PSoC4/CyLFClk.c ****     * counter.
2269:Generated_Source\PSoC4/CyLFClk.c ****     *
2270:Generated_Source\PSoC4/CyLFClk.c ****     * \param mode
2271:Generated_Source\PSoC4/CyLFClk.c ****     *  CY_SYS_TIMER_MODE_NONE - Free running.<br>
2272:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER_MODE_INT - The interrupt generated on match for counter 0
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 77


2273:Generated_Source\PSoC4/CyLFClk.c ****     * and 1, and on bit toggle for counter 2.
2274:Generated_Source\PSoC4/CyLFClk.c ****     *
2275:Generated_Source\PSoC4/CyLFClk.c ****     * \details
2276:Generated_Source\PSoC4/CyLFClk.c ****     * DeepSleep Timer counter counterNum should be disabled to set a mode. 
2277:Generated_Source\PSoC4/CyLFClk.c ****     * Otherwise, this function call has no effect. If the specified counter is 
2278:Generated_Source\PSoC4/CyLFClk.c ****     * enabled, call the CySysTimerDisable() function with the corresponding 
2279:Generated_Source\PSoC4/CyLFClk.c ****     * parameter to disable the specified counter and wait for it to stop.
2280:Generated_Source\PSoC4/CyLFClk.c ****     *
2281:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2282:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerSetMode(uint32 counterNum, uint32 mode)
2283:Generated_Source\PSoC4/CyLFClk.c ****     {
 1263              		.loc 1 2283 0
 1264              		.cfi_startproc
 1265              		@ args = 0, pretend = 0, frame = 0
 1266              		@ frame_needed = 0, uses_anonymous_args = 0
 1267              	.LVL77:
 1268 0000 70B5     		push	{r4, r5, r6, lr}
 1269              		.cfi_def_cfa_offset 16
 1270              		.cfi_offset 4, -16
 1271              		.cfi_offset 5, -12
 1272              		.cfi_offset 6, -8
 1273              		.cfi_offset 14, -4
 1274 0002 0500     		movs	r5, r0
 1275 0004 0C00     		movs	r4, r1
2284:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
2285:Generated_Source\PSoC4/CyLFClk.c **** 
2286:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT(counterNum < CY_SYS_TIMER_COUNTERS_MAX);
 1276              		.loc 1 2286 0
 1277 0006 0228     		cmp	r0, #2
 1278 0008 02D9     		bls	.L110
 1279              		.loc 1 2286 0 is_stmt 0 discriminator 1
 1280 000a 0020     		movs	r0, #0
 1281              	.LVL78:
 1282 000c FFF7FEFF 		bl	CyHalt
 1283              	.LVL79:
 1284              	.L110:
2287:Generated_Source\PSoC4/CyLFClk.c **** 
2288:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT(mode <= CY_SYS_TIMER_MODE_MASK);
 1285              		.loc 1 2288 0 is_stmt 1
 1286 0010 012C     		cmp	r4, #1
 1287 0012 02D9     		bls	.L111
 1288              		.loc 1 2288 0 is_stmt 0 discriminator 1
 1289 0014 0020     		movs	r0, #0
 1290 0016 FFF7FEFF 		bl	CyHalt
 1291              	.LVL80:
 1292              	.L111:
2289:Generated_Source\PSoC4/CyLFClk.c **** 
2290:Generated_Source\PSoC4/CyLFClk.c ****         if(0u == CySysTimerGetEnabledStatus(counterNum))
 1293              		.loc 1 2290 0 is_stmt 1
 1294 001a 2800     		movs	r0, r5
 1295 001c FFF7FEFF 		bl	CySysTimerGetEnabledStatus
 1296              	.LVL81:
 1297 0020 0028     		cmp	r0, #0
 1298 0022 0AD1     		bne	.L109
2291:Generated_Source\PSoC4/CyLFClk.c ****         {
2292:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WCO_WDT_CONFIG_REG &
 1299              		.loc 1 2292 0
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 78


 1300 0024 054A     		ldr	r2, .L113
 1301 0026 1368     		ldr	r3, [r2]
2293:Generated_Source\PSoC4/CyLFClk.c ****                                 (uint32)~((uint32)(CY_SYS_TIMER_MODE_MASK << (counterNum * CY_SYS_T
 1302              		.loc 1 2293 0
 1303 0028 ED00     		lsls	r5, r5, #3
 1304              	.LVL82:
 1305 002a 0121     		movs	r1, #1
 1306 002c 0800     		movs	r0, r1
 1307 002e A840     		lsls	r0, r0, r5
2292:Generated_Source\PSoC4/CyLFClk.c ****                                 (uint32)~((uint32)(CY_SYS_TIMER_MODE_MASK << (counterNum * CY_SYS_T
 1308              		.loc 1 2292 0
 1309 0030 8343     		bics	r3, r0
 1310              	.LVL83:
2294:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue |= (uint32)((mode & CY_SYS_TIMER_MODE_MASK) << (counterNum * CY_SYS_TIME
 1311              		.loc 1 2294 0
 1312 0032 0C40     		ands	r4, r1
 1313              	.LVL84:
 1314 0034 AC40     		lsls	r4, r4, r5
 1315 0036 1C43     		orrs	r4, r3
 1316              	.LVL85:
2295:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WCO_WDT_CONFIG_REG = configRegValue;
 1317              		.loc 1 2295 0
 1318 0038 1460     		str	r4, [r2]
 1319              	.LVL86:
 1320              	.L109:
2296:Generated_Source\PSoC4/CyLFClk.c ****         }
2297:Generated_Source\PSoC4/CyLFClk.c ****     }
 1321              		.loc 1 2297 0
 1322              		@ sp needed
 1323 003a 70BD     		pop	{r4, r5, r6, pc}
 1324              	.L114:
 1325              		.align	2
 1326              	.L113:
 1327 003c 0C020640 		.word	1074135564
 1328              		.cfi_endproc
 1329              	.LFE28:
 1330              		.size	CySysTimerSetMode, .-CySysTimerSetMode
 1331              		.section	.text.CySysTimerGetMode,"ax",%progbits
 1332              		.align	2
 1333              		.global	CySysTimerGetMode
 1334              		.code	16
 1335              		.thumb_func
 1336              		.type	CySysTimerGetMode, %function
 1337              	CySysTimerGetMode:
 1338              	.LFB29:
2298:Generated_Source\PSoC4/CyLFClk.c **** 
2299:Generated_Source\PSoC4/CyLFClk.c **** 
2300:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2301:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetMode
2302:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2303:Generated_Source\PSoC4/CyLFClk.c ****     *
2304:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the mode of one of the three DeepSleep Timer counters.
2305:Generated_Source\PSoC4/CyLFClk.c ****     *
2306:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the Timer counter.
2307:Generated_Source\PSoC4/CyLFClk.c ****     *
2308:Generated_Source\PSoC4/CyLFClk.c ****     * \return The mode of the counter. The same enumerated values as the mode 
2309:Generated_Source\PSoC4/CyLFClk.c ****     * parameter used in CySysTimerSetMode().
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 79


2310:Generated_Source\PSoC4/CyLFClk.c ****     *
2311:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2312:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetMode(uint32 counterNum)
2313:Generated_Source\PSoC4/CyLFClk.c ****     {
 1339              		.loc 1 2313 0
 1340              		.cfi_startproc
 1341              		@ args = 0, pretend = 0, frame = 0
 1342              		@ frame_needed = 0, uses_anonymous_args = 0
 1343              		@ link register save eliminated.
 1344              	.LVL87:
 1345 0000 0300     		movs	r3, r0
2314:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WCO_WDT_CONFIG_REG >> (counterNum * CY_SYS_TIMER_CNT_SHIFT)) & CY_SYS_TIMER
 1346              		.loc 1 2314 0
 1347 0002 034A     		ldr	r2, .L116
 1348 0004 1068     		ldr	r0, [r2]
 1349              	.LVL88:
 1350 0006 DB00     		lsls	r3, r3, #3
 1351              	.LVL89:
 1352 0008 D840     		lsrs	r0, r0, r3
 1353 000a 0123     		movs	r3, #1
 1354 000c 1840     		ands	r0, r3
2315:Generated_Source\PSoC4/CyLFClk.c ****     }
 1355              		.loc 1 2315 0
 1356              		@ sp needed
 1357 000e 7047     		bx	lr
 1358              	.L117:
 1359              		.align	2
 1360              	.L116:
 1361 0010 0C020640 		.word	1074135564
 1362              		.cfi_endproc
 1363              	.LFE29:
 1364              		.size	CySysTimerGetMode, .-CySysTimerGetMode
 1365              		.section	.text.CySysTimerSetClearOnMatch,"ax",%progbits
 1366              		.align	2
 1367              		.global	CySysTimerSetClearOnMatch
 1368              		.code	16
 1369              		.thumb_func
 1370              		.type	CySysTimerSetClearOnMatch, %function
 1371              	CySysTimerSetClearOnMatch:
 1372              	.LFB30:
2316:Generated_Source\PSoC4/CyLFClk.c **** 
2317:Generated_Source\PSoC4/CyLFClk.c **** 
2318:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2319:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerSetClearOnMatch
2320:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2321:Generated_Source\PSoC4/CyLFClk.c ****     *
2322:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Configures the DeepSleep Timer counter "clear on match" setting.
2323:Generated_Source\PSoC4/CyLFClk.c ****     *
2324:Generated_Source\PSoC4/CyLFClk.c ****     * If configured to "clear on match", the counter counts from 0 to MatchValue 
2325:Generated_Source\PSoC4/CyLFClk.c ****     * giving it a period of (MatchValue + 1).
2326:Generated_Source\PSoC4/CyLFClk.c ****     *
2327:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum
2328:Generated_Source\PSoC4/CyLFClk.c ****     * Valid range [0-1]. The number of the Timer counter. The match values are not
2329:Generated_Source\PSoC4/CyLFClk.c ****     * supported by counter 2.
2330:Generated_Source\PSoC4/CyLFClk.c ****     * \param enable 0 to disable appropriate counter <br>
2331:Generated_Source\PSoC4/CyLFClk.c ****     * 1 to enable appropriate counter
2332:Generated_Source\PSoC4/CyLFClk.c ****     *
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 80


2333:Generated_Source\PSoC4/CyLFClk.c ****     * \details
2334:Generated_Source\PSoC4/CyLFClk.c ****     * Timer counter counterNum should be disabled. Otherwise this function call
2335:Generated_Source\PSoC4/CyLFClk.c ****     * has no effect. If the specified counter is enabled, call the CySysTimerDisable()
2336:Generated_Source\PSoC4/CyLFClk.c ****     * function with the corresponding parameter to disable the specified counter and
2337:Generated_Source\PSoC4/CyLFClk.c ****     * wait for it to stop. This may take up to three Timer source-cycles.
2338:Generated_Source\PSoC4/CyLFClk.c ****     *
2339:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2340:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerSetClearOnMatch(uint32 counterNum, uint32 enable)
2341:Generated_Source\PSoC4/CyLFClk.c ****     {
 1373              		.loc 1 2341 0
 1374              		.cfi_startproc
 1375              		@ args = 0, pretend = 0, frame = 0
 1376              		@ frame_needed = 0, uses_anonymous_args = 0
 1377              	.LVL90:
 1378 0000 70B5     		push	{r4, r5, r6, lr}
 1379              		.cfi_def_cfa_offset 16
 1380              		.cfi_offset 4, -16
 1381              		.cfi_offset 5, -12
 1382              		.cfi_offset 6, -8
 1383              		.cfi_offset 14, -4
 1384 0002 0400     		movs	r4, r0
 1385 0004 0D00     		movs	r5, r1
2342:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
2343:Generated_Source\PSoC4/CyLFClk.c **** 
2344:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_TIMER0) ||
 1386              		.loc 1 2344 0
 1387 0006 0128     		cmp	r0, #1
 1388 0008 02D9     		bls	.L119
 1389              		.loc 1 2344 0 is_stmt 0 discriminator 1
 1390 000a 0020     		movs	r0, #0
 1391              	.LVL91:
 1392 000c FFF7FEFF 		bl	CyHalt
 1393              	.LVL92:
 1394              	.L119:
2345:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_TIMER1));
2346:Generated_Source\PSoC4/CyLFClk.c **** 
2347:Generated_Source\PSoC4/CyLFClk.c ****         if(0u == CySysTimerGetEnabledStatus(counterNum))
 1395              		.loc 1 2347 0 is_stmt 1
 1396 0010 2000     		movs	r0, r4
 1397 0012 FFF7FEFF 		bl	CySysTimerGetEnabledStatus
 1398              	.LVL93:
 1399 0016 0028     		cmp	r0, #0
 1400 0018 09D1     		bne	.L118
2348:Generated_Source\PSoC4/CyLFClk.c ****         {
2349:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WCO_WDT_CONFIG_REG & (uint32)~((uint32)((uint32)1u << 
 1401              		.loc 1 2349 0
 1402 001a 0549     		ldr	r1, .L121
 1403 001c 0B68     		ldr	r3, [r1]
2350:Generated_Source\PSoC4/CyLFClk.c ****              ((counterNum * CY_SYS_TIMER_CNT_SHIFT) + CY_SYS_TIMER_CNT_MATCH_CLR_SHIFT)));
 1404              		.loc 1 2350 0
 1405 001e E400     		lsls	r4, r4, #3
 1406              	.LVL94:
 1407 0020 0234     		adds	r4, r4, #2
2349:Generated_Source\PSoC4/CyLFClk.c ****              ((counterNum * CY_SYS_TIMER_CNT_SHIFT) + CY_SYS_TIMER_CNT_MATCH_CLR_SHIFT)));
 1408              		.loc 1 2349 0
 1409 0022 0122     		movs	r2, #1
 1410 0024 A240     		lsls	r2, r2, r4
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 81


 1411 0026 9343     		bics	r3, r2
 1412              	.LVL95:
2351:Generated_Source\PSoC4/CyLFClk.c **** 
2352:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue
2353:Generated_Source\PSoC4/CyLFClk.c ****                 |= (uint32)(enable << ((counterNum * CY_SYS_TIMER_CNT_SHIFT) + CY_SYS_TIMER_CNT_MAT
 1413              		.loc 1 2353 0
 1414 0028 A540     		lsls	r5, r5, r4
 1415              	.LVL96:
 1416 002a 1D43     		orrs	r5, r3
 1417              	.LVL97:
2354:Generated_Source\PSoC4/CyLFClk.c **** 
2355:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WCO_WDT_CONFIG_REG = configRegValue;
 1418              		.loc 1 2355 0
 1419 002c 0D60     		str	r5, [r1]
 1420              	.LVL98:
 1421              	.L118:
2356:Generated_Source\PSoC4/CyLFClk.c ****         }
2357:Generated_Source\PSoC4/CyLFClk.c ****     }
 1422              		.loc 1 2357 0
 1423              		@ sp needed
 1424 002e 70BD     		pop	{r4, r5, r6, pc}
 1425              	.L122:
 1426              		.align	2
 1427              	.L121:
 1428 0030 0C020640 		.word	1074135564
 1429              		.cfi_endproc
 1430              	.LFE30:
 1431              		.size	CySysTimerSetClearOnMatch, .-CySysTimerSetClearOnMatch
 1432              		.section	.text.CySysTimerGetClearOnMatch,"ax",%progbits
 1433              		.align	2
 1434              		.global	CySysTimerGetClearOnMatch
 1435              		.code	16
 1436              		.thumb_func
 1437              		.type	CySysTimerGetClearOnMatch, %function
 1438              	CySysTimerGetClearOnMatch:
 1439              	.LFB31:
2358:Generated_Source\PSoC4/CyLFClk.c **** 
2359:Generated_Source\PSoC4/CyLFClk.c **** 
2360:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2361:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetClearOnMatch
2362:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2363:Generated_Source\PSoC4/CyLFClk.c ****     *
2364:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the "clear on match" setting for the specified DeepSleep Timer 
2365:Generated_Source\PSoC4/CyLFClk.c ****     * counter.
2366:Generated_Source\PSoC4/CyLFClk.c ****     *
2367:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-1].  The number of the Timer counter. The 
2368:Generated_Source\PSoC4/CyLFClk.c ****     * match values are not supported by counter 2.
2369:Generated_Source\PSoC4/CyLFClk.c ****     *
2370:Generated_Source\PSoC4/CyLFClk.c ****     * \return The "clear on match" status: <br>1 if enabled <br>0 if disabled
2371:Generated_Source\PSoC4/CyLFClk.c ****     *
2372:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2373:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetClearOnMatch(uint32 counterNum)
2374:Generated_Source\PSoC4/CyLFClk.c ****     {
 1440              		.loc 1 2374 0
 1441              		.cfi_startproc
 1442              		@ args = 0, pretend = 0, frame = 0
 1443              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 82


 1444              	.LVL99:
 1445 0000 10B5     		push	{r4, lr}
 1446              		.cfi_def_cfa_offset 8
 1447              		.cfi_offset 4, -8
 1448              		.cfi_offset 14, -4
 1449 0002 0400     		movs	r4, r0
2375:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_TIMER0) ||
 1450              		.loc 1 2375 0
 1451 0004 0128     		cmp	r0, #1
 1452 0006 02D9     		bls	.L124
 1453              		.loc 1 2375 0 is_stmt 0 discriminator 1
 1454 0008 0020     		movs	r0, #0
 1455              	.LVL100:
 1456 000a FFF7FEFF 		bl	CyHalt
 1457              	.LVL101:
 1458              	.L124:
2376:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_TIMER1));
2377:Generated_Source\PSoC4/CyLFClk.c **** 
2378:Generated_Source\PSoC4/CyLFClk.c ****         return (uint32)((CY_SYS_WCO_WDT_CONFIG_REG >>
 1459              		.loc 1 2378 0 is_stmt 1
 1460 000e 044B     		ldr	r3, .L125
 1461 0010 1868     		ldr	r0, [r3]
2379:Generated_Source\PSoC4/CyLFClk.c ****                         ((counterNum * CY_SYS_TIMER_CNT_SHIFT) + CY_SYS_TIMER_CNT_MATCH_CLR_SHIFT))
 1462              		.loc 1 2379 0
 1463 0012 E400     		lsls	r4, r4, #3
 1464              	.LVL102:
 1465 0014 0234     		adds	r4, r4, #2
2378:Generated_Source\PSoC4/CyLFClk.c ****                         ((counterNum * CY_SYS_TIMER_CNT_SHIFT) + CY_SYS_TIMER_CNT_MATCH_CLR_SHIFT))
 1466              		.loc 1 2378 0
 1467 0016 E040     		lsrs	r0, r0, r4
 1468 0018 0123     		movs	r3, #1
 1469 001a 1840     		ands	r0, r3
2380:Generated_Source\PSoC4/CyLFClk.c ****     }
 1470              		.loc 1 2380 0
 1471              		@ sp needed
 1472 001c 10BD     		pop	{r4, pc}
 1473              	.L126:
 1474 001e C046     		.align	2
 1475              	.L125:
 1476 0020 0C020640 		.word	1074135564
 1477              		.cfi_endproc
 1478              	.LFE31:
 1479              		.size	CySysTimerGetClearOnMatch, .-CySysTimerGetClearOnMatch
 1480              		.section	.text.CySysTimerEnable,"ax",%progbits
 1481              		.align	2
 1482              		.global	CySysTimerEnable
 1483              		.code	16
 1484              		.thumb_func
 1485              		.type	CySysTimerEnable, %function
 1486              	CySysTimerEnable:
 1487              	.LFB32:
2381:Generated_Source\PSoC4/CyLFClk.c **** 
2382:Generated_Source\PSoC4/CyLFClk.c **** 
2383:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2384:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerEnable
2385:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2386:Generated_Source\PSoC4/CyLFClk.c ****     *
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 83


2387:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Enables the specified DeepSleep Timer counters. All the counters 
2388:Generated_Source\PSoC4/CyLFClk.c ****     * specified in the mask are enabled.
2389:Generated_Source\PSoC4/CyLFClk.c ****     *
2390:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterMask  CY_SYS_TIMER0_MASK - The mask for counter 0 to enable.<br>
2391:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER1_MASK - The mask for counter 1 to enable.<br>
2392:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER2_MASK - The mask for counter 2 to enable.
2393:Generated_Source\PSoC4/CyLFClk.c ****     *
2394:Generated_Source\PSoC4/CyLFClk.c ****     * \details
2395:Generated_Source\PSoC4/CyLFClk.c ****     * Enabling or disabling Timer requires 3 Timer source-cycles to come into effect.
2396:Generated_Source\PSoC4/CyLFClk.c ****     * Therefore, the Timer enable state must not be changed more than once in
2397:Generated_Source\PSoC4/CyLFClk.c ****     * that period.
2398:Generated_Source\PSoC4/CyLFClk.c ****     *
2399:Generated_Source\PSoC4/CyLFClk.c ****     * After Timer is enabled, it is illegal to write Timer configuration 
2400:Generated_Source\PSoC4/CyLFClk.c ****     * (WCO_WDT_CONFIG) and control (WCO_WDT_CONTROL) registers. This means that all
2401:Generated_Source\PSoC4/CyLFClk.c ****     * Timer functions that contain 'write' in the name (with the exception of 
2402:Generated_Source\PSoC4/CyLFClk.c ****     * CySysTimerSetMatch() function) are illegal to call once Timer enabled.
2403:Generated_Source\PSoC4/CyLFClk.c ****     *
2404:Generated_Source\PSoC4/CyLFClk.c ****     * Timer current source must be running and stable before calling this 
2405:Generated_Source\PSoC4/CyLFClk.c ****     * function.
2406:Generated_Source\PSoC4/CyLFClk.c ****     *
2407:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2408:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerEnable(uint32 counterMask)
2409:Generated_Source\PSoC4/CyLFClk.c ****     {
 1488              		.loc 1 2409 0
 1489              		.cfi_startproc
 1490              		@ args = 0, pretend = 0, frame = 0
 1491              		@ frame_needed = 0, uses_anonymous_args = 0
 1492              	.LVL103:
 1493 0000 10B5     		push	{r4, lr}
 1494              		.cfi_def_cfa_offset 8
 1495              		.cfi_offset 4, -8
 1496              		.cfi_offset 14, -4
 1497 0002 0400     		movs	r4, r0
2410:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WCO_WDT_CONTROL_REG |= counterMask;
 1498              		.loc 1 2410 0
 1499 0004 0C4A     		ldr	r2, .L134
 1500 0006 1368     		ldr	r3, [r2]
 1501 0008 0343     		orrs	r3, r0
 1502 000a 1360     		str	r3, [r2]
2411:Generated_Source\PSoC4/CyLFClk.c **** 
2412:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_TIMER0_MASK))
 1503              		.loc 1 2412 0
 1504 000c C307     		lsls	r3, r0, #31
 1505 000e 04D5     		bpl	.L128
 1506              	.LVL104:
 1507              	.L129:
2413:Generated_Source\PSoC4/CyLFClk.c ****         {
2414:Generated_Source\PSoC4/CyLFClk.c ****             while (0u == CySysTimerGetEnabledStatus(CY_SYS_TIMER0))
 1508              		.loc 1 2414 0 discriminator 1
 1509 0010 0020     		movs	r0, #0
 1510 0012 FFF7FEFF 		bl	CySysTimerGetEnabledStatus
 1511              	.LVL105:
 1512 0016 0028     		cmp	r0, #0
 1513 0018 FAD0     		beq	.L129
 1514              	.L128:
2415:Generated_Source\PSoC4/CyLFClk.c ****             {
2416:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 84


2417:Generated_Source\PSoC4/CyLFClk.c ****             }
2418:Generated_Source\PSoC4/CyLFClk.c ****         }
2419:Generated_Source\PSoC4/CyLFClk.c **** 
2420:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_TIMER1_MASK))
 1515              		.loc 1 2420 0
 1516 001a E305     		lsls	r3, r4, #23
 1517 001c 04D5     		bpl	.L130
 1518              	.L131:
2421:Generated_Source\PSoC4/CyLFClk.c ****         {
2422:Generated_Source\PSoC4/CyLFClk.c ****             while (0u == CySysTimerGetEnabledStatus(CY_SYS_TIMER1))
 1519              		.loc 1 2422 0 discriminator 1
 1520 001e 0120     		movs	r0, #1
 1521 0020 FFF7FEFF 		bl	CySysTimerGetEnabledStatus
 1522              	.LVL106:
 1523 0024 0028     		cmp	r0, #0
 1524 0026 FAD0     		beq	.L131
 1525              	.L130:
2423:Generated_Source\PSoC4/CyLFClk.c ****             {
2424:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
2425:Generated_Source\PSoC4/CyLFClk.c ****             }
2426:Generated_Source\PSoC4/CyLFClk.c ****         }
2427:Generated_Source\PSoC4/CyLFClk.c **** 
2428:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_TIMER2_MASK))
 1526              		.loc 1 2428 0
 1527 0028 E303     		lsls	r3, r4, #15
 1528 002a 04D5     		bpl	.L127
 1529              	.L133:
2429:Generated_Source\PSoC4/CyLFClk.c ****         {
2430:Generated_Source\PSoC4/CyLFClk.c ****             while (0u == CySysTimerGetEnabledStatus(CY_SYS_TIMER2))
 1530              		.loc 1 2430 0 discriminator 1
 1531 002c 0220     		movs	r0, #2
 1532 002e FFF7FEFF 		bl	CySysTimerGetEnabledStatus
 1533              	.LVL107:
 1534 0032 0028     		cmp	r0, #0
 1535 0034 FAD0     		beq	.L133
 1536              	.L127:
2431:Generated_Source\PSoC4/CyLFClk.c ****             {
2432:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
2433:Generated_Source\PSoC4/CyLFClk.c ****             }
2434:Generated_Source\PSoC4/CyLFClk.c ****         }
2435:Generated_Source\PSoC4/CyLFClk.c ****     }
 1537              		.loc 1 2435 0
 1538              		@ sp needed
 1539              	.LVL108:
 1540 0036 10BD     		pop	{r4, pc}
 1541              	.L135:
 1542              		.align	2
 1543              	.L134:
 1544 0038 10020640 		.word	1074135568
 1545              		.cfi_endproc
 1546              	.LFE32:
 1547              		.size	CySysTimerEnable, .-CySysTimerEnable
 1548              		.section	.text.CySysTimerDisable,"ax",%progbits
 1549              		.align	2
 1550              		.global	CySysTimerDisable
 1551              		.code	16
 1552              		.thumb_func
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 85


 1553              		.type	CySysTimerDisable, %function
 1554              	CySysTimerDisable:
 1555              	.LFB33:
2436:Generated_Source\PSoC4/CyLFClk.c **** 
2437:Generated_Source\PSoC4/CyLFClk.c **** 
2438:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2439:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerDisable
2440:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2441:Generated_Source\PSoC4/CyLFClk.c ****     *
2442:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Disables the specified DeepSleep Timer counters.
2443:Generated_Source\PSoC4/CyLFClk.c ****     *
2444:Generated_Source\PSoC4/CyLFClk.c ****     * All the counters specified in the mask are disabled. The function waits for 
2445:Generated_Source\PSoC4/CyLFClk.c ****     * the changes to come into effect.
2446:Generated_Source\PSoC4/CyLFClk.c ****     *
2447:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterMask
2448:Generated_Source\PSoC4/CyLFClk.c ****     *  CY_SYS_TIMER0_MASK - The mask for Counter 0 to disable.<br>
2449:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER1_MASK - The mask for Counter 1 to disable.<br>
2450:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER2_MASK - The mask for Counter 2 to disable.
2451:Generated_Source\PSoC4/CyLFClk.c ****     *
2452:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2453:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerDisable(uint32 counterMask)
2454:Generated_Source\PSoC4/CyLFClk.c ****     {
 1556              		.loc 1 2454 0
 1557              		.cfi_startproc
 1558              		@ args = 0, pretend = 0, frame = 0
 1559              		@ frame_needed = 0, uses_anonymous_args = 0
 1560              	.LVL109:
 1561 0000 10B5     		push	{r4, lr}
 1562              		.cfi_def_cfa_offset 8
 1563              		.cfi_offset 4, -8
 1564              		.cfi_offset 14, -4
 1565 0002 0400     		movs	r4, r0
2455:Generated_Source\PSoC4/CyLFClk.c **** 
2456:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WCO_WDT_CONTROL_REG &= ~counterMask;
 1566              		.loc 1 2456 0
 1567 0004 0C4A     		ldr	r2, .L143
 1568 0006 1368     		ldr	r3, [r2]
 1569 0008 8343     		bics	r3, r0
 1570 000a 1360     		str	r3, [r2]
2457:Generated_Source\PSoC4/CyLFClk.c **** 
2458:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_TIMER0_MASK))
 1571              		.loc 1 2458 0
 1572 000c C307     		lsls	r3, r0, #31
 1573 000e 04D5     		bpl	.L137
 1574              	.LVL110:
 1575              	.L138:
2459:Generated_Source\PSoC4/CyLFClk.c ****         {
2460:Generated_Source\PSoC4/CyLFClk.c ****             while (0u != CySysTimerGetEnabledStatus(CY_SYS_TIMER0))
 1576              		.loc 1 2460 0 discriminator 1
 1577 0010 0020     		movs	r0, #0
 1578 0012 FFF7FEFF 		bl	CySysTimerGetEnabledStatus
 1579              	.LVL111:
 1580 0016 0028     		cmp	r0, #0
 1581 0018 FAD1     		bne	.L138
 1582              	.L137:
2461:Generated_Source\PSoC4/CyLFClk.c ****             {
2462:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 86


2463:Generated_Source\PSoC4/CyLFClk.c ****             }
2464:Generated_Source\PSoC4/CyLFClk.c ****         }
2465:Generated_Source\PSoC4/CyLFClk.c **** 
2466:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_TIMER1_MASK))
 1583              		.loc 1 2466 0
 1584 001a E305     		lsls	r3, r4, #23
 1585 001c 04D5     		bpl	.L139
 1586              	.L140:
2467:Generated_Source\PSoC4/CyLFClk.c ****         {
2468:Generated_Source\PSoC4/CyLFClk.c ****             while (0u != CySysTimerGetEnabledStatus(CY_SYS_TIMER1))
 1587              		.loc 1 2468 0 discriminator 1
 1588 001e 0120     		movs	r0, #1
 1589 0020 FFF7FEFF 		bl	CySysTimerGetEnabledStatus
 1590              	.LVL112:
 1591 0024 0028     		cmp	r0, #0
 1592 0026 FAD1     		bne	.L140
 1593              	.L139:
2469:Generated_Source\PSoC4/CyLFClk.c ****             {
2470:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
2471:Generated_Source\PSoC4/CyLFClk.c ****             }
2472:Generated_Source\PSoC4/CyLFClk.c ****         }
2473:Generated_Source\PSoC4/CyLFClk.c **** 
2474:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_TIMER2_MASK))
 1594              		.loc 1 2474 0
 1595 0028 E303     		lsls	r3, r4, #15
 1596 002a 04D5     		bpl	.L136
 1597              	.L142:
2475:Generated_Source\PSoC4/CyLFClk.c ****         {
2476:Generated_Source\PSoC4/CyLFClk.c ****             while (0u != CySysTimerGetEnabledStatus(CY_SYS_TIMER2))
 1598              		.loc 1 2476 0 discriminator 1
 1599 002c 0220     		movs	r0, #2
 1600 002e FFF7FEFF 		bl	CySysTimerGetEnabledStatus
 1601              	.LVL113:
 1602 0032 0028     		cmp	r0, #0
 1603 0034 FAD1     		bne	.L142
 1604              	.L136:
2477:Generated_Source\PSoC4/CyLFClk.c ****             {
2478:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
2479:Generated_Source\PSoC4/CyLFClk.c ****             }
2480:Generated_Source\PSoC4/CyLFClk.c ****         }
2481:Generated_Source\PSoC4/CyLFClk.c **** 
2482:Generated_Source\PSoC4/CyLFClk.c ****     }
 1605              		.loc 1 2482 0
 1606              		@ sp needed
 1607              	.LVL114:
 1608 0036 10BD     		pop	{r4, pc}
 1609              	.L144:
 1610              		.align	2
 1611              	.L143:
 1612 0038 10020640 		.word	1074135568
 1613              		.cfi_endproc
 1614              	.LFE33:
 1615              		.size	CySysTimerDisable, .-CySysTimerDisable
 1616              		.section	.text.CySysTimerSetCascade,"ax",%progbits
 1617              		.align	2
 1618              		.global	CySysTimerSetCascade
 1619              		.code	16
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 87


 1620              		.thumb_func
 1621              		.type	CySysTimerSetCascade, %function
 1622              	CySysTimerSetCascade:
 1623              	.LFB34:
2483:Generated_Source\PSoC4/CyLFClk.c **** 
2484:Generated_Source\PSoC4/CyLFClk.c **** 
2485:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2486:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerSetCascade
2487:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2488:Generated_Source\PSoC4/CyLFClk.c ****     *
2489:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2490:Generated_Source\PSoC4/CyLFClk.c ****     * Writes the two DeepSleep Timers cascade values based on the combination of 
2491:Generated_Source\PSoC4/CyLFClk.c ****     * mask values specified.
2492:Generated_Source\PSoC4/CyLFClk.c ****     *
2493:Generated_Source\PSoC4/CyLFClk.c ****     * \param cascadeMask The mask value used to set or clear the cascade values:
2494:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER_CASCADE_NONE - Neither<br>
2495:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER_CASCADE_01 - Cascade 01<br>
2496:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER_CASCADE_12 - Cascade 12
2497:Generated_Source\PSoC4/CyLFClk.c ****     *
2498:Generated_Source\PSoC4/CyLFClk.c ****     * If only one cascade mask is specified, the second cascade is disabled.
2499:Generated_Source\PSoC4/CyLFClk.c ****     * To set both cascade modes, two defines should be ORed:
2500:Generated_Source\PSoC4/CyLFClk.c ****     * (CY_SYS_TIMER_CASCADE_01 | CY_SYS_TIMER_CASCADE_12).
2501:Generated_Source\PSoC4/CyLFClk.c ****     * \note If CySysTimerSetCascade() was called with ORed defines it is necessary 
2502:Generated_Source\PSoC4/CyLFClk.c ****     * to call CySysTimeSetClearOnMatch(1,1). It is needed to make sure that 
2503:Generated_Source\PSoC4/CyLFClk.c ****     * Counter 2 will be updated in the expected way.
2504:Generated_Source\PSoC4/CyLFClk.c ****     *
2505:Generated_Source\PSoC4/CyLFClk.c ****     * Timer counters that are part of the specified cascade should be disabled.
2506:Generated_Source\PSoC4/CyLFClk.c ****     * Otherwise this function call has no effect. If the specified
2507:Generated_Source\PSoC4/CyLFClk.c ****     * counter is enabled, call CySysTimerDisable() function with the corresponding
2508:Generated_Source\PSoC4/CyLFClk.c ****     * parameter to disable the specified counter and wait for it to stop. This may
2509:Generated_Source\PSoC4/CyLFClk.c ****     * take up to 3 Timers source-cycles.
2510:Generated_Source\PSoC4/CyLFClk.c ****     *
2511:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2512:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerSetCascade(uint32 cascadeMask)
2513:Generated_Source\PSoC4/CyLFClk.c ****     {
 1624              		.loc 1 2513 0
 1625              		.cfi_startproc
 1626              		@ args = 0, pretend = 0, frame = 0
 1627              		@ frame_needed = 0, uses_anonymous_args = 0
 1628              	.LVL115:
 1629 0000 70B5     		push	{r4, r5, r6, lr}
 1630              		.cfi_def_cfa_offset 16
 1631              		.cfi_offset 4, -16
 1632              		.cfi_offset 5, -12
 1633              		.cfi_offset 6, -8
 1634              		.cfi_offset 14, -4
 1635 0002 0500     		movs	r5, r0
2514:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
2515:Generated_Source\PSoC4/CyLFClk.c ****         uint32 countersEnableStatus;
2516:Generated_Source\PSoC4/CyLFClk.c **** 
2517:Generated_Source\PSoC4/CyLFClk.c ****         countersEnableStatus = CySysTimerGetEnabledStatus(CY_SYS_TIMER0) |
 1636              		.loc 1 2517 0
 1637 0004 0020     		movs	r0, #0
 1638              	.LVL116:
 1639 0006 FFF7FEFF 		bl	CySysTimerGetEnabledStatus
 1640              	.LVL117:
 1641 000a 0400     		movs	r4, r0
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 88


2518:Generated_Source\PSoC4/CyLFClk.c ****                             CySysTimerGetEnabledStatus(CY_SYS_TIMER1) |
 1642              		.loc 1 2518 0
 1643 000c 0120     		movs	r0, #1
 1644 000e FFF7FEFF 		bl	CySysTimerGetEnabledStatus
 1645              	.LVL118:
2517:Generated_Source\PSoC4/CyLFClk.c ****                             CySysTimerGetEnabledStatus(CY_SYS_TIMER1) |
 1646              		.loc 1 2517 0
 1647 0012 0443     		orrs	r4, r0
2519:Generated_Source\PSoC4/CyLFClk.c ****                             CySysTimerGetEnabledStatus(CY_SYS_TIMER2);
 1648              		.loc 1 2519 0
 1649 0014 0220     		movs	r0, #2
 1650 0016 FFF7FEFF 		bl	CySysTimerGetEnabledStatus
 1651              	.LVL119:
2517:Generated_Source\PSoC4/CyLFClk.c ****                             CySysTimerGetEnabledStatus(CY_SYS_TIMER1) |
 1652              		.loc 1 2517 0
 1653 001a 2043     		orrs	r0, r4
 1654              	.LVL120:
2520:Generated_Source\PSoC4/CyLFClk.c **** 
2521:Generated_Source\PSoC4/CyLFClk.c ****         if (0u == countersEnableStatus)
 1655              		.loc 1 2521 0
 1656 001c 05D1     		bne	.L145
2522:Generated_Source\PSoC4/CyLFClk.c ****         {
2523:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WCO_WDT_CONFIG_REG;
 1657              		.loc 1 2523 0
 1658 001e 034A     		ldr	r2, .L147
 1659 0020 1168     		ldr	r1, [r2]
 1660              	.LVL121:
2524:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue &= ((uint32)(~(CY_SYS_TIMER_CASCADE_01|CY_SYS_TIMER_CASCADE_12)));
 1661              		.loc 1 2524 0
 1662 0022 034B     		ldr	r3, .L147+4
 1663 0024 0B40     		ands	r3, r1
 1664              	.LVL122:
2525:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue |= cascadeMask;
 1665              		.loc 1 2525 0
 1666 0026 1D43     		orrs	r5, r3
 1667              	.LVL123:
2526:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WCO_WDT_CONFIG_REG = configRegValue;
 1668              		.loc 1 2526 0
 1669 0028 1560     		str	r5, [r2]
 1670              	.LVL124:
 1671              	.L145:
2527:Generated_Source\PSoC4/CyLFClk.c ****         }
2528:Generated_Source\PSoC4/CyLFClk.c ****     }
 1672              		.loc 1 2528 0
 1673              		@ sp needed
 1674 002a 70BD     		pop	{r4, r5, r6, pc}
 1675              	.L148:
 1676              		.align	2
 1677              	.L147:
 1678 002c 0C020640 		.word	1074135564
 1679 0030 F7F7FFFF 		.word	-2057
 1680              		.cfi_endproc
 1681              	.LFE34:
 1682              		.size	CySysTimerSetCascade, .-CySysTimerSetCascade
 1683              		.section	.text.CySysTimerGetCascade,"ax",%progbits
 1684              		.align	2
 1685              		.global	CySysTimerGetCascade
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 89


 1686              		.code	16
 1687              		.thumb_func
 1688              		.type	CySysTimerGetCascade, %function
 1689              	CySysTimerGetCascade:
 1690              	.LFB35:
2529:Generated_Source\PSoC4/CyLFClk.c **** 
2530:Generated_Source\PSoC4/CyLFClk.c **** 
2531:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2532:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetCascade
2533:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2534:Generated_Source\PSoC4/CyLFClk.c ****     *
2535:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the two DeepSleep Timer cascade values returning a mask of the 
2536:Generated_Source\PSoC4/CyLFClk.c ****     * bits set.
2537:Generated_Source\PSoC4/CyLFClk.c ****     *
2538:Generated_Source\PSoC4/CyLFClk.c ****     * \return The mask of the cascade values set.
2539:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_TIMER_CASCADE_NONE - Neither
2540:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_TIMER_CASCADE_01 - Cascade 01
2541:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_TIMER_CASCADE_12 - Cascade 12
2542:Generated_Source\PSoC4/CyLFClk.c ****     *
2543:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2544:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetCascade(void)
2545:Generated_Source\PSoC4/CyLFClk.c ****     {
 1691              		.loc 1 2545 0
 1692              		.cfi_startproc
 1693              		@ args = 0, pretend = 0, frame = 0
 1694              		@ frame_needed = 0, uses_anonymous_args = 0
 1695              		@ link register save eliminated.
2546:Generated_Source\PSoC4/CyLFClk.c ****         return (CY_SYS_WCO_WDT_CONFIG_REG & (CY_SYS_TIMER_CASCADE_01 | CY_SYS_TIMER_CASCADE_12));
 1696              		.loc 1 2546 0
 1697 0000 024B     		ldr	r3, .L150
 1698 0002 1868     		ldr	r0, [r3]
 1699 0004 024B     		ldr	r3, .L150+4
 1700 0006 1840     		ands	r0, r3
2547:Generated_Source\PSoC4/CyLFClk.c ****     }
 1701              		.loc 1 2547 0
 1702              		@ sp needed
 1703 0008 7047     		bx	lr
 1704              	.L151:
 1705 000a C046     		.align	2
 1706              	.L150:
 1707 000c 0C020640 		.word	1074135564
 1708 0010 08080000 		.word	2056
 1709              		.cfi_endproc
 1710              	.LFE35:
 1711              		.size	CySysTimerGetCascade, .-CySysTimerGetCascade
 1712              		.section	.text.CySysTimerSetMatch,"ax",%progbits
 1713              		.align	2
 1714              		.global	CySysTimerSetMatch
 1715              		.code	16
 1716              		.thumb_func
 1717              		.type	CySysTimerSetMatch, %function
 1718              	CySysTimerSetMatch:
 1719              	.LFB36:
2548:Generated_Source\PSoC4/CyLFClk.c **** 
2549:Generated_Source\PSoC4/CyLFClk.c **** 
2550:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2551:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerSetMatch
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 90


2552:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2553:Generated_Source\PSoC4/CyLFClk.c ****     *
2554:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Configures the Timer counter match comparison value.
2555:Generated_Source\PSoC4/CyLFClk.c ****     *
2556:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-1]. The number of the Timer counter. The 
2557:Generated_Source\PSoC4/CyLFClk.c ****     * match values are not supported by counter 2.
2558:Generated_Source\PSoC4/CyLFClk.c ****     *
2559:Generated_Source\PSoC4/CyLFClk.c ****     * \param match Valid range [0-65535]. The value to be used to match against 
2560:Generated_Source\PSoC4/CyLFClk.c ****     * the counter.
2561:Generated_Source\PSoC4/CyLFClk.c ****     *
2562:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2563:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerSetMatch(uint32 counterNum, uint32 match)
2564:Generated_Source\PSoC4/CyLFClk.c ****     {
 1720              		.loc 1 2564 0
 1721              		.cfi_startproc
 1722              		@ args = 0, pretend = 0, frame = 0
 1723              		@ frame_needed = 0, uses_anonymous_args = 0
 1724              	.LVL125:
 1725 0000 70B5     		push	{r4, r5, r6, lr}
 1726              		.cfi_def_cfa_offset 16
 1727              		.cfi_offset 4, -16
 1728              		.cfi_offset 5, -12
 1729              		.cfi_offset 6, -8
 1730              		.cfi_offset 14, -4
 1731 0002 0500     		movs	r5, r0
 1732 0004 0C00     		movs	r4, r1
2565:Generated_Source\PSoC4/CyLFClk.c ****         uint32 regValue;
2566:Generated_Source\PSoC4/CyLFClk.c **** 
2567:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_TIMER0) ||
 1733              		.loc 1 2567 0
 1734 0006 0128     		cmp	r0, #1
 1735 0008 02D9     		bls	.L153
 1736              		.loc 1 2567 0 is_stmt 0 discriminator 1
 1737 000a 0020     		movs	r0, #0
 1738              	.LVL126:
 1739 000c FFF7FEFF 		bl	CyHalt
 1740              	.LVL127:
 1741              	.L153:
2568:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_TIMER1));
2569:Generated_Source\PSoC4/CyLFClk.c **** 
2570:Generated_Source\PSoC4/CyLFClk.c ****         /* Wait for previous changes to come into effect */
2571:Generated_Source\PSoC4/CyLFClk.c ****         CyDelayUs(CY_SYS_3TIMER_DELAY_US);
 1742              		.loc 1 2571 0 is_stmt 1
 1743 0010 0D4B     		ldr	r3, .L158
 1744 0012 1B68     		ldr	r3, [r3]
 1745 0014 9B0F     		lsrs	r3, r3, #30
 1746 0016 01D1     		bne	.L156
 1747 0018 C920     		movs	r0, #201
 1748 001a 00E0     		b	.L154
 1749              	.L156:
 1750 001c 5D20     		movs	r0, #93
 1751              	.L154:
 1752              		.loc 1 2571 0 is_stmt 0 discriminator 4
 1753 001e FFF7FEFF 		bl	CyDelayUs
 1754              	.LVL128:
2572:Generated_Source\PSoC4/CyLFClk.c **** 
2573:Generated_Source\PSoC4/CyLFClk.c ****         regValue = CY_SYS_WCO_WDT_MATCH_REG;
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 91


 1755              		.loc 1 2573 0 is_stmt 1 discriminator 4
 1756 0022 0A49     		ldr	r1, .L158+4
 1757 0024 0B68     		ldr	r3, [r1]
 1758              	.LVL129:
2574:Generated_Source\PSoC4/CyLFClk.c ****         regValue &= (uint32)~((uint32)(CY_SYS_TIMER_LOWER_16BITS_MASK << (counterNum * CY_SYS_TIMER
 1759              		.loc 1 2574 0 discriminator 4
 1760 0026 2D01     		lsls	r5, r5, #4
 1761              	.LVL130:
 1762 0028 094A     		ldr	r2, .L158+8
 1763 002a AA40     		lsls	r2, r2, r5
 1764 002c 9343     		bics	r3, r2
 1765              	.LVL131:
2575:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WCO_WDT_MATCH_REG = (regValue | (match << (counterNum * CY_SYS_TIMER_CNT_MATCH_SHIFT
 1766              		.loc 1 2575 0 discriminator 4
 1767 002e AC40     		lsls	r4, r4, r5
 1768              	.LVL132:
 1769 0030 1C43     		orrs	r4, r3
 1770 0032 0C60     		str	r4, [r1]
2576:Generated_Source\PSoC4/CyLFClk.c **** 
2577:Generated_Source\PSoC4/CyLFClk.c ****         /* Make sure match synchronization has started */
2578:Generated_Source\PSoC4/CyLFClk.c ****         CyDelayUs(CY_SYS_1TIMER_DELAY_US);
 1771              		.loc 1 2578 0 discriminator 4
 1772 0034 044B     		ldr	r3, .L158
 1773              	.LVL133:
 1774 0036 1B68     		ldr	r3, [r3]
 1775 0038 9B0F     		lsrs	r3, r3, #30
 1776 003a 01D1     		bne	.L157
 1777              		.loc 1 2578 0 is_stmt 0
 1778 003c 4320     		movs	r0, #67
 1779 003e 00E0     		b	.L155
 1780              	.L157:
 1781 0040 1F20     		movs	r0, #31
 1782              	.L155:
 1783              		.loc 1 2578 0 discriminator 4
 1784 0042 FFF7FEFF 		bl	CyDelayUs
 1785              	.LVL134:
2579:Generated_Source\PSoC4/CyLFClk.c ****     }
 1786              		.loc 1 2579 0 is_stmt 1 discriminator 4
 1787              		@ sp needed
 1788 0046 70BD     		pop	{r4, r5, r6, pc}
 1789              	.L159:
 1790              		.align	2
 1791              	.L158:
 1792 0048 0C020640 		.word	1074135564
 1793 004c 08020640 		.word	1074135560
 1794 0050 FFFF0000 		.word	65535
 1795              		.cfi_endproc
 1796              	.LFE36:
 1797              		.size	CySysTimerSetMatch, .-CySysTimerSetMatch
 1798              		.section	.text.CySysTimerSetToggleBit,"ax",%progbits
 1799              		.align	2
 1800              		.global	CySysTimerSetToggleBit
 1801              		.code	16
 1802              		.thumb_func
 1803              		.type	CySysTimerSetToggleBit, %function
 1804              	CySysTimerSetToggleBit:
 1805              	.LFB37:
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 92


2580:Generated_Source\PSoC4/CyLFClk.c **** 
2581:Generated_Source\PSoC4/CyLFClk.c **** 
2582:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2583:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerSetToggleBit
2584:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2585:Generated_Source\PSoC4/CyLFClk.c ****     *
2586:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Configures which bit in Timer counter 2 to monitor for a toggle.
2587:Generated_Source\PSoC4/CyLFClk.c ****     *
2588:Generated_Source\PSoC4/CyLFClk.c ****     * When that bit toggles, an interrupt is generated if mode for counter 2 has
2589:Generated_Source\PSoC4/CyLFClk.c ****     * enabled interrupts.
2590:Generated_Source\PSoC4/CyLFClk.c ****     *
2591:Generated_Source\PSoC4/CyLFClk.c ****     * \param bits Valid range [0-31]. Counter 2 bit to monitor for a toggle.
2592:Generated_Source\PSoC4/CyLFClk.c ****     *
2593:Generated_Source\PSoC4/CyLFClk.c ****     * \details Timer counter 2 should be disabled. Otherwise this function call has
2594:Generated_Source\PSoC4/CyLFClk.c ****     * no effect.
2595:Generated_Source\PSoC4/CyLFClk.c ****     *
2596:Generated_Source\PSoC4/CyLFClk.c ****     * If the specified counter is enabled, call the CySysTimerDisable() function with
2597:Generated_Source\PSoC4/CyLFClk.c ****     * the corresponding parameter to disable the specified counter and wait for it to
2598:Generated_Source\PSoC4/CyLFClk.c ****     * stop. This may take up to three Timer source-cycles.
2599:Generated_Source\PSoC4/CyLFClk.c ****     *
2600:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2601:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerSetToggleBit(uint32 bits)
2602:Generated_Source\PSoC4/CyLFClk.c ****     {
 1806              		.loc 1 2602 0
 1807              		.cfi_startproc
 1808              		@ args = 0, pretend = 0, frame = 0
 1809              		@ frame_needed = 0, uses_anonymous_args = 0
 1810              	.LVL135:
 1811 0000 10B5     		push	{r4, lr}
 1812              		.cfi_def_cfa_offset 8
 1813              		.cfi_offset 4, -8
 1814              		.cfi_offset 14, -4
 1815 0002 0400     		movs	r4, r0
2603:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
2604:Generated_Source\PSoC4/CyLFClk.c **** 
2605:Generated_Source\PSoC4/CyLFClk.c ****         if (0u == CySysTimerGetEnabledStatus(CY_SYS_TIMER2))
 1816              		.loc 1 2605 0
 1817 0004 0220     		movs	r0, #2
 1818              	.LVL136:
 1819 0006 FFF7FEFF 		bl	CySysTimerGetEnabledStatus
 1820              	.LVL137:
 1821 000a 0028     		cmp	r0, #0
 1822 000c 0AD1     		bne	.L160
2606:Generated_Source\PSoC4/CyLFClk.c ****         {
2607:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WCO_WDT_CONFIG_REG;
 1823              		.loc 1 2607 0
 1824 000e 0649     		ldr	r1, .L162
 1825 0010 0868     		ldr	r0, [r1]
 1826              	.LVL138:
2608:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue &= (uint32)(~((uint32)(CY_SYS_TIMER_CONFIG_BITS2_MASK << CY_SYS_TIMER_CO
 1827              		.loc 1 2608 0
 1828 0012 064B     		ldr	r3, .L162+4
 1829 0014 0200     		movs	r2, r0
 1830 0016 1A40     		ands	r2, r3
 1831              	.LVL139:
2609:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue |= ((bits & CY_SYS_TIMER_CONFIG_BITS2_MASK) << CY_SYS_TIMER_CONFIG_BITS2
 1832              		.loc 1 2609 0
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 93


 1833 0018 2006     		lsls	r0, r4, #24
 1834 001a F823     		movs	r3, #248
 1835 001c 5B05     		lsls	r3, r3, #21
 1836 001e 1840     		ands	r0, r3
 1837 0020 1043     		orrs	r0, r2
 1838              	.LVL140:
2610:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WCO_WDT_CONFIG_REG = configRegValue;
 1839              		.loc 1 2610 0
 1840 0022 0860     		str	r0, [r1]
 1841              	.LVL141:
 1842              	.L160:
2611:Generated_Source\PSoC4/CyLFClk.c ****         }
2612:Generated_Source\PSoC4/CyLFClk.c ****     }
 1843              		.loc 1 2612 0
 1844              		@ sp needed
 1845              	.LVL142:
 1846 0024 10BD     		pop	{r4, pc}
 1847              	.L163:
 1848 0026 C046     		.align	2
 1849              	.L162:
 1850 0028 0C020640 		.word	1074135564
 1851 002c FFFFFFE0 		.word	-520093697
 1852              		.cfi_endproc
 1853              	.LFE37:
 1854              		.size	CySysTimerSetToggleBit, .-CySysTimerSetToggleBit
 1855              		.section	.text.CySysTimerGetToggleBit,"ax",%progbits
 1856              		.align	2
 1857              		.global	CySysTimerGetToggleBit
 1858              		.code	16
 1859              		.thumb_func
 1860              		.type	CySysTimerGetToggleBit, %function
 1861              	CySysTimerGetToggleBit:
 1862              	.LFB38:
2613:Generated_Source\PSoC4/CyLFClk.c **** 
2614:Generated_Source\PSoC4/CyLFClk.c **** 
2615:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2616:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetToggleBit
2617:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2618:Generated_Source\PSoC4/CyLFClk.c ****     *
2619:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads which bit in Timer counter 2 is monitored for a toggle.
2620:Generated_Source\PSoC4/CyLFClk.c ****     *
2621:Generated_Source\PSoC4/CyLFClk.c ****     * \return The bit that is monitored (range of 0 to 31)
2622:Generated_Source\PSoC4/CyLFClk.c ****     *
2623:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2624:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetToggleBit(void)
2625:Generated_Source\PSoC4/CyLFClk.c ****     {
 1863              		.loc 1 2625 0
 1864              		.cfi_startproc
 1865              		@ args = 0, pretend = 0, frame = 0
 1866              		@ frame_needed = 0, uses_anonymous_args = 0
 1867              		@ link register save eliminated.
2626:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WCO_WDT_CONFIG_REG >> CY_SYS_TIMER_CONFIG_BITS2_POS) & CY_SYS_TIMER_CONFIG_
 1868              		.loc 1 2626 0
 1869 0000 024B     		ldr	r3, .L165
 1870 0002 1868     		ldr	r0, [r3]
 1871 0004 000E     		lsrs	r0, r0, #24
 1872 0006 1F23     		movs	r3, #31
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 94


 1873 0008 1840     		ands	r0, r3
2627:Generated_Source\PSoC4/CyLFClk.c ****     }
 1874              		.loc 1 2627 0
 1875              		@ sp needed
 1876 000a 7047     		bx	lr
 1877              	.L166:
 1878              		.align	2
 1879              	.L165:
 1880 000c 0C020640 		.word	1074135564
 1881              		.cfi_endproc
 1882              	.LFE38:
 1883              		.size	CySysTimerGetToggleBit, .-CySysTimerGetToggleBit
 1884              		.section	.text.CySysTimerGetMatch,"ax",%progbits
 1885              		.align	2
 1886              		.global	CySysTimerGetMatch
 1887              		.code	16
 1888              		.thumb_func
 1889              		.type	CySysTimerGetMatch, %function
 1890              	CySysTimerGetMatch:
 1891              	.LFB39:
2628:Generated_Source\PSoC4/CyLFClk.c **** 
2629:Generated_Source\PSoC4/CyLFClk.c **** 
2630:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2631:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetMatch
2632:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2633:Generated_Source\PSoC4/CyLFClk.c ****     *
2634:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the Timer counter match comparison value.
2635:Generated_Source\PSoC4/CyLFClk.c ****     *
2636:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-1]. The number of the DeepSleep Timer 
2637:Generated_Source\PSoC4/CyLFClk.c ****     * counter. The match values are not supported by counter 2.
2638:Generated_Source\PSoC4/CyLFClk.c ****     *
2639:Generated_Source\PSoC4/CyLFClk.c ****     * \return A 16-bit match value.
2640:Generated_Source\PSoC4/CyLFClk.c ****     *
2641:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2642:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetMatch(uint32 counterNum)
2643:Generated_Source\PSoC4/CyLFClk.c ****     {
 1892              		.loc 1 2643 0
 1893              		.cfi_startproc
 1894              		@ args = 0, pretend = 0, frame = 0
 1895              		@ frame_needed = 0, uses_anonymous_args = 0
 1896              	.LVL143:
 1897 0000 10B5     		push	{r4, lr}
 1898              		.cfi_def_cfa_offset 8
 1899              		.cfi_offset 4, -8
 1900              		.cfi_offset 14, -4
 1901 0002 0400     		movs	r4, r0
2644:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_TIMER0) ||
 1902              		.loc 1 2644 0
 1903 0004 0128     		cmp	r0, #1
 1904 0006 02D9     		bls	.L168
 1905              		.loc 1 2644 0 is_stmt 0 discriminator 1
 1906 0008 0020     		movs	r0, #0
 1907              	.LVL144:
 1908 000a FFF7FEFF 		bl	CyHalt
 1909              	.LVL145:
 1910              	.L168:
2645:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_TIMER1));
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 95


2646:Generated_Source\PSoC4/CyLFClk.c **** 
2647:Generated_Source\PSoC4/CyLFClk.c ****         return ((uint32)(CY_SYS_WCO_WDT_MATCH_REG >> (counterNum * CY_SYS_TIMER_CNT_MATCH_SHIFT)) &
 1911              		.loc 1 2647 0 is_stmt 1
 1912 000e 034B     		ldr	r3, .L169
 1913 0010 1868     		ldr	r0, [r3]
 1914 0012 2401     		lsls	r4, r4, #4
 1915              	.LVL146:
 1916 0014 E040     		lsrs	r0, r0, r4
 1917 0016 0004     		lsls	r0, r0, #16
 1918 0018 000C     		lsrs	r0, r0, #16
2648:Generated_Source\PSoC4/CyLFClk.c ****                                                                   CY_SYS_TIMER_LOWER_16BITS_MASK);
2649:Generated_Source\PSoC4/CyLFClk.c ****     }
 1919              		.loc 1 2649 0
 1920              		@ sp needed
 1921 001a 10BD     		pop	{r4, pc}
 1922              	.L170:
 1923              		.align	2
 1924              	.L169:
 1925 001c 08020640 		.word	1074135560
 1926              		.cfi_endproc
 1927              	.LFE39:
 1928              		.size	CySysTimerGetMatch, .-CySysTimerGetMatch
 1929              		.section	.text.CySysTimerGetCount,"ax",%progbits
 1930              		.align	2
 1931              		.global	CySysTimerGetCount
 1932              		.code	16
 1933              		.thumb_func
 1934              		.type	CySysTimerGetCount, %function
 1935              	CySysTimerGetCount:
 1936              	.LFB40:
2650:Generated_Source\PSoC4/CyLFClk.c **** 
2651:Generated_Source\PSoC4/CyLFClk.c **** 
2652:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2653:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetCount
2654:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2655:Generated_Source\PSoC4/CyLFClk.c ****     *
2656:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the current DeepSleep Timer counter value.
2657:Generated_Source\PSoC4/CyLFClk.c ****     *
2658:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the Timer counter.
2659:Generated_Source\PSoC4/CyLFClk.c ****     *
2660:Generated_Source\PSoC4/CyLFClk.c ****     * \return A live counter value. Counter 0 and Counter 1 are 16 bit counters 
2661:Generated_Source\PSoC4/CyLFClk.c ****     * and counter 2 is a 32 bit counter.
2662:Generated_Source\PSoC4/CyLFClk.c ****     *
2663:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2664:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetCount(uint32 counterNum)
2665:Generated_Source\PSoC4/CyLFClk.c ****     {
 1937              		.loc 1 2665 0
 1938              		.cfi_startproc
 1939              		@ args = 0, pretend = 0, frame = 0
 1940              		@ frame_needed = 0, uses_anonymous_args = 0
 1941              	.LVL147:
 1942 0000 10B5     		push	{r4, lr}
 1943              		.cfi_def_cfa_offset 8
 1944              		.cfi_offset 4, -8
 1945              		.cfi_offset 14, -4
 1946              	.LVL148:
2666:Generated_Source\PSoC4/CyLFClk.c ****         uint32 regValue = 0u;
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 96


2667:Generated_Source\PSoC4/CyLFClk.c **** 
2668:Generated_Source\PSoC4/CyLFClk.c ****         switch(counterNum)
 1947              		.loc 1 2668 0
 1948 0002 0128     		cmp	r0, #1
 1949 0004 09D0     		beq	.L173
 1950 0006 0028     		cmp	r0, #0
 1951 0008 02D0     		beq	.L174
 1952 000a 0228     		cmp	r0, #2
 1953 000c 09D0     		beq	.L175
 1954 000e 0BE0     		b	.L177
 1955              	.L174:
2669:Generated_Source\PSoC4/CyLFClk.c ****         {
2670:Generated_Source\PSoC4/CyLFClk.c ****             /* Timer Counter 0 */
2671:Generated_Source\PSoC4/CyLFClk.c ****             case 0u:
2672:Generated_Source\PSoC4/CyLFClk.c ****                 regValue = CY_SYS_WCO_WDT_CTRLOW_REG & CY_SYS_TIMER_LOWER_16BITS_MASK;
 1956              		.loc 1 2672 0
 1957 0010 084B     		ldr	r3, .L178
 1958 0012 1868     		ldr	r0, [r3]
 1959              	.LVL149:
 1960 0014 0004     		lsls	r0, r0, #16
 1961 0016 000C     		lsrs	r0, r0, #16
 1962              	.LVL150:
2673:Generated_Source\PSoC4/CyLFClk.c ****             break;
 1963              		.loc 1 2673 0
 1964 0018 0AE0     		b	.L176
 1965              	.LVL151:
 1966              	.L173:
2674:Generated_Source\PSoC4/CyLFClk.c **** 
2675:Generated_Source\PSoC4/CyLFClk.c ****             /* Timer Counter 1 */
2676:Generated_Source\PSoC4/CyLFClk.c ****             case 1u:
2677:Generated_Source\PSoC4/CyLFClk.c ****                 regValue = (CY_SYS_WCO_WDT_CTRLOW_REG >> CY_SYS_TIMER_CNT_MATCH_SHIFT) & CY_SYS_TIM
 1967              		.loc 1 2677 0
 1968 001a 064B     		ldr	r3, .L178
 1969 001c 1868     		ldr	r0, [r3]
 1970              	.LVL152:
 1971 001e 000C     		lsrs	r0, r0, #16
 1972              	.LVL153:
2678:Generated_Source\PSoC4/CyLFClk.c ****             break;
 1973              		.loc 1 2678 0
 1974 0020 06E0     		b	.L176
 1975              	.LVL154:
 1976              	.L175:
2679:Generated_Source\PSoC4/CyLFClk.c **** 
2680:Generated_Source\PSoC4/CyLFClk.c ****             /* Timer Counter 2 */
2681:Generated_Source\PSoC4/CyLFClk.c ****             case 2u:
2682:Generated_Source\PSoC4/CyLFClk.c ****                 regValue = CY_SYS_WCO_WDT_CTRHIGH_REG;
 1977              		.loc 1 2682 0
 1978 0022 054B     		ldr	r3, .L178+4
 1979 0024 1868     		ldr	r0, [r3]
 1980              	.LVL155:
2683:Generated_Source\PSoC4/CyLFClk.c ****             break;
 1981              		.loc 1 2683 0
 1982 0026 03E0     		b	.L176
 1983              	.LVL156:
 1984              	.L177:
2684:Generated_Source\PSoC4/CyLFClk.c **** 
2685:Generated_Source\PSoC4/CyLFClk.c ****             default:
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 97


2686:Generated_Source\PSoC4/CyLFClk.c ****                 CYASSERT(0u != 0u);
 1985              		.loc 1 2686 0 discriminator 1
 1986 0028 0020     		movs	r0, #0
 1987              	.LVL157:
 1988 002a FFF7FEFF 		bl	CyHalt
 1989              	.LVL158:
2666:Generated_Source\PSoC4/CyLFClk.c **** 
 1990              		.loc 1 2666 0 discriminator 1
 1991 002e 0020     		movs	r0, #0
 1992              	.LVL159:
 1993              	.L176:
2687:Generated_Source\PSoC4/CyLFClk.c ****             break;
2688:Generated_Source\PSoC4/CyLFClk.c ****         }
2689:Generated_Source\PSoC4/CyLFClk.c **** 
2690:Generated_Source\PSoC4/CyLFClk.c ****         return (regValue);
2691:Generated_Source\PSoC4/CyLFClk.c ****     }
 1994              		.loc 1 2691 0
 1995              		@ sp needed
 1996 0030 10BD     		pop	{r4, pc}
 1997              	.L179:
 1998 0032 C046     		.align	2
 1999              	.L178:
 2000 0034 00020640 		.word	1074135552
 2001 0038 04020640 		.word	1074135556
 2002              		.cfi_endproc
 2003              	.LFE40:
 2004              		.size	CySysTimerGetCount, .-CySysTimerGetCount
 2005              		.section	.text.CySysTimerGetInterruptSource,"ax",%progbits
 2006              		.align	2
 2007              		.global	CySysTimerGetInterruptSource
 2008              		.code	16
 2009              		.thumb_func
 2010              		.type	CySysTimerGetInterruptSource, %function
 2011              	CySysTimerGetInterruptSource:
 2012              	.LFB41:
2692:Generated_Source\PSoC4/CyLFClk.c **** 
2693:Generated_Source\PSoC4/CyLFClk.c **** 
2694:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2695:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetInterruptSource
2696:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2697:Generated_Source\PSoC4/CyLFClk.c ****     *
2698:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2699:Generated_Source\PSoC4/CyLFClk.c ****     * Reads a mask containing all the DeepSleep Timer counters interrupts that are 
2700:Generated_Source\PSoC4/CyLFClk.c ****     * currently set by the hardware, if a corresponding mode is selected.
2701:Generated_Source\PSoC4/CyLFClk.c ****     *
2702:Generated_Source\PSoC4/CyLFClk.c ****     * \return The mask of interrupts set
2703:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_TIMER0_INT - Set interrupt for Counter 0
2704:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_TIMER1_INT - Set interrupt for Counter 1
2705:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_TIMER2_INT - Set interrupt for Counter 2
2706:Generated_Source\PSoC4/CyLFClk.c ****     *
2707:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2708:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetInterruptSource(void)
2709:Generated_Source\PSoC4/CyLFClk.c ****     {
 2013              		.loc 1 2709 0
 2014              		.cfi_startproc
 2015              		@ args = 0, pretend = 0, frame = 0
 2016              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 98


 2017              		@ link register save eliminated.
2710:Generated_Source\PSoC4/CyLFClk.c ****         return (CY_SYS_WCO_WDT_CONTROL_REG & (CY_SYS_TIMER0_INT | CY_SYS_TIMER1_INT | CY_SYS_TIMER2
 2018              		.loc 1 2710 0
 2019 0000 024B     		ldr	r3, .L181
 2020 0002 1868     		ldr	r0, [r3]
 2021 0004 024B     		ldr	r3, .L181+4
 2022 0006 1840     		ands	r0, r3
2711:Generated_Source\PSoC4/CyLFClk.c ****     }
 2023              		.loc 1 2711 0
 2024              		@ sp needed
 2025 0008 7047     		bx	lr
 2026              	.L182:
 2027 000a C046     		.align	2
 2028              	.L181:
 2029 000c 10020640 		.word	1074135568
 2030 0010 04040400 		.word	263172
 2031              		.cfi_endproc
 2032              	.LFE41:
 2033              		.size	CySysTimerGetInterruptSource, .-CySysTimerGetInterruptSource
 2034              		.section	.text.CySysTimerClearInterrupt,"ax",%progbits
 2035              		.align	2
 2036              		.global	CySysTimerClearInterrupt
 2037              		.code	16
 2038              		.thumb_func
 2039              		.type	CySysTimerClearInterrupt, %function
 2040              	CySysTimerClearInterrupt:
 2041              	.LFB42:
2712:Generated_Source\PSoC4/CyLFClk.c **** 
2713:Generated_Source\PSoC4/CyLFClk.c **** 
2714:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2715:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerClearInterrupt
2716:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2717:Generated_Source\PSoC4/CyLFClk.c ****     *
2718:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Clears all the DeepSleep Timer counter interrupts set in the mask.
2719:Generated_Source\PSoC4/CyLFClk.c ****     *
2720:Generated_Source\PSoC4/CyLFClk.c ****     * All the Timer interrupts are to be cleared by the firmware, otherwise
2721:Generated_Source\PSoC4/CyLFClk.c ****     * interrupts are generated continuously.
2722:Generated_Source\PSoC4/CyLFClk.c ****     *
2723:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterMask
2724:Generated_Source\PSoC4/CyLFClk.c ****     *  CY_SYS_TIMER0_INT - Clear counter 0<br>
2725:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER1_INT - Clear counter 1<br>
2726:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER2_INT - Clear counter 2
2727:Generated_Source\PSoC4/CyLFClk.c ****     *
2728:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2729:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerClearInterrupt(uint32 counterMask)
2730:Generated_Source\PSoC4/CyLFClk.c ****     {
 2042              		.loc 1 2730 0
 2043              		.cfi_startproc
 2044              		@ args = 0, pretend = 0, frame = 0
 2045              		@ frame_needed = 0, uses_anonymous_args = 0
 2046              	.LVL160:
 2047 0000 10B5     		push	{r4, lr}
 2048              		.cfi_def_cfa_offset 8
 2049              		.cfi_offset 4, -8
 2050              		.cfi_offset 14, -4
 2051 0002 0400     		movs	r4, r0
2731:Generated_Source\PSoC4/CyLFClk.c ****         uint8 interruptState;
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 99


2732:Generated_Source\PSoC4/CyLFClk.c ****         interruptState = CyEnterCriticalSection();
 2052              		.loc 1 2732 0
 2053 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 2054              	.LVL161:
2733:Generated_Source\PSoC4/CyLFClk.c **** 
2734:Generated_Source\PSoC4/CyLFClk.c ****         /* Set new WCO_TIMER control register value */
2735:Generated_Source\PSoC4/CyLFClk.c ****         counterMask &= (CY_SYS_TIMER0_INT |
 2055              		.loc 1 2735 0
 2056 0008 054B     		ldr	r3, .L184
 2057 000a 1C40     		ands	r4, r3
 2058              	.LVL162:
2736:Generated_Source\PSoC4/CyLFClk.c ****                         CY_SYS_TIMER1_INT |
2737:Generated_Source\PSoC4/CyLFClk.c ****                         CY_SYS_TIMER2_INT);
2738:Generated_Source\PSoC4/CyLFClk.c **** 
2739:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WCO_WDT_CONTROL_REG = counterMask | (CY_SYS_WCO_WDT_CONTROL_REG & ~(CY_SYS_TIMER0_IN
 2059              		.loc 1 2739 0
 2060 000c 0549     		ldr	r1, .L184+4
 2061 000e 0B68     		ldr	r3, [r1]
 2062 0010 054A     		ldr	r2, .L184+8
 2063 0012 1340     		ands	r3, r2
 2064 0014 2343     		orrs	r3, r4
 2065 0016 0B60     		str	r3, [r1]
2740:Generated_Source\PSoC4/CyLFClk.c ****                                                                            CY_SYS_TIMER1_INT |
2741:Generated_Source\PSoC4/CyLFClk.c ****                                                                            CY_SYS_TIMER2_INT));
2742:Generated_Source\PSoC4/CyLFClk.c **** 
2743:Generated_Source\PSoC4/CyLFClk.c ****         /* Read the CY_SYS_WDT_CONTROL_REG to clear the interrupt request.
2744:Generated_Source\PSoC4/CyLFClk.c ****          * Cypress ID #207093, #206231
2745:Generated_Source\PSoC4/CyLFClk.c ****         */
2746:Generated_Source\PSoC4/CyLFClk.c ****         (void)CY_SYS_WCO_WDT_CONTROL_REG;
 2066              		.loc 1 2746 0
 2067 0018 0B68     		ldr	r3, [r1]
2747:Generated_Source\PSoC4/CyLFClk.c **** 
2748:Generated_Source\PSoC4/CyLFClk.c ****         CyExitCriticalSection(interruptState);
 2068              		.loc 1 2748 0
 2069 001a FFF7FEFF 		bl	CyExitCriticalSection
 2070              	.LVL163:
2749:Generated_Source\PSoC4/CyLFClk.c ****     }
 2071              		.loc 1 2749 0
 2072              		@ sp needed
 2073              	.LVL164:
 2074 001e 10BD     		pop	{r4, pc}
 2075              	.L185:
 2076              		.align	2
 2077              	.L184:
 2078 0020 04040400 		.word	263172
 2079 0024 10020640 		.word	1074135568
 2080 0028 FBFBFBFF 		.word	-263173
 2081              		.cfi_endproc
 2082              	.LFE42:
 2083              		.size	CySysTimerClearInterrupt, .-CySysTimerClearInterrupt
 2084              		.section	.text.CySysTimerSetInterruptCallback,"ax",%progbits
 2085              		.align	2
 2086              		.global	CySysTimerSetInterruptCallback
 2087              		.code	16
 2088              		.thumb_func
 2089              		.type	CySysTimerSetInterruptCallback, %function
 2090              	CySysTimerSetInterruptCallback:
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 100


 2091              	.LFB43:
2750:Generated_Source\PSoC4/CyLFClk.c **** 
2751:Generated_Source\PSoC4/CyLFClk.c **** 
2752:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2753:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerSetInterruptCallback
2754:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2755:Generated_Source\PSoC4/CyLFClk.c ****     *
2756:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2757:Generated_Source\PSoC4/CyLFClk.c ****     * Sets the ISR callback function for the particular DeepSleep Timer counter.
2758:Generated_Source\PSoC4/CyLFClk.c ****     *
2759:Generated_Source\PSoC4/CyLFClk.c ****     * These functions are called on the Timer interrupt.
2760:Generated_Source\PSoC4/CyLFClk.c ****     *
2761:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum The number of the Timer counter.
2762:Generated_Source\PSoC4/CyLFClk.c ****     * \param function The pointer to the callback function.
2763:Generated_Source\PSoC4/CyLFClk.c ****     *
2764:Generated_Source\PSoC4/CyLFClk.c ****     * \return  The pointer to the previous callback function. 
2765:Generated_Source\PSoC4/CyLFClk.c ****     * \return NULL is returned if the specified address is not set.
2766:Generated_Source\PSoC4/CyLFClk.c ****     *
2767:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2768:Generated_Source\PSoC4/CyLFClk.c ****     cyTimerCallback CySysTimerSetInterruptCallback(uint32 counterNum, cyTimerCallback function)
2769:Generated_Source\PSoC4/CyLFClk.c ****     {
 2092              		.loc 1 2769 0
 2093              		.cfi_startproc
 2094              		@ args = 0, pretend = 0, frame = 0
 2095              		@ frame_needed = 0, uses_anonymous_args = 0
 2096              	.LVL165:
 2097 0000 10B5     		push	{r4, lr}
 2098              		.cfi_def_cfa_offset 8
 2099              		.cfi_offset 4, -8
 2100              		.cfi_offset 14, -4
 2101              	.LVL166:
2770:Generated_Source\PSoC4/CyLFClk.c ****         cyTimerCallback prevCallback = (void *)0;
2771:Generated_Source\PSoC4/CyLFClk.c **** 
2772:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum < CY_SYS_NUM_OF_TIMERS)
 2102              		.loc 1 2772 0
 2103 0002 0228     		cmp	r0, #2
 2104 0004 05D8     		bhi	.L187
2773:Generated_Source\PSoC4/CyLFClk.c ****         {
2774:Generated_Source\PSoC4/CyLFClk.c ****             prevCallback = cySysTimerCallback[counterNum];
 2105              		.loc 1 2774 0
 2106 0006 8000     		lsls	r0, r0, #2
 2107              	.LVL167:
 2108 0008 044B     		ldr	r3, .L189
 2109 000a 1B18     		adds	r3, r3, r0
 2110 000c 9868     		ldr	r0, [r3, #8]
 2111              	.LVL168:
2775:Generated_Source\PSoC4/CyLFClk.c ****             cySysTimerCallback[counterNum] = function;
 2112              		.loc 1 2775 0
 2113 000e 9960     		str	r1, [r3, #8]
 2114 0010 03E0     		b	.L188
 2115              	.LVL169:
 2116              	.L187:
2776:Generated_Source\PSoC4/CyLFClk.c ****         }
2777:Generated_Source\PSoC4/CyLFClk.c ****         else
2778:Generated_Source\PSoC4/CyLFClk.c ****         {
2779:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
 2117              		.loc 1 2779 0 discriminator 1
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 101


 2118 0012 0020     		movs	r0, #0
 2119              	.LVL170:
 2120 0014 FFF7FEFF 		bl	CyHalt
 2121              	.LVL171:
2770:Generated_Source\PSoC4/CyLFClk.c **** 
 2122              		.loc 1 2770 0 discriminator 1
 2123 0018 0020     		movs	r0, #0
 2124              	.LVL172:
 2125              	.L188:
2780:Generated_Source\PSoC4/CyLFClk.c ****         }
2781:Generated_Source\PSoC4/CyLFClk.c **** 
2782:Generated_Source\PSoC4/CyLFClk.c ****         return((cyTimerCallback)prevCallback);
2783:Generated_Source\PSoC4/CyLFClk.c ****     }
 2126              		.loc 1 2783 0
 2127              		@ sp needed
 2128 001a 10BD     		pop	{r4, pc}
 2129              	.L190:
 2130              		.align	2
 2131              	.L189:
 2132 001c 00000000 		.word	.LANCHOR0
 2133              		.cfi_endproc
 2134              	.LFE43:
 2135              		.size	CySysTimerSetInterruptCallback, .-CySysTimerSetInterruptCallback
 2136              		.section	.text.CySysTimerGetInterruptCallback,"ax",%progbits
 2137              		.align	2
 2138              		.global	CySysTimerGetInterruptCallback
 2139              		.code	16
 2140              		.thumb_func
 2141              		.type	CySysTimerGetInterruptCallback, %function
 2142              	CySysTimerGetInterruptCallback:
 2143              	.LFB44:
2784:Generated_Source\PSoC4/CyLFClk.c **** 
2785:Generated_Source\PSoC4/CyLFClk.c **** 
2786:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2787:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetInterruptCallback
2788:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2789:Generated_Source\PSoC4/CyLFClk.c ****     *
2790:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Gets the ISR callback function for the particular DeepSleep Timer 
2791:Generated_Source\PSoC4/CyLFClk.c ****     * counter.
2792:Generated_Source\PSoC4/CyLFClk.c ****     *
2793:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum The number of the Timer counter.
2794:Generated_Source\PSoC4/CyLFClk.c ****     *
2795:Generated_Source\PSoC4/CyLFClk.c ****     * \return
2796:Generated_Source\PSoC4/CyLFClk.c ****     * The pointer to the callback function registered for a particular Timer by
2797:Generated_Source\PSoC4/CyLFClk.c ****     * a particular address that are passed through arguments.
2798:Generated_Source\PSoC4/CyLFClk.c ****     *
2799:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2800:Generated_Source\PSoC4/CyLFClk.c ****     cyTimerCallback CySysTimerGetInterruptCallback(uint32 counterNum)
2801:Generated_Source\PSoC4/CyLFClk.c ****     {
 2144              		.loc 1 2801 0
 2145              		.cfi_startproc
 2146              		@ args = 0, pretend = 0, frame = 0
 2147              		@ frame_needed = 0, uses_anonymous_args = 0
 2148              	.LVL173:
 2149 0000 10B5     		push	{r4, lr}
 2150              		.cfi_def_cfa_offset 8
 2151              		.cfi_offset 4, -8
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 102


 2152              		.cfi_offset 14, -4
 2153              	.LVL174:
2802:Generated_Source\PSoC4/CyLFClk.c ****         cyTimerCallback retCallback = (void *)0;
2803:Generated_Source\PSoC4/CyLFClk.c **** 
2804:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum < CY_SYS_NUM_OF_TIMERS)
 2154              		.loc 1 2804 0
 2155 0002 0228     		cmp	r0, #2
 2156 0004 04D8     		bhi	.L192
2805:Generated_Source\PSoC4/CyLFClk.c ****         {
2806:Generated_Source\PSoC4/CyLFClk.c ****             retCallback = (cyTimerCallback)cySysTimerCallback[counterNum];
 2157              		.loc 1 2806 0
 2158 0006 8000     		lsls	r0, r0, #2
 2159              	.LVL175:
 2160 0008 044B     		ldr	r3, .L194
 2161 000a 1818     		adds	r0, r3, r0
 2162 000c 8068     		ldr	r0, [r0, #8]
 2163              	.LVL176:
 2164 000e 03E0     		b	.L193
 2165              	.LVL177:
 2166              	.L192:
2807:Generated_Source\PSoC4/CyLFClk.c ****         }
2808:Generated_Source\PSoC4/CyLFClk.c ****         else
2809:Generated_Source\PSoC4/CyLFClk.c ****         {
2810:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
 2167              		.loc 1 2810 0 discriminator 1
 2168 0010 0020     		movs	r0, #0
 2169              	.LVL178:
 2170 0012 FFF7FEFF 		bl	CyHalt
 2171              	.LVL179:
2802:Generated_Source\PSoC4/CyLFClk.c **** 
 2172              		.loc 1 2802 0 discriminator 1
 2173 0016 0020     		movs	r0, #0
 2174              	.LVL180:
 2175              	.L193:
2811:Generated_Source\PSoC4/CyLFClk.c ****         }
2812:Generated_Source\PSoC4/CyLFClk.c **** 
2813:Generated_Source\PSoC4/CyLFClk.c ****         return(retCallback);
2814:Generated_Source\PSoC4/CyLFClk.c ****     }
 2176              		.loc 1 2814 0
 2177              		@ sp needed
 2178 0018 10BD     		pop	{r4, pc}
 2179              	.L195:
 2180 001a C046     		.align	2
 2181              	.L194:
 2182 001c 00000000 		.word	.LANCHOR0
 2183              		.cfi_endproc
 2184              	.LFE44:
 2185              		.size	CySysTimerGetInterruptCallback, .-CySysTimerGetInterruptCallback
 2186              		.section	.text.CySysTimerEnableIsr,"ax",%progbits
 2187              		.align	2
 2188              		.global	CySysTimerEnableIsr
 2189              		.code	16
 2190              		.thumb_func
 2191              		.type	CySysTimerEnableIsr, %function
 2192              	CySysTimerEnableIsr:
 2193              	.LFB45:
2815:Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 103


2816:Generated_Source\PSoC4/CyLFClk.c **** 
2817:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2818:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerEnableIsr
2819:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2820:Generated_Source\PSoC4/CyLFClk.c ****     *
2821:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Enables the ISR callback servicing for the particular Timer counter
2822:Generated_Source\PSoC4/CyLFClk.c ****     *
2823:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the Timer counter.
2824:Generated_Source\PSoC4/CyLFClk.c ****     *
2825:Generated_Source\PSoC4/CyLFClk.c ****     * Value corresponds to appropriate Timer counter. For example value 1 
2826:Generated_Source\PSoC4/CyLFClk.c ****     * corresponds to second Timer counter.
2827:Generated_Source\PSoC4/CyLFClk.c ****     *
2828:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2829:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerEnableIsr(uint32 counterNum)
2830:Generated_Source\PSoC4/CyLFClk.c ****     {
 2194              		.loc 1 2830 0
 2195              		.cfi_startproc
 2196              		@ args = 0, pretend = 0, frame = 0
 2197              		@ frame_needed = 0, uses_anonymous_args = 0
 2198              	.LVL181:
 2199 0000 10B5     		push	{r4, lr}
 2200              		.cfi_def_cfa_offset 8
 2201              		.cfi_offset 4, -8
 2202              		.cfi_offset 14, -4
2831:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum <= CY_SYS_TIMER2)
 2203              		.loc 1 2831 0
 2204 0002 0228     		cmp	r0, #2
 2205 0004 0BD8     		bhi	.L197
2832:Generated_Source\PSoC4/CyLFClk.c ****         {
2833:Generated_Source\PSoC4/CyLFClk.c ****             disableTimerServicedIsr &= ~counterTimerIntMaskTbl[counterNum];
 2206              		.loc 1 2833 0
 2207 0006 8000     		lsls	r0, r0, #2
 2208              	.LVL182:
 2209 0008 074B     		ldr	r3, .L199
 2210 000a C158     		ldr	r1, [r0, r3]
 2211 000c 074B     		ldr	r3, .L199+4
 2212 000e 5A69     		ldr	r2, [r3, #20]
 2213 0010 8A43     		bics	r2, r1
 2214 0012 5A61     		str	r2, [r3, #20]
2834:Generated_Source\PSoC4/CyLFClk.c ****             timerIsrMask |= counterTimerIntMaskTbl[counterNum];
 2215              		.loc 1 2834 0
 2216 0014 064A     		ldr	r2, .L199+8
 2217 0016 1368     		ldr	r3, [r2]
 2218 0018 0B43     		orrs	r3, r1
 2219 001a 1360     		str	r3, [r2]
 2220 001c 02E0     		b	.L196
 2221              	.LVL183:
 2222              	.L197:
2835:Generated_Source\PSoC4/CyLFClk.c ****         }
2836:Generated_Source\PSoC4/CyLFClk.c ****         else
2837:Generated_Source\PSoC4/CyLFClk.c ****         {
2838:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
 2223              		.loc 1 2838 0 discriminator 1
 2224 001e 0020     		movs	r0, #0
 2225              	.LVL184:
 2226 0020 FFF7FEFF 		bl	CyHalt
 2227              	.LVL185:
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 104


 2228              	.L196:
2839:Generated_Source\PSoC4/CyLFClk.c ****         }
2840:Generated_Source\PSoC4/CyLFClk.c ****     }
 2229              		.loc 1 2840 0
 2230              		@ sp needed
 2231 0024 10BD     		pop	{r4, pc}
 2232              	.L200:
 2233 0026 C046     		.align	2
 2234              	.L199:
 2235 0028 00000000 		.word	.LANCHOR1
 2236 002c 00000000 		.word	.LANCHOR0
 2237 0030 00000000 		.word	.LANCHOR2
 2238              		.cfi_endproc
 2239              	.LFE45:
 2240              		.size	CySysTimerEnableIsr, .-CySysTimerEnableIsr
 2241              		.section	.text.CySysTimerDisableIsr,"ax",%progbits
 2242              		.align	2
 2243              		.global	CySysTimerDisableIsr
 2244              		.code	16
 2245              		.thumb_func
 2246              		.type	CySysTimerDisableIsr, %function
 2247              	CySysTimerDisableIsr:
 2248              	.LFB46:
2841:Generated_Source\PSoC4/CyLFClk.c **** 
2842:Generated_Source\PSoC4/CyLFClk.c **** 
2843:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2844:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerDisableIsr
2845:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2846:Generated_Source\PSoC4/CyLFClk.c ****     *
2847:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Disables the ISR callback servicing for the particular Timer counter
2848:Generated_Source\PSoC4/CyLFClk.c ****     *
2849:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the Timer counter.
2850:Generated_Source\PSoC4/CyLFClk.c ****     *
2851:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2852:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerDisableIsr(uint32 counterNum)
2853:Generated_Source\PSoC4/CyLFClk.c ****     {
 2249              		.loc 1 2853 0
 2250              		.cfi_startproc
 2251              		@ args = 0, pretend = 0, frame = 0
 2252              		@ frame_needed = 0, uses_anonymous_args = 0
 2253              	.LVL186:
 2254 0000 10B5     		push	{r4, lr}
 2255              		.cfi_def_cfa_offset 8
 2256              		.cfi_offset 4, -8
 2257              		.cfi_offset 14, -4
2854:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum <= CY_SYS_TIMER2)
 2258              		.loc 1 2854 0
 2259 0002 0228     		cmp	r0, #2
 2260 0004 07D8     		bhi	.L202
2855:Generated_Source\PSoC4/CyLFClk.c ****         {
2856:Generated_Source\PSoC4/CyLFClk.c ****             timerIsrMask &= ~counterTimerIntMaskTbl[counterNum];
 2261              		.loc 1 2856 0
 2262 0006 8000     		lsls	r0, r0, #2
 2263              	.LVL187:
 2264 0008 054B     		ldr	r3, .L204
 2265 000a C158     		ldr	r1, [r0, r3]
 2266 000c 054A     		ldr	r2, .L204+4
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 105


 2267 000e 1368     		ldr	r3, [r2]
 2268 0010 8B43     		bics	r3, r1
 2269 0012 1360     		str	r3, [r2]
 2270 0014 02E0     		b	.L201
 2271              	.LVL188:
 2272              	.L202:
2857:Generated_Source\PSoC4/CyLFClk.c ****         }
2858:Generated_Source\PSoC4/CyLFClk.c ****         else
2859:Generated_Source\PSoC4/CyLFClk.c ****         {
2860:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
 2273              		.loc 1 2860 0 discriminator 1
 2274 0016 0020     		movs	r0, #0
 2275              	.LVL189:
 2276 0018 FFF7FEFF 		bl	CyHalt
 2277              	.LVL190:
 2278              	.L201:
2861:Generated_Source\PSoC4/CyLFClk.c ****         }
2862:Generated_Source\PSoC4/CyLFClk.c ****     }
 2279              		.loc 1 2862 0
 2280              		@ sp needed
 2281 001c 10BD     		pop	{r4, pc}
 2282              	.L205:
 2283 001e C046     		.align	2
 2284              	.L204:
 2285 0020 00000000 		.word	.LANCHOR1
 2286 0024 00000000 		.word	.LANCHOR2
 2287              		.cfi_endproc
 2288              	.LFE46:
 2289              		.size	CySysTimerDisableIsr, .-CySysTimerDisableIsr
 2290              		.section	.text.CySysTimerIsr,"ax",%progbits
 2291              		.align	2
 2292              		.global	CySysTimerIsr
 2293              		.code	16
 2294              		.thumb_func
 2295              		.type	CySysTimerIsr, %function
 2296              	CySysTimerIsr:
 2297              	.LFB47:
2863:Generated_Source\PSoC4/CyLFClk.c **** 
2864:Generated_Source\PSoC4/CyLFClk.c **** 
2865:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2866:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerIsr
2867:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2868:Generated_Source\PSoC4/CyLFClk.c ****     *
2869:Generated_Source\PSoC4/CyLFClk.c ****     * \brief This is the handler of the DeepSleep Timer interrupt in CPU NVIC.
2870:Generated_Source\PSoC4/CyLFClk.c ****     *
2871:Generated_Source\PSoC4/CyLFClk.c ****     * The handler checks which Timer triggered in the interrupt and calls the 
2872:Generated_Source\PSoC4/CyLFClk.c ****     * respective callback functions configured by the user by using 
2873:Generated_Source\PSoC4/CyLFClk.c ****     * CySysTimerSetIsrCallback() API.
2874:Generated_Source\PSoC4/CyLFClk.c ****     *
2875:Generated_Source\PSoC4/CyLFClk.c ****     * The order of the callback execution is incremental. Callback-0 is
2876:Generated_Source\PSoC4/CyLFClk.c ****     * run as the first one and callback-2 is called as the last one.
2877:Generated_Source\PSoC4/CyLFClk.c ****     *
2878:Generated_Source\PSoC4/CyLFClk.c ****     * \details This function clears the DeepSleep Timer interrupt every time when 
2879:Generated_Source\PSoC4/CyLFClk.c ****     * it is called.
2880:Generated_Source\PSoC4/CyLFClk.c ****     *
2881:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2882:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerIsr(void)
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 106


2883:Generated_Source\PSoC4/CyLFClk.c ****     {
 2298              		.loc 1 2883 0
 2299              		.cfi_startproc
 2300              		@ args = 0, pretend = 0, frame = 0
 2301              		@ frame_needed = 0, uses_anonymous_args = 0
 2302 0000 10B5     		push	{r4, lr}
 2303              		.cfi_def_cfa_offset 8
 2304              		.cfi_offset 4, -8
 2305              		.cfi_offset 14, -4
2884:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (CY_SYS_TIMER0_INT & CY_SYS_WCO_WDT_CONTROL_REG))
 2306              		.loc 1 2884 0
 2307 0002 244B     		ldr	r3, .L213
 2308 0004 1B68     		ldr	r3, [r3]
 2309 0006 5B07     		lsls	r3, r3, #29
 2310 0008 15D5     		bpl	.L207
2885:Generated_Source\PSoC4/CyLFClk.c ****         {
2886:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_TIMER0_INT & timerIsrMask))
 2311              		.loc 1 2886 0
 2312 000a 234B     		ldr	r3, .L213+4
 2313 000c 1B68     		ldr	r3, [r3]
 2314 000e 5B07     		lsls	r3, r3, #29
 2315 0010 0ED5     		bpl	.L208
2887:Generated_Source\PSoC4/CyLFClk.c ****             {
2888:Generated_Source\PSoC4/CyLFClk.c ****                 timerIsrMask &= ~(disableTimerServicedIsr & CY_SYS_TIMER0_INT);
 2316              		.loc 1 2888 0
 2317 0012 224B     		ldr	r3, .L213+8
 2318 0014 5969     		ldr	r1, [r3, #20]
 2319 0016 0420     		movs	r0, #4
 2320 0018 0140     		ands	r1, r0
 2321 001a 1F4C     		ldr	r4, .L213+4
 2322 001c 2268     		ldr	r2, [r4]
 2323 001e 8A43     		bics	r2, r1
 2324 0020 2260     		str	r2, [r4]
2889:Generated_Source\PSoC4/CyLFClk.c ****                 disableTimerServicedIsr  &= ~CY_SYS_TIMER0_INT;
 2325              		.loc 1 2889 0
 2326 0022 5A69     		ldr	r2, [r3, #20]
 2327 0024 8243     		bics	r2, r0
 2328 0026 5A61     		str	r2, [r3, #20]
2890:Generated_Source\PSoC4/CyLFClk.c ****                 if(cySysTimerCallback[CY_SYS_TIMER0] != (void *) 0)
 2329              		.loc 1 2890 0
 2330 0028 9B68     		ldr	r3, [r3, #8]
 2331 002a 002B     		cmp	r3, #0
 2332 002c 00D0     		beq	.L208
2891:Generated_Source\PSoC4/CyLFClk.c ****                 {
2892:Generated_Source\PSoC4/CyLFClk.c ****                     (void)(cySysTimerCallback[CY_SYS_TIMER0])();
 2333              		.loc 1 2892 0
 2334 002e 9847     		blx	r3
 2335              	.LVL191:
 2336              	.L208:
2893:Generated_Source\PSoC4/CyLFClk.c ****                 }
2894:Generated_Source\PSoC4/CyLFClk.c ****             }
2895:Generated_Source\PSoC4/CyLFClk.c ****             CySysTimerClearInterrupt(CY_SYS_TIMER0_INT);
 2337              		.loc 1 2895 0
 2338 0030 0420     		movs	r0, #4
 2339 0032 FFF7FEFF 		bl	CySysTimerClearInterrupt
 2340              	.LVL192:
 2341              	.L207:
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 107


2896:Generated_Source\PSoC4/CyLFClk.c ****         }
2897:Generated_Source\PSoC4/CyLFClk.c **** 
2898:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (CY_SYS_TIMER1_INT & CY_SYS_WCO_WDT_CONTROL_REG))
 2342              		.loc 1 2898 0
 2343 0036 174B     		ldr	r3, .L213
 2344 0038 1B68     		ldr	r3, [r3]
 2345 003a 5B05     		lsls	r3, r3, #21
 2346 003c 18D5     		bpl	.L209
2899:Generated_Source\PSoC4/CyLFClk.c ****         {
2900:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_TIMER1_INT & timerIsrMask))
 2347              		.loc 1 2900 0
 2348 003e 164B     		ldr	r3, .L213+4
 2349 0040 1B68     		ldr	r3, [r3]
 2350 0042 5B05     		lsls	r3, r3, #21
 2351 0044 10D5     		bpl	.L210
2901:Generated_Source\PSoC4/CyLFClk.c ****             {
2902:Generated_Source\PSoC4/CyLFClk.c ****                 timerIsrMask &= ~(disableTimerServicedIsr & CY_SYS_TIMER1_INT);
 2352              		.loc 1 2902 0
 2353 0046 154B     		ldr	r3, .L213+8
 2354 0048 5969     		ldr	r1, [r3, #20]
 2355 004a 8022     		movs	r2, #128
 2356 004c D200     		lsls	r2, r2, #3
 2357 004e 1140     		ands	r1, r2
 2358 0050 1148     		ldr	r0, .L213+4
 2359 0052 0268     		ldr	r2, [r0]
 2360 0054 8A43     		bics	r2, r1
 2361 0056 0260     		str	r2, [r0]
2903:Generated_Source\PSoC4/CyLFClk.c ****                 disableTimerServicedIsr  &= ~CY_SYS_TIMER1_INT;
 2362              		.loc 1 2903 0
 2363 0058 5969     		ldr	r1, [r3, #20]
 2364 005a 114A     		ldr	r2, .L213+12
 2365 005c 0A40     		ands	r2, r1
 2366 005e 5A61     		str	r2, [r3, #20]
2904:Generated_Source\PSoC4/CyLFClk.c ****                 if(cySysTimerCallback[CY_SYS_TIMER1] != (void *) 0)
 2367              		.loc 1 2904 0
 2368 0060 DB68     		ldr	r3, [r3, #12]
 2369 0062 002B     		cmp	r3, #0
 2370 0064 00D0     		beq	.L210
2905:Generated_Source\PSoC4/CyLFClk.c ****                 {
2906:Generated_Source\PSoC4/CyLFClk.c ****                     (void)(cySysTimerCallback[CY_SYS_TIMER1])();
 2371              		.loc 1 2906 0
 2372 0066 9847     		blx	r3
 2373              	.LVL193:
 2374              	.L210:
2907:Generated_Source\PSoC4/CyLFClk.c ****                 }
2908:Generated_Source\PSoC4/CyLFClk.c ****             }
2909:Generated_Source\PSoC4/CyLFClk.c ****             CySysTimerClearInterrupt(CY_SYS_TIMER1_INT);
 2375              		.loc 1 2909 0
 2376 0068 8020     		movs	r0, #128
 2377 006a C000     		lsls	r0, r0, #3
 2378 006c FFF7FEFF 		bl	CySysTimerClearInterrupt
 2379              	.LVL194:
 2380              	.L209:
2910:Generated_Source\PSoC4/CyLFClk.c ****         }
2911:Generated_Source\PSoC4/CyLFClk.c **** 
2912:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (CY_SYS_TIMER2_INT & CY_SYS_WCO_WDT_CONTROL_REG))
 2381              		.loc 1 2912 0
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 108


 2382 0070 084B     		ldr	r3, .L213
 2383 0072 1B68     		ldr	r3, [r3]
 2384 0074 5B03     		lsls	r3, r3, #13
 2385 0076 0CD5     		bpl	.L206
2913:Generated_Source\PSoC4/CyLFClk.c ****         {
2914:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_TIMER2_INT & timerIsrMask))
 2386              		.loc 1 2914 0
 2387 0078 074B     		ldr	r3, .L213+4
 2388 007a 1B68     		ldr	r3, [r3]
 2389 007c 5B03     		lsls	r3, r3, #13
 2390 007e 04D5     		bpl	.L212
2915:Generated_Source\PSoC4/CyLFClk.c ****             {
2916:Generated_Source\PSoC4/CyLFClk.c ****                 if(cySysTimerCallback[CY_SYS_TIMER2] != (void *) 0)
 2391              		.loc 1 2916 0
 2392 0080 064B     		ldr	r3, .L213+8
 2393 0082 1B69     		ldr	r3, [r3, #16]
 2394 0084 002B     		cmp	r3, #0
 2395 0086 00D0     		beq	.L212
2917:Generated_Source\PSoC4/CyLFClk.c ****                 {
2918:Generated_Source\PSoC4/CyLFClk.c ****                     (void)(cySysTimerCallback[CY_SYS_TIMER2])();
 2396              		.loc 1 2918 0
 2397 0088 9847     		blx	r3
 2398              	.LVL195:
 2399              	.L212:
2919:Generated_Source\PSoC4/CyLFClk.c ****                 }
2920:Generated_Source\PSoC4/CyLFClk.c ****             }
2921:Generated_Source\PSoC4/CyLFClk.c ****             CySysTimerClearInterrupt(CY_SYS_TIMER2_INT);
 2400              		.loc 1 2921 0
 2401 008a 8020     		movs	r0, #128
 2402 008c C002     		lsls	r0, r0, #11
 2403 008e FFF7FEFF 		bl	CySysTimerClearInterrupt
 2404              	.LVL196:
 2405              	.L206:
2922:Generated_Source\PSoC4/CyLFClk.c ****         }
2923:Generated_Source\PSoC4/CyLFClk.c ****     }
 2406              		.loc 1 2923 0
 2407              		@ sp needed
 2408 0092 10BD     		pop	{r4, pc}
 2409              	.L214:
 2410              		.align	2
 2411              	.L213:
 2412 0094 10020640 		.word	1074135568
 2413 0098 00000000 		.word	.LANCHOR2
 2414 009c 00000000 		.word	.LANCHOR0
 2415 00a0 FFFBFFFF 		.word	-1025
 2416              		.cfi_endproc
 2417              	.LFE47:
 2418              		.size	CySysTimerIsr, .-CySysTimerIsr
 2419              		.section	.text.CySysTimerResetCounters,"ax",%progbits
 2420              		.align	2
 2421              		.global	CySysTimerResetCounters
 2422              		.code	16
 2423              		.thumb_func
 2424              		.type	CySysTimerResetCounters, %function
 2425              	CySysTimerResetCounters:
 2426              	.LFB48:
2924:Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 109


2925:Generated_Source\PSoC4/CyLFClk.c **** 
2926:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2927:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerResetCounters
2928:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2929:Generated_Source\PSoC4/CyLFClk.c ****     *
2930:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Resets all the Timer counters set in the mask.
2931:Generated_Source\PSoC4/CyLFClk.c ****     *
2932:Generated_Source\PSoC4/CyLFClk.c ****     * \param countersMask
2933:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER0_RESET - Reset the Counter 0<br>
2934:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER1_RESET - Reset the Counter 1<br>
2935:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER2_RESET - Reset the Counter 2
2936:Generated_Source\PSoC4/CyLFClk.c ****     *
2937:Generated_Source\PSoC4/CyLFClk.c ****     * \details
2938:Generated_Source\PSoC4/CyLFClk.c ****     * This function waits while corresponding counters will be reset. This may
2939:Generated_Source\PSoC4/CyLFClk.c ****     * take up to 3 DeepSleep Timer source-cycles. DeepSleep Timer source must be 
2940:Generated_Source\PSoC4/CyLFClk.c ****     * enabled. Otherwise, the function will never exit.
2941:Generated_Source\PSoC4/CyLFClk.c ****     *
2942:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2943:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerResetCounters(uint32 countersMask)
2944:Generated_Source\PSoC4/CyLFClk.c ****     {
 2427              		.loc 1 2944 0
 2428              		.cfi_startproc
 2429              		@ args = 0, pretend = 0, frame = 0
 2430              		@ frame_needed = 0, uses_anonymous_args = 0
 2431              		@ link register save eliminated.
 2432              	.LVL197:
2945:Generated_Source\PSoC4/CyLFClk.c ****         /* Set new Timer reset value */
2946:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WCO_WDT_CONTROL_REG |= (countersMask & CY_SYS_TIMER_RESET);
 2433              		.loc 1 2946 0
 2434 0000 054A     		ldr	r2, .L217
 2435 0002 1168     		ldr	r1, [r2]
 2436 0004 054B     		ldr	r3, .L217+4
 2437 0006 1840     		ands	r0, r3
 2438              	.LVL198:
 2439 0008 0843     		orrs	r0, r1
 2440 000a 1060     		str	r0, [r2]
 2441              	.L216:
2947:Generated_Source\PSoC4/CyLFClk.c **** 
2948:Generated_Source\PSoC4/CyLFClk.c ****         while (0uL != (CY_SYS_WCO_WDT_CONTROL_REG & CY_SYS_TIMER_RESET))
 2442              		.loc 1 2948 0 discriminator 1
 2443 000c 024B     		ldr	r3, .L217
 2444 000e 1A68     		ldr	r2, [r3]
 2445 0010 024B     		ldr	r3, .L217+4
 2446 0012 1A42     		tst	r2, r3
 2447 0014 FAD1     		bne	.L216
2949:Generated_Source\PSoC4/CyLFClk.c ****         {
2950:Generated_Source\PSoC4/CyLFClk.c ****             /* Wait for reset to come into effect */
2951:Generated_Source\PSoC4/CyLFClk.c ****         }
2952:Generated_Source\PSoC4/CyLFClk.c ****     }
 2448              		.loc 1 2952 0
 2449              		@ sp needed
 2450 0016 7047     		bx	lr
 2451              	.L218:
 2452              		.align	2
 2453              	.L217:
 2454 0018 10020640 		.word	1074135568
 2455 001c 08080800 		.word	526344
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 110


 2456              		.cfi_endproc
 2457              	.LFE48:
 2458              		.size	CySysTimerResetCounters, .-CySysTimerResetCounters
 2459              		.section	.text.CySysTimerDelayUntilMatch,"ax",%progbits
 2460              		.align	2
 2461              		.global	CySysTimerDelayUntilMatch
 2462              		.code	16
 2463              		.thumb_func
 2464              		.type	CySysTimerDelayUntilMatch, %function
 2465              	CySysTimerDelayUntilMatch:
 2466              	.LFB50:
2953:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN) */
2954:Generated_Source\PSoC4/CyLFClk.c **** 
2955:Generated_Source\PSoC4/CyLFClk.c **** 
2956:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2 || (CY_IP_WCO_WDT_EN && CY_IP_SRSSLT))
2957:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2958:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerDelay
2959:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2960:Generated_Source\PSoC4/CyLFClk.c ****     *
2961:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2962:Generated_Source\PSoC4/CyLFClk.c ****     * The function implements the delay specified in the LFCLK clock ticks.
2963:Generated_Source\PSoC4/CyLFClk.c ****     *
2964:Generated_Source\PSoC4/CyLFClk.c ****     * This API is applicable for PSoC 4100 / PSoC 4200 / PSoC 4100 BLE / 
2965:Generated_Source\PSoC4/CyLFClk.c ****     * PSoC 4200 BLE / PRoC BLE / PSoC 4200L / PSoC 4100M / PSoC 4200M devices to 
2966:Generated_Source\PSoC4/CyLFClk.c ****     * use WDT. Also this API is available to use for PSoC4100S and / PSoC Analog 
2967:Generated_Source\PSoC4/CyLFClk.c ****     * Coprocessor devices to use DeepSleep Timers.
2968:Generated_Source\PSoC4/CyLFClk.c ****     *
2969:Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC 4100 / PSoC 4200 / PSoC 4100 BLE / PSoC 4200 BLE / PRoC BLE / PSoC 
2970:Generated_Source\PSoC4/CyLFClk.c ****     * 4200L / PSoC 4100M / PSoC 4200M devices:
2971:Generated_Source\PSoC4/CyLFClk.c ****     * The specified WDT counter should be configured as described below and started.
2972:Generated_Source\PSoC4/CyLFClk.c ****     *
2973:Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC 4100S / PSoC Analog Coprocessor devices:
2974:Generated_Source\PSoC4/CyLFClk.c ****     * The specified DeepSleep Timer counter should be configured as described below
2975:Generated_Source\PSoC4/CyLFClk.c ****     * and started.
2976:Generated_Source\PSoC4/CyLFClk.c ****     *
2977:Generated_Source\PSoC4/CyLFClk.c ****     * This function can operate in two modes: the "WAIT" and "INTERRUPT" modes. In
2978:Generated_Source\PSoC4/CyLFClk.c ****     * the "WAIT" mode, the function waits for the specified number of ticks. In the
2979:Generated_Source\PSoC4/CyLFClk.c ****     * "INTERRUPT" mode, the interrupt is generated after the specified number of
2980:Generated_Source\PSoC4/CyLFClk.c ****     * ticks.
2981:Generated_Source\PSoC4/CyLFClk.c ****     *
2982:Generated_Source\PSoC4/CyLFClk.c ****     * For the correct function operation, the "Clear On Match" option should be
2983:Generated_Source\PSoC4/CyLFClk.c ****     * disabled for the specified WDT or DeepSleep Timer counter. Use 
2984:Generated_Source\PSoC4/CyLFClk.c ****     * CySysWdtSetClearOnMatch() for WDT or CySysTimerSetClearOnMatch() for DeepSleep
2985:Generated_Source\PSoC4/CyLFClk.c ****     * Timer function with the "enable" parameter equal to zero for the used WDT 
2986:Generated_Source\PSoC4/CyLFClk.c ****     * counter or DeepSleep Timer counter.
2987:Generated_Source\PSoC4/CyLFClk.c ****     *
2988:Generated_Source\PSoC4/CyLFClk.c ****     * The corresponding WDT counter should be configured to match the selected
2989:Generated_Source\PSoC4/CyLFClk.c ****     * mode: "Free running Timer" for the "WAIT" mode, and
2990:Generated_Source\PSoC4/CyLFClk.c ****     * "Periodic Timer" / "Watchdog (w/Interrupt)" for the "INTERRUPT" mode.
2991:Generated_Source\PSoC4/CyLFClk.c ****     *
2992:Generated_Source\PSoC4/CyLFClk.c ****     * Or the corresponding DeepSleep Timer counter should be configured to match the
2993:Generated_Source\PSoC4/CyLFClk.c ****     * selected mode: "Free running Timer" for the "WAIT" mode, and
2994:Generated_Source\PSoC4/CyLFClk.c ****     * "Periodic Timer" for the "INTERRUPT" mode.
2995:Generated_Source\PSoC4/CyLFClk.c ****     *
2996:Generated_Source\PSoC4/CyLFClk.c ****     * This can be configured in two ways:
2997:Generated_Source\PSoC4/CyLFClk.c ****     * - Through the DWR page. Open the "Clocks" tab, click the "Edit Clocks..."
2998:Generated_Source\PSoC4/CyLFClk.c ****     * button, in the "Configure System Clocks" window click on the
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 111


2999:Generated_Source\PSoC4/CyLFClk.c ****     * "Low Frequency Clocks" tab and choose the appropriate option for the used
3000:Generated_Source\PSoC4/CyLFClk.c ****     * WDT or DeepSleep Timer counter.
3001:Generated_Source\PSoC4/CyLFClk.c ****     *
3002:Generated_Source\PSoC4/CyLFClk.c ****     * - Through the CySysWdtSetMode() for WDT or CySysTimerSetMode() for DeepSleep
3003:Generated_Source\PSoC4/CyLFClk.c ****     * Timer function. Call it with the appropriate "mode" parameter for the 
3004:Generated_Source\PSoC4/CyLFClk.c ****     * used WDT or DeepSleep Timer counter.
3005:Generated_Source\PSoC4/CyLFClk.c ****     *
3006:Generated_Source\PSoC4/CyLFClk.c ****     * For the "INTERRUPT" mode, the recommended sequence is the following:
3007:Generated_Source\PSoC4/CyLFClk.c ****     * - Call the CySysWdtDisableCounterIsr() for WDT or 
3008:Generated_Source\PSoC4/CyLFClk.c ****     * CySysTimerDisableIsr() for DeepSleep Timer function to disable servicing
3009:Generated_Source\PSoC4/CyLFClk.c ****     * interrupts of the specified WDT or DeepSleep Timer counter.
3010:Generated_Source\PSoC4/CyLFClk.c ****     *
3011:Generated_Source\PSoC4/CyLFClk.c ****     * - Call the CySysWdtSetInterruptCallback() for WDT or 
3012:Generated_Source\PSoC4/CyLFClk.c ****     * CySysTimerSetIsrCallback() for DeepSleep Timer function to register 
3013:Generated_Source\PSoC4/CyLFClk.c ****     * the callback function for the corresponding WDT or DeepSleep Timer counter.
3014:Generated_Source\PSoC4/CyLFClk.c ****     *
3015:Generated_Source\PSoC4/CyLFClk.c ****     * - Call the CySysTimerDelay() function.
3016:Generated_Source\PSoC4/CyLFClk.c ****     *
3017:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-1]. The number of the counter 
3018:Generated_Source\PSoC4/CyLFClk.c ****     * (Timer0 or Timer1).
3019:Generated_Source\PSoC4/CyLFClk.c ****     * \param delayType
3020:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER_WAIT - "WAIT" mode. <br>
3021:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER_INTERRUPT - "INTERRUPT" mode.
3022:Generated_Source\PSoC4/CyLFClk.c ****     * \param delay The delay value in the LFCLK ticks 
3023:Generated_Source\PSoC4/CyLFClk.c ****     * (allowable range - 16-bit value).
3024:Generated_Source\PSoC4/CyLFClk.c ****     *
3025:Generated_Source\PSoC4/CyLFClk.c ****     * \details
3026:Generated_Source\PSoC4/CyLFClk.c ****     * In the "INTERRUPT" mode, this function enables ISR callback servicing
3027:Generated_Source\PSoC4/CyLFClk.c ****     * from the corresponding WDT or DeepSleep Timer counter. Servicing of this ISR 
3028:Generated_Source\PSoC4/CyLFClk.c ****     * callback will be disabled after the expiration of the delay time.
3029:Generated_Source\PSoC4/CyLFClk.c ****     *
3030:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
3031:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerDelay(uint32 counterNum, cy_sys_timer_delaytype_enum delayType, uint32 delay)
3032:Generated_Source\PSoC4/CyLFClk.c ****     {
3033:Generated_Source\PSoC4/CyLFClk.c ****         uint32 regValue;
3034:Generated_Source\PSoC4/CyLFClk.c ****         uint32 matchValue;
3035:Generated_Source\PSoC4/CyLFClk.c **** 
3036:Generated_Source\PSoC4/CyLFClk.c ****         #if(CY_IP_SRSSV2)
3037:Generated_Source\PSoC4/CyLFClk.c ****             if((counterNum < CY_SYS_WDT_COUNTER2) && (0uL == CySysWdtGetClearOnMatch(counterNum)) &
3038:Generated_Source\PSoC4/CyLFClk.c ****                                                                 (delay <= CY_SYS_UINT16_MAX_VAL))
3039:Generated_Source\PSoC4/CyLFClk.c ****             {
3040:Generated_Source\PSoC4/CyLFClk.c ****                 regValue   = CySysWdtGetCount(counterNum);
3041:Generated_Source\PSoC4/CyLFClk.c ****                 matchValue = (regValue + delay) & (uint32)CY_SYS_UINT16_MAX_VAL;
3042:Generated_Source\PSoC4/CyLFClk.c **** 
3043:Generated_Source\PSoC4/CyLFClk.c ****                 CySysTimerDelayUntilMatch(counterNum, delayType, matchValue);
3044:Generated_Source\PSoC4/CyLFClk.c ****             }
3045:Generated_Source\PSoC4/CyLFClk.c ****             else
3046:Generated_Source\PSoC4/CyLFClk.c ****             {
3047:Generated_Source\PSoC4/CyLFClk.c ****                 CYASSERT(0u != 0u);
3048:Generated_Source\PSoC4/CyLFClk.c ****             }
3049:Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (CY_IP_SRSSV2) */
3050:Generated_Source\PSoC4/CyLFClk.c **** 
3051:Generated_Source\PSoC4/CyLFClk.c ****         #if(CY_IP_WCO_WDT_EN && CY_IP_SRSSLT)
3052:Generated_Source\PSoC4/CyLFClk.c ****             if((counterNum < CY_SYS_TIMER2) && (0uL == CySysTimerGetClearOnMatch(counterNum)) && 
3053:Generated_Source\PSoC4/CyLFClk.c ****                                                             (delay <= CY_SYS_UINT16_MAX_VAL))
3054:Generated_Source\PSoC4/CyLFClk.c ****             {
3055:Generated_Source\PSoC4/CyLFClk.c ****                 regValue   = CySysTimerGetCount(counterNum);
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 112


3056:Generated_Source\PSoC4/CyLFClk.c ****                 matchValue = (regValue + delay) & (uint32)CY_SYS_UINT16_MAX_VAL;
3057:Generated_Source\PSoC4/CyLFClk.c **** 
3058:Generated_Source\PSoC4/CyLFClk.c ****                 CySysTimerDelayUntilMatch(counterNum, delayType, matchValue);
3059:Generated_Source\PSoC4/CyLFClk.c ****             }
3060:Generated_Source\PSoC4/CyLFClk.c ****             else
3061:Generated_Source\PSoC4/CyLFClk.c ****             {
3062:Generated_Source\PSoC4/CyLFClk.c ****                 CYASSERT(0u != 0u);
3063:Generated_Source\PSoC4/CyLFClk.c ****             }
3064:Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (CY_IP_WCO_WDT_EN) */
3065:Generated_Source\PSoC4/CyLFClk.c ****     }
3066:Generated_Source\PSoC4/CyLFClk.c **** 
3067:Generated_Source\PSoC4/CyLFClk.c **** 
3068:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
3069:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerDelayUntilMatch
3070:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
3071:Generated_Source\PSoC4/CyLFClk.c ****     *
3072:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
3073:Generated_Source\PSoC4/CyLFClk.c ****     * The function implements the delay specified as the number of WDT or DeepSleep
3074:Generated_Source\PSoC4/CyLFClk.c ****     * Timer clock source ticks between WDT or DeepSleep Timer current value and 
3075:Generated_Source\PSoC4/CyLFClk.c ****     * match" value.
3076:Generated_Source\PSoC4/CyLFClk.c ****     *
3077:Generated_Source\PSoC4/CyLFClk.c ****     * This API is applicable for PSoC 4100 / PSoC 4200 / PRoC BLE / PSoC 4100 BLE /
3078:Generated_Source\PSoC4/CyLFClk.c ****     * PSoC 4200 BLE / PSoC 4200L / PSoC 4100M / PSoC 4200M devices to use WDT.
3079:Generated_Source\PSoC4/CyLFClk.c ****     * Also this API is available to use for PSoC4100S / Analog Coprocessor devices
3080:Generated_Source\PSoC4/CyLFClk.c ****     * to use DeepSleep Timers.
3081:Generated_Source\PSoC4/CyLFClk.c ****     * 
3082:Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC 4100 / PSoC 4200 / PSoC 4100 BLE / PSoC 4200 BLE / PRoC BLE / PSoC 
3083:Generated_Source\PSoC4/CyLFClk.c ****     * 4200L / PSoC 4100M / PSoC 4200M devices:
3084:Generated_Source\PSoC4/CyLFClk.c ****     * The function implements the delay specified as the number of LFCLK ticks
3085:Generated_Source\PSoC4/CyLFClk.c ****     * between the specified WDT counter's current value and the "match"
3086:Generated_Source\PSoC4/CyLFClk.c ****     * passed as the parameter to this function. The current WDT counter value can 
3087:Generated_Source\PSoC4/CyLFClk.c ****     * be obtained using the CySysWdtGetCount() function.
3088:Generated_Source\PSoC4/CyLFClk.c ****     *
3089:Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC4100 S and Analog Coprocessor devices:
3090:Generated_Source\PSoC4/CyLFClk.c ****     * The function implements the delay specified as the number of DeepSleep Timer 
3091:Generated_Source\PSoC4/CyLFClk.c ****     * input clock ticks for Timer0/Timer1 counter's current value and the "match" 
3092:Generated_Source\PSoC4/CyLFClk.c ****     * passed as the parameter to this function. The current DeepSleep Timer counter
3093:Generated_Source\PSoC4/CyLFClk.c ****     * value can be obtained using the CySysWdtGetCount() function.
3094:Generated_Source\PSoC4/CyLFClk.c ****     *
3095:Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC 4100 / PSoC 4200 / PSoC 4100 BLE / PSoC 4200 BLE / PRoC BLE / PSoC 
3096:Generated_Source\PSoC4/CyLFClk.c ****     * 4200L / PSoC 4100M / PSoC 4200M devices:
3097:Generated_Source\PSoC4/CyLFClk.c ****     * The specified WDT counter should be configured as described below and started.
3098:Generated_Source\PSoC4/CyLFClk.c ****     *
3099:Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC PSoC 4100S / PSoC Analog Coprocessor devices:
3100:Generated_Source\PSoC4/CyLFClk.c ****     * The specified DeepSleep Timer counter should be configured as described below
3101:Generated_Source\PSoC4/CyLFClk.c ****     * and started.
3102:Generated_Source\PSoC4/CyLFClk.c ****     *
3103:Generated_Source\PSoC4/CyLFClk.c ****     * This function can operate in two modes: the "WAIT" and "INTERRUPT" modes. In
3104:Generated_Source\PSoC4/CyLFClk.c ****     * the "WAIT" mode, the function waits for the specified number of ticks. In the
3105:Generated_Source\PSoC4/CyLFClk.c ****     * "INTERRUPT" mode, the interrupt is generated after the specified number of
3106:Generated_Source\PSoC4/CyLFClk.c ****     * ticks.
3107:Generated_Source\PSoC4/CyLFClk.c ****     *
3108:Generated_Source\PSoC4/CyLFClk.c ****     * For the correct function operation, the "Clear On Match" option should be
3109:Generated_Source\PSoC4/CyLFClk.c ****     * disabled for the specified WDT or DeepSleep Timer counter. Use 
3110:Generated_Source\PSoC4/CyLFClk.c ****     * CySysWdtSetClearOnMatch() for WDT or CySysTimerSetClearOnMatch() for DeepSleep
3111:Generated_Source\PSoC4/CyLFClk.c ****     * Timer function with the "enable" parameter equal to zero for the used WDT 
3112:Generated_Source\PSoC4/CyLFClk.c ****     * or DeepSleep Timer counter.
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 113


3113:Generated_Source\PSoC4/CyLFClk.c ****     *
3114:Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC 4100 / PSoC 4200 / PSoC 4100 BLE / PSoC 4200 BLE / PRoC BLE / PSoC 
3115:Generated_Source\PSoC4/CyLFClk.c ****     * 4200L / PSoC 4100M/PSoC 4200M devices:
3116:Generated_Source\PSoC4/CyLFClk.c ****     * The corresponding WDT counter should be configured to match the selected
3117:Generated_Source\PSoC4/CyLFClk.c ****     * mode: "Free running Timer" for the "WAIT" mode, and
3118:Generated_Source\PSoC4/CyLFClk.c ****     * "Periodic Timer" / "Watchdog (w/Interrupt)" for the "INTERRUPT" mode.
3119:Generated_Source\PSoC4/CyLFClk.c ****     *
3120:Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC 4100S / PSoC Analog Coprocessor devices:
3121:Generated_Source\PSoC4/CyLFClk.c ****     * Corresponding DeepSleep Timer counter should be configured to match the 
3122:Generated_Source\PSoC4/CyLFClk.c ****     * selected mode: "Free running Timer" for the "WAIT" mode, and
3123:Generated_Source\PSoC4/CyLFClk.c ****     * "Periodic Timer" for the "INTERRUPT" mode.
3124:Generated_Source\PSoC4/CyLFClk.c ****     *
3125:Generated_Source\PSoC4/CyLFClk.c ****     * This can be configured in two ways:
3126:Generated_Source\PSoC4/CyLFClk.c ****     * - Through the DWR page. Open the "Clocks" tab, click the "Edit Clocks..."
3127:Generated_Source\PSoC4/CyLFClk.c ****     * button, in the "Configure System Clocks" window click on the
3128:Generated_Source\PSoC4/CyLFClk.c ****     * "Low Frequency Clocks" tab and choose the appropriate option for the used
3129:Generated_Source\PSoC4/CyLFClk.c ****     * WDT or DeepSleep Timer counter.
3130:Generated_Source\PSoC4/CyLFClk.c ****     *
3131:Generated_Source\PSoC4/CyLFClk.c ****     * - Through the CySysWdtSetMode() for WDT or CySysTimerSetMode() for DeepSleep
3132:Generated_Source\PSoC4/CyLFClk.c ****     * Timer function. Call it with the appropriate "mode" parameter for the 
3133:Generated_Source\PSoC4/CyLFClk.c ****     * used WDT or DeepSleep Timer counter.
3134:Generated_Source\PSoC4/CyLFClk.c ****     *
3135:Generated_Source\PSoC4/CyLFClk.c ****     * For the "INTERRUPT" mode, the recommended sequence is the following:
3136:Generated_Source\PSoC4/CyLFClk.c ****     * - Call the CySysWdtDisableCounterIsr() for WDT or 
3137:Generated_Source\PSoC4/CyLFClk.c ****     * CySysTimerDisableIsr() for DeepSleep Timer function to disable servicing
3138:Generated_Source\PSoC4/CyLFClk.c ****     * interrupts of the specified WDT or DeepSleep Timer counter.
3139:Generated_Source\PSoC4/CyLFClk.c ****     *
3140:Generated_Source\PSoC4/CyLFClk.c ****     * - Call the CySysWdtSetInterruptCallback() for WDT or 
3141:Generated_Source\PSoC4/CyLFClk.c ****     * CySysTimerSetInterruptCallback() for DeepSleep Timer function to register 
3142:Generated_Source\PSoC4/CyLFClk.c ****     * the callback function for the corresponding WDT or DeepSleep Timer counter.
3143:Generated_Source\PSoC4/CyLFClk.c ****     *
3144:Generated_Source\PSoC4/CyLFClk.c ****     * - Call the CySysTimerDelay() function.
3145:Generated_Source\PSoC4/CyLFClk.c ****     *
3146:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-1]. The number of the WDT or DeepSleep 
3147:Generated_Source\PSoC4/CyLFClk.c ****     * Timer.
3148:Generated_Source\PSoC4/CyLFClk.c ****     * counter (Timer0 or Timer1).
3149:Generated_Source\PSoC4/CyLFClk.c ****     * \param delayType  CY_SYS_TIMER_WAIT - "WAIT" mode.<br>
3150:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER_INTERRUPT - "INTERRUPT" mode.
3151:Generated_Source\PSoC4/CyLFClk.c ****     * \param delay The delay value in the LFCLK ticks
3152:Generated_Source\PSoC4/CyLFClk.c ****     * (allowable range - 16-bit value).
3153:Generated_Source\PSoC4/CyLFClk.c ****     *
3154:Generated_Source\PSoC4/CyLFClk.c ****     * \details
3155:Generated_Source\PSoC4/CyLFClk.c ****     * In the "INTERRUPT" mode, this function enables ISR callback servicing
3156:Generated_Source\PSoC4/CyLFClk.c ****     * from the corresponding WDT counter. Servicing of this ISR callback will be
3157:Generated_Source\PSoC4/CyLFClk.c ****     * disabled after the expiration of the delay time.
3158:Generated_Source\PSoC4/CyLFClk.c ****     *
3159:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
3160:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerDelayUntilMatch(uint32 counterNum, cy_sys_timer_delaytype_enum delayType, uint32
3161:Generated_Source\PSoC4/CyLFClk.c ****     {
 2467              		.loc 1 3161 0
 2468              		.cfi_startproc
 2469              		@ args = 0, pretend = 0, frame = 0
 2470              		@ frame_needed = 0, uses_anonymous_args = 0
 2471              	.LVL199:
 2472 0000 70B5     		push	{r4, r5, r6, lr}
 2473              		.cfi_def_cfa_offset 16
 2474              		.cfi_offset 4, -16
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 114


 2475              		.cfi_offset 5, -12
 2476              		.cfi_offset 6, -8
 2477              		.cfi_offset 14, -4
 2478 0002 0400     		movs	r4, r0
 2479 0004 0E00     		movs	r6, r1
 2480 0006 1500     		movs	r5, r2
3162:Generated_Source\PSoC4/CyLFClk.c ****         uint32 tmpValue;
3163:Generated_Source\PSoC4/CyLFClk.c **** 
3164:Generated_Source\PSoC4/CyLFClk.c ****         #if(CY_IP_SRSSV2)
3165:Generated_Source\PSoC4/CyLFClk.c ****             if((counterNum < CY_SYS_WDT_COUNTER2) && (0uL == CySysWdtGetClearOnMatch(counterNum)) &
3166:Generated_Source\PSoC4/CyLFClk.c ****                                                                 (match <= CY_SYS_UINT16_MAX_VAL))
3167:Generated_Source\PSoC4/CyLFClk.c ****             {
3168:Generated_Source\PSoC4/CyLFClk.c ****                 if(delayType == CY_SYS_TIMER_WAIT)
3169:Generated_Source\PSoC4/CyLFClk.c ****                 {
3170:Generated_Source\PSoC4/CyLFClk.c ****                     do
3171:Generated_Source\PSoC4/CyLFClk.c ****                     {
3172:Generated_Source\PSoC4/CyLFClk.c ****                         tmpValue = CySysWdtGetCount(counterNum);
3173:Generated_Source\PSoC4/CyLFClk.c ****                     }while(tmpValue > match);
3174:Generated_Source\PSoC4/CyLFClk.c **** 
3175:Generated_Source\PSoC4/CyLFClk.c ****                     do
3176:Generated_Source\PSoC4/CyLFClk.c ****                     {
3177:Generated_Source\PSoC4/CyLFClk.c ****                         tmpValue = CySysWdtGetCount(counterNum);
3178:Generated_Source\PSoC4/CyLFClk.c ****                     }while(tmpValue < match);
3179:Generated_Source\PSoC4/CyLFClk.c ****                 }
3180:Generated_Source\PSoC4/CyLFClk.c ****                 else
3181:Generated_Source\PSoC4/CyLFClk.c ****                 {
3182:Generated_Source\PSoC4/CyLFClk.c ****                     tmpValue = counterIntMaskTbl[counterNum];
3183:Generated_Source\PSoC4/CyLFClk.c ****                     CySysWdtSetMatch(counterNum, match);
3184:Generated_Source\PSoC4/CyLFClk.c **** 
3185:Generated_Source\PSoC4/CyLFClk.c ****                     disableServicedIsr  |= tmpValue;
3186:Generated_Source\PSoC4/CyLFClk.c ****                     wdtIsrMask |= tmpValue;
3187:Generated_Source\PSoC4/CyLFClk.c ****                 }
3188:Generated_Source\PSoC4/CyLFClk.c ****             }
3189:Generated_Source\PSoC4/CyLFClk.c ****             else
3190:Generated_Source\PSoC4/CyLFClk.c ****             {
3191:Generated_Source\PSoC4/CyLFClk.c ****                 CYASSERT(0u != 0u);
3192:Generated_Source\PSoC4/CyLFClk.c ****             }
3193:Generated_Source\PSoC4/CyLFClk.c **** 
3194:Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (CY_IP_SRSSV2) */  
3195:Generated_Source\PSoC4/CyLFClk.c **** 
3196:Generated_Source\PSoC4/CyLFClk.c ****         #if(CY_IP_WCO_WDT_EN && CY_IP_SRSSLT)
3197:Generated_Source\PSoC4/CyLFClk.c ****         if((counterNum < CY_SYS_TIMER2) && (0uL == CySysTimerGetClearOnMatch(counterNum)) &&
 2481              		.loc 1 3197 0
 2482 0008 0128     		cmp	r0, #1
 2483 000a 23D8     		bhi	.L220
 2484              		.loc 1 3197 0 is_stmt 0 discriminator 1
 2485 000c FFF7FEFF 		bl	CySysTimerGetClearOnMatch
 2486              	.LVL200:
 2487 0010 0028     		cmp	r0, #0
 2488 0012 1FD1     		bne	.L220
 2489              		.loc 1 3197 0 discriminator 2
 2490 0014 114B     		ldr	r3, .L225
 2491 0016 9D42     		cmp	r5, r3
 2492 0018 1CD8     		bhi	.L220
3198:Generated_Source\PSoC4/CyLFClk.c ****                                                         (match <= CY_SYS_UINT16_MAX_VAL))
3199:Generated_Source\PSoC4/CyLFClk.c ****         {
3200:Generated_Source\PSoC4/CyLFClk.c ****             if(delayType == CY_SYS_TIMER_WAIT)
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 115


 2493              		.loc 1 3200 0 is_stmt 1
 2494 001a 002E     		cmp	r6, #0
 2495 001c 0AD1     		bne	.L221
 2496              	.L222:
3201:Generated_Source\PSoC4/CyLFClk.c ****             {
3202:Generated_Source\PSoC4/CyLFClk.c ****                 do
3203:Generated_Source\PSoC4/CyLFClk.c ****                 {
3204:Generated_Source\PSoC4/CyLFClk.c ****                     tmpValue = CySysTimerGetCount(counterNum);
 2497              		.loc 1 3204 0 discriminator 1
 2498 001e 2000     		movs	r0, r4
 2499 0020 FFF7FEFF 		bl	CySysTimerGetCount
 2500              	.LVL201:
3205:Generated_Source\PSoC4/CyLFClk.c ****                 }while(tmpValue > match);
 2501              		.loc 1 3205 0 discriminator 1
 2502 0024 8542     		cmp	r5, r0
 2503 0026 FAD3     		bcc	.L222
 2504              	.L223:
3206:Generated_Source\PSoC4/CyLFClk.c **** 
3207:Generated_Source\PSoC4/CyLFClk.c ****                 do
3208:Generated_Source\PSoC4/CyLFClk.c ****                 {
3209:Generated_Source\PSoC4/CyLFClk.c ****                     tmpValue = CySysTimerGetCount(counterNum);
 2505              		.loc 1 3209 0 discriminator 1
 2506 0028 2000     		movs	r0, r4
 2507              	.LVL202:
 2508 002a FFF7FEFF 		bl	CySysTimerGetCount
 2509              	.LVL203:
3210:Generated_Source\PSoC4/CyLFClk.c ****                 }while(tmpValue < match);
 2510              		.loc 1 3210 0 discriminator 1
 2511 002e 8542     		cmp	r5, r0
 2512 0030 FAD8     		bhi	.L223
 2513 0032 12E0     		b	.L219
 2514              	.LVL204:
 2515              	.L221:
3211:Generated_Source\PSoC4/CyLFClk.c ****             }
3212:Generated_Source\PSoC4/CyLFClk.c ****             else
3213:Generated_Source\PSoC4/CyLFClk.c ****             {
3214:Generated_Source\PSoC4/CyLFClk.c ****                 tmpValue = counterTimerIntMaskTbl[counterNum];
 2516              		.loc 1 3214 0
 2517 0034 A200     		lsls	r2, r4, #2
 2518 0036 0A4B     		ldr	r3, .L225+4
 2519 0038 D658     		ldr	r6, [r2, r3]
 2520              	.LVL205:
3215:Generated_Source\PSoC4/CyLFClk.c ****                 CySysTimerSetMatch(counterNum, match);
 2521              		.loc 1 3215 0
 2522 003a 2900     		movs	r1, r5
 2523 003c 2000     		movs	r0, r4
 2524 003e FFF7FEFF 		bl	CySysTimerSetMatch
 2525              	.LVL206:
3216:Generated_Source\PSoC4/CyLFClk.c **** 
3217:Generated_Source\PSoC4/CyLFClk.c ****                 disableTimerServicedIsr  |= tmpValue;
 2526              		.loc 1 3217 0
 2527 0042 084A     		ldr	r2, .L225+8
 2528 0044 5369     		ldr	r3, [r2, #20]
 2529 0046 3343     		orrs	r3, r6
 2530 0048 5361     		str	r3, [r2, #20]
3218:Generated_Source\PSoC4/CyLFClk.c ****                 timerIsrMask |= tmpValue;
 2531              		.loc 1 3218 0
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 116


 2532 004a 074A     		ldr	r2, .L225+12
 2533 004c 1368     		ldr	r3, [r2]
 2534 004e 3343     		orrs	r3, r6
 2535 0050 1360     		str	r3, [r2]
 2536 0052 02E0     		b	.L219
 2537              	.LVL207:
 2538              	.L220:
3219:Generated_Source\PSoC4/CyLFClk.c ****             }
3220:Generated_Source\PSoC4/CyLFClk.c ****         }
3221:Generated_Source\PSoC4/CyLFClk.c ****         else
3222:Generated_Source\PSoC4/CyLFClk.c ****         {
3223:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
 2539              		.loc 1 3223 0 discriminator 1
 2540 0054 0020     		movs	r0, #0
 2541 0056 FFF7FEFF 		bl	CyHalt
 2542              	.LVL208:
 2543              	.L219:
3224:Generated_Source\PSoC4/CyLFClk.c ****         }
3225:Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (CY_IP_WCO_WDT_EN && CY_IP_SRSSLT) */
3226:Generated_Source\PSoC4/CyLFClk.c ****     }
 2544              		.loc 1 3226 0
 2545              		@ sp needed
 2546              	.LVL209:
 2547              	.LVL210:
 2548 005a 70BD     		pop	{r4, r5, r6, pc}
 2549              	.L226:
 2550              		.align	2
 2551              	.L225:
 2552 005c FFFF0000 		.word	65535
 2553 0060 00000000 		.word	.LANCHOR1
 2554 0064 00000000 		.word	.LANCHOR0
 2555 0068 00000000 		.word	.LANCHOR2
 2556              		.cfi_endproc
 2557              	.LFE50:
 2558              		.size	CySysTimerDelayUntilMatch, .-CySysTimerDelayUntilMatch
 2559              		.section	.text.CySysTimerDelay,"ax",%progbits
 2560              		.align	2
 2561              		.global	CySysTimerDelay
 2562              		.code	16
 2563              		.thumb_func
 2564              		.type	CySysTimerDelay, %function
 2565              	CySysTimerDelay:
 2566              	.LFB49:
3032:Generated_Source\PSoC4/CyLFClk.c ****         uint32 regValue;
 2567              		.loc 1 3032 0
 2568              		.cfi_startproc
 2569              		@ args = 0, pretend = 0, frame = 0
 2570              		@ frame_needed = 0, uses_anonymous_args = 0
 2571              	.LVL211:
 2572 0000 70B5     		push	{r4, r5, r6, lr}
 2573              		.cfi_def_cfa_offset 16
 2574              		.cfi_offset 4, -16
 2575              		.cfi_offset 5, -12
 2576              		.cfi_offset 6, -8
 2577              		.cfi_offset 14, -4
 2578 0002 0400     		movs	r4, r0
 2579 0004 0E00     		movs	r6, r1
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 117


 2580 0006 1500     		movs	r5, r2
3052:Generated_Source\PSoC4/CyLFClk.c ****                                                             (delay <= CY_SYS_UINT16_MAX_VAL))
 2581              		.loc 1 3052 0
 2582 0008 0128     		cmp	r0, #1
 2583 000a 11D8     		bhi	.L228
3052:Generated_Source\PSoC4/CyLFClk.c ****                                                             (delay <= CY_SYS_UINT16_MAX_VAL))
 2584              		.loc 1 3052 0 is_stmt 0 discriminator 1
 2585 000c FFF7FEFF 		bl	CySysTimerGetClearOnMatch
 2586              	.LVL212:
 2587 0010 0028     		cmp	r0, #0
 2588 0012 0DD1     		bne	.L228
3052:Generated_Source\PSoC4/CyLFClk.c ****                                                             (delay <= CY_SYS_UINT16_MAX_VAL))
 2589              		.loc 1 3052 0 discriminator 2
 2590 0014 084B     		ldr	r3, .L230
 2591 0016 9D42     		cmp	r5, r3
 2592 0018 0AD8     		bhi	.L228
3055:Generated_Source\PSoC4/CyLFClk.c ****                 matchValue = (regValue + delay) & (uint32)CY_SYS_UINT16_MAX_VAL;
 2593              		.loc 1 3055 0 is_stmt 1
 2594 001a 2000     		movs	r0, r4
 2595 001c FFF7FEFF 		bl	CySysTimerGetCount
 2596              	.LVL213:
3056:Generated_Source\PSoC4/CyLFClk.c **** 
 2597              		.loc 1 3056 0
 2598 0020 2A18     		adds	r2, r5, r0
 2599 0022 1204     		lsls	r2, r2, #16
 2600 0024 120C     		lsrs	r2, r2, #16
 2601              	.LVL214:
3058:Generated_Source\PSoC4/CyLFClk.c ****             }
 2602              		.loc 1 3058 0
 2603 0026 3100     		movs	r1, r6
 2604 0028 2000     		movs	r0, r4
 2605              	.LVL215:
 2606 002a FFF7FEFF 		bl	CySysTimerDelayUntilMatch
 2607              	.LVL216:
 2608 002e 02E0     		b	.L227
 2609              	.L228:
3062:Generated_Source\PSoC4/CyLFClk.c ****             }
 2610              		.loc 1 3062 0 discriminator 1
 2611 0030 0020     		movs	r0, #0
 2612 0032 FFF7FEFF 		bl	CyHalt
 2613              	.LVL217:
 2614              	.L227:
3065:Generated_Source\PSoC4/CyLFClk.c **** 
 2615              		.loc 1 3065 0
 2616              		@ sp needed
 2617              	.LVL218:
 2618              	.LVL219:
 2619 0036 70BD     		pop	{r4, r5, r6, pc}
 2620              	.L231:
 2621              		.align	2
 2622              	.L230:
 2623 0038 FFFF0000 		.word	65535
 2624              		.cfi_endproc
 2625              	.LFE49:
 2626              		.size	CySysTimerDelay, .-CySysTimerDelay
 2627              		.section	.rodata
 2628              		.align	2
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 118


 2629              		.set	.LANCHOR1,. + 0
 2630              		.type	counterTimerIntMaskTbl, %object
 2631              		.size	counterTimerIntMaskTbl, 12
 2632              	counterTimerIntMaskTbl:
 2633 0000 04000000 		.word	4
 2634 0004 00040000 		.word	1024
 2635 0008 00000400 		.word	262144
 2636              		.data
 2637              		.align	2
 2638              		.set	.LANCHOR2,. + 0
 2639              		.type	timerIsrMask, %object
 2640              		.size	timerIsrMask, 4
 2641              	timerIsrMask:
 2642 0000 04040400 		.word	263172
 2643              		.bss
 2644              		.align	2
 2645              		.set	.LANCHOR0,. + 0
 2646              		.type	compensateRunningStatus.4897, %object
 2647              		.size	compensateRunningStatus.4897, 4
 2648              	compensateRunningStatus.4897:
 2649 0000 00000000 		.space	4
 2650              		.type	cySysWdtCallback, %object
 2651              		.size	cySysWdtCallback, 4
 2652              	cySysWdtCallback:
 2653 0004 00000000 		.space	4
 2654              		.type	cySysTimerCallback, %object
 2655              		.size	cySysTimerCallback, 12
 2656              	cySysTimerCallback:
 2657 0008 00000000 		.space	12
 2657      00000000 
 2657      00000000 
 2658              		.type	disableTimerServicedIsr, %object
 2659              		.size	disableTimerServicedIsr, 4
 2660              	disableTimerServicedIsr:
 2661 0014 00000000 		.space	4
 2662              		.text
 2663              	.Letext0:
 2664              		.file 3 "Generated_Source\\PSoC4\\cytypes.h"
 2665              		.file 4 "Generated_Source\\PSoC4\\CyLib.h"
 2666              		.section	.debug_info,"",%progbits
 2667              	.Ldebug_info0:
 2668 0000 020D0000 		.4byte	0xd02
 2669 0004 0400     		.2byte	0x4
 2670 0006 00000000 		.4byte	.Ldebug_abbrev0
 2671 000a 04       		.byte	0x4
 2672 000b 01       		.uleb128 0x1
 2673 000c 8B060000 		.4byte	.LASF113
 2674 0010 0C       		.byte	0xc
 2675 0011 30060000 		.4byte	.LASF114
 2676 0015 F4070000 		.4byte	.LASF115
 2677 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2678 001d 00000000 		.4byte	0
 2679 0021 00000000 		.4byte	.Ldebug_line0
 2680 0025 02       		.uleb128 0x2
 2681 0026 01       		.byte	0x1
 2682 0027 06       		.byte	0x6
 2683 0028 E9000000 		.4byte	.LASF0
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 119


 2684 002c 02       		.uleb128 0x2
 2685 002d 01       		.byte	0x1
 2686 002e 08       		.byte	0x8
 2687 002f 75050000 		.4byte	.LASF1
 2688 0033 02       		.uleb128 0x2
 2689 0034 02       		.byte	0x2
 2690 0035 05       		.byte	0x5
 2691 0036 A1050000 		.4byte	.LASF2
 2692 003a 02       		.uleb128 0x2
 2693 003b 02       		.byte	0x2
 2694 003c 07       		.byte	0x7
 2695 003d 53030000 		.4byte	.LASF3
 2696 0041 02       		.uleb128 0x2
 2697 0042 04       		.byte	0x4
 2698 0043 05       		.byte	0x5
 2699 0044 6A010000 		.4byte	.LASF4
 2700 0048 02       		.uleb128 0x2
 2701 0049 04       		.byte	0x4
 2702 004a 07       		.byte	0x7
 2703 004b 09030000 		.4byte	.LASF5
 2704 004f 02       		.uleb128 0x2
 2705 0050 08       		.byte	0x8
 2706 0051 05       		.byte	0x5
 2707 0052 DB000000 		.4byte	.LASF6
 2708 0056 02       		.uleb128 0x2
 2709 0057 08       		.byte	0x8
 2710 0058 07       		.byte	0x7
 2711 0059 6F000000 		.4byte	.LASF7
 2712 005d 03       		.uleb128 0x3
 2713 005e 04       		.byte	0x4
 2714 005f 05       		.byte	0x5
 2715 0060 696E7400 		.ascii	"int\000"
 2716 0064 02       		.uleb128 0x2
 2717 0065 04       		.byte	0x4
 2718 0066 07       		.byte	0x7
 2719 0067 B0020000 		.4byte	.LASF8
 2720 006b 04       		.uleb128 0x4
 2721 006c 85010000 		.4byte	.LASF9
 2722 0070 03       		.byte	0x3
 2723 0071 F701     		.2byte	0x1f7
 2724 0073 2C000000 		.4byte	0x2c
 2725 0077 04       		.uleb128 0x4
 2726 0078 00000000 		.4byte	.LASF10
 2727 007c 03       		.byte	0x3
 2728 007d F801     		.2byte	0x1f8
 2729 007f 3A000000 		.4byte	0x3a
 2730 0083 04       		.uleb128 0x4
 2731 0084 F7010000 		.4byte	.LASF11
 2732 0088 03       		.byte	0x3
 2733 0089 F901     		.2byte	0x1f9
 2734 008b 48000000 		.4byte	0x48
 2735 008f 02       		.uleb128 0x2
 2736 0090 04       		.byte	0x4
 2737 0091 04       		.byte	0x4
 2738 0092 09050000 		.4byte	.LASF12
 2739 0096 02       		.uleb128 0x2
 2740 0097 08       		.byte	0x8
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 120


 2741 0098 04       		.byte	0x4
 2742 0099 92010000 		.4byte	.LASF13
 2743 009d 02       		.uleb128 0x2
 2744 009e 01       		.byte	0x1
 2745 009f 08       		.byte	0x8
 2746 00a0 35070000 		.4byte	.LASF14
 2747 00a4 04       		.uleb128 0x4
 2748 00a5 7A080000 		.4byte	.LASF15
 2749 00a9 03       		.byte	0x3
 2750 00aa 9902     		.2byte	0x299
 2751 00ac 48000000 		.4byte	0x48
 2752 00b0 04       		.uleb128 0x4
 2753 00b1 FE030000 		.4byte	.LASF16
 2754 00b5 03       		.byte	0x3
 2755 00b6 A302     		.2byte	0x2a3
 2756 00b8 BC000000 		.4byte	0xbc
 2757 00bc 05       		.uleb128 0x5
 2758 00bd 83000000 		.4byte	0x83
 2759 00c1 06       		.uleb128 0x6
 2760 00c2 04       		.byte	0x4
 2761 00c3 C7000000 		.4byte	0xc7
 2762 00c7 07       		.uleb128 0x7
 2763 00c8 08       		.uleb128 0x8
 2764 00c9 01       		.byte	0x1
 2765 00ca 2C000000 		.4byte	0x2c
 2766 00ce 02       		.byte	0x2
 2767 00cf 1A       		.byte	0x1a
 2768 00d0 E1000000 		.4byte	0xe1
 2769 00d4 09       		.uleb128 0x9
 2770 00d5 B4040000 		.4byte	.LASF17
 2771 00d9 00       		.byte	0
 2772 00da 09       		.uleb128 0x9
 2773 00db CA080000 		.4byte	.LASF18
 2774 00df 01       		.byte	0x1
 2775 00e0 00       		.byte	0
 2776 00e1 0A       		.uleb128 0xa
 2777 00e2 49010000 		.4byte	.LASF19
 2778 00e6 02       		.byte	0x2
 2779 00e7 1D       		.byte	0x1d
 2780 00e8 C8000000 		.4byte	0xc8
 2781 00ec 0A       		.uleb128 0xa
 2782 00ed 31010000 		.4byte	.LASF20
 2783 00f1 02       		.byte	0x2
 2784 00f2 58       		.byte	0x58
 2785 00f3 C1000000 		.4byte	0xc1
 2786 00f7 0A       		.uleb128 0xa
 2787 00f8 4C000000 		.4byte	.LASF21
 2788 00fc 02       		.byte	0x2
 2789 00fd 5C       		.byte	0x5c
 2790 00fe C1000000 		.4byte	0xc1
 2791 0102 02       		.uleb128 0x2
 2792 0103 08       		.byte	0x8
 2793 0104 04       		.byte	0x4
 2794 0105 69040000 		.4byte	.LASF22
 2795 0109 02       		.uleb128 0x2
 2796 010a 04       		.byte	0x4
 2797 010b 07       		.byte	0x7
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 121


 2798 010c 60040000 		.4byte	.LASF23
 2799 0110 0B       		.uleb128 0xb
 2800 0111 BF000000 		.4byte	.LASF116
 2801 0115 02       		.byte	0x2
 2802 0116 9202     		.2byte	0x292
 2803 0118 03       		.byte	0x3
 2804 0119 0C       		.uleb128 0xc
 2805 011a 1B040000 		.4byte	.LASF117
 2806 011e 01       		.byte	0x1
 2807 011f 8008     		.2byte	0x880
 2808 0121 83000000 		.4byte	0x83
 2809 0125 00000000 		.4byte	.LFB25
 2810 0129 10000000 		.4byte	.LFE25-.LFB25
 2811 012d 01       		.uleb128 0x1
 2812 012e 9C       		.byte	0x9c
 2813 012f 42010000 		.4byte	0x142
 2814 0133 0D       		.uleb128 0xd
 2815 0134 E2030000 		.4byte	.LASF30
 2816 0138 01       		.byte	0x1
 2817 0139 8208     		.2byte	0x882
 2818 013b 83000000 		.4byte	0x83
 2819 013f 01       		.uleb128 0x1
 2820 0140 50       		.byte	0x50
 2821 0141 00       		.byte	0
 2822 0142 0E       		.uleb128 0xe
 2823 0143 D1030000 		.4byte	.LASF24
 2824 0147 01       		.byte	0x1
 2825 0148 53       		.byte	0x53
 2826 0149 00000000 		.4byte	.LFB1
 2827 014d 14000000 		.4byte	.LFE1-.LFB1
 2828 0151 01       		.uleb128 0x1
 2829 0152 9C       		.byte	0x9c
 2830 0153 0E       		.uleb128 0xe
 2831 0154 AB010000 		.4byte	.LASF25
 2832 0158 01       		.byte	0x1
 2833 0159 6C       		.byte	0x6c
 2834 015a 00000000 		.4byte	.LFB2
 2835 015e 10000000 		.4byte	.LFE2-.LFB2
 2836 0162 01       		.uleb128 0x1
 2837 0163 9C       		.byte	0x9c
 2838 0164 0E       		.uleb128 0xe
 2839 0165 FF050000 		.4byte	.LASF26
 2840 0169 01       		.byte	0x1
 2841 016a A8       		.byte	0xa8
 2842 016b 00000000 		.4byte	.LFB3
 2843 016f 34000000 		.4byte	.LFE3-.LFB3
 2844 0173 01       		.uleb128 0x1
 2845 0174 9C       		.byte	0x9c
 2846 0175 0E       		.uleb128 0xe
 2847 0176 FE010000 		.4byte	.LASF27
 2848 017a 01       		.byte	0x1
 2849 017b C9       		.byte	0xc9
 2850 017c 00000000 		.4byte	.LFB4
 2851 0180 28000000 		.4byte	.LFE4-.LFB4
 2852 0184 01       		.uleb128 0x1
 2853 0185 9C       		.byte	0x9c
 2854 0186 0F       		.uleb128 0xf
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 122


 2855 0187 B4080000 		.4byte	.LASF38
 2856 018b 01       		.byte	0x1
 2857 018c 0B01     		.2byte	0x10b
 2858 018e A4000000 		.4byte	0xa4
 2859 0192 00000000 		.4byte	.LFB5
 2860 0196 0C010000 		.4byte	.LFE5-.LFB5
 2861 019a 01       		.uleb128 0x1
 2862 019b 9C       		.byte	0x9c
 2863 019c 13020000 		.4byte	0x213
 2864 01a0 10       		.uleb128 0x10
 2865 01a1 FC020000 		.4byte	.LASF28
 2866 01a5 01       		.byte	0x1
 2867 01a6 0B01     		.2byte	0x10b
 2868 01a8 83000000 		.4byte	0x83
 2869 01ac 00000000 		.4byte	.LLST0
 2870 01b0 10       		.uleb128 0x10
 2871 01b1 99010000 		.4byte	.LASF29
 2872 01b5 01       		.byte	0x1
 2873 01b6 0B01     		.2byte	0x10b
 2874 01b8 13020000 		.4byte	0x213
 2875 01bc E9000000 		.4byte	.LLST1
 2876 01c0 11       		.uleb128 0x11
 2877 01c1 BB010000 		.4byte	.LASF31
 2878 01c5 01       		.byte	0x1
 2879 01c6 0D01     		.2byte	0x10d
 2880 01c8 83000000 		.4byte	0x83
 2881 01cc 2B010000 		.4byte	.LLST2
 2882 01d0 11       		.uleb128 0x11
 2883 01d1 92070000 		.4byte	.LASF32
 2884 01d5 01       		.byte	0x1
 2885 01d6 0E01     		.2byte	0x10e
 2886 01d8 83000000 		.4byte	0x83
 2887 01dc 55010000 		.4byte	.LLST3
 2888 01e0 0D       		.uleb128 0xd
 2889 01e1 83050000 		.4byte	.LASF33
 2890 01e5 01       		.byte	0x1
 2891 01e6 0F01     		.2byte	0x10f
 2892 01e8 83000000 		.4byte	0x83
 2893 01ec 05       		.uleb128 0x5
 2894 01ed 03       		.byte	0x3
 2895 01ee 00000000 		.4byte	compensateRunningStatus.4897
 2896 01f2 11       		.uleb128 0x11
 2897 01f3 C6040000 		.4byte	.LASF34
 2898 01f7 01       		.byte	0x1
 2899 01f8 1001     		.2byte	0x110
 2900 01fa 83000000 		.4byte	0x83
 2901 01fe 89010000 		.4byte	.LLST4
 2902 0202 11       		.uleb128 0x11
 2903 0203 32040000 		.4byte	.LASF35
 2904 0207 01       		.byte	0x1
 2905 0208 1101     		.2byte	0x111
 2906 020a A4000000 		.4byte	0xa4
 2907 020e A7010000 		.4byte	.LLST5
 2908 0212 00       		.byte	0
 2909 0213 06       		.uleb128 0x6
 2910 0214 04       		.byte	0x4
 2911 0215 83000000 		.4byte	0x83
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 123


 2912 0219 12       		.uleb128 0x12
 2913 021a A7070000 		.4byte	.LASF36
 2914 021e 01       		.byte	0x1
 2915 021f 0303     		.2byte	0x303
 2916 0221 00000000 		.4byte	.LFB6
 2917 0225 40000000 		.4byte	.LFE6-.LFB6
 2918 0229 01       		.uleb128 0x1
 2919 022a 9C       		.byte	0x9c
 2920 022b 40020000 		.4byte	0x240
 2921 022f 13       		.uleb128 0x13
 2922 0230 10010000 		.4byte	0x110
 2923 0234 02000000 		.4byte	.LBB6
 2924 0238 2A000000 		.4byte	.LBE6-.LBB6
 2925 023c 01       		.byte	0x1
 2926 023d 0503     		.2byte	0x305
 2927 023f 00       		.byte	0
 2928 0240 14       		.uleb128 0x14
 2929 0241 98000000 		.4byte	.LASF44
 2930 0245 01       		.byte	0x1
 2931 0246 3803     		.2byte	0x338
 2932 0248 83000000 		.4byte	0x83
 2933 024c 00000000 		.4byte	.LFB8
 2934 0250 14000000 		.4byte	.LFE8-.LFB8
 2935 0254 01       		.uleb128 0x1
 2936 0255 9C       		.byte	0x9c
 2937 0256 12       		.uleb128 0x12
 2938 0257 7B060000 		.4byte	.LASF37
 2939 025b 01       		.byte	0x1
 2940 025c 1503     		.2byte	0x315
 2941 025e 00000000 		.4byte	.LFB7
 2942 0262 1C000000 		.4byte	.LFE7-.LFB7
 2943 0266 01       		.uleb128 0x1
 2944 0267 9C       		.byte	0x9c
 2945 0268 76020000 		.4byte	0x276
 2946 026c 15       		.uleb128 0x15
 2947 026d 06000000 		.4byte	.LVL38
 2948 0271 40020000 		.4byte	0x240
 2949 0275 00       		.byte	0
 2950 0276 16       		.uleb128 0x16
 2951 0277 1D070000 		.4byte	.LASF39
 2952 027b 01       		.byte	0x1
 2953 027c 5303     		.2byte	0x353
 2954 027e 83000000 		.4byte	0x83
 2955 0282 00000000 		.4byte	.LFB9
 2956 0286 4C000000 		.4byte	.LFE9-.LFB9
 2957 028a 01       		.uleb128 0x1
 2958 028b 9C       		.byte	0x9c
 2959 028c D0020000 		.4byte	0x2d0
 2960 0290 10       		.uleb128 0x10
 2961 0291 3A070000 		.4byte	.LASF40
 2962 0295 01       		.byte	0x1
 2963 0296 5303     		.2byte	0x353
 2964 0298 83000000 		.4byte	0x83
 2965 029c D2010000 		.4byte	.LLST6
 2966 02a0 11       		.uleb128 0x11
 2967 02a1 EE030000 		.4byte	.LASF41
 2968 02a5 01       		.byte	0x1
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 124


 2969 02a6 5503     		.2byte	0x355
 2970 02a8 83000000 		.4byte	0x83
 2971 02ac 32020000 		.4byte	.LLST7
 2972 02b0 13       		.uleb128 0x13
 2973 02b1 10010000 		.4byte	0x110
 2974 02b5 0E000000 		.4byte	.LBB8
 2975 02b9 2C000000 		.4byte	.LBE8-.LBB8
 2976 02bd 01       		.byte	0x1
 2977 02be 5C03     		.2byte	0x35c
 2978 02c0 17       		.uleb128 0x17
 2979 02c1 40000000 		.4byte	.LVL47
 2980 02c5 D90C0000 		.4byte	0xcd9
 2981 02c9 18       		.uleb128 0x18
 2982 02ca 01       		.uleb128 0x1
 2983 02cb 50       		.byte	0x50
 2984 02cc 01       		.uleb128 0x1
 2985 02cd 30       		.byte	0x30
 2986 02ce 00       		.byte	0
 2987 02cf 00       		.byte	0
 2988 02d0 12       		.uleb128 0x12
 2989 02d1 46040000 		.4byte	.LASF42
 2990 02d5 01       		.byte	0x1
 2991 02d6 9603     		.2byte	0x396
 2992 02d8 00000000 		.4byte	.LFB10
 2993 02dc 2C000000 		.4byte	.LFE10-.LFB10
 2994 02e0 01       		.uleb128 0x1
 2995 02e1 9C       		.byte	0x9c
 2996 02e2 0F030000 		.4byte	0x30f
 2997 02e6 10       		.uleb128 0x10
 2998 02e7 7C010000 		.4byte	.LASF43
 2999 02eb 01       		.byte	0x1
 3000 02ec 9603     		.2byte	0x396
 3001 02ee 83000000 		.4byte	0x83
 3002 02f2 50020000 		.4byte	.LLST8
 3003 02f6 15       		.uleb128 0x15
 3004 02f7 08000000 		.4byte	.LVL50
 3005 02fb 40020000 		.4byte	0x240
 3006 02ff 17       		.uleb128 0x17
 3007 0300 26000000 		.4byte	.LVL53
 3008 0304 D90C0000 		.4byte	0xcd9
 3009 0308 18       		.uleb128 0x18
 3010 0309 01       		.uleb128 0x1
 3011 030a 50       		.byte	0x50
 3012 030b 01       		.uleb128 0x1
 3013 030c 30       		.byte	0x30
 3014 030d 00       		.byte	0
 3015 030e 00       		.byte	0
 3016 030f 14       		.uleb128 0x14
 3017 0310 78030000 		.4byte	.LASF45
 3018 0314 01       		.byte	0x1
 3019 0315 7E07     		.2byte	0x77e
 3020 0317 83000000 		.4byte	0x83
 3021 031b 00000000 		.4byte	.LFB11
 3022 031f 1C000000 		.4byte	.LFE11-.LFB11
 3023 0323 01       		.uleb128 0x1
 3024 0324 9C       		.byte	0x9c
 3025 0325 19       		.uleb128 0x19
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 125


 3026 0326 59020000 		.4byte	.LASF46
 3027 032a 01       		.byte	0x1
 3028 032b 9107     		.2byte	0x791
 3029 032d 00000000 		.4byte	.LFB12
 3030 0331 0C000000 		.4byte	.LFE12-.LFB12
 3031 0335 01       		.uleb128 0x1
 3032 0336 9C       		.byte	0x9c
 3033 0337 19       		.uleb128 0x19
 3034 0338 C3050000 		.4byte	.LASF47
 3035 033c 01       		.byte	0x1
 3036 033d A107     		.2byte	0x7a1
 3037 033f 00000000 		.4byte	.LFB13
 3038 0343 10000000 		.4byte	.LFE13-.LFB13
 3039 0347 01       		.uleb128 0x1
 3040 0348 9C       		.byte	0x9c
 3041 0349 12       		.uleb128 0x12
 3042 034a 33020000 		.4byte	.LASF48
 3043 034e 01       		.byte	0x1
 3044 034f B107     		.2byte	0x7b1
 3045 0351 00000000 		.4byte	.LFB14
 3046 0355 18000000 		.4byte	.LFE14-.LFB14
 3047 0359 01       		.uleb128 0x1
 3048 035a 9C       		.byte	0x9c
 3049 035b 70030000 		.4byte	0x370
 3050 035f 10       		.uleb128 0x10
 3051 0360 99040000 		.4byte	.LASF49
 3052 0364 01       		.byte	0x1
 3053 0365 B107     		.2byte	0x7b1
 3054 0367 83000000 		.4byte	0x83
 3055 036b 95020000 		.4byte	.LLST9
 3056 036f 00       		.byte	0
 3057 0370 14       		.uleb128 0x14
 3058 0371 75040000 		.4byte	.LASF50
 3059 0375 01       		.byte	0x1
 3060 0376 C107     		.2byte	0x7c1
 3061 0378 83000000 		.4byte	0x83
 3062 037c 00000000 		.4byte	.LFB15
 3063 0380 10000000 		.4byte	.LFE15-.LFB15
 3064 0384 01       		.uleb128 0x1
 3065 0385 9C       		.byte	0x9c
 3066 0386 14       		.uleb128 0x14
 3067 0387 3F070000 		.4byte	.LASF51
 3068 038b 01       		.byte	0x1
 3069 038c D007     		.2byte	0x7d0
 3070 038e 83000000 		.4byte	0x83
 3071 0392 00000000 		.4byte	.LFB16
 3072 0396 0C000000 		.4byte	.LFE16-.LFB16
 3073 039a 01       		.uleb128 0x1
 3074 039b 9C       		.byte	0x9c
 3075 039c 12       		.uleb128 0x12
 3076 039d DA020000 		.4byte	.LASF52
 3077 03a1 01       		.byte	0x1
 3078 03a2 E407     		.2byte	0x7e4
 3079 03a4 00000000 		.4byte	.LFB17
 3080 03a8 20000000 		.4byte	.LFE17-.LFB17
 3081 03ac 01       		.uleb128 0x1
 3082 03ad 9C       		.byte	0x9c
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 126


 3083 03ae C3030000 		.4byte	0x3c3
 3084 03b2 10       		.uleb128 0x10
 3085 03b3 41050000 		.4byte	.LASF53
 3086 03b7 01       		.byte	0x1
 3087 03b8 E407     		.2byte	0x7e4
 3088 03ba 83000000 		.4byte	0x83
 3089 03be D3020000 		.4byte	.LLST10
 3090 03c2 00       		.byte	0
 3091 03c3 14       		.uleb128 0x14
 3092 03c4 1B010000 		.4byte	.LASF54
 3093 03c8 01       		.byte	0x1
 3094 03c9 F607     		.2byte	0x7f6
 3095 03cb 83000000 		.4byte	0x83
 3096 03cf 00000000 		.4byte	.LFB18
 3097 03d3 10000000 		.4byte	.LFE18-.LFB18
 3098 03d7 01       		.uleb128 0x1
 3099 03d8 9C       		.byte	0x9c
 3100 03d9 19       		.uleb128 0x19
 3101 03da F2040000 		.4byte	.LASF55
 3102 03de 01       		.byte	0x1
 3103 03df 0708     		.2byte	0x807
 3104 03e1 00000000 		.4byte	.LFB19
 3105 03e5 10000000 		.4byte	.LFE19-.LFB19
 3106 03e9 01       		.uleb128 0x1
 3107 03ea 9C       		.byte	0x9c
 3108 03eb 19       		.uleb128 0x19
 3109 03ec 3D030000 		.4byte	.LASF56
 3110 03f0 01       		.byte	0x1
 3111 03f1 1608     		.2byte	0x816
 3112 03f3 00000000 		.4byte	.LFB20
 3113 03f7 10000000 		.4byte	.LFE20-.LFB20
 3114 03fb 01       		.uleb128 0x1
 3115 03fc 9C       		.byte	0x9c
 3116 03fd 19       		.uleb128 0x19
 3117 03fe 29050000 		.4byte	.LASF57
 3118 0402 01       		.byte	0x1
 3119 0403 2508     		.2byte	0x825
 3120 0405 00000000 		.4byte	.LFB21
 3121 0409 10000000 		.4byte	.LFE21-.LFB21
 3122 040d 01       		.uleb128 0x1
 3123 040e 9C       		.byte	0x9c
 3124 040f 16       		.uleb128 0x16
 3125 0410 68020000 		.4byte	.LASF58
 3126 0414 01       		.byte	0x1
 3127 0415 3708     		.2byte	0x837
 3128 0417 EC000000 		.4byte	0xec
 3129 041b 00000000 		.4byte	.LFB22
 3130 041f 10000000 		.4byte	.LFE22-.LFB22
 3131 0423 01       		.uleb128 0x1
 3132 0424 9C       		.byte	0x9c
 3133 0425 4A040000 		.4byte	0x44a
 3134 0429 10       		.uleb128 0x10
 3135 042a 03010000 		.4byte	.LASF59
 3136 042e 01       		.byte	0x1
 3137 042f 3708     		.2byte	0x837
 3138 0431 EC000000 		.4byte	0xec
 3139 0435 13030000 		.4byte	.LLST11
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 127


 3140 0439 11       		.uleb128 0x11
 3141 043a 26020000 		.4byte	.LASF60
 3142 043e 01       		.byte	0x1
 3143 043f 3908     		.2byte	0x839
 3144 0441 EC000000 		.4byte	0xec
 3145 0445 35030000 		.4byte	.LLST12
 3146 0449 00       		.byte	0
 3147 044a 14       		.uleb128 0x14
 3148 044b 91030000 		.4byte	.LASF61
 3149 044f 01       		.byte	0x1
 3150 0450 4C08     		.2byte	0x84c
 3151 0452 EC000000 		.4byte	0xec
 3152 0456 00000000 		.4byte	.LFB23
 3153 045a 0C000000 		.4byte	.LFE23-.LFB23
 3154 045e 01       		.uleb128 0x1
 3155 045f 9C       		.byte	0x9c
 3156 0460 1A       		.uleb128 0x1a
 3157 0461 C5030000 		.4byte	.LASF62
 3158 0465 01       		.byte	0x1
 3159 0466 6408     		.2byte	0x864
 3160 0468 00000000 		.4byte	.LFB24
 3161 046c 18000000 		.4byte	.LFE24-.LFB24
 3162 0470 01       		.uleb128 0x1
 3163 0471 9C       		.byte	0x9c
 3164 0472 80040000 		.4byte	0x480
 3165 0476 15       		.uleb128 0x15
 3166 0477 10000000 		.4byte	.LVL66
 3167 047b D9030000 		.4byte	0x3d9
 3168 047f 00       		.byte	0
 3169 0480 12       		.uleb128 0x12
 3170 0481 64060000 		.4byte	.LASF63
 3171 0485 01       		.byte	0x1
 3172 0486 A108     		.2byte	0x8a1
 3173 0488 00000000 		.4byte	.LFB26
 3174 048c 68000000 		.4byte	.LFE26-.LFB26
 3175 0490 01       		.uleb128 0x1
 3176 0491 9C       		.byte	0x9c
 3177 0492 DB040000 		.4byte	0x4db
 3178 0496 10       		.uleb128 0x10
 3179 0497 3F040000 		.4byte	.LASF64
 3180 049b 01       		.byte	0x1
 3181 049c A108     		.2byte	0x8a1
 3182 049e 83000000 		.4byte	0x83
 3183 04a2 54030000 		.4byte	.LLST13
 3184 04a6 11       		.uleb128 0x11
 3185 04a7 0C010000 		.4byte	.LASF65
 3186 04ab 01       		.byte	0x1
 3187 04ac A308     		.2byte	0x8a3
 3188 04ae 6B000000 		.4byte	0x6b
 3189 04b2 80030000 		.4byte	.LLST14
 3190 04b6 15       		.uleb128 0x15
 3191 04b7 08000000 		.4byte	.LVL68
 3192 04bb 19010000 		.4byte	0x119
 3193 04bf 15       		.uleb128 0x15
 3194 04c0 2A000000 		.4byte	.LVL69
 3195 04c4 E40C0000 		.4byte	0xce4
 3196 04c8 15       		.uleb128 0x15
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 128


 3197 04c9 2E000000 		.4byte	.LVL70
 3198 04cd EF0C0000 		.4byte	0xcef
 3199 04d1 15       		.uleb128 0x15
 3200 04d2 42000000 		.4byte	.LVL72
 3201 04d6 FA0C0000 		.4byte	0xcfa
 3202 04da 00       		.byte	0
 3203 04db 16       		.uleb128 0x16
 3204 04dc E4050000 		.4byte	.LASF66
 3205 04e0 01       		.byte	0x1
 3206 04e1 CD08     		.2byte	0x8cd
 3207 04e3 83000000 		.4byte	0x83
 3208 04e7 00000000 		.4byte	.LFB27
 3209 04eb 24000000 		.4byte	.LFE27-.LFB27
 3210 04ef 01       		.uleb128 0x1
 3211 04f0 9C       		.byte	0x9c
 3212 04f1 15050000 		.4byte	0x515
 3213 04f5 10       		.uleb128 0x10
 3214 04f6 2E000000 		.4byte	.LASF67
 3215 04fa 01       		.byte	0x1
 3216 04fb CD08     		.2byte	0x8cd
 3217 04fd 83000000 		.4byte	0x83
 3218 0501 93030000 		.4byte	.LLST15
 3219 0505 17       		.uleb128 0x17
 3220 0506 0E000000 		.4byte	.LVL75
 3221 050a D90C0000 		.4byte	0xcd9
 3222 050e 18       		.uleb128 0x18
 3223 050f 01       		.uleb128 0x1
 3224 0510 50       		.byte	0x50
 3225 0511 01       		.uleb128 0x1
 3226 0512 30       		.byte	0x30
 3227 0513 00       		.byte	0
 3228 0514 00       		.byte	0
 3229 0515 12       		.uleb128 0x12
 3230 0516 E0040000 		.4byte	.LASF68
 3231 051a 01       		.byte	0x1
 3232 051b EA08     		.2byte	0x8ea
 3233 051d 00000000 		.4byte	.LFB28
 3234 0521 40000000 		.4byte	.LFE28-.LFB28
 3235 0525 01       		.uleb128 0x1
 3236 0526 9C       		.byte	0x9c
 3237 0527 92050000 		.4byte	0x592
 3238 052b 10       		.uleb128 0x10
 3239 052c 2E000000 		.4byte	.LASF67
 3240 0530 01       		.byte	0x1
 3241 0531 EA08     		.2byte	0x8ea
 3242 0533 83000000 		.4byte	0x83
 3243 0537 BF030000 		.4byte	.LLST16
 3244 053b 10       		.uleb128 0x10
 3245 053c 3A070000 		.4byte	.LASF40
 3246 0540 01       		.byte	0x1
 3247 0541 EA08     		.2byte	0x8ea
 3248 0543 83000000 		.4byte	0x83
 3249 0547 EB030000 		.4byte	.LLST17
 3250 054b 11       		.uleb128 0x11
 3251 054c C2070000 		.4byte	.LASF69
 3252 0550 01       		.byte	0x1
 3253 0551 EC08     		.2byte	0x8ec
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 129


 3254 0553 83000000 		.4byte	0x83
 3255 0557 17040000 		.4byte	.LLST18
 3256 055b 1B       		.uleb128 0x1b
 3257 055c 10000000 		.4byte	.LVL79
 3258 0560 D90C0000 		.4byte	0xcd9
 3259 0564 6E050000 		.4byte	0x56e
 3260 0568 18       		.uleb128 0x18
 3261 0569 01       		.uleb128 0x1
 3262 056a 50       		.byte	0x50
 3263 056b 01       		.uleb128 0x1
 3264 056c 30       		.byte	0x30
 3265 056d 00       		.byte	0
 3266 056e 1B       		.uleb128 0x1b
 3267 056f 1A000000 		.4byte	.LVL80
 3268 0573 D90C0000 		.4byte	0xcd9
 3269 0577 81050000 		.4byte	0x581
 3270 057b 18       		.uleb128 0x18
 3271 057c 01       		.uleb128 0x1
 3272 057d 50       		.byte	0x50
 3273 057e 01       		.uleb128 0x1
 3274 057f 30       		.byte	0x30
 3275 0580 00       		.byte	0
 3276 0581 17       		.uleb128 0x17
 3277 0582 20000000 		.4byte	.LVL81
 3278 0586 DB040000 		.4byte	0x4db
 3279 058a 18       		.uleb128 0x18
 3280 058b 01       		.uleb128 0x1
 3281 058c 50       		.byte	0x50
 3282 058d 02       		.uleb128 0x2
 3283 058e 75       		.byte	0x75
 3284 058f 00       		.sleb128 0
 3285 0590 00       		.byte	0
 3286 0591 00       		.byte	0
 3287 0592 16       		.uleb128 0x16
 3288 0593 86000000 		.4byte	.LASF70
 3289 0597 01       		.byte	0x1
 3290 0598 0809     		.2byte	0x908
 3291 059a 83000000 		.4byte	0x83
 3292 059e 00000000 		.4byte	.LFB29
 3293 05a2 14000000 		.4byte	.LFE29-.LFB29
 3294 05a6 01       		.uleb128 0x1
 3295 05a7 9C       		.byte	0x9c
 3296 05a8 BD050000 		.4byte	0x5bd
 3297 05ac 10       		.uleb128 0x10
 3298 05ad 2E000000 		.4byte	.LASF67
 3299 05b1 01       		.byte	0x1
 3300 05b2 0809     		.2byte	0x908
 3301 05b4 83000000 		.4byte	0x83
 3302 05b8 35040000 		.4byte	.LLST19
 3303 05bc 00       		.byte	0
 3304 05bd 12       		.uleb128 0x12
 3305 05be DD010000 		.4byte	.LASF71
 3306 05c2 01       		.byte	0x1
 3307 05c3 2409     		.2byte	0x924
 3308 05c5 00000000 		.4byte	.LFB30
 3309 05c9 34000000 		.4byte	.LFE30-.LFB30
 3310 05cd 01       		.uleb128 0x1
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 130


 3311 05ce 9C       		.byte	0x9c
 3312 05cf 27060000 		.4byte	0x627
 3313 05d3 10       		.uleb128 0x10
 3314 05d4 2E000000 		.4byte	.LASF67
 3315 05d8 01       		.byte	0x1
 3316 05d9 2409     		.2byte	0x924
 3317 05db 83000000 		.4byte	0x83
 3318 05df 61040000 		.4byte	.LLST20
 3319 05e3 10       		.uleb128 0x10
 3320 05e4 8B010000 		.4byte	.LASF72
 3321 05e8 01       		.byte	0x1
 3322 05e9 2409     		.2byte	0x924
 3323 05eb 83000000 		.4byte	0x83
 3324 05ef 8D040000 		.4byte	.LLST21
 3325 05f3 11       		.uleb128 0x11
 3326 05f4 C2070000 		.4byte	.LASF69
 3327 05f8 01       		.byte	0x1
 3328 05f9 2609     		.2byte	0x926
 3329 05fb 83000000 		.4byte	0x83
 3330 05ff B9040000 		.4byte	.LLST22
 3331 0603 1B       		.uleb128 0x1b
 3332 0604 10000000 		.4byte	.LVL92
 3333 0608 D90C0000 		.4byte	0xcd9
 3334 060c 16060000 		.4byte	0x616
 3335 0610 18       		.uleb128 0x18
 3336 0611 01       		.uleb128 0x1
 3337 0612 50       		.byte	0x50
 3338 0613 01       		.uleb128 0x1
 3339 0614 30       		.byte	0x30
 3340 0615 00       		.byte	0
 3341 0616 17       		.uleb128 0x17
 3342 0617 16000000 		.4byte	.LVL93
 3343 061b DB040000 		.4byte	0x4db
 3344 061f 18       		.uleb128 0x18
 3345 0620 01       		.uleb128 0x1
 3346 0621 50       		.byte	0x50
 3347 0622 02       		.uleb128 0x2
 3348 0623 74       		.byte	0x74
 3349 0624 00       		.sleb128 0
 3350 0625 00       		.byte	0
 3351 0626 00       		.byte	0
 3352 0627 16       		.uleb128 0x16
 3353 0628 50070000 		.4byte	.LASF73
 3354 062c 01       		.byte	0x1
 3355 062d 4509     		.2byte	0x945
 3356 062f 83000000 		.4byte	0x83
 3357 0633 00000000 		.4byte	.LFB31
 3358 0637 24000000 		.4byte	.LFE31-.LFB31
 3359 063b 01       		.uleb128 0x1
 3360 063c 9C       		.byte	0x9c
 3361 063d 61060000 		.4byte	0x661
 3362 0641 10       		.uleb128 0x10
 3363 0642 2E000000 		.4byte	.LASF67
 3364 0646 01       		.byte	0x1
 3365 0647 4509     		.2byte	0x945
 3366 0649 83000000 		.4byte	0x83
 3367 064d D7040000 		.4byte	.LLST23
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 131


 3368 0651 17       		.uleb128 0x17
 3369 0652 0E000000 		.4byte	.LVL101
 3370 0656 D90C0000 		.4byte	0xcd9
 3371 065a 18       		.uleb128 0x18
 3372 065b 01       		.uleb128 0x1
 3373 065c 50       		.byte	0x50
 3374 065d 01       		.uleb128 0x1
 3375 065e 30       		.byte	0x30
 3376 065f 00       		.byte	0
 3377 0660 00       		.byte	0
 3378 0661 12       		.uleb128 0x12
 3379 0662 D3050000 		.4byte	.LASF74
 3380 0666 01       		.byte	0x1
 3381 0667 6809     		.2byte	0x968
 3382 0669 00000000 		.4byte	.LFB32
 3383 066d 3C000000 		.4byte	.LFE32-.LFB32
 3384 0671 01       		.uleb128 0x1
 3385 0672 9C       		.byte	0x9c
 3386 0673 BD060000 		.4byte	0x6bd
 3387 0677 10       		.uleb128 0x10
 3388 0678 85020000 		.4byte	.LASF75
 3389 067c 01       		.byte	0x1
 3390 067d 6809     		.2byte	0x968
 3391 067f 83000000 		.4byte	0x83
 3392 0683 03050000 		.4byte	.LLST24
 3393 0687 1B       		.uleb128 0x1b
 3394 0688 16000000 		.4byte	.LVL105
 3395 068c DB040000 		.4byte	0x4db
 3396 0690 9A060000 		.4byte	0x69a
 3397 0694 18       		.uleb128 0x18
 3398 0695 01       		.uleb128 0x1
 3399 0696 50       		.byte	0x50
 3400 0697 01       		.uleb128 0x1
 3401 0698 30       		.byte	0x30
 3402 0699 00       		.byte	0
 3403 069a 1B       		.uleb128 0x1b
 3404 069b 24000000 		.4byte	.LVL106
 3405 069f DB040000 		.4byte	0x4db
 3406 06a3 AD060000 		.4byte	0x6ad
 3407 06a7 18       		.uleb128 0x18
 3408 06a8 01       		.uleb128 0x1
 3409 06a9 50       		.byte	0x50
 3410 06aa 01       		.uleb128 0x1
 3411 06ab 31       		.byte	0x31
 3412 06ac 00       		.byte	0
 3413 06ad 17       		.uleb128 0x17
 3414 06ae 32000000 		.4byte	.LVL107
 3415 06b2 DB040000 		.4byte	0x4db
 3416 06b6 18       		.uleb128 0x18
 3417 06b7 01       		.uleb128 0x1
 3418 06b8 50       		.byte	0x50
 3419 06b9 01       		.uleb128 0x1
 3420 06ba 32       		.byte	0x32
 3421 06bb 00       		.byte	0
 3422 06bc 00       		.byte	0
 3423 06bd 12       		.uleb128 0x12
 3424 06be 66030000 		.4byte	.LASF76
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 132


 3425 06c2 01       		.byte	0x1
 3426 06c3 9509     		.2byte	0x995
 3427 06c5 00000000 		.4byte	.LFB33
 3428 06c9 3C000000 		.4byte	.LFE33-.LFB33
 3429 06cd 01       		.uleb128 0x1
 3430 06ce 9C       		.byte	0x9c
 3431 06cf 19070000 		.4byte	0x719
 3432 06d3 10       		.uleb128 0x10
 3433 06d4 85020000 		.4byte	.LASF75
 3434 06d8 01       		.byte	0x1
 3435 06d9 9509     		.2byte	0x995
 3436 06db 83000000 		.4byte	0x83
 3437 06df 2F050000 		.4byte	.LLST25
 3438 06e3 1B       		.uleb128 0x1b
 3439 06e4 16000000 		.4byte	.LVL111
 3440 06e8 DB040000 		.4byte	0x4db
 3441 06ec F6060000 		.4byte	0x6f6
 3442 06f0 18       		.uleb128 0x18
 3443 06f1 01       		.uleb128 0x1
 3444 06f2 50       		.byte	0x50
 3445 06f3 01       		.uleb128 0x1
 3446 06f4 30       		.byte	0x30
 3447 06f5 00       		.byte	0
 3448 06f6 1B       		.uleb128 0x1b
 3449 06f7 24000000 		.4byte	.LVL112
 3450 06fb DB040000 		.4byte	0x4db
 3451 06ff 09070000 		.4byte	0x709
 3452 0703 18       		.uleb128 0x18
 3453 0704 01       		.uleb128 0x1
 3454 0705 50       		.byte	0x50
 3455 0706 01       		.uleb128 0x1
 3456 0707 31       		.byte	0x31
 3457 0708 00       		.byte	0
 3458 0709 17       		.uleb128 0x17
 3459 070a 32000000 		.4byte	.LVL113
 3460 070e DB040000 		.4byte	0x4db
 3461 0712 18       		.uleb128 0x18
 3462 0713 01       		.uleb128 0x1
 3463 0714 50       		.byte	0x50
 3464 0715 01       		.uleb128 0x1
 3465 0716 32       		.byte	0x32
 3466 0717 00       		.byte	0
 3467 0718 00       		.byte	0
 3468 0719 12       		.uleb128 0x12
 3469 071a 44020000 		.4byte	.LASF77
 3470 071e 01       		.byte	0x1
 3471 071f D009     		.2byte	0x9d0
 3472 0721 00000000 		.4byte	.LFB34
 3473 0725 34000000 		.4byte	.LFE34-.LFB34
 3474 0729 01       		.uleb128 0x1
 3475 072a 9C       		.byte	0x9c
 3476 072b 93070000 		.4byte	0x793
 3477 072f 10       		.uleb128 0x10
 3478 0730 E8070000 		.4byte	.LASF78
 3479 0734 01       		.byte	0x1
 3480 0735 D009     		.2byte	0x9d0
 3481 0737 83000000 		.4byte	0x83
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 133


 3482 073b 5B050000 		.4byte	.LLST26
 3483 073f 11       		.uleb128 0x11
 3484 0740 C2070000 		.4byte	.LASF69
 3485 0744 01       		.byte	0x1
 3486 0745 D209     		.2byte	0x9d2
 3487 0747 83000000 		.4byte	0x83
 3488 074b 87050000 		.4byte	.LLST27
 3489 074f 0D       		.uleb128 0xd
 3490 0750 1B060000 		.4byte	.LASF79
 3491 0754 01       		.byte	0x1
 3492 0755 D309     		.2byte	0x9d3
 3493 0757 83000000 		.4byte	0x83
 3494 075b 01       		.uleb128 0x1
 3495 075c 50       		.byte	0x50
 3496 075d 1B       		.uleb128 0x1b
 3497 075e 0A000000 		.4byte	.LVL117
 3498 0762 DB040000 		.4byte	0x4db
 3499 0766 70070000 		.4byte	0x770
 3500 076a 18       		.uleb128 0x18
 3501 076b 01       		.uleb128 0x1
 3502 076c 50       		.byte	0x50
 3503 076d 01       		.uleb128 0x1
 3504 076e 30       		.byte	0x30
 3505 076f 00       		.byte	0
 3506 0770 1B       		.uleb128 0x1b
 3507 0771 12000000 		.4byte	.LVL118
 3508 0775 DB040000 		.4byte	0x4db
 3509 0779 83070000 		.4byte	0x783
 3510 077d 18       		.uleb128 0x18
 3511 077e 01       		.uleb128 0x1
 3512 077f 50       		.byte	0x50
 3513 0780 01       		.uleb128 0x1
 3514 0781 31       		.byte	0x31
 3515 0782 00       		.byte	0
 3516 0783 17       		.uleb128 0x17
 3517 0784 1A000000 		.4byte	.LVL119
 3518 0788 DB040000 		.4byte	0x4db
 3519 078c 18       		.uleb128 0x18
 3520 078d 01       		.uleb128 0x1
 3521 078e 50       		.byte	0x50
 3522 078f 01       		.uleb128 0x1
 3523 0790 32       		.byte	0x32
 3524 0791 00       		.byte	0
 3525 0792 00       		.byte	0
 3526 0793 14       		.uleb128 0x14
 3527 0794 9F040000 		.4byte	.LASF80
 3528 0798 01       		.byte	0x1
 3529 0799 F009     		.2byte	0x9f0
 3530 079b 83000000 		.4byte	0x83
 3531 079f 00000000 		.4byte	.LFB35
 3532 07a3 14000000 		.4byte	.LFE35-.LFB35
 3533 07a7 01       		.uleb128 0x1
 3534 07a8 9C       		.byte	0x9c
 3535 07a9 12       		.uleb128 0x12
 3536 07aa 51060000 		.4byte	.LASF81
 3537 07ae 01       		.byte	0x1
 3538 07af 030A     		.2byte	0xa03
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 134


 3539 07b1 00000000 		.4byte	.LFB36
 3540 07b5 54000000 		.4byte	.LFE36-.LFB36
 3541 07b9 01       		.uleb128 0x1
 3542 07ba 9C       		.byte	0x9c
 3543 07bb 15080000 		.4byte	0x815
 3544 07bf 10       		.uleb128 0x10
 3545 07c0 2E000000 		.4byte	.LASF67
 3546 07c4 01       		.byte	0x1
 3547 07c5 030A     		.2byte	0xa03
 3548 07c7 83000000 		.4byte	0x83
 3549 07cb B0050000 		.4byte	.LLST28
 3550 07cf 10       		.uleb128 0x10
 3551 07d0 99040000 		.4byte	.LASF49
 3552 07d4 01       		.byte	0x1
 3553 07d5 030A     		.2byte	0xa03
 3554 07d7 83000000 		.4byte	0x83
 3555 07db DC050000 		.4byte	.LLST29
 3556 07df 11       		.uleb128 0x11
 3557 07e0 73010000 		.4byte	.LASF82
 3558 07e4 01       		.byte	0x1
 3559 07e5 050A     		.2byte	0xa05
 3560 07e7 83000000 		.4byte	0x83
 3561 07eb 08060000 		.4byte	.LLST30
 3562 07ef 1B       		.uleb128 0x1b
 3563 07f0 10000000 		.4byte	.LVL127
 3564 07f4 D90C0000 		.4byte	0xcd9
 3565 07f8 02080000 		.4byte	0x802
 3566 07fc 18       		.uleb128 0x18
 3567 07fd 01       		.uleb128 0x1
 3568 07fe 50       		.byte	0x50
 3569 07ff 01       		.uleb128 0x1
 3570 0800 30       		.byte	0x30
 3571 0801 00       		.byte	0
 3572 0802 15       		.uleb128 0x15
 3573 0803 22000000 		.4byte	.LVL128
 3574 0807 E40C0000 		.4byte	0xce4
 3575 080b 15       		.uleb128 0x15
 3576 080c 46000000 		.4byte	.LVL134
 3577 0810 E40C0000 		.4byte	0xce4
 3578 0814 00       		.byte	0
 3579 0815 12       		.uleb128 0x12
 3580 0816 D1070000 		.4byte	.LASF83
 3581 081a 01       		.byte	0x1
 3582 081b 290A     		.2byte	0xa29
 3583 081d 00000000 		.4byte	.LFB37
 3584 0821 30000000 		.4byte	.LFE37-.LFB37
 3585 0825 01       		.uleb128 0x1
 3586 0826 9C       		.byte	0x9c
 3587 0827 5B080000 		.4byte	0x85b
 3588 082b 10       		.uleb128 0x10
 3589 082c 65010000 		.4byte	.LASF84
 3590 0830 01       		.byte	0x1
 3591 0831 290A     		.2byte	0xa29
 3592 0833 83000000 		.4byte	0x83
 3593 0837 1B060000 		.4byte	.LLST31
 3594 083b 11       		.uleb128 0x11
 3595 083c C2070000 		.4byte	.LASF69
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 135


 3596 0840 01       		.byte	0x1
 3597 0841 2B0A     		.2byte	0xa2b
 3598 0843 83000000 		.4byte	0x83
 3599 0847 47060000 		.4byte	.LLST32
 3600 084b 17       		.uleb128 0x17
 3601 084c 0A000000 		.4byte	.LVL137
 3602 0850 DB040000 		.4byte	0x4db
 3603 0854 18       		.uleb128 0x18
 3604 0855 01       		.uleb128 0x1
 3605 0856 50       		.byte	0x50
 3606 0857 01       		.uleb128 0x1
 3607 0858 32       		.byte	0x32
 3608 0859 00       		.byte	0
 3609 085a 00       		.byte	0
 3610 085b 14       		.uleb128 0x14
 3611 085c AE030000 		.4byte	.LASF85
 3612 0860 01       		.byte	0x1
 3613 0861 400A     		.2byte	0xa40
 3614 0863 83000000 		.4byte	0x83
 3615 0867 00000000 		.4byte	.LFB38
 3616 086b 10000000 		.4byte	.LFE38-.LFB38
 3617 086f 01       		.uleb128 0x1
 3618 0870 9C       		.byte	0x9c
 3619 0871 16       		.uleb128 0x16
 3620 0872 39000000 		.4byte	.LASF86
 3621 0876 01       		.byte	0x1
 3622 0877 520A     		.2byte	0xa52
 3623 0879 83000000 		.4byte	0x83
 3624 087d 00000000 		.4byte	.LFB39
 3625 0881 20000000 		.4byte	.LFE39-.LFB39
 3626 0885 01       		.uleb128 0x1
 3627 0886 9C       		.byte	0x9c
 3628 0887 AB080000 		.4byte	0x8ab
 3629 088b 10       		.uleb128 0x10
 3630 088c 2E000000 		.4byte	.LASF67
 3631 0890 01       		.byte	0x1
 3632 0891 520A     		.2byte	0xa52
 3633 0893 83000000 		.4byte	0x83
 3634 0897 70060000 		.4byte	.LLST33
 3635 089b 17       		.uleb128 0x17
 3636 089c 0E000000 		.4byte	.LVL145
 3637 08a0 D90C0000 		.4byte	0xcd9
 3638 08a4 18       		.uleb128 0x18
 3639 08a5 01       		.uleb128 0x1
 3640 08a6 50       		.byte	0x50
 3641 08a7 01       		.uleb128 0x1
 3642 08a8 30       		.byte	0x30
 3643 08a9 00       		.byte	0
 3644 08aa 00       		.byte	0
 3645 08ab 16       		.uleb128 0x16
 3646 08ac 86040000 		.4byte	.LASF87
 3647 08b0 01       		.byte	0x1
 3648 08b1 680A     		.2byte	0xa68
 3649 08b3 83000000 		.4byte	0x83
 3650 08b7 00000000 		.4byte	.LFB40
 3651 08bb 3C000000 		.4byte	.LFE40-.LFB40
 3652 08bf 01       		.uleb128 0x1
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 136


 3653 08c0 9C       		.byte	0x9c
 3654 08c1 F5080000 		.4byte	0x8f5
 3655 08c5 10       		.uleb128 0x10
 3656 08c6 2E000000 		.4byte	.LASF67
 3657 08ca 01       		.byte	0x1
 3658 08cb 680A     		.2byte	0xa68
 3659 08cd 83000000 		.4byte	0x83
 3660 08d1 9C060000 		.4byte	.LLST34
 3661 08d5 11       		.uleb128 0x11
 3662 08d6 73010000 		.4byte	.LASF82
 3663 08da 01       		.byte	0x1
 3664 08db 6A0A     		.2byte	0xa6a
 3665 08dd 83000000 		.4byte	0x83
 3666 08e1 08070000 		.4byte	.LLST35
 3667 08e5 17       		.uleb128 0x17
 3668 08e6 2E000000 		.4byte	.LVL158
 3669 08ea D90C0000 		.4byte	0xcd9
 3670 08ee 18       		.uleb128 0x18
 3671 08ef 01       		.uleb128 0x1
 3672 08f0 50       		.byte	0x50
 3673 08f1 01       		.uleb128 0x1
 3674 08f2 30       		.byte	0x30
 3675 08f3 00       		.byte	0
 3676 08f4 00       		.byte	0
 3677 08f5 14       		.uleb128 0x14
 3678 08f6 BD020000 		.4byte	.LASF88
 3679 08fa 01       		.byte	0x1
 3680 08fb 940A     		.2byte	0xa94
 3681 08fd 83000000 		.4byte	0x83
 3682 0901 00000000 		.4byte	.LFB41
 3683 0905 14000000 		.4byte	.LFE41-.LFB41
 3684 0909 01       		.uleb128 0x1
 3685 090a 9C       		.byte	0x9c
 3686 090b 12       		.uleb128 0x12
 3687 090c 83080000 		.4byte	.LASF89
 3688 0910 01       		.byte	0x1
 3689 0911 A90A     		.2byte	0xaa9
 3690 0913 00000000 		.4byte	.LFB42
 3691 0917 2C000000 		.4byte	.LFE42-.LFB42
 3692 091b 01       		.uleb128 0x1
 3693 091c 9C       		.byte	0x9c
 3694 091d 54090000 		.4byte	0x954
 3695 0921 10       		.uleb128 0x10
 3696 0922 85020000 		.4byte	.LASF75
 3697 0926 01       		.byte	0x1
 3698 0927 A90A     		.2byte	0xaa9
 3699 0929 83000000 		.4byte	0x83
 3700 092d 6C070000 		.4byte	.LLST36
 3701 0931 11       		.uleb128 0x11
 3702 0932 0C010000 		.4byte	.LASF65
 3703 0936 01       		.byte	0x1
 3704 0937 AB0A     		.2byte	0xaab
 3705 0939 6B000000 		.4byte	0x6b
 3706 093d 9E070000 		.4byte	.LLST37
 3707 0941 15       		.uleb128 0x15
 3708 0942 08000000 		.4byte	.LVL161
 3709 0946 EF0C0000 		.4byte	0xcef
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 137


 3710 094a 15       		.uleb128 0x15
 3711 094b 1E000000 		.4byte	.LVL163
 3712 094f FA0C0000 		.4byte	0xcfa
 3713 0953 00       		.byte	0
 3714 0954 16       		.uleb128 0x16
 3715 0955 73070000 		.4byte	.LASF90
 3716 0959 01       		.byte	0x1
 3717 095a D00A     		.2byte	0xad0
 3718 095c F7000000 		.4byte	0xf7
 3719 0960 00000000 		.4byte	.LFB43
 3720 0964 20000000 		.4byte	.LFE43-.LFB43
 3721 0968 01       		.uleb128 0x1
 3722 0969 9C       		.byte	0x9c
 3723 096a AE090000 		.4byte	0x9ae
 3724 096e 10       		.uleb128 0x10
 3725 096f 2E000000 		.4byte	.LASF67
 3726 0973 01       		.byte	0x1
 3727 0974 D00A     		.2byte	0xad0
 3728 0976 83000000 		.4byte	0x83
 3729 097a B1070000 		.4byte	.LLST38
 3730 097e 10       		.uleb128 0x10
 3731 097f 03010000 		.4byte	.LASF59
 3732 0983 01       		.byte	0x1
 3733 0984 D00A     		.2byte	0xad0
 3734 0986 F7000000 		.4byte	0xf7
 3735 098a EB070000 		.4byte	.LLST39
 3736 098e 11       		.uleb128 0x11
 3737 098f 26020000 		.4byte	.LASF60
 3738 0993 01       		.byte	0x1
 3739 0994 D20A     		.2byte	0xad2
 3740 0996 F7000000 		.4byte	0xf7
 3741 099a 0C080000 		.4byte	.LLST40
 3742 099e 17       		.uleb128 0x17
 3743 099f 18000000 		.4byte	.LVL171
 3744 09a3 D90C0000 		.4byte	0xcd9
 3745 09a7 18       		.uleb128 0x18
 3746 09a8 01       		.uleb128 0x1
 3747 09a9 50       		.byte	0x50
 3748 09aa 01       		.uleb128 0x1
 3749 09ab 30       		.byte	0x30
 3750 09ac 00       		.byte	0
 3751 09ad 00       		.byte	0
 3752 09ae 16       		.uleb128 0x16
 3753 09af 91020000 		.4byte	.LASF91
 3754 09b3 01       		.byte	0x1
 3755 09b4 F00A     		.2byte	0xaf0
 3756 09b6 F7000000 		.4byte	0xf7
 3757 09ba 00000000 		.4byte	.LFB44
 3758 09be 20000000 		.4byte	.LFE44-.LFB44
 3759 09c2 01       		.uleb128 0x1
 3760 09c3 9C       		.byte	0x9c
 3761 09c4 F8090000 		.4byte	0x9f8
 3762 09c8 10       		.uleb128 0x10
 3763 09c9 2E000000 		.4byte	.LASF67
 3764 09cd 01       		.byte	0x1
 3765 09ce F00A     		.2byte	0xaf0
 3766 09d0 83000000 		.4byte	0x83
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 138


 3767 09d4 42080000 		.4byte	.LLST41
 3768 09d8 11       		.uleb128 0x11
 3769 09d9 F0020000 		.4byte	.LASF92
 3770 09dd 01       		.byte	0x1
 3771 09de F20A     		.2byte	0xaf2
 3772 09e0 F7000000 		.4byte	0xf7
 3773 09e4 7C080000 		.4byte	.LLST42
 3774 09e8 17       		.uleb128 0x17
 3775 09e9 16000000 		.4byte	.LVL179
 3776 09ed D90C0000 		.4byte	0xcd9
 3777 09f1 18       		.uleb128 0x18
 3778 09f2 01       		.uleb128 0x1
 3779 09f3 50       		.byte	0x50
 3780 09f4 01       		.uleb128 0x1
 3781 09f5 30       		.byte	0x30
 3782 09f6 00       		.byte	0
 3783 09f7 00       		.byte	0
 3784 09f8 12       		.uleb128 0x12
 3785 09f9 AB000000 		.4byte	.LASF93
 3786 09fd 01       		.byte	0x1
 3787 09fe 0D0B     		.2byte	0xb0d
 3788 0a00 00000000 		.4byte	.LFB45
 3789 0a04 34000000 		.4byte	.LFE45-.LFB45
 3790 0a08 01       		.uleb128 0x1
 3791 0a09 9C       		.byte	0x9c
 3792 0a0a 2E0A0000 		.4byte	0xa2e
 3793 0a0e 10       		.uleb128 0x10
 3794 0a0f 2E000000 		.4byte	.LASF67
 3795 0a13 01       		.byte	0x1
 3796 0a14 0D0B     		.2byte	0xb0d
 3797 0a16 83000000 		.4byte	0x83
 3798 0a1a B2080000 		.4byte	.LLST43
 3799 0a1e 17       		.uleb128 0x17
 3800 0a1f 24000000 		.4byte	.LVL185
 3801 0a23 D90C0000 		.4byte	0xcd9
 3802 0a27 18       		.uleb128 0x18
 3803 0a28 01       		.uleb128 0x1
 3804 0a29 50       		.byte	0x50
 3805 0a2a 01       		.uleb128 0x1
 3806 0a2b 30       		.byte	0x30
 3807 0a2c 00       		.byte	0
 3808 0a2d 00       		.byte	0
 3809 0a2e 12       		.uleb128 0x12
 3810 0a2f 59050000 		.4byte	.LASF94
 3811 0a33 01       		.byte	0x1
 3812 0a34 240B     		.2byte	0xb24
 3813 0a36 00000000 		.4byte	.LFB46
 3814 0a3a 28000000 		.4byte	.LFE46-.LFB46
 3815 0a3e 01       		.uleb128 0x1
 3816 0a3f 9C       		.byte	0x9c
 3817 0a40 640A0000 		.4byte	0xa64
 3818 0a44 10       		.uleb128 0x10
 3819 0a45 2E000000 		.4byte	.LASF67
 3820 0a49 01       		.byte	0x1
 3821 0a4a 240B     		.2byte	0xb24
 3822 0a4c 83000000 		.4byte	0x83
 3823 0a50 EC080000 		.4byte	.LLST44
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 139


 3824 0a54 17       		.uleb128 0x17
 3825 0a55 1C000000 		.4byte	.LVL190
 3826 0a59 D90C0000 		.4byte	0xcd9
 3827 0a5d 18       		.uleb128 0x18
 3828 0a5e 01       		.uleb128 0x1
 3829 0a5f 50       		.byte	0x50
 3830 0a60 01       		.uleb128 0x1
 3831 0a61 30       		.byte	0x30
 3832 0a62 00       		.byte	0
 3833 0a63 00       		.byte	0
 3834 0a64 1A       		.uleb128 0x1a
 3835 0a65 F5000000 		.4byte	.LASF95
 3836 0a69 01       		.byte	0x1
 3837 0a6a 420B     		.2byte	0xb42
 3838 0a6c 00000000 		.4byte	.LFB47
 3839 0a70 A4000000 		.4byte	.LFE47-.LFB47
 3840 0a74 01       		.uleb128 0x1
 3841 0a75 9C       		.byte	0x9c
 3842 0a76 B40A0000 		.4byte	0xab4
 3843 0a7a 1B       		.uleb128 0x1b
 3844 0a7b 36000000 		.4byte	.LVL192
 3845 0a7f 0B090000 		.4byte	0x90b
 3846 0a83 8D0A0000 		.4byte	0xa8d
 3847 0a87 18       		.uleb128 0x18
 3848 0a88 01       		.uleb128 0x1
 3849 0a89 50       		.byte	0x50
 3850 0a8a 01       		.uleb128 0x1
 3851 0a8b 34       		.byte	0x34
 3852 0a8c 00       		.byte	0
 3853 0a8d 1B       		.uleb128 0x1b
 3854 0a8e 70000000 		.4byte	.LVL194
 3855 0a92 0B090000 		.4byte	0x90b
 3856 0a96 A20A0000 		.4byte	0xaa2
 3857 0a9a 18       		.uleb128 0x18
 3858 0a9b 01       		.uleb128 0x1
 3859 0a9c 50       		.byte	0x50
 3860 0a9d 03       		.uleb128 0x3
 3861 0a9e 0A       		.byte	0xa
 3862 0a9f 0004     		.2byte	0x400
 3863 0aa1 00       		.byte	0
 3864 0aa2 17       		.uleb128 0x17
 3865 0aa3 92000000 		.4byte	.LVL196
 3866 0aa7 0B090000 		.4byte	0x90b
 3867 0aab 18       		.uleb128 0x18
 3868 0aac 01       		.uleb128 0x1
 3869 0aad 50       		.byte	0x50
 3870 0aae 03       		.uleb128 0x3
 3871 0aaf 40       		.byte	0x40
 3872 0ab0 3E       		.byte	0x3e
 3873 0ab1 24       		.byte	0x24
 3874 0ab2 00       		.byte	0
 3875 0ab3 00       		.byte	0
 3876 0ab4 12       		.uleb128 0x12
 3877 0ab5 AB050000 		.4byte	.LASF96
 3878 0ab9 01       		.byte	0x1
 3879 0aba 7F0B     		.2byte	0xb7f
 3880 0abc 00000000 		.4byte	.LFB48
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 140


 3881 0ac0 20000000 		.4byte	.LFE48-.LFB48
 3882 0ac4 01       		.uleb128 0x1
 3883 0ac5 9C       		.byte	0x9c
 3884 0ac6 DB0A0000 		.4byte	0xadb
 3885 0aca 10       		.uleb128 0x10
 3886 0acb D0010000 		.4byte	.LASF97
 3887 0acf 01       		.byte	0x1
 3888 0ad0 7F0B     		.2byte	0xb7f
 3889 0ad2 83000000 		.4byte	0x83
 3890 0ad6 26090000 		.4byte	.LLST45
 3891 0ada 00       		.byte	0
 3892 0adb 12       		.uleb128 0x12
 3893 0adc 0F050000 		.4byte	.LASF98
 3894 0ae0 01       		.byte	0x1
 3895 0ae1 580C     		.2byte	0xc58
 3896 0ae3 00000000 		.4byte	.LFB50
 3897 0ae7 6C000000 		.4byte	.LFE50-.LFB50
 3898 0aeb 01       		.uleb128 0x1
 3899 0aec 9C       		.byte	0x9c
 3900 0aed 970B0000 		.4byte	0xb97
 3901 0af1 10       		.uleb128 0x10
 3902 0af2 2E000000 		.4byte	.LASF67
 3903 0af6 01       		.byte	0x1
 3904 0af7 580C     		.2byte	0xc58
 3905 0af9 83000000 		.4byte	0x83
 3906 0afd 47090000 		.4byte	.LLST46
 3907 0b01 10       		.uleb128 0x10
 3908 0b02 B8070000 		.4byte	.LASF99
 3909 0b06 01       		.byte	0x1
 3910 0b07 580C     		.2byte	0xc58
 3911 0b09 E1000000 		.4byte	0xe1
 3912 0b0d 73090000 		.4byte	.LLST47
 3913 0b11 10       		.uleb128 0x10
 3914 0b12 99040000 		.4byte	.LASF49
 3915 0b16 01       		.byte	0x1
 3916 0b17 580C     		.2byte	0xc58
 3917 0b19 83000000 		.4byte	0x83
 3918 0b1d 94090000 		.4byte	.LLST48
 3919 0b21 11       		.uleb128 0x11
 3920 0b22 6A070000 		.4byte	.LASF100
 3921 0b26 01       		.byte	0x1
 3922 0b27 5A0C     		.2byte	0xc5a
 3923 0b29 83000000 		.4byte	0x83
 3924 0b2d C0090000 		.4byte	.LLST49
 3925 0b31 1B       		.uleb128 0x1b
 3926 0b32 10000000 		.4byte	.LVL200
 3927 0b36 27060000 		.4byte	0x627
 3928 0b3a 450B0000 		.4byte	0xb45
 3929 0b3e 18       		.uleb128 0x18
 3930 0b3f 01       		.uleb128 0x1
 3931 0b40 50       		.byte	0x50
 3932 0b41 02       		.uleb128 0x2
 3933 0b42 74       		.byte	0x74
 3934 0b43 00       		.sleb128 0
 3935 0b44 00       		.byte	0
 3936 0b45 1B       		.uleb128 0x1b
 3937 0b46 24000000 		.4byte	.LVL201
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 141


 3938 0b4a AB080000 		.4byte	0x8ab
 3939 0b4e 590B0000 		.4byte	0xb59
 3940 0b52 18       		.uleb128 0x18
 3941 0b53 01       		.uleb128 0x1
 3942 0b54 50       		.byte	0x50
 3943 0b55 02       		.uleb128 0x2
 3944 0b56 74       		.byte	0x74
 3945 0b57 00       		.sleb128 0
 3946 0b58 00       		.byte	0
 3947 0b59 1B       		.uleb128 0x1b
 3948 0b5a 2E000000 		.4byte	.LVL203
 3949 0b5e AB080000 		.4byte	0x8ab
 3950 0b62 6D0B0000 		.4byte	0xb6d
 3951 0b66 18       		.uleb128 0x18
 3952 0b67 01       		.uleb128 0x1
 3953 0b68 50       		.byte	0x50
 3954 0b69 02       		.uleb128 0x2
 3955 0b6a 74       		.byte	0x74
 3956 0b6b 00       		.sleb128 0
 3957 0b6c 00       		.byte	0
 3958 0b6d 1B       		.uleb128 0x1b
 3959 0b6e 42000000 		.4byte	.LVL206
 3960 0b72 A9070000 		.4byte	0x7a9
 3961 0b76 870B0000 		.4byte	0xb87
 3962 0b7a 18       		.uleb128 0x18
 3963 0b7b 01       		.uleb128 0x1
 3964 0b7c 50       		.byte	0x50
 3965 0b7d 02       		.uleb128 0x2
 3966 0b7e 74       		.byte	0x74
 3967 0b7f 00       		.sleb128 0
 3968 0b80 18       		.uleb128 0x18
 3969 0b81 01       		.uleb128 0x1
 3970 0b82 51       		.byte	0x51
 3971 0b83 02       		.uleb128 0x2
 3972 0b84 75       		.byte	0x75
 3973 0b85 00       		.sleb128 0
 3974 0b86 00       		.byte	0
 3975 0b87 17       		.uleb128 0x17
 3976 0b88 5A000000 		.4byte	.LVL208
 3977 0b8c D90C0000 		.4byte	0xcd9
 3978 0b90 18       		.uleb128 0x18
 3979 0b91 01       		.uleb128 0x1
 3980 0b92 50       		.byte	0x50
 3981 0b93 01       		.uleb128 0x1
 3982 0b94 30       		.byte	0x30
 3983 0b95 00       		.byte	0
 3984 0b96 00       		.byte	0
 3985 0b97 12       		.uleb128 0x12
 3986 0b98 49050000 		.4byte	.LASF101
 3987 0b9c 01       		.byte	0x1
 3988 0b9d D70B     		.2byte	0xbd7
 3989 0b9f 00000000 		.4byte	.LFB49
 3990 0ba3 3C000000 		.4byte	.LFE49-.LFB49
 3991 0ba7 01       		.uleb128 0x1
 3992 0ba8 9C       		.byte	0x9c
 3993 0ba9 4F0C0000 		.4byte	0xc4f
 3994 0bad 10       		.uleb128 0x10
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 142


 3995 0bae 2E000000 		.4byte	.LASF67
 3996 0bb2 01       		.byte	0x1
 3997 0bb3 D70B     		.2byte	0xbd7
 3998 0bb5 83000000 		.4byte	0x83
 3999 0bb9 E9090000 		.4byte	.LLST50
 4000 0bbd 10       		.uleb128 0x10
 4001 0bbe B8070000 		.4byte	.LASF99
 4002 0bc2 01       		.byte	0x1
 4003 0bc3 D70B     		.2byte	0xbd7
 4004 0bc5 E1000000 		.4byte	0xe1
 4005 0bc9 150A0000 		.4byte	.LLST51
 4006 0bcd 10       		.uleb128 0x10
 4007 0bce 9B050000 		.4byte	.LASF102
 4008 0bd2 01       		.byte	0x1
 4009 0bd3 D70B     		.2byte	0xbd7
 4010 0bd5 83000000 		.4byte	0x83
 4011 0bd9 360A0000 		.4byte	.LLST52
 4012 0bdd 11       		.uleb128 0x11
 4013 0bde 73010000 		.4byte	.LASF82
 4014 0be2 01       		.byte	0x1
 4015 0be3 D90B     		.2byte	0xbd9
 4016 0be5 83000000 		.4byte	0x83
 4017 0be9 620A0000 		.4byte	.LLST53
 4018 0bed 11       		.uleb128 0x11
 4019 0bee 32030000 		.4byte	.LASF103
 4020 0bf2 01       		.byte	0x1
 4021 0bf3 DA0B     		.2byte	0xbda
 4022 0bf5 83000000 		.4byte	0x83
 4023 0bf9 750A0000 		.4byte	.LLST54
 4024 0bfd 1B       		.uleb128 0x1b
 4025 0bfe 10000000 		.4byte	.LVL212
 4026 0c02 27060000 		.4byte	0x627
 4027 0c06 110C0000 		.4byte	0xc11
 4028 0c0a 18       		.uleb128 0x18
 4029 0c0b 01       		.uleb128 0x1
 4030 0c0c 50       		.byte	0x50
 4031 0c0d 02       		.uleb128 0x2
 4032 0c0e 74       		.byte	0x74
 4033 0c0f 00       		.sleb128 0
 4034 0c10 00       		.byte	0
 4035 0c11 1B       		.uleb128 0x1b
 4036 0c12 20000000 		.4byte	.LVL213
 4037 0c16 AB080000 		.4byte	0x8ab
 4038 0c1a 250C0000 		.4byte	0xc25
 4039 0c1e 18       		.uleb128 0x18
 4040 0c1f 01       		.uleb128 0x1
 4041 0c20 50       		.byte	0x50
 4042 0c21 02       		.uleb128 0x2
 4043 0c22 74       		.byte	0x74
 4044 0c23 00       		.sleb128 0
 4045 0c24 00       		.byte	0
 4046 0c25 1B       		.uleb128 0x1b
 4047 0c26 2E000000 		.4byte	.LVL216
 4048 0c2a DB0A0000 		.4byte	0xadb
 4049 0c2e 3F0C0000 		.4byte	0xc3f
 4050 0c32 18       		.uleb128 0x18
 4051 0c33 01       		.uleb128 0x1
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 143


 4052 0c34 50       		.byte	0x50
 4053 0c35 02       		.uleb128 0x2
 4054 0c36 74       		.byte	0x74
 4055 0c37 00       		.sleb128 0
 4056 0c38 18       		.uleb128 0x18
 4057 0c39 01       		.uleb128 0x1
 4058 0c3a 51       		.byte	0x51
 4059 0c3b 02       		.uleb128 0x2
 4060 0c3c 76       		.byte	0x76
 4061 0c3d 00       		.sleb128 0
 4062 0c3e 00       		.byte	0
 4063 0c3f 17       		.uleb128 0x17
 4064 0c40 36000000 		.4byte	.LVL217
 4065 0c44 D90C0000 		.4byte	0xcd9
 4066 0c48 18       		.uleb128 0x18
 4067 0c49 01       		.uleb128 0x1
 4068 0c4a 50       		.byte	0x50
 4069 0c4b 01       		.uleb128 0x1
 4070 0c4c 30       		.byte	0x30
 4071 0c4d 00       		.byte	0
 4072 0c4e 00       		.byte	0
 4073 0c4f 1C       		.uleb128 0x1c
 4074 0c50 9C080000 		.4byte	.LASF104
 4075 0c54 01       		.byte	0x1
 4076 0c55 37       		.byte	0x37
 4077 0c56 BC000000 		.4byte	0xbc
 4078 0c5a 05       		.uleb128 0x5
 4079 0c5b 03       		.byte	0x3
 4080 0c5c 14000000 		.4byte	disableTimerServicedIsr
 4081 0c60 1C       		.uleb128 0x1c
 4082 0c61 19020000 		.4byte	.LASF105
 4083 0c65 01       		.byte	0x1
 4084 0c66 38       		.byte	0x38
 4085 0c67 BC000000 		.4byte	0xbc
 4086 0c6b 05       		.uleb128 0x5
 4087 0c6c 03       		.byte	0x3
 4088 0c6d 00000000 		.4byte	timerIsrMask
 4089 0c71 1D       		.uleb128 0x1d
 4090 0c72 810C0000 		.4byte	0xc81
 4091 0c76 810C0000 		.4byte	0xc81
 4092 0c7a 1E       		.uleb128 0x1e
 4093 0c7b 09010000 		.4byte	0x109
 4094 0c7f 02       		.byte	0x2
 4095 0c80 00       		.byte	0
 4096 0c81 1F       		.uleb128 0x1f
 4097 0c82 83000000 		.4byte	0x83
 4098 0c86 1C       		.uleb128 0x1c
 4099 0c87 1B030000 		.4byte	.LASF106
 4100 0c8b 01       		.byte	0x1
 4101 0c8c 3C       		.byte	0x3c
 4102 0c8d 970C0000 		.4byte	0xc97
 4103 0c91 05       		.uleb128 0x5
 4104 0c92 03       		.byte	0x3
 4105 0c93 00000000 		.4byte	counterTimerIntMaskTbl
 4106 0c97 1F       		.uleb128 0x1f
 4107 0c98 710C0000 		.4byte	0xc71
 4108 0c9c 1D       		.uleb128 0x1d
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 144


 4109 0c9d F7000000 		.4byte	0xf7
 4110 0ca1 AC0C0000 		.4byte	0xcac
 4111 0ca5 1E       		.uleb128 0x1e
 4112 0ca6 09010000 		.4byte	0x109
 4113 0caa 02       		.byte	0x2
 4114 0cab 00       		.byte	0
 4115 0cac 1C       		.uleb128 0x1c
 4116 0cad 5C000000 		.4byte	.LASF107
 4117 0cb1 01       		.byte	0x1
 4118 0cb2 40       		.byte	0x40
 4119 0cb3 9C0C0000 		.4byte	0xc9c
 4120 0cb7 05       		.uleb128 0x5
 4121 0cb8 03       		.byte	0x3
 4122 0cb9 08000000 		.4byte	cySysTimerCallback
 4123 0cbd 1C       		.uleb128 0x1c
 4124 0cbe 1D000000 		.4byte	.LASF108
 4125 0cc2 01       		.byte	0x1
 4126 0cc3 46       		.byte	0x46
 4127 0cc4 EC000000 		.4byte	0xec
 4128 0cc8 05       		.uleb128 0x5
 4129 0cc9 03       		.byte	0x3
 4130 0cca 04000000 		.4byte	cySysWdtCallback
 4131 0cce 20       		.uleb128 0x20
 4132 0ccf D2040000 		.4byte	.LASF118
 4133 0cd3 04       		.byte	0x4
 4134 0cd4 E7       		.byte	0xe7
 4135 0cd5 83000000 		.4byte	0x83
 4136 0cd9 21       		.uleb128 0x21
 4137 0cda 6E050000 		.4byte	.LASF109
 4138 0cde 6E050000 		.4byte	.LASF109
 4139 0ce2 04       		.byte	0x4
 4140 0ce3 FA       		.byte	0xfa
 4141 0ce4 21       		.uleb128 0x21
 4142 0ce5 3F010000 		.4byte	.LASF110
 4143 0ce9 3F010000 		.4byte	.LASF110
 4144 0ced 04       		.byte	0x4
 4145 0cee ED       		.byte	0xed
 4146 0cef 21       		.uleb128 0x21
 4147 0cf0 04040000 		.4byte	.LASF111
 4148 0cf4 04040000 		.4byte	.LASF111
 4149 0cf8 04       		.byte	0x4
 4150 0cf9 F8       		.byte	0xf8
 4151 0cfa 21       		.uleb128 0x21
 4152 0cfb 07000000 		.4byte	.LASF112
 4153 0cff 07000000 		.4byte	.LASF112
 4154 0d03 04       		.byte	0x4
 4155 0d04 F9       		.byte	0xf9
 4156 0d05 00       		.byte	0
 4157              		.section	.debug_abbrev,"",%progbits
 4158              	.Ldebug_abbrev0:
 4159 0000 01       		.uleb128 0x1
 4160 0001 11       		.uleb128 0x11
 4161 0002 01       		.byte	0x1
 4162 0003 25       		.uleb128 0x25
 4163 0004 0E       		.uleb128 0xe
 4164 0005 13       		.uleb128 0x13
 4165 0006 0B       		.uleb128 0xb
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 145


 4166 0007 03       		.uleb128 0x3
 4167 0008 0E       		.uleb128 0xe
 4168 0009 1B       		.uleb128 0x1b
 4169 000a 0E       		.uleb128 0xe
 4170 000b 55       		.uleb128 0x55
 4171 000c 17       		.uleb128 0x17
 4172 000d 11       		.uleb128 0x11
 4173 000e 01       		.uleb128 0x1
 4174 000f 10       		.uleb128 0x10
 4175 0010 17       		.uleb128 0x17
 4176 0011 00       		.byte	0
 4177 0012 00       		.byte	0
 4178 0013 02       		.uleb128 0x2
 4179 0014 24       		.uleb128 0x24
 4180 0015 00       		.byte	0
 4181 0016 0B       		.uleb128 0xb
 4182 0017 0B       		.uleb128 0xb
 4183 0018 3E       		.uleb128 0x3e
 4184 0019 0B       		.uleb128 0xb
 4185 001a 03       		.uleb128 0x3
 4186 001b 0E       		.uleb128 0xe
 4187 001c 00       		.byte	0
 4188 001d 00       		.byte	0
 4189 001e 03       		.uleb128 0x3
 4190 001f 24       		.uleb128 0x24
 4191 0020 00       		.byte	0
 4192 0021 0B       		.uleb128 0xb
 4193 0022 0B       		.uleb128 0xb
 4194 0023 3E       		.uleb128 0x3e
 4195 0024 0B       		.uleb128 0xb
 4196 0025 03       		.uleb128 0x3
 4197 0026 08       		.uleb128 0x8
 4198 0027 00       		.byte	0
 4199 0028 00       		.byte	0
 4200 0029 04       		.uleb128 0x4
 4201 002a 16       		.uleb128 0x16
 4202 002b 00       		.byte	0
 4203 002c 03       		.uleb128 0x3
 4204 002d 0E       		.uleb128 0xe
 4205 002e 3A       		.uleb128 0x3a
 4206 002f 0B       		.uleb128 0xb
 4207 0030 3B       		.uleb128 0x3b
 4208 0031 05       		.uleb128 0x5
 4209 0032 49       		.uleb128 0x49
 4210 0033 13       		.uleb128 0x13
 4211 0034 00       		.byte	0
 4212 0035 00       		.byte	0
 4213 0036 05       		.uleb128 0x5
 4214 0037 35       		.uleb128 0x35
 4215 0038 00       		.byte	0
 4216 0039 49       		.uleb128 0x49
 4217 003a 13       		.uleb128 0x13
 4218 003b 00       		.byte	0
 4219 003c 00       		.byte	0
 4220 003d 06       		.uleb128 0x6
 4221 003e 0F       		.uleb128 0xf
 4222 003f 00       		.byte	0
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 146


 4223 0040 0B       		.uleb128 0xb
 4224 0041 0B       		.uleb128 0xb
 4225 0042 49       		.uleb128 0x49
 4226 0043 13       		.uleb128 0x13
 4227 0044 00       		.byte	0
 4228 0045 00       		.byte	0
 4229 0046 07       		.uleb128 0x7
 4230 0047 15       		.uleb128 0x15
 4231 0048 00       		.byte	0
 4232 0049 27       		.uleb128 0x27
 4233 004a 19       		.uleb128 0x19
 4234 004b 00       		.byte	0
 4235 004c 00       		.byte	0
 4236 004d 08       		.uleb128 0x8
 4237 004e 04       		.uleb128 0x4
 4238 004f 01       		.byte	0x1
 4239 0050 0B       		.uleb128 0xb
 4240 0051 0B       		.uleb128 0xb
 4241 0052 49       		.uleb128 0x49
 4242 0053 13       		.uleb128 0x13
 4243 0054 3A       		.uleb128 0x3a
 4244 0055 0B       		.uleb128 0xb
 4245 0056 3B       		.uleb128 0x3b
 4246 0057 0B       		.uleb128 0xb
 4247 0058 01       		.uleb128 0x1
 4248 0059 13       		.uleb128 0x13
 4249 005a 00       		.byte	0
 4250 005b 00       		.byte	0
 4251 005c 09       		.uleb128 0x9
 4252 005d 28       		.uleb128 0x28
 4253 005e 00       		.byte	0
 4254 005f 03       		.uleb128 0x3
 4255 0060 0E       		.uleb128 0xe
 4256 0061 1C       		.uleb128 0x1c
 4257 0062 0B       		.uleb128 0xb
 4258 0063 00       		.byte	0
 4259 0064 00       		.byte	0
 4260 0065 0A       		.uleb128 0xa
 4261 0066 16       		.uleb128 0x16
 4262 0067 00       		.byte	0
 4263 0068 03       		.uleb128 0x3
 4264 0069 0E       		.uleb128 0xe
 4265 006a 3A       		.uleb128 0x3a
 4266 006b 0B       		.uleb128 0xb
 4267 006c 3B       		.uleb128 0x3b
 4268 006d 0B       		.uleb128 0xb
 4269 006e 49       		.uleb128 0x49
 4270 006f 13       		.uleb128 0x13
 4271 0070 00       		.byte	0
 4272 0071 00       		.byte	0
 4273 0072 0B       		.uleb128 0xb
 4274 0073 2E       		.uleb128 0x2e
 4275 0074 00       		.byte	0
 4276 0075 03       		.uleb128 0x3
 4277 0076 0E       		.uleb128 0xe
 4278 0077 3A       		.uleb128 0x3a
 4279 0078 0B       		.uleb128 0xb
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 147


 4280 0079 3B       		.uleb128 0x3b
 4281 007a 05       		.uleb128 0x5
 4282 007b 27       		.uleb128 0x27
 4283 007c 19       		.uleb128 0x19
 4284 007d 20       		.uleb128 0x20
 4285 007e 0B       		.uleb128 0xb
 4286 007f 00       		.byte	0
 4287 0080 00       		.byte	0
 4288 0081 0C       		.uleb128 0xc
 4289 0082 2E       		.uleb128 0x2e
 4290 0083 01       		.byte	0x1
 4291 0084 03       		.uleb128 0x3
 4292 0085 0E       		.uleb128 0xe
 4293 0086 3A       		.uleb128 0x3a
 4294 0087 0B       		.uleb128 0xb
 4295 0088 3B       		.uleb128 0x3b
 4296 0089 05       		.uleb128 0x5
 4297 008a 27       		.uleb128 0x27
 4298 008b 19       		.uleb128 0x19
 4299 008c 49       		.uleb128 0x49
 4300 008d 13       		.uleb128 0x13
 4301 008e 11       		.uleb128 0x11
 4302 008f 01       		.uleb128 0x1
 4303 0090 12       		.uleb128 0x12
 4304 0091 06       		.uleb128 0x6
 4305 0092 40       		.uleb128 0x40
 4306 0093 18       		.uleb128 0x18
 4307 0094 9742     		.uleb128 0x2117
 4308 0096 19       		.uleb128 0x19
 4309 0097 01       		.uleb128 0x1
 4310 0098 13       		.uleb128 0x13
 4311 0099 00       		.byte	0
 4312 009a 00       		.byte	0
 4313 009b 0D       		.uleb128 0xd
 4314 009c 34       		.uleb128 0x34
 4315 009d 00       		.byte	0
 4316 009e 03       		.uleb128 0x3
 4317 009f 0E       		.uleb128 0xe
 4318 00a0 3A       		.uleb128 0x3a
 4319 00a1 0B       		.uleb128 0xb
 4320 00a2 3B       		.uleb128 0x3b
 4321 00a3 05       		.uleb128 0x5
 4322 00a4 49       		.uleb128 0x49
 4323 00a5 13       		.uleb128 0x13
 4324 00a6 02       		.uleb128 0x2
 4325 00a7 18       		.uleb128 0x18
 4326 00a8 00       		.byte	0
 4327 00a9 00       		.byte	0
 4328 00aa 0E       		.uleb128 0xe
 4329 00ab 2E       		.uleb128 0x2e
 4330 00ac 00       		.byte	0
 4331 00ad 3F       		.uleb128 0x3f
 4332 00ae 19       		.uleb128 0x19
 4333 00af 03       		.uleb128 0x3
 4334 00b0 0E       		.uleb128 0xe
 4335 00b1 3A       		.uleb128 0x3a
 4336 00b2 0B       		.uleb128 0xb
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 148


 4337 00b3 3B       		.uleb128 0x3b
 4338 00b4 0B       		.uleb128 0xb
 4339 00b5 27       		.uleb128 0x27
 4340 00b6 19       		.uleb128 0x19
 4341 00b7 11       		.uleb128 0x11
 4342 00b8 01       		.uleb128 0x1
 4343 00b9 12       		.uleb128 0x12
 4344 00ba 06       		.uleb128 0x6
 4345 00bb 40       		.uleb128 0x40
 4346 00bc 18       		.uleb128 0x18
 4347 00bd 9742     		.uleb128 0x2117
 4348 00bf 19       		.uleb128 0x19
 4349 00c0 00       		.byte	0
 4350 00c1 00       		.byte	0
 4351 00c2 0F       		.uleb128 0xf
 4352 00c3 2E       		.uleb128 0x2e
 4353 00c4 01       		.byte	0x1
 4354 00c5 3F       		.uleb128 0x3f
 4355 00c6 19       		.uleb128 0x19
 4356 00c7 03       		.uleb128 0x3
 4357 00c8 0E       		.uleb128 0xe
 4358 00c9 3A       		.uleb128 0x3a
 4359 00ca 0B       		.uleb128 0xb
 4360 00cb 3B       		.uleb128 0x3b
 4361 00cc 05       		.uleb128 0x5
 4362 00cd 27       		.uleb128 0x27
 4363 00ce 19       		.uleb128 0x19
 4364 00cf 49       		.uleb128 0x49
 4365 00d0 13       		.uleb128 0x13
 4366 00d1 11       		.uleb128 0x11
 4367 00d2 01       		.uleb128 0x1
 4368 00d3 12       		.uleb128 0x12
 4369 00d4 06       		.uleb128 0x6
 4370 00d5 40       		.uleb128 0x40
 4371 00d6 18       		.uleb128 0x18
 4372 00d7 9642     		.uleb128 0x2116
 4373 00d9 19       		.uleb128 0x19
 4374 00da 01       		.uleb128 0x1
 4375 00db 13       		.uleb128 0x13
 4376 00dc 00       		.byte	0
 4377 00dd 00       		.byte	0
 4378 00de 10       		.uleb128 0x10
 4379 00df 05       		.uleb128 0x5
 4380 00e0 00       		.byte	0
 4381 00e1 03       		.uleb128 0x3
 4382 00e2 0E       		.uleb128 0xe
 4383 00e3 3A       		.uleb128 0x3a
 4384 00e4 0B       		.uleb128 0xb
 4385 00e5 3B       		.uleb128 0x3b
 4386 00e6 05       		.uleb128 0x5
 4387 00e7 49       		.uleb128 0x49
 4388 00e8 13       		.uleb128 0x13
 4389 00e9 02       		.uleb128 0x2
 4390 00ea 17       		.uleb128 0x17
 4391 00eb 00       		.byte	0
 4392 00ec 00       		.byte	0
 4393 00ed 11       		.uleb128 0x11
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 149


 4394 00ee 34       		.uleb128 0x34
 4395 00ef 00       		.byte	0
 4396 00f0 03       		.uleb128 0x3
 4397 00f1 0E       		.uleb128 0xe
 4398 00f2 3A       		.uleb128 0x3a
 4399 00f3 0B       		.uleb128 0xb
 4400 00f4 3B       		.uleb128 0x3b
 4401 00f5 05       		.uleb128 0x5
 4402 00f6 49       		.uleb128 0x49
 4403 00f7 13       		.uleb128 0x13
 4404 00f8 02       		.uleb128 0x2
 4405 00f9 17       		.uleb128 0x17
 4406 00fa 00       		.byte	0
 4407 00fb 00       		.byte	0
 4408 00fc 12       		.uleb128 0x12
 4409 00fd 2E       		.uleb128 0x2e
 4410 00fe 01       		.byte	0x1
 4411 00ff 3F       		.uleb128 0x3f
 4412 0100 19       		.uleb128 0x19
 4413 0101 03       		.uleb128 0x3
 4414 0102 0E       		.uleb128 0xe
 4415 0103 3A       		.uleb128 0x3a
 4416 0104 0B       		.uleb128 0xb
 4417 0105 3B       		.uleb128 0x3b
 4418 0106 05       		.uleb128 0x5
 4419 0107 27       		.uleb128 0x27
 4420 0108 19       		.uleb128 0x19
 4421 0109 11       		.uleb128 0x11
 4422 010a 01       		.uleb128 0x1
 4423 010b 12       		.uleb128 0x12
 4424 010c 06       		.uleb128 0x6
 4425 010d 40       		.uleb128 0x40
 4426 010e 18       		.uleb128 0x18
 4427 010f 9742     		.uleb128 0x2117
 4428 0111 19       		.uleb128 0x19
 4429 0112 01       		.uleb128 0x1
 4430 0113 13       		.uleb128 0x13
 4431 0114 00       		.byte	0
 4432 0115 00       		.byte	0
 4433 0116 13       		.uleb128 0x13
 4434 0117 1D       		.uleb128 0x1d
 4435 0118 00       		.byte	0
 4436 0119 31       		.uleb128 0x31
 4437 011a 13       		.uleb128 0x13
 4438 011b 11       		.uleb128 0x11
 4439 011c 01       		.uleb128 0x1
 4440 011d 12       		.uleb128 0x12
 4441 011e 06       		.uleb128 0x6
 4442 011f 58       		.uleb128 0x58
 4443 0120 0B       		.uleb128 0xb
 4444 0121 59       		.uleb128 0x59
 4445 0122 05       		.uleb128 0x5
 4446 0123 00       		.byte	0
 4447 0124 00       		.byte	0
 4448 0125 14       		.uleb128 0x14
 4449 0126 2E       		.uleb128 0x2e
 4450 0127 00       		.byte	0
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 150


 4451 0128 3F       		.uleb128 0x3f
 4452 0129 19       		.uleb128 0x19
 4453 012a 03       		.uleb128 0x3
 4454 012b 0E       		.uleb128 0xe
 4455 012c 3A       		.uleb128 0x3a
 4456 012d 0B       		.uleb128 0xb
 4457 012e 3B       		.uleb128 0x3b
 4458 012f 05       		.uleb128 0x5
 4459 0130 27       		.uleb128 0x27
 4460 0131 19       		.uleb128 0x19
 4461 0132 49       		.uleb128 0x49
 4462 0133 13       		.uleb128 0x13
 4463 0134 11       		.uleb128 0x11
 4464 0135 01       		.uleb128 0x1
 4465 0136 12       		.uleb128 0x12
 4466 0137 06       		.uleb128 0x6
 4467 0138 40       		.uleb128 0x40
 4468 0139 18       		.uleb128 0x18
 4469 013a 9742     		.uleb128 0x2117
 4470 013c 19       		.uleb128 0x19
 4471 013d 00       		.byte	0
 4472 013e 00       		.byte	0
 4473 013f 15       		.uleb128 0x15
 4474 0140 898201   		.uleb128 0x4109
 4475 0143 00       		.byte	0
 4476 0144 11       		.uleb128 0x11
 4477 0145 01       		.uleb128 0x1
 4478 0146 31       		.uleb128 0x31
 4479 0147 13       		.uleb128 0x13
 4480 0148 00       		.byte	0
 4481 0149 00       		.byte	0
 4482 014a 16       		.uleb128 0x16
 4483 014b 2E       		.uleb128 0x2e
 4484 014c 01       		.byte	0x1
 4485 014d 3F       		.uleb128 0x3f
 4486 014e 19       		.uleb128 0x19
 4487 014f 03       		.uleb128 0x3
 4488 0150 0E       		.uleb128 0xe
 4489 0151 3A       		.uleb128 0x3a
 4490 0152 0B       		.uleb128 0xb
 4491 0153 3B       		.uleb128 0x3b
 4492 0154 05       		.uleb128 0x5
 4493 0155 27       		.uleb128 0x27
 4494 0156 19       		.uleb128 0x19
 4495 0157 49       		.uleb128 0x49
 4496 0158 13       		.uleb128 0x13
 4497 0159 11       		.uleb128 0x11
 4498 015a 01       		.uleb128 0x1
 4499 015b 12       		.uleb128 0x12
 4500 015c 06       		.uleb128 0x6
 4501 015d 40       		.uleb128 0x40
 4502 015e 18       		.uleb128 0x18
 4503 015f 9742     		.uleb128 0x2117
 4504 0161 19       		.uleb128 0x19
 4505 0162 01       		.uleb128 0x1
 4506 0163 13       		.uleb128 0x13
 4507 0164 00       		.byte	0
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 151


 4508 0165 00       		.byte	0
 4509 0166 17       		.uleb128 0x17
 4510 0167 898201   		.uleb128 0x4109
 4511 016a 01       		.byte	0x1
 4512 016b 11       		.uleb128 0x11
 4513 016c 01       		.uleb128 0x1
 4514 016d 31       		.uleb128 0x31
 4515 016e 13       		.uleb128 0x13
 4516 016f 00       		.byte	0
 4517 0170 00       		.byte	0
 4518 0171 18       		.uleb128 0x18
 4519 0172 8A8201   		.uleb128 0x410a
 4520 0175 00       		.byte	0
 4521 0176 02       		.uleb128 0x2
 4522 0177 18       		.uleb128 0x18
 4523 0178 9142     		.uleb128 0x2111
 4524 017a 18       		.uleb128 0x18
 4525 017b 00       		.byte	0
 4526 017c 00       		.byte	0
 4527 017d 19       		.uleb128 0x19
 4528 017e 2E       		.uleb128 0x2e
 4529 017f 00       		.byte	0
 4530 0180 3F       		.uleb128 0x3f
 4531 0181 19       		.uleb128 0x19
 4532 0182 03       		.uleb128 0x3
 4533 0183 0E       		.uleb128 0xe
 4534 0184 3A       		.uleb128 0x3a
 4535 0185 0B       		.uleb128 0xb
 4536 0186 3B       		.uleb128 0x3b
 4537 0187 05       		.uleb128 0x5
 4538 0188 27       		.uleb128 0x27
 4539 0189 19       		.uleb128 0x19
 4540 018a 11       		.uleb128 0x11
 4541 018b 01       		.uleb128 0x1
 4542 018c 12       		.uleb128 0x12
 4543 018d 06       		.uleb128 0x6
 4544 018e 40       		.uleb128 0x40
 4545 018f 18       		.uleb128 0x18
 4546 0190 9742     		.uleb128 0x2117
 4547 0192 19       		.uleb128 0x19
 4548 0193 00       		.byte	0
 4549 0194 00       		.byte	0
 4550 0195 1A       		.uleb128 0x1a
 4551 0196 2E       		.uleb128 0x2e
 4552 0197 01       		.byte	0x1
 4553 0198 3F       		.uleb128 0x3f
 4554 0199 19       		.uleb128 0x19
 4555 019a 03       		.uleb128 0x3
 4556 019b 0E       		.uleb128 0xe
 4557 019c 3A       		.uleb128 0x3a
 4558 019d 0B       		.uleb128 0xb
 4559 019e 3B       		.uleb128 0x3b
 4560 019f 05       		.uleb128 0x5
 4561 01a0 27       		.uleb128 0x27
 4562 01a1 19       		.uleb128 0x19
 4563 01a2 11       		.uleb128 0x11
 4564 01a3 01       		.uleb128 0x1
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 152


 4565 01a4 12       		.uleb128 0x12
 4566 01a5 06       		.uleb128 0x6
 4567 01a6 40       		.uleb128 0x40
 4568 01a7 18       		.uleb128 0x18
 4569 01a8 9642     		.uleb128 0x2116
 4570 01aa 19       		.uleb128 0x19
 4571 01ab 01       		.uleb128 0x1
 4572 01ac 13       		.uleb128 0x13
 4573 01ad 00       		.byte	0
 4574 01ae 00       		.byte	0
 4575 01af 1B       		.uleb128 0x1b
 4576 01b0 898201   		.uleb128 0x4109
 4577 01b3 01       		.byte	0x1
 4578 01b4 11       		.uleb128 0x11
 4579 01b5 01       		.uleb128 0x1
 4580 01b6 31       		.uleb128 0x31
 4581 01b7 13       		.uleb128 0x13
 4582 01b8 01       		.uleb128 0x1
 4583 01b9 13       		.uleb128 0x13
 4584 01ba 00       		.byte	0
 4585 01bb 00       		.byte	0
 4586 01bc 1C       		.uleb128 0x1c
 4587 01bd 34       		.uleb128 0x34
 4588 01be 00       		.byte	0
 4589 01bf 03       		.uleb128 0x3
 4590 01c0 0E       		.uleb128 0xe
 4591 01c1 3A       		.uleb128 0x3a
 4592 01c2 0B       		.uleb128 0xb
 4593 01c3 3B       		.uleb128 0x3b
 4594 01c4 0B       		.uleb128 0xb
 4595 01c5 49       		.uleb128 0x49
 4596 01c6 13       		.uleb128 0x13
 4597 01c7 02       		.uleb128 0x2
 4598 01c8 18       		.uleb128 0x18
 4599 01c9 00       		.byte	0
 4600 01ca 00       		.byte	0
 4601 01cb 1D       		.uleb128 0x1d
 4602 01cc 01       		.uleb128 0x1
 4603 01cd 01       		.byte	0x1
 4604 01ce 49       		.uleb128 0x49
 4605 01cf 13       		.uleb128 0x13
 4606 01d0 01       		.uleb128 0x1
 4607 01d1 13       		.uleb128 0x13
 4608 01d2 00       		.byte	0
 4609 01d3 00       		.byte	0
 4610 01d4 1E       		.uleb128 0x1e
 4611 01d5 21       		.uleb128 0x21
 4612 01d6 00       		.byte	0
 4613 01d7 49       		.uleb128 0x49
 4614 01d8 13       		.uleb128 0x13
 4615 01d9 2F       		.uleb128 0x2f
 4616 01da 0B       		.uleb128 0xb
 4617 01db 00       		.byte	0
 4618 01dc 00       		.byte	0
 4619 01dd 1F       		.uleb128 0x1f
 4620 01de 26       		.uleb128 0x26
 4621 01df 00       		.byte	0
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 153


 4622 01e0 49       		.uleb128 0x49
 4623 01e1 13       		.uleb128 0x13
 4624 01e2 00       		.byte	0
 4625 01e3 00       		.byte	0
 4626 01e4 20       		.uleb128 0x20
 4627 01e5 34       		.uleb128 0x34
 4628 01e6 00       		.byte	0
 4629 01e7 03       		.uleb128 0x3
 4630 01e8 0E       		.uleb128 0xe
 4631 01e9 3A       		.uleb128 0x3a
 4632 01ea 0B       		.uleb128 0xb
 4633 01eb 3B       		.uleb128 0x3b
 4634 01ec 0B       		.uleb128 0xb
 4635 01ed 49       		.uleb128 0x49
 4636 01ee 13       		.uleb128 0x13
 4637 01ef 3F       		.uleb128 0x3f
 4638 01f0 19       		.uleb128 0x19
 4639 01f1 3C       		.uleb128 0x3c
 4640 01f2 19       		.uleb128 0x19
 4641 01f3 00       		.byte	0
 4642 01f4 00       		.byte	0
 4643 01f5 21       		.uleb128 0x21
 4644 01f6 2E       		.uleb128 0x2e
 4645 01f7 00       		.byte	0
 4646 01f8 3F       		.uleb128 0x3f
 4647 01f9 19       		.uleb128 0x19
 4648 01fa 3C       		.uleb128 0x3c
 4649 01fb 19       		.uleb128 0x19
 4650 01fc 6E       		.uleb128 0x6e
 4651 01fd 0E       		.uleb128 0xe
 4652 01fe 03       		.uleb128 0x3
 4653 01ff 0E       		.uleb128 0xe
 4654 0200 3A       		.uleb128 0x3a
 4655 0201 0B       		.uleb128 0xb
 4656 0202 3B       		.uleb128 0x3b
 4657 0203 0B       		.uleb128 0xb
 4658 0204 00       		.byte	0
 4659 0205 00       		.byte	0
 4660 0206 00       		.byte	0
 4661              		.section	.debug_loc,"",%progbits
 4662              	.Ldebug_loc0:
 4663              	.LLST0:
 4664 0000 00000000 		.4byte	.LVL1
 4665 0004 48000000 		.4byte	.LVL4
 4666 0008 0100     		.2byte	0x1
 4667 000a 50       		.byte	0x50
 4668 000b 48000000 		.4byte	.LVL4
 4669 000f A2000000 		.4byte	.LVL20
 4670 0013 0400     		.2byte	0x4
 4671 0015 F3       		.byte	0xf3
 4672 0016 01       		.uleb128 0x1
 4673 0017 50       		.byte	0x50
 4674 0018 9F       		.byte	0x9f
 4675 0019 A2000000 		.4byte	.LVL20
 4676 001d B4000000 		.4byte	.LVL22
 4677 0021 0100     		.2byte	0x1
 4678 0023 50       		.byte	0x50
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 154


 4679 0024 B4000000 		.4byte	.LVL22
 4680 0028 B6000000 		.4byte	.LVL23
 4681 002c 0400     		.2byte	0x4
 4682 002e F3       		.byte	0xf3
 4683 002f 01       		.uleb128 0x1
 4684 0030 50       		.byte	0x50
 4685 0031 9F       		.byte	0x9f
 4686 0032 B6000000 		.4byte	.LVL23
 4687 0036 B8000000 		.4byte	.LVL24
 4688 003a 0100     		.2byte	0x1
 4689 003c 50       		.byte	0x50
 4690 003d B8000000 		.4byte	.LVL24
 4691 0041 BA000000 		.4byte	.LVL25
 4692 0045 0400     		.2byte	0x4
 4693 0047 F3       		.byte	0xf3
 4694 0048 01       		.uleb128 0x1
 4695 0049 50       		.byte	0x50
 4696 004a 9F       		.byte	0x9f
 4697 004b BA000000 		.4byte	.LVL25
 4698 004f BC000000 		.4byte	.LVL26
 4699 0053 0100     		.2byte	0x1
 4700 0055 50       		.byte	0x50
 4701 0056 BC000000 		.4byte	.LVL26
 4702 005a BE000000 		.4byte	.LVL27
 4703 005e 0400     		.2byte	0x4
 4704 0060 F3       		.byte	0xf3
 4705 0061 01       		.uleb128 0x1
 4706 0062 50       		.byte	0x50
 4707 0063 9F       		.byte	0x9f
 4708 0064 BE000000 		.4byte	.LVL27
 4709 0068 C0000000 		.4byte	.LVL28
 4710 006c 0100     		.2byte	0x1
 4711 006e 50       		.byte	0x50
 4712 006f C0000000 		.4byte	.LVL28
 4713 0073 C2000000 		.4byte	.LVL29
 4714 0077 0400     		.2byte	0x4
 4715 0079 F3       		.byte	0xf3
 4716 007a 01       		.uleb128 0x1
 4717 007b 50       		.byte	0x50
 4718 007c 9F       		.byte	0x9f
 4719 007d C2000000 		.4byte	.LVL29
 4720 0081 C4000000 		.4byte	.LVL30
 4721 0085 0100     		.2byte	0x1
 4722 0087 50       		.byte	0x50
 4723 0088 C4000000 		.4byte	.LVL30
 4724 008c C6000000 		.4byte	.LVL31
 4725 0090 0400     		.2byte	0x4
 4726 0092 F3       		.byte	0xf3
 4727 0093 01       		.uleb128 0x1
 4728 0094 50       		.byte	0x50
 4729 0095 9F       		.byte	0x9f
 4730 0096 C6000000 		.4byte	.LVL31
 4731 009a C8000000 		.4byte	.LVL32
 4732 009e 0100     		.2byte	0x1
 4733 00a0 50       		.byte	0x50
 4734 00a1 C8000000 		.4byte	.LVL32
 4735 00a5 CA000000 		.4byte	.LVL33
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 155


 4736 00a9 0400     		.2byte	0x4
 4737 00ab F3       		.byte	0xf3
 4738 00ac 01       		.uleb128 0x1
 4739 00ad 50       		.byte	0x50
 4740 00ae 9F       		.byte	0x9f
 4741 00af CA000000 		.4byte	.LVL33
 4742 00b3 CC000000 		.4byte	.LVL34
 4743 00b7 0100     		.2byte	0x1
 4744 00b9 50       		.byte	0x50
 4745 00ba CC000000 		.4byte	.LVL34
 4746 00be CE000000 		.4byte	.LVL35
 4747 00c2 0400     		.2byte	0x4
 4748 00c4 F3       		.byte	0xf3
 4749 00c5 01       		.uleb128 0x1
 4750 00c6 50       		.byte	0x50
 4751 00c7 9F       		.byte	0x9f
 4752 00c8 CE000000 		.4byte	.LVL35
 4753 00cc D0000000 		.4byte	.LVL36
 4754 00d0 0100     		.2byte	0x1
 4755 00d2 50       		.byte	0x50
 4756 00d3 D0000000 		.4byte	.LVL36
 4757 00d7 0C010000 		.4byte	.LFE5
 4758 00db 0400     		.2byte	0x4
 4759 00dd F3       		.byte	0xf3
 4760 00de 01       		.uleb128 0x1
 4761 00df 50       		.byte	0x50
 4762 00e0 9F       		.byte	0x9f
 4763 00e1 00000000 		.4byte	0
 4764 00e5 00000000 		.4byte	0
 4765              	.LLST1:
 4766 00e9 00000000 		.4byte	.LVL1
 4767 00ed 4E000000 		.4byte	.LVL5
 4768 00f1 0100     		.2byte	0x1
 4769 00f3 51       		.byte	0x51
 4770 00f4 4E000000 		.4byte	.LVL5
 4771 00f8 A2000000 		.4byte	.LVL20
 4772 00fc 0100     		.2byte	0x1
 4773 00fe 54       		.byte	0x54
 4774 00ff A2000000 		.4byte	.LVL20
 4775 0103 D0000000 		.4byte	.LVL36
 4776 0107 0100     		.2byte	0x1
 4777 0109 51       		.byte	0x51
 4778 010a D0000000 		.4byte	.LVL36
 4779 010e D0000000 		.4byte	.LVL37
 4780 0112 0100     		.2byte	0x1
 4781 0114 54       		.byte	0x54
 4782 0115 D0000000 		.4byte	.LVL37
 4783 0119 0C010000 		.4byte	.LFE5
 4784 011d 0400     		.2byte	0x4
 4785 011f F3       		.byte	0xf3
 4786 0120 01       		.uleb128 0x1
 4787 0121 51       		.byte	0x51
 4788 0122 9F       		.byte	0x9f
 4789 0123 00000000 		.4byte	0
 4790 0127 00000000 		.4byte	0
 4791              	.LLST2:
 4792 012b 7E000000 		.4byte	.LVL13
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 156


 4793 012f 80000000 		.4byte	.LVL14
 4794 0133 0100     		.2byte	0x1
 4795 0135 50       		.byte	0x50
 4796 0136 98000000 		.4byte	.LVL17
 4797 013a 9C000000 		.4byte	.LVL18
 4798 013e 0100     		.2byte	0x1
 4799 0140 50       		.byte	0x50
 4800 0141 9C000000 		.4byte	.LVL18
 4801 0145 A2000000 		.4byte	.LVL20
 4802 0149 0200     		.2byte	0x2
 4803 014b 74       		.byte	0x74
 4804 014c 00       		.sleb128 0
 4805 014d 00000000 		.4byte	0
 4806 0151 00000000 		.4byte	0
 4807              	.LLST3:
 4808 0155 56000000 		.4byte	.LVL7
 4809 0159 60000000 		.4byte	.LVL8
 4810 015d 0100     		.2byte	0x1
 4811 015f 50       		.byte	0x50
 4812 0160 60000000 		.4byte	.LVL8
 4813 0164 74000000 		.4byte	.LVL11
 4814 0168 0100     		.2byte	0x1
 4815 016a 56       		.byte	0x56
 4816 016b 80000000 		.4byte	.LVL14
 4817 016f 84000000 		.4byte	.LVL15
 4818 0173 0100     		.2byte	0x1
 4819 0175 50       		.byte	0x50
 4820 0176 84000000 		.4byte	.LVL15
 4821 017a 98000000 		.4byte	.LVL17
 4822 017e 0100     		.2byte	0x1
 4823 0180 56       		.byte	0x56
 4824 0181 00000000 		.4byte	0
 4825 0185 00000000 		.4byte	0
 4826              	.LLST4:
 4827 0189 0C000000 		.4byte	.LVL2
 4828 018d 16000000 		.4byte	.LVL3
 4829 0191 0100     		.2byte	0x1
 4830 0193 53       		.byte	0x53
 4831 0194 B6000000 		.4byte	.LVL23
 4832 0198 BA000000 		.4byte	.LVL25
 4833 019c 0100     		.2byte	0x1
 4834 019e 53       		.byte	0x53
 4835 019f 00000000 		.4byte	0
 4836 01a3 00000000 		.4byte	0
 4837              	.LLST5:
 4838 01a7 A0000000 		.4byte	.LVL19
 4839 01ab A2000000 		.4byte	.LVL20
 4840 01af 0200     		.2byte	0x2
 4841 01b1 30       		.byte	0x30
 4842 01b2 9F       		.byte	0x9f
 4843 01b3 B2000000 		.4byte	.LVL21
 4844 01b7 B6000000 		.4byte	.LVL23
 4845 01bb 0200     		.2byte	0x2
 4846 01bd 37       		.byte	0x37
 4847 01be 9F       		.byte	0x9f
 4848 01bf D0000000 		.4byte	.LVL36
 4849 01c3 0C010000 		.4byte	.LFE5
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 157


 4850 01c7 0100     		.2byte	0x1
 4851 01c9 50       		.byte	0x50
 4852 01ca 00000000 		.4byte	0
 4853 01ce 00000000 		.4byte	0
 4854              	.LLST6:
 4855 01d2 00000000 		.4byte	.LVL39
 4856 01d6 1C000000 		.4byte	.LVL41
 4857 01da 0100     		.2byte	0x1
 4858 01dc 50       		.byte	0x50
 4859 01dd 1C000000 		.4byte	.LVL41
 4860 01e1 26000000 		.4byte	.LVL42
 4861 01e5 0300     		.2byte	0x3
 4862 01e7 70       		.byte	0x70
 4863 01e8 7E       		.sleb128 -2
 4864 01e9 9F       		.byte	0x9f
 4865 01ea 26000000 		.4byte	.LVL42
 4866 01ee 2A000000 		.4byte	.LVL43
 4867 01f2 0300     		.2byte	0x3
 4868 01f4 70       		.byte	0x70
 4869 01f5 50       		.sleb128 -48
 4870 01f6 9F       		.byte	0x9f
 4871 01f7 2A000000 		.4byte	.LVL43
 4872 01fb 32000000 		.4byte	.LVL44
 4873 01ff 0300     		.2byte	0x3
 4874 0201 70       		.byte	0x70
 4875 0202 70       		.sleb128 -16
 4876 0203 9F       		.byte	0x9f
 4877 0204 32000000 		.4byte	.LVL44
 4878 0208 3A000000 		.4byte	.LVL45
 4879 020c 0300     		.2byte	0x3
 4880 020e 70       		.byte	0x70
 4881 020f 79       		.sleb128 -7
 4882 0210 9F       		.byte	0x9f
 4883 0211 3A000000 		.4byte	.LVL45
 4884 0215 3C000000 		.4byte	.LVL46
 4885 0219 0100     		.2byte	0x1
 4886 021b 50       		.byte	0x50
 4887 021c 3C000000 		.4byte	.LVL46
 4888 0220 4C000000 		.4byte	.LFE9
 4889 0224 0400     		.2byte	0x4
 4890 0226 F3       		.byte	0xf3
 4891 0227 01       		.uleb128 0x1
 4892 0228 50       		.byte	0x50
 4893 0229 9F       		.byte	0x9f
 4894 022a 00000000 		.4byte	0
 4895 022e 00000000 		.4byte	0
 4896              	.LLST7:
 4897 0232 0A000000 		.4byte	.LVL40
 4898 0236 42000000 		.4byte	.LVL48
 4899 023a 0100     		.2byte	0x1
 4900 023c 54       		.byte	0x54
 4901 023d 42000000 		.4byte	.LVL48
 4902 0241 4C000000 		.4byte	.LFE9
 4903 0245 0100     		.2byte	0x1
 4904 0247 50       		.byte	0x50
 4905 0248 00000000 		.4byte	0
 4906 024c 00000000 		.4byte	0
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 158


 4907              	.LLST8:
 4908 0250 00000000 		.4byte	.LVL49
 4909 0254 07000000 		.4byte	.LVL50-1
 4910 0258 0100     		.2byte	0x1
 4911 025a 50       		.byte	0x50
 4912 025b 07000000 		.4byte	.LVL50-1
 4913 025f 1A000000 		.4byte	.LVL51
 4914 0263 0100     		.2byte	0x1
 4915 0265 54       		.byte	0x54
 4916 0266 1A000000 		.4byte	.LVL51
 4917 026a 20000000 		.4byte	.LVL52
 4918 026e 0400     		.2byte	0x4
 4919 0270 F3       		.byte	0xf3
 4920 0271 01       		.uleb128 0x1
 4921 0272 50       		.byte	0x50
 4922 0273 9F       		.byte	0x9f
 4923 0274 20000000 		.4byte	.LVL52
 4924 0278 26000000 		.4byte	.LVL53
 4925 027c 0100     		.2byte	0x1
 4926 027e 54       		.byte	0x54
 4927 027f 26000000 		.4byte	.LVL53
 4928 0283 2C000000 		.4byte	.LFE10
 4929 0287 0400     		.2byte	0x4
 4930 0289 F3       		.byte	0xf3
 4931 028a 01       		.uleb128 0x1
 4932 028b 50       		.byte	0x50
 4933 028c 9F       		.byte	0x9f
 4934 028d 00000000 		.4byte	0
 4935 0291 00000000 		.4byte	0
 4936              	.LLST9:
 4937 0295 00000000 		.4byte	.LVL54
 4938 0299 02000000 		.4byte	.LVL55
 4939 029d 0100     		.2byte	0x1
 4940 029f 50       		.byte	0x50
 4941 02a0 02000000 		.4byte	.LVL55
 4942 02a4 04000000 		.4byte	.LVL56
 4943 02a8 0400     		.2byte	0x4
 4944 02aa F3       		.byte	0xf3
 4945 02ab 01       		.uleb128 0x1
 4946 02ac 50       		.byte	0x50
 4947 02ad 9F       		.byte	0x9f
 4948 02ae 04000000 		.4byte	.LVL56
 4949 02b2 0E000000 		.4byte	.LVL57
 4950 02b6 0100     		.2byte	0x1
 4951 02b8 50       		.byte	0x50
 4952 02b9 0E000000 		.4byte	.LVL57
 4953 02bd 18000000 		.4byte	.LFE14
 4954 02c1 0800     		.2byte	0x8
 4955 02c3 F3       		.byte	0xf3
 4956 02c4 01       		.uleb128 0x1
 4957 02c5 50       		.byte	0x50
 4958 02c6 40       		.byte	0x40
 4959 02c7 24       		.byte	0x24
 4960 02c8 40       		.byte	0x40
 4961 02c9 25       		.byte	0x25
 4962 02ca 9F       		.byte	0x9f
 4963 02cb 00000000 		.4byte	0
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 159


 4964 02cf 00000000 		.4byte	0
 4965              	.LLST10:
 4966 02d3 00000000 		.4byte	.LVL58
 4967 02d7 02000000 		.4byte	.LVL59
 4968 02db 0100     		.2byte	0x1
 4969 02dd 50       		.byte	0x50
 4970 02de 02000000 		.4byte	.LVL59
 4971 02e2 0A000000 		.4byte	.LVL60
 4972 02e6 0400     		.2byte	0x4
 4973 02e8 F3       		.byte	0xf3
 4974 02e9 01       		.uleb128 0x1
 4975 02ea 50       		.byte	0x50
 4976 02eb 9F       		.byte	0x9f
 4977 02ec 0A000000 		.4byte	.LVL60
 4978 02f0 14000000 		.4byte	.LVL61
 4979 02f4 0100     		.2byte	0x1
 4980 02f6 52       		.byte	0x52
 4981 02f7 14000000 		.4byte	.LVL61
 4982 02fb 20000000 		.4byte	.LFE17
 4983 02ff 0A00     		.2byte	0xa
 4984 0301 F3       		.byte	0xf3
 4985 0302 01       		.uleb128 0x1
 4986 0303 50       		.byte	0x50
 4987 0304 40       		.byte	0x40
 4988 0305 24       		.byte	0x24
 4989 0306 4E       		.byte	0x4e
 4990 0307 3F       		.byte	0x3f
 4991 0308 24       		.byte	0x24
 4992 0309 1A       		.byte	0x1a
 4993 030a 9F       		.byte	0x9f
 4994 030b 00000000 		.4byte	0
 4995 030f 00000000 		.4byte	0
 4996              	.LLST11:
 4997 0313 00000000 		.4byte	.LVL62
 4998 0317 08000000 		.4byte	.LVL64
 4999 031b 0100     		.2byte	0x1
 5000 031d 50       		.byte	0x50
 5001 031e 08000000 		.4byte	.LVL64
 5002 0322 10000000 		.4byte	.LFE22
 5003 0326 0500     		.2byte	0x5
 5004 0328 03       		.byte	0x3
 5005 0329 04000000 		.4byte	cySysWdtCallback
 5006 032d 00000000 		.4byte	0
 5007 0331 00000000 		.4byte	0
 5008              	.LLST12:
 5009 0335 00000000 		.4byte	.LVL62
 5010 0339 04000000 		.4byte	.LVL63
 5011 033d 0200     		.2byte	0x2
 5012 033f 30       		.byte	0x30
 5013 0340 9F       		.byte	0x9f
 5014 0341 04000000 		.4byte	.LVL63
 5015 0345 10000000 		.4byte	.LFE22
 5016 0349 0100     		.2byte	0x1
 5017 034b 52       		.byte	0x52
 5018 034c 00000000 		.4byte	0
 5019 0350 00000000 		.4byte	0
 5020              	.LLST13:
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 160


 5021 0354 00000000 		.4byte	.LVL67
 5022 0358 07000000 		.4byte	.LVL68-1
 5023 035c 0100     		.2byte	0x1
 5024 035e 50       		.byte	0x50
 5025 035f 07000000 		.4byte	.LVL68-1
 5026 0363 38000000 		.4byte	.LVL71
 5027 0367 0100     		.2byte	0x1
 5028 0369 54       		.byte	0x54
 5029 036a 38000000 		.4byte	.LVL71
 5030 036e 68000000 		.4byte	.LFE26
 5031 0372 0400     		.2byte	0x4
 5032 0374 F3       		.byte	0xf3
 5033 0375 01       		.uleb128 0x1
 5034 0376 50       		.byte	0x50
 5035 0377 9F       		.byte	0x9f
 5036 0378 00000000 		.4byte	0
 5037 037c 00000000 		.4byte	0
 5038              	.LLST14:
 5039 0380 2E000000 		.4byte	.LVL70
 5040 0384 41000000 		.4byte	.LVL72-1
 5041 0388 0100     		.2byte	0x1
 5042 038a 50       		.byte	0x50
 5043 038b 00000000 		.4byte	0
 5044 038f 00000000 		.4byte	0
 5045              	.LLST15:
 5046 0393 00000000 		.4byte	.LVL73
 5047 0397 0A000000 		.4byte	.LVL74
 5048 039b 0100     		.2byte	0x1
 5049 039d 50       		.byte	0x50
 5050 039e 0A000000 		.4byte	.LVL74
 5051 03a2 14000000 		.4byte	.LVL76
 5052 03a6 0100     		.2byte	0x1
 5053 03a8 54       		.byte	0x54
 5054 03a9 14000000 		.4byte	.LVL76
 5055 03ad 24000000 		.4byte	.LFE27
 5056 03b1 0400     		.2byte	0x4
 5057 03b3 F3       		.byte	0xf3
 5058 03b4 01       		.uleb128 0x1
 5059 03b5 50       		.byte	0x50
 5060 03b6 9F       		.byte	0x9f
 5061 03b7 00000000 		.4byte	0
 5062 03bb 00000000 		.4byte	0
 5063              	.LLST16:
 5064 03bf 00000000 		.4byte	.LVL77
 5065 03c3 0C000000 		.4byte	.LVL78
 5066 03c7 0100     		.2byte	0x1
 5067 03c9 50       		.byte	0x50
 5068 03ca 0C000000 		.4byte	.LVL78
 5069 03ce 2A000000 		.4byte	.LVL82
 5070 03d2 0100     		.2byte	0x1
 5071 03d4 55       		.byte	0x55
 5072 03d5 2A000000 		.4byte	.LVL82
 5073 03d9 40000000 		.4byte	.LFE28
 5074 03dd 0400     		.2byte	0x4
 5075 03df F3       		.byte	0xf3
 5076 03e0 01       		.uleb128 0x1
 5077 03e1 50       		.byte	0x50
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 161


 5078 03e2 9F       		.byte	0x9f
 5079 03e3 00000000 		.4byte	0
 5080 03e7 00000000 		.4byte	0
 5081              	.LLST17:
 5082 03eb 00000000 		.4byte	.LVL77
 5083 03ef 0F000000 		.4byte	.LVL79-1
 5084 03f3 0100     		.2byte	0x1
 5085 03f5 51       		.byte	0x51
 5086 03f6 0F000000 		.4byte	.LVL79-1
 5087 03fa 34000000 		.4byte	.LVL84
 5088 03fe 0100     		.2byte	0x1
 5089 0400 54       		.byte	0x54
 5090 0401 34000000 		.4byte	.LVL84
 5091 0405 40000000 		.4byte	.LFE28
 5092 0409 0400     		.2byte	0x4
 5093 040b F3       		.byte	0xf3
 5094 040c 01       		.uleb128 0x1
 5095 040d 51       		.byte	0x51
 5096 040e 9F       		.byte	0x9f
 5097 040f 00000000 		.4byte	0
 5098 0413 00000000 		.4byte	0
 5099              	.LLST18:
 5100 0417 32000000 		.4byte	.LVL83
 5101 041b 38000000 		.4byte	.LVL85
 5102 041f 0100     		.2byte	0x1
 5103 0421 53       		.byte	0x53
 5104 0422 38000000 		.4byte	.LVL85
 5105 0426 3A000000 		.4byte	.LVL86
 5106 042a 0100     		.2byte	0x1
 5107 042c 54       		.byte	0x54
 5108 042d 00000000 		.4byte	0
 5109 0431 00000000 		.4byte	0
 5110              	.LLST19:
 5111 0435 00000000 		.4byte	.LVL87
 5112 0439 06000000 		.4byte	.LVL88
 5113 043d 0100     		.2byte	0x1
 5114 043f 50       		.byte	0x50
 5115 0440 06000000 		.4byte	.LVL88
 5116 0444 08000000 		.4byte	.LVL89
 5117 0448 0100     		.2byte	0x1
 5118 044a 53       		.byte	0x53
 5119 044b 08000000 		.4byte	.LVL89
 5120 044f 14000000 		.4byte	.LFE29
 5121 0453 0400     		.2byte	0x4
 5122 0455 F3       		.byte	0xf3
 5123 0456 01       		.uleb128 0x1
 5124 0457 50       		.byte	0x50
 5125 0458 9F       		.byte	0x9f
 5126 0459 00000000 		.4byte	0
 5127 045d 00000000 		.4byte	0
 5128              	.LLST20:
 5129 0461 00000000 		.4byte	.LVL90
 5130 0465 0C000000 		.4byte	.LVL91
 5131 0469 0100     		.2byte	0x1
 5132 046b 50       		.byte	0x50
 5133 046c 0C000000 		.4byte	.LVL91
 5134 0470 20000000 		.4byte	.LVL94
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 162


 5135 0474 0100     		.2byte	0x1
 5136 0476 54       		.byte	0x54
 5137 0477 20000000 		.4byte	.LVL94
 5138 047b 34000000 		.4byte	.LFE30
 5139 047f 0400     		.2byte	0x4
 5140 0481 F3       		.byte	0xf3
 5141 0482 01       		.uleb128 0x1
 5142 0483 50       		.byte	0x50
 5143 0484 9F       		.byte	0x9f
 5144 0485 00000000 		.4byte	0
 5145 0489 00000000 		.4byte	0
 5146              	.LLST21:
 5147 048d 00000000 		.4byte	.LVL90
 5148 0491 0F000000 		.4byte	.LVL92-1
 5149 0495 0100     		.2byte	0x1
 5150 0497 51       		.byte	0x51
 5151 0498 0F000000 		.4byte	.LVL92-1
 5152 049c 2A000000 		.4byte	.LVL96
 5153 04a0 0100     		.2byte	0x1
 5154 04a2 55       		.byte	0x55
 5155 04a3 2A000000 		.4byte	.LVL96
 5156 04a7 34000000 		.4byte	.LFE30
 5157 04ab 0400     		.2byte	0x4
 5158 04ad F3       		.byte	0xf3
 5159 04ae 01       		.uleb128 0x1
 5160 04af 51       		.byte	0x51
 5161 04b0 9F       		.byte	0x9f
 5162 04b1 00000000 		.4byte	0
 5163 04b5 00000000 		.4byte	0
 5164              	.LLST22:
 5165 04b9 28000000 		.4byte	.LVL95
 5166 04bd 2C000000 		.4byte	.LVL97
 5167 04c1 0100     		.2byte	0x1
 5168 04c3 53       		.byte	0x53
 5169 04c4 2C000000 		.4byte	.LVL97
 5170 04c8 2E000000 		.4byte	.LVL98
 5171 04cc 0100     		.2byte	0x1
 5172 04ce 55       		.byte	0x55
 5173 04cf 00000000 		.4byte	0
 5174 04d3 00000000 		.4byte	0
 5175              	.LLST23:
 5176 04d7 00000000 		.4byte	.LVL99
 5177 04db 0A000000 		.4byte	.LVL100
 5178 04df 0100     		.2byte	0x1
 5179 04e1 50       		.byte	0x50
 5180 04e2 0A000000 		.4byte	.LVL100
 5181 04e6 14000000 		.4byte	.LVL102
 5182 04ea 0100     		.2byte	0x1
 5183 04ec 54       		.byte	0x54
 5184 04ed 14000000 		.4byte	.LVL102
 5185 04f1 24000000 		.4byte	.LFE31
 5186 04f5 0400     		.2byte	0x4
 5187 04f7 F3       		.byte	0xf3
 5188 04f8 01       		.uleb128 0x1
 5189 04f9 50       		.byte	0x50
 5190 04fa 9F       		.byte	0x9f
 5191 04fb 00000000 		.4byte	0
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 163


 5192 04ff 00000000 		.4byte	0
 5193              	.LLST24:
 5194 0503 00000000 		.4byte	.LVL103
 5195 0507 10000000 		.4byte	.LVL104
 5196 050b 0100     		.2byte	0x1
 5197 050d 50       		.byte	0x50
 5198 050e 10000000 		.4byte	.LVL104
 5199 0512 36000000 		.4byte	.LVL108
 5200 0516 0100     		.2byte	0x1
 5201 0518 54       		.byte	0x54
 5202 0519 36000000 		.4byte	.LVL108
 5203 051d 3C000000 		.4byte	.LFE32
 5204 0521 0400     		.2byte	0x4
 5205 0523 F3       		.byte	0xf3
 5206 0524 01       		.uleb128 0x1
 5207 0525 50       		.byte	0x50
 5208 0526 9F       		.byte	0x9f
 5209 0527 00000000 		.4byte	0
 5210 052b 00000000 		.4byte	0
 5211              	.LLST25:
 5212 052f 00000000 		.4byte	.LVL109
 5213 0533 10000000 		.4byte	.LVL110
 5214 0537 0100     		.2byte	0x1
 5215 0539 50       		.byte	0x50
 5216 053a 10000000 		.4byte	.LVL110
 5217 053e 36000000 		.4byte	.LVL114
 5218 0542 0100     		.2byte	0x1
 5219 0544 54       		.byte	0x54
 5220 0545 36000000 		.4byte	.LVL114
 5221 0549 3C000000 		.4byte	.LFE33
 5222 054d 0400     		.2byte	0x4
 5223 054f F3       		.byte	0xf3
 5224 0550 01       		.uleb128 0x1
 5225 0551 50       		.byte	0x50
 5226 0552 9F       		.byte	0x9f
 5227 0553 00000000 		.4byte	0
 5228 0557 00000000 		.4byte	0
 5229              	.LLST26:
 5230 055b 00000000 		.4byte	.LVL115
 5231 055f 06000000 		.4byte	.LVL116
 5232 0563 0100     		.2byte	0x1
 5233 0565 50       		.byte	0x50
 5234 0566 06000000 		.4byte	.LVL116
 5235 056a 28000000 		.4byte	.LVL123
 5236 056e 0100     		.2byte	0x1
 5237 0570 55       		.byte	0x55
 5238 0571 28000000 		.4byte	.LVL123
 5239 0575 34000000 		.4byte	.LFE34
 5240 0579 0400     		.2byte	0x4
 5241 057b F3       		.byte	0xf3
 5242 057c 01       		.uleb128 0x1
 5243 057d 50       		.byte	0x50
 5244 057e 9F       		.byte	0x9f
 5245 057f 00000000 		.4byte	0
 5246 0583 00000000 		.4byte	0
 5247              	.LLST27:
 5248 0587 22000000 		.4byte	.LVL121
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 164


 5249 058b 26000000 		.4byte	.LVL122
 5250 058f 0100     		.2byte	0x1
 5251 0591 51       		.byte	0x51
 5252 0592 26000000 		.4byte	.LVL122
 5253 0596 28000000 		.4byte	.LVL123
 5254 059a 0100     		.2byte	0x1
 5255 059c 53       		.byte	0x53
 5256 059d 28000000 		.4byte	.LVL123
 5257 05a1 2A000000 		.4byte	.LVL124
 5258 05a5 0100     		.2byte	0x1
 5259 05a7 55       		.byte	0x55
 5260 05a8 00000000 		.4byte	0
 5261 05ac 00000000 		.4byte	0
 5262              	.LLST28:
 5263 05b0 00000000 		.4byte	.LVL125
 5264 05b4 0C000000 		.4byte	.LVL126
 5265 05b8 0100     		.2byte	0x1
 5266 05ba 50       		.byte	0x50
 5267 05bb 0C000000 		.4byte	.LVL126
 5268 05bf 28000000 		.4byte	.LVL130
 5269 05c3 0100     		.2byte	0x1
 5270 05c5 55       		.byte	0x55
 5271 05c6 28000000 		.4byte	.LVL130
 5272 05ca 54000000 		.4byte	.LFE36
 5273 05ce 0400     		.2byte	0x4
 5274 05d0 F3       		.byte	0xf3
 5275 05d1 01       		.uleb128 0x1
 5276 05d2 50       		.byte	0x50
 5277 05d3 9F       		.byte	0x9f
 5278 05d4 00000000 		.4byte	0
 5279 05d8 00000000 		.4byte	0
 5280              	.LLST29:
 5281 05dc 00000000 		.4byte	.LVL125
 5282 05e0 0F000000 		.4byte	.LVL127-1
 5283 05e4 0100     		.2byte	0x1
 5284 05e6 51       		.byte	0x51
 5285 05e7 0F000000 		.4byte	.LVL127-1
 5286 05eb 30000000 		.4byte	.LVL132
 5287 05ef 0100     		.2byte	0x1
 5288 05f1 54       		.byte	0x54
 5289 05f2 30000000 		.4byte	.LVL132
 5290 05f6 54000000 		.4byte	.LFE36
 5291 05fa 0400     		.2byte	0x4
 5292 05fc F3       		.byte	0xf3
 5293 05fd 01       		.uleb128 0x1
 5294 05fe 51       		.byte	0x51
 5295 05ff 9F       		.byte	0x9f
 5296 0600 00000000 		.4byte	0
 5297 0604 00000000 		.4byte	0
 5298              	.LLST30:
 5299 0608 26000000 		.4byte	.LVL129
 5300 060c 36000000 		.4byte	.LVL133
 5301 0610 0100     		.2byte	0x1
 5302 0612 53       		.byte	0x53
 5303 0613 00000000 		.4byte	0
 5304 0617 00000000 		.4byte	0
 5305              	.LLST31:
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 165


 5306 061b 00000000 		.4byte	.LVL135
 5307 061f 06000000 		.4byte	.LVL136
 5308 0623 0100     		.2byte	0x1
 5309 0625 50       		.byte	0x50
 5310 0626 06000000 		.4byte	.LVL136
 5311 062a 24000000 		.4byte	.LVL142
 5312 062e 0100     		.2byte	0x1
 5313 0630 54       		.byte	0x54
 5314 0631 24000000 		.4byte	.LVL142
 5315 0635 30000000 		.4byte	.LFE37
 5316 0639 0400     		.2byte	0x4
 5317 063b F3       		.byte	0xf3
 5318 063c 01       		.uleb128 0x1
 5319 063d 50       		.byte	0x50
 5320 063e 9F       		.byte	0x9f
 5321 063f 00000000 		.4byte	0
 5322 0643 00000000 		.4byte	0
 5323              	.LLST32:
 5324 0647 12000000 		.4byte	.LVL138
 5325 064b 18000000 		.4byte	.LVL139
 5326 064f 0100     		.2byte	0x1
 5327 0651 50       		.byte	0x50
 5328 0652 18000000 		.4byte	.LVL139
 5329 0656 22000000 		.4byte	.LVL140
 5330 065a 0100     		.2byte	0x1
 5331 065c 52       		.byte	0x52
 5332 065d 22000000 		.4byte	.LVL140
 5333 0661 24000000 		.4byte	.LVL141
 5334 0665 0100     		.2byte	0x1
 5335 0667 50       		.byte	0x50
 5336 0668 00000000 		.4byte	0
 5337 066c 00000000 		.4byte	0
 5338              	.LLST33:
 5339 0670 00000000 		.4byte	.LVL143
 5340 0674 0A000000 		.4byte	.LVL144
 5341 0678 0100     		.2byte	0x1
 5342 067a 50       		.byte	0x50
 5343 067b 0A000000 		.4byte	.LVL144
 5344 067f 14000000 		.4byte	.LVL146
 5345 0683 0100     		.2byte	0x1
 5346 0685 54       		.byte	0x54
 5347 0686 14000000 		.4byte	.LVL146
 5348 068a 20000000 		.4byte	.LFE39
 5349 068e 0400     		.2byte	0x4
 5350 0690 F3       		.byte	0xf3
 5351 0691 01       		.uleb128 0x1
 5352 0692 50       		.byte	0x50
 5353 0693 9F       		.byte	0x9f
 5354 0694 00000000 		.4byte	0
 5355 0698 00000000 		.4byte	0
 5356              	.LLST34:
 5357 069c 00000000 		.4byte	.LVL147
 5358 06a0 14000000 		.4byte	.LVL149
 5359 06a4 0100     		.2byte	0x1
 5360 06a6 50       		.byte	0x50
 5361 06a7 14000000 		.4byte	.LVL149
 5362 06ab 1A000000 		.4byte	.LVL151
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 166


 5363 06af 0400     		.2byte	0x4
 5364 06b1 F3       		.byte	0xf3
 5365 06b2 01       		.uleb128 0x1
 5366 06b3 50       		.byte	0x50
 5367 06b4 9F       		.byte	0x9f
 5368 06b5 1A000000 		.4byte	.LVL151
 5369 06b9 1E000000 		.4byte	.LVL152
 5370 06bd 0100     		.2byte	0x1
 5371 06bf 50       		.byte	0x50
 5372 06c0 1E000000 		.4byte	.LVL152
 5373 06c4 22000000 		.4byte	.LVL154
 5374 06c8 0400     		.2byte	0x4
 5375 06ca F3       		.byte	0xf3
 5376 06cb 01       		.uleb128 0x1
 5377 06cc 50       		.byte	0x50
 5378 06cd 9F       		.byte	0x9f
 5379 06ce 22000000 		.4byte	.LVL154
 5380 06d2 26000000 		.4byte	.LVL155
 5381 06d6 0100     		.2byte	0x1
 5382 06d8 50       		.byte	0x50
 5383 06d9 26000000 		.4byte	.LVL155
 5384 06dd 28000000 		.4byte	.LVL156
 5385 06e1 0400     		.2byte	0x4
 5386 06e3 F3       		.byte	0xf3
 5387 06e4 01       		.uleb128 0x1
 5388 06e5 50       		.byte	0x50
 5389 06e6 9F       		.byte	0x9f
 5390 06e7 28000000 		.4byte	.LVL156
 5391 06eb 2A000000 		.4byte	.LVL157
 5392 06ef 0100     		.2byte	0x1
 5393 06f1 50       		.byte	0x50
 5394 06f2 2A000000 		.4byte	.LVL157
 5395 06f6 3C000000 		.4byte	.LFE40
 5396 06fa 0400     		.2byte	0x4
 5397 06fc F3       		.byte	0xf3
 5398 06fd 01       		.uleb128 0x1
 5399 06fe 50       		.byte	0x50
 5400 06ff 9F       		.byte	0x9f
 5401 0700 00000000 		.4byte	0
 5402 0704 00000000 		.4byte	0
 5403              	.LLST35:
 5404 0708 02000000 		.4byte	.LVL148
 5405 070c 18000000 		.4byte	.LVL150
 5406 0710 0200     		.2byte	0x2
 5407 0712 30       		.byte	0x30
 5408 0713 9F       		.byte	0x9f
 5409 0714 18000000 		.4byte	.LVL150
 5410 0718 1A000000 		.4byte	.LVL151
 5411 071c 0100     		.2byte	0x1
 5412 071e 50       		.byte	0x50
 5413 071f 1A000000 		.4byte	.LVL151
 5414 0723 20000000 		.4byte	.LVL153
 5415 0727 0200     		.2byte	0x2
 5416 0729 30       		.byte	0x30
 5417 072a 9F       		.byte	0x9f
 5418 072b 20000000 		.4byte	.LVL153
 5419 072f 22000000 		.4byte	.LVL154
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 167


 5420 0733 0100     		.2byte	0x1
 5421 0735 50       		.byte	0x50
 5422 0736 22000000 		.4byte	.LVL154
 5423 073a 26000000 		.4byte	.LVL155
 5424 073e 0200     		.2byte	0x2
 5425 0740 30       		.byte	0x30
 5426 0741 9F       		.byte	0x9f
 5427 0742 26000000 		.4byte	.LVL155
 5428 0746 28000000 		.4byte	.LVL156
 5429 074a 0100     		.2byte	0x1
 5430 074c 50       		.byte	0x50
 5431 074d 28000000 		.4byte	.LVL156
 5432 0751 30000000 		.4byte	.LVL159
 5433 0755 0200     		.2byte	0x2
 5434 0757 30       		.byte	0x30
 5435 0758 9F       		.byte	0x9f
 5436 0759 30000000 		.4byte	.LVL159
 5437 075d 3C000000 		.4byte	.LFE40
 5438 0761 0100     		.2byte	0x1
 5439 0763 50       		.byte	0x50
 5440 0764 00000000 		.4byte	0
 5441 0768 00000000 		.4byte	0
 5442              	.LLST36:
 5443 076c 00000000 		.4byte	.LVL160
 5444 0770 07000000 		.4byte	.LVL161-1
 5445 0774 0100     		.2byte	0x1
 5446 0776 50       		.byte	0x50
 5447 0777 07000000 		.4byte	.LVL161-1
 5448 077b 1E000000 		.4byte	.LVL164
 5449 077f 0100     		.2byte	0x1
 5450 0781 54       		.byte	0x54
 5451 0782 1E000000 		.4byte	.LVL164
 5452 0786 2C000000 		.4byte	.LFE42
 5453 078a 0A00     		.2byte	0xa
 5454 078c F3       		.byte	0xf3
 5455 078d 01       		.uleb128 0x1
 5456 078e 50       		.byte	0x50
 5457 078f 0C       		.byte	0xc
 5458 0790 04040400 		.4byte	0x40404
 5459 0794 1A       		.byte	0x1a
 5460 0795 9F       		.byte	0x9f
 5461 0796 00000000 		.4byte	0
 5462 079a 00000000 		.4byte	0
 5463              	.LLST37:
 5464 079e 08000000 		.4byte	.LVL161
 5465 07a2 1D000000 		.4byte	.LVL163-1
 5466 07a6 0100     		.2byte	0x1
 5467 07a8 50       		.byte	0x50
 5468 07a9 00000000 		.4byte	0
 5469 07ad 00000000 		.4byte	0
 5470              	.LLST38:
 5471 07b1 00000000 		.4byte	.LVL165
 5472 07b5 08000000 		.4byte	.LVL167
 5473 07b9 0100     		.2byte	0x1
 5474 07bb 50       		.byte	0x50
 5475 07bc 08000000 		.4byte	.LVL167
 5476 07c0 12000000 		.4byte	.LVL169
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 168


 5477 07c4 0400     		.2byte	0x4
 5478 07c6 F3       		.byte	0xf3
 5479 07c7 01       		.uleb128 0x1
 5480 07c8 50       		.byte	0x50
 5481 07c9 9F       		.byte	0x9f
 5482 07ca 12000000 		.4byte	.LVL169
 5483 07ce 14000000 		.4byte	.LVL170
 5484 07d2 0100     		.2byte	0x1
 5485 07d4 50       		.byte	0x50
 5486 07d5 14000000 		.4byte	.LVL170
 5487 07d9 20000000 		.4byte	.LFE43
 5488 07dd 0400     		.2byte	0x4
 5489 07df F3       		.byte	0xf3
 5490 07e0 01       		.uleb128 0x1
 5491 07e1 50       		.byte	0x50
 5492 07e2 9F       		.byte	0x9f
 5493 07e3 00000000 		.4byte	0
 5494 07e7 00000000 		.4byte	0
 5495              	.LLST39:
 5496 07eb 00000000 		.4byte	.LVL165
 5497 07ef 17000000 		.4byte	.LVL171-1
 5498 07f3 0100     		.2byte	0x1
 5499 07f5 51       		.byte	0x51
 5500 07f6 17000000 		.4byte	.LVL171-1
 5501 07fa 20000000 		.4byte	.LFE43
 5502 07fe 0400     		.2byte	0x4
 5503 0800 F3       		.byte	0xf3
 5504 0801 01       		.uleb128 0x1
 5505 0802 51       		.byte	0x51
 5506 0803 9F       		.byte	0x9f
 5507 0804 00000000 		.4byte	0
 5508 0808 00000000 		.4byte	0
 5509              	.LLST40:
 5510 080c 02000000 		.4byte	.LVL166
 5511 0810 0E000000 		.4byte	.LVL168
 5512 0814 0200     		.2byte	0x2
 5513 0816 30       		.byte	0x30
 5514 0817 9F       		.byte	0x9f
 5515 0818 0E000000 		.4byte	.LVL168
 5516 081c 12000000 		.4byte	.LVL169
 5517 0820 0100     		.2byte	0x1
 5518 0822 50       		.byte	0x50
 5519 0823 12000000 		.4byte	.LVL169
 5520 0827 1A000000 		.4byte	.LVL172
 5521 082b 0200     		.2byte	0x2
 5522 082d 30       		.byte	0x30
 5523 082e 9F       		.byte	0x9f
 5524 082f 1A000000 		.4byte	.LVL172
 5525 0833 20000000 		.4byte	.LFE43
 5526 0837 0100     		.2byte	0x1
 5527 0839 50       		.byte	0x50
 5528 083a 00000000 		.4byte	0
 5529 083e 00000000 		.4byte	0
 5530              	.LLST41:
 5531 0842 00000000 		.4byte	.LVL173
 5532 0846 08000000 		.4byte	.LVL175
 5533 084a 0100     		.2byte	0x1
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 169


 5534 084c 50       		.byte	0x50
 5535 084d 08000000 		.4byte	.LVL175
 5536 0851 10000000 		.4byte	.LVL177
 5537 0855 0400     		.2byte	0x4
 5538 0857 F3       		.byte	0xf3
 5539 0858 01       		.uleb128 0x1
 5540 0859 50       		.byte	0x50
 5541 085a 9F       		.byte	0x9f
 5542 085b 10000000 		.4byte	.LVL177
 5543 085f 12000000 		.4byte	.LVL178
 5544 0863 0100     		.2byte	0x1
 5545 0865 50       		.byte	0x50
 5546 0866 12000000 		.4byte	.LVL178
 5547 086a 20000000 		.4byte	.LFE44
 5548 086e 0400     		.2byte	0x4
 5549 0870 F3       		.byte	0xf3
 5550 0871 01       		.uleb128 0x1
 5551 0872 50       		.byte	0x50
 5552 0873 9F       		.byte	0x9f
 5553 0874 00000000 		.4byte	0
 5554 0878 00000000 		.4byte	0
 5555              	.LLST42:
 5556 087c 02000000 		.4byte	.LVL174
 5557 0880 0E000000 		.4byte	.LVL176
 5558 0884 0200     		.2byte	0x2
 5559 0886 30       		.byte	0x30
 5560 0887 9F       		.byte	0x9f
 5561 0888 0E000000 		.4byte	.LVL176
 5562 088c 10000000 		.4byte	.LVL177
 5563 0890 0100     		.2byte	0x1
 5564 0892 50       		.byte	0x50
 5565 0893 10000000 		.4byte	.LVL177
 5566 0897 18000000 		.4byte	.LVL180
 5567 089b 0200     		.2byte	0x2
 5568 089d 30       		.byte	0x30
 5569 089e 9F       		.byte	0x9f
 5570 089f 18000000 		.4byte	.LVL180
 5571 08a3 20000000 		.4byte	.LFE44
 5572 08a7 0100     		.2byte	0x1
 5573 08a9 50       		.byte	0x50
 5574 08aa 00000000 		.4byte	0
 5575 08ae 00000000 		.4byte	0
 5576              	.LLST43:
 5577 08b2 00000000 		.4byte	.LVL181
 5578 08b6 08000000 		.4byte	.LVL182
 5579 08ba 0100     		.2byte	0x1
 5580 08bc 50       		.byte	0x50
 5581 08bd 08000000 		.4byte	.LVL182
 5582 08c1 1E000000 		.4byte	.LVL183
 5583 08c5 0400     		.2byte	0x4
 5584 08c7 F3       		.byte	0xf3
 5585 08c8 01       		.uleb128 0x1
 5586 08c9 50       		.byte	0x50
 5587 08ca 9F       		.byte	0x9f
 5588 08cb 1E000000 		.4byte	.LVL183
 5589 08cf 20000000 		.4byte	.LVL184
 5590 08d3 0100     		.2byte	0x1
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 170


 5591 08d5 50       		.byte	0x50
 5592 08d6 20000000 		.4byte	.LVL184
 5593 08da 34000000 		.4byte	.LFE45
 5594 08de 0400     		.2byte	0x4
 5595 08e0 F3       		.byte	0xf3
 5596 08e1 01       		.uleb128 0x1
 5597 08e2 50       		.byte	0x50
 5598 08e3 9F       		.byte	0x9f
 5599 08e4 00000000 		.4byte	0
 5600 08e8 00000000 		.4byte	0
 5601              	.LLST44:
 5602 08ec 00000000 		.4byte	.LVL186
 5603 08f0 08000000 		.4byte	.LVL187
 5604 08f4 0100     		.2byte	0x1
 5605 08f6 50       		.byte	0x50
 5606 08f7 08000000 		.4byte	.LVL187
 5607 08fb 16000000 		.4byte	.LVL188
 5608 08ff 0400     		.2byte	0x4
 5609 0901 F3       		.byte	0xf3
 5610 0902 01       		.uleb128 0x1
 5611 0903 50       		.byte	0x50
 5612 0904 9F       		.byte	0x9f
 5613 0905 16000000 		.4byte	.LVL188
 5614 0909 18000000 		.4byte	.LVL189
 5615 090d 0100     		.2byte	0x1
 5616 090f 50       		.byte	0x50
 5617 0910 18000000 		.4byte	.LVL189
 5618 0914 28000000 		.4byte	.LFE46
 5619 0918 0400     		.2byte	0x4
 5620 091a F3       		.byte	0xf3
 5621 091b 01       		.uleb128 0x1
 5622 091c 50       		.byte	0x50
 5623 091d 9F       		.byte	0x9f
 5624 091e 00000000 		.4byte	0
 5625 0922 00000000 		.4byte	0
 5626              	.LLST45:
 5627 0926 00000000 		.4byte	.LVL197
 5628 092a 08000000 		.4byte	.LVL198
 5629 092e 0100     		.2byte	0x1
 5630 0930 50       		.byte	0x50
 5631 0931 08000000 		.4byte	.LVL198
 5632 0935 20000000 		.4byte	.LFE48
 5633 0939 0400     		.2byte	0x4
 5634 093b F3       		.byte	0xf3
 5635 093c 01       		.uleb128 0x1
 5636 093d 50       		.byte	0x50
 5637 093e 9F       		.byte	0x9f
 5638 093f 00000000 		.4byte	0
 5639 0943 00000000 		.4byte	0
 5640              	.LLST46:
 5641 0947 00000000 		.4byte	.LVL199
 5642 094b 0F000000 		.4byte	.LVL200-1
 5643 094f 0100     		.2byte	0x1
 5644 0951 50       		.byte	0x50
 5645 0952 0F000000 		.4byte	.LVL200-1
 5646 0956 5A000000 		.4byte	.LVL209
 5647 095a 0100     		.2byte	0x1
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 171


 5648 095c 54       		.byte	0x54
 5649 095d 5A000000 		.4byte	.LVL209
 5650 0961 6C000000 		.4byte	.LFE50
 5651 0965 0400     		.2byte	0x4
 5652 0967 F3       		.byte	0xf3
 5653 0968 01       		.uleb128 0x1
 5654 0969 50       		.byte	0x50
 5655 096a 9F       		.byte	0x9f
 5656 096b 00000000 		.4byte	0
 5657 096f 00000000 		.4byte	0
 5658              	.LLST47:
 5659 0973 00000000 		.4byte	.LVL199
 5660 0977 0F000000 		.4byte	.LVL200-1
 5661 097b 0100     		.2byte	0x1
 5662 097d 51       		.byte	0x51
 5663 097e 0F000000 		.4byte	.LVL200-1
 5664 0982 6C000000 		.4byte	.LFE50
 5665 0986 0400     		.2byte	0x4
 5666 0988 F3       		.byte	0xf3
 5667 0989 01       		.uleb128 0x1
 5668 098a 51       		.byte	0x51
 5669 098b 9F       		.byte	0x9f
 5670 098c 00000000 		.4byte	0
 5671 0990 00000000 		.4byte	0
 5672              	.LLST48:
 5673 0994 00000000 		.4byte	.LVL199
 5674 0998 0F000000 		.4byte	.LVL200-1
 5675 099c 0100     		.2byte	0x1
 5676 099e 52       		.byte	0x52
 5677 099f 0F000000 		.4byte	.LVL200-1
 5678 09a3 5A000000 		.4byte	.LVL210
 5679 09a7 0100     		.2byte	0x1
 5680 09a9 55       		.byte	0x55
 5681 09aa 5A000000 		.4byte	.LVL210
 5682 09ae 6C000000 		.4byte	.LFE50
 5683 09b2 0400     		.2byte	0x4
 5684 09b4 F3       		.byte	0xf3
 5685 09b5 01       		.uleb128 0x1
 5686 09b6 52       		.byte	0x52
 5687 09b7 9F       		.byte	0x9f
 5688 09b8 00000000 		.4byte	0
 5689 09bc 00000000 		.4byte	0
 5690              	.LLST49:
 5691 09c0 24000000 		.4byte	.LVL201
 5692 09c4 2A000000 		.4byte	.LVL202
 5693 09c8 0100     		.2byte	0x1
 5694 09ca 50       		.byte	0x50
 5695 09cb 2E000000 		.4byte	.LVL203
 5696 09cf 34000000 		.4byte	.LVL204
 5697 09d3 0100     		.2byte	0x1
 5698 09d5 50       		.byte	0x50
 5699 09d6 3A000000 		.4byte	.LVL205
 5700 09da 54000000 		.4byte	.LVL207
 5701 09de 0100     		.2byte	0x1
 5702 09e0 56       		.byte	0x56
 5703 09e1 00000000 		.4byte	0
 5704 09e5 00000000 		.4byte	0
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 172


 5705              	.LLST50:
 5706 09e9 00000000 		.4byte	.LVL211
 5707 09ed 0F000000 		.4byte	.LVL212-1
 5708 09f1 0100     		.2byte	0x1
 5709 09f3 50       		.byte	0x50
 5710 09f4 0F000000 		.4byte	.LVL212-1
 5711 09f8 36000000 		.4byte	.LVL218
 5712 09fc 0100     		.2byte	0x1
 5713 09fe 54       		.byte	0x54
 5714 09ff 36000000 		.4byte	.LVL218
 5715 0a03 3C000000 		.4byte	.LFE49
 5716 0a07 0400     		.2byte	0x4
 5717 0a09 F3       		.byte	0xf3
 5718 0a0a 01       		.uleb128 0x1
 5719 0a0b 50       		.byte	0x50
 5720 0a0c 9F       		.byte	0x9f
 5721 0a0d 00000000 		.4byte	0
 5722 0a11 00000000 		.4byte	0
 5723              	.LLST51:
 5724 0a15 00000000 		.4byte	.LVL211
 5725 0a19 0F000000 		.4byte	.LVL212-1
 5726 0a1d 0100     		.2byte	0x1
 5727 0a1f 51       		.byte	0x51
 5728 0a20 0F000000 		.4byte	.LVL212-1
 5729 0a24 3C000000 		.4byte	.LFE49
 5730 0a28 0400     		.2byte	0x4
 5731 0a2a F3       		.byte	0xf3
 5732 0a2b 01       		.uleb128 0x1
 5733 0a2c 51       		.byte	0x51
 5734 0a2d 9F       		.byte	0x9f
 5735 0a2e 00000000 		.4byte	0
 5736 0a32 00000000 		.4byte	0
 5737              	.LLST52:
 5738 0a36 00000000 		.4byte	.LVL211
 5739 0a3a 0F000000 		.4byte	.LVL212-1
 5740 0a3e 0100     		.2byte	0x1
 5741 0a40 52       		.byte	0x52
 5742 0a41 0F000000 		.4byte	.LVL212-1
 5743 0a45 36000000 		.4byte	.LVL219
 5744 0a49 0100     		.2byte	0x1
 5745 0a4b 55       		.byte	0x55
 5746 0a4c 36000000 		.4byte	.LVL219
 5747 0a50 3C000000 		.4byte	.LFE49
 5748 0a54 0400     		.2byte	0x4
 5749 0a56 F3       		.byte	0xf3
 5750 0a57 01       		.uleb128 0x1
 5751 0a58 52       		.byte	0x52
 5752 0a59 9F       		.byte	0x9f
 5753 0a5a 00000000 		.4byte	0
 5754 0a5e 00000000 		.4byte	0
 5755              	.LLST53:
 5756 0a62 20000000 		.4byte	.LVL213
 5757 0a66 2A000000 		.4byte	.LVL215
 5758 0a6a 0100     		.2byte	0x1
 5759 0a6c 50       		.byte	0x50
 5760 0a6d 00000000 		.4byte	0
 5761 0a71 00000000 		.4byte	0
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 173


 5762              	.LLST54:
 5763 0a75 26000000 		.4byte	.LVL214
 5764 0a79 2D000000 		.4byte	.LVL216-1
 5765 0a7d 0100     		.2byte	0x1
 5766 0a7f 52       		.byte	0x52
 5767 0a80 00000000 		.4byte	0
 5768 0a84 00000000 		.4byte	0
 5769              		.section	.debug_aranges,"",%progbits
 5770 0000 A4010000 		.4byte	0x1a4
 5771 0004 0200     		.2byte	0x2
 5772 0006 00000000 		.4byte	.Ldebug_info0
 5773 000a 04       		.byte	0x4
 5774 000b 00       		.byte	0
 5775 000c 0000     		.2byte	0
 5776 000e 0000     		.2byte	0
 5777 0010 00000000 		.4byte	.LFB25
 5778 0014 10000000 		.4byte	.LFE25-.LFB25
 5779 0018 00000000 		.4byte	.LFB1
 5780 001c 14000000 		.4byte	.LFE1-.LFB1
 5781 0020 00000000 		.4byte	.LFB2
 5782 0024 10000000 		.4byte	.LFE2-.LFB2
 5783 0028 00000000 		.4byte	.LFB3
 5784 002c 34000000 		.4byte	.LFE3-.LFB3
 5785 0030 00000000 		.4byte	.LFB4
 5786 0034 28000000 		.4byte	.LFE4-.LFB4
 5787 0038 00000000 		.4byte	.LFB5
 5788 003c 0C010000 		.4byte	.LFE5-.LFB5
 5789 0040 00000000 		.4byte	.LFB6
 5790 0044 40000000 		.4byte	.LFE6-.LFB6
 5791 0048 00000000 		.4byte	.LFB8
 5792 004c 14000000 		.4byte	.LFE8-.LFB8
 5793 0050 00000000 		.4byte	.LFB7
 5794 0054 1C000000 		.4byte	.LFE7-.LFB7
 5795 0058 00000000 		.4byte	.LFB9
 5796 005c 4C000000 		.4byte	.LFE9-.LFB9
 5797 0060 00000000 		.4byte	.LFB10
 5798 0064 2C000000 		.4byte	.LFE10-.LFB10
 5799 0068 00000000 		.4byte	.LFB11
 5800 006c 1C000000 		.4byte	.LFE11-.LFB11
 5801 0070 00000000 		.4byte	.LFB12
 5802 0074 0C000000 		.4byte	.LFE12-.LFB12
 5803 0078 00000000 		.4byte	.LFB13
 5804 007c 10000000 		.4byte	.LFE13-.LFB13
 5805 0080 00000000 		.4byte	.LFB14
 5806 0084 18000000 		.4byte	.LFE14-.LFB14
 5807 0088 00000000 		.4byte	.LFB15
 5808 008c 10000000 		.4byte	.LFE15-.LFB15
 5809 0090 00000000 		.4byte	.LFB16
 5810 0094 0C000000 		.4byte	.LFE16-.LFB16
 5811 0098 00000000 		.4byte	.LFB17
 5812 009c 20000000 		.4byte	.LFE17-.LFB17
 5813 00a0 00000000 		.4byte	.LFB18
 5814 00a4 10000000 		.4byte	.LFE18-.LFB18
 5815 00a8 00000000 		.4byte	.LFB19
 5816 00ac 10000000 		.4byte	.LFE19-.LFB19
 5817 00b0 00000000 		.4byte	.LFB20
 5818 00b4 10000000 		.4byte	.LFE20-.LFB20
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 174


 5819 00b8 00000000 		.4byte	.LFB21
 5820 00bc 10000000 		.4byte	.LFE21-.LFB21
 5821 00c0 00000000 		.4byte	.LFB22
 5822 00c4 10000000 		.4byte	.LFE22-.LFB22
 5823 00c8 00000000 		.4byte	.LFB23
 5824 00cc 0C000000 		.4byte	.LFE23-.LFB23
 5825 00d0 00000000 		.4byte	.LFB24
 5826 00d4 18000000 		.4byte	.LFE24-.LFB24
 5827 00d8 00000000 		.4byte	.LFB26
 5828 00dc 68000000 		.4byte	.LFE26-.LFB26
 5829 00e0 00000000 		.4byte	.LFB27
 5830 00e4 24000000 		.4byte	.LFE27-.LFB27
 5831 00e8 00000000 		.4byte	.LFB28
 5832 00ec 40000000 		.4byte	.LFE28-.LFB28
 5833 00f0 00000000 		.4byte	.LFB29
 5834 00f4 14000000 		.4byte	.LFE29-.LFB29
 5835 00f8 00000000 		.4byte	.LFB30
 5836 00fc 34000000 		.4byte	.LFE30-.LFB30
 5837 0100 00000000 		.4byte	.LFB31
 5838 0104 24000000 		.4byte	.LFE31-.LFB31
 5839 0108 00000000 		.4byte	.LFB32
 5840 010c 3C000000 		.4byte	.LFE32-.LFB32
 5841 0110 00000000 		.4byte	.LFB33
 5842 0114 3C000000 		.4byte	.LFE33-.LFB33
 5843 0118 00000000 		.4byte	.LFB34
 5844 011c 34000000 		.4byte	.LFE34-.LFB34
 5845 0120 00000000 		.4byte	.LFB35
 5846 0124 14000000 		.4byte	.LFE35-.LFB35
 5847 0128 00000000 		.4byte	.LFB36
 5848 012c 54000000 		.4byte	.LFE36-.LFB36
 5849 0130 00000000 		.4byte	.LFB37
 5850 0134 30000000 		.4byte	.LFE37-.LFB37
 5851 0138 00000000 		.4byte	.LFB38
 5852 013c 10000000 		.4byte	.LFE38-.LFB38
 5853 0140 00000000 		.4byte	.LFB39
 5854 0144 20000000 		.4byte	.LFE39-.LFB39
 5855 0148 00000000 		.4byte	.LFB40
 5856 014c 3C000000 		.4byte	.LFE40-.LFB40
 5857 0150 00000000 		.4byte	.LFB41
 5858 0154 14000000 		.4byte	.LFE41-.LFB41
 5859 0158 00000000 		.4byte	.LFB42
 5860 015c 2C000000 		.4byte	.LFE42-.LFB42
 5861 0160 00000000 		.4byte	.LFB43
 5862 0164 20000000 		.4byte	.LFE43-.LFB43
 5863 0168 00000000 		.4byte	.LFB44
 5864 016c 20000000 		.4byte	.LFE44-.LFB44
 5865 0170 00000000 		.4byte	.LFB45
 5866 0174 34000000 		.4byte	.LFE45-.LFB45
 5867 0178 00000000 		.4byte	.LFB46
 5868 017c 28000000 		.4byte	.LFE46-.LFB46
 5869 0180 00000000 		.4byte	.LFB47
 5870 0184 A4000000 		.4byte	.LFE47-.LFB47
 5871 0188 00000000 		.4byte	.LFB48
 5872 018c 20000000 		.4byte	.LFE48-.LFB48
 5873 0190 00000000 		.4byte	.LFB50
 5874 0194 6C000000 		.4byte	.LFE50-.LFB50
 5875 0198 00000000 		.4byte	.LFB49
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 175


 5876 019c 3C000000 		.4byte	.LFE49-.LFB49
 5877 01a0 00000000 		.4byte	0
 5878 01a4 00000000 		.4byte	0
 5879              		.section	.debug_ranges,"",%progbits
 5880              	.Ldebug_ranges0:
 5881 0000 00000000 		.4byte	.LFB25
 5882 0004 10000000 		.4byte	.LFE25
 5883 0008 00000000 		.4byte	.LFB1
 5884 000c 14000000 		.4byte	.LFE1
 5885 0010 00000000 		.4byte	.LFB2
 5886 0014 10000000 		.4byte	.LFE2
 5887 0018 00000000 		.4byte	.LFB3
 5888 001c 34000000 		.4byte	.LFE3
 5889 0020 00000000 		.4byte	.LFB4
 5890 0024 28000000 		.4byte	.LFE4
 5891 0028 00000000 		.4byte	.LFB5
 5892 002c 0C010000 		.4byte	.LFE5
 5893 0030 00000000 		.4byte	.LFB6
 5894 0034 40000000 		.4byte	.LFE6
 5895 0038 00000000 		.4byte	.LFB8
 5896 003c 14000000 		.4byte	.LFE8
 5897 0040 00000000 		.4byte	.LFB7
 5898 0044 1C000000 		.4byte	.LFE7
 5899 0048 00000000 		.4byte	.LFB9
 5900 004c 4C000000 		.4byte	.LFE9
 5901 0050 00000000 		.4byte	.LFB10
 5902 0054 2C000000 		.4byte	.LFE10
 5903 0058 00000000 		.4byte	.LFB11
 5904 005c 1C000000 		.4byte	.LFE11
 5905 0060 00000000 		.4byte	.LFB12
 5906 0064 0C000000 		.4byte	.LFE12
 5907 0068 00000000 		.4byte	.LFB13
 5908 006c 10000000 		.4byte	.LFE13
 5909 0070 00000000 		.4byte	.LFB14
 5910 0074 18000000 		.4byte	.LFE14
 5911 0078 00000000 		.4byte	.LFB15
 5912 007c 10000000 		.4byte	.LFE15
 5913 0080 00000000 		.4byte	.LFB16
 5914 0084 0C000000 		.4byte	.LFE16
 5915 0088 00000000 		.4byte	.LFB17
 5916 008c 20000000 		.4byte	.LFE17
 5917 0090 00000000 		.4byte	.LFB18
 5918 0094 10000000 		.4byte	.LFE18
 5919 0098 00000000 		.4byte	.LFB19
 5920 009c 10000000 		.4byte	.LFE19
 5921 00a0 00000000 		.4byte	.LFB20
 5922 00a4 10000000 		.4byte	.LFE20
 5923 00a8 00000000 		.4byte	.LFB21
 5924 00ac 10000000 		.4byte	.LFE21
 5925 00b0 00000000 		.4byte	.LFB22
 5926 00b4 10000000 		.4byte	.LFE22
 5927 00b8 00000000 		.4byte	.LFB23
 5928 00bc 0C000000 		.4byte	.LFE23
 5929 00c0 00000000 		.4byte	.LFB24
 5930 00c4 18000000 		.4byte	.LFE24
 5931 00c8 00000000 		.4byte	.LFB26
 5932 00cc 68000000 		.4byte	.LFE26
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 176


 5933 00d0 00000000 		.4byte	.LFB27
 5934 00d4 24000000 		.4byte	.LFE27
 5935 00d8 00000000 		.4byte	.LFB28
 5936 00dc 40000000 		.4byte	.LFE28
 5937 00e0 00000000 		.4byte	.LFB29
 5938 00e4 14000000 		.4byte	.LFE29
 5939 00e8 00000000 		.4byte	.LFB30
 5940 00ec 34000000 		.4byte	.LFE30
 5941 00f0 00000000 		.4byte	.LFB31
 5942 00f4 24000000 		.4byte	.LFE31
 5943 00f8 00000000 		.4byte	.LFB32
 5944 00fc 3C000000 		.4byte	.LFE32
 5945 0100 00000000 		.4byte	.LFB33
 5946 0104 3C000000 		.4byte	.LFE33
 5947 0108 00000000 		.4byte	.LFB34
 5948 010c 34000000 		.4byte	.LFE34
 5949 0110 00000000 		.4byte	.LFB35
 5950 0114 14000000 		.4byte	.LFE35
 5951 0118 00000000 		.4byte	.LFB36
 5952 011c 54000000 		.4byte	.LFE36
 5953 0120 00000000 		.4byte	.LFB37
 5954 0124 30000000 		.4byte	.LFE37
 5955 0128 00000000 		.4byte	.LFB38
 5956 012c 10000000 		.4byte	.LFE38
 5957 0130 00000000 		.4byte	.LFB39
 5958 0134 20000000 		.4byte	.LFE39
 5959 0138 00000000 		.4byte	.LFB40
 5960 013c 3C000000 		.4byte	.LFE40
 5961 0140 00000000 		.4byte	.LFB41
 5962 0144 14000000 		.4byte	.LFE41
 5963 0148 00000000 		.4byte	.LFB42
 5964 014c 2C000000 		.4byte	.LFE42
 5965 0150 00000000 		.4byte	.LFB43
 5966 0154 20000000 		.4byte	.LFE43
 5967 0158 00000000 		.4byte	.LFB44
 5968 015c 20000000 		.4byte	.LFE44
 5969 0160 00000000 		.4byte	.LFB45
 5970 0164 34000000 		.4byte	.LFE45
 5971 0168 00000000 		.4byte	.LFB46
 5972 016c 28000000 		.4byte	.LFE46
 5973 0170 00000000 		.4byte	.LFB47
 5974 0174 A4000000 		.4byte	.LFE47
 5975 0178 00000000 		.4byte	.LFB48
 5976 017c 20000000 		.4byte	.LFE48
 5977 0180 00000000 		.4byte	.LFB50
 5978 0184 6C000000 		.4byte	.LFE50
 5979 0188 00000000 		.4byte	.LFB49
 5980 018c 3C000000 		.4byte	.LFE49
 5981 0190 00000000 		.4byte	0
 5982 0194 00000000 		.4byte	0
 5983              		.section	.debug_line,"",%progbits
 5984              	.Ldebug_line0:
 5985 0000 BD050000 		.section	.debug_str,"MS",%progbits,1
 5985      02005C00 
 5985      00000201 
 5985      FB0E0D00 
 5985      01010101 
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 177


 5986              	.LASF10:
 5987 0000 75696E74 		.ascii	"uint16\000"
 5987      313600
 5988              	.LASF112:
 5989 0007 43794578 		.ascii	"CyExitCriticalSection\000"
 5989      69744372 
 5989      69746963 
 5989      616C5365 
 5989      6374696F 
 5990              	.LASF108:
 5991 001d 63795379 		.ascii	"cySysWdtCallback\000"
 5991      73576474 
 5991      43616C6C 
 5991      6261636B 
 5991      00
 5992              	.LASF67:
 5993 002e 636F756E 		.ascii	"counterNum\000"
 5993      7465724E 
 5993      756D00
 5994              	.LASF86:
 5995 0039 43795379 		.ascii	"CySysTimerGetMatch\000"
 5995      7354696D 
 5995      65724765 
 5995      744D6174 
 5995      636800
 5996              	.LASF21:
 5997 004c 63795469 		.ascii	"cyTimerCallback\000"
 5997      6D657243 
 5997      616C6C62 
 5997      61636B00 
 5998              	.LASF107:
 5999 005c 63795379 		.ascii	"cySysTimerCallback\000"
 5999      7354696D 
 5999      65724361 
 5999      6C6C6261 
 5999      636B00
 6000              	.LASF7:
 6001 006f 6C6F6E67 		.ascii	"long long unsigned int\000"
 6001      206C6F6E 
 6001      6720756E 
 6001      7369676E 
 6001      65642069 
 6002              	.LASF70:
 6003 0086 43795379 		.ascii	"CySysTimerGetMode\000"
 6003      7354696D 
 6003      65724765 
 6003      744D6F64 
 6003      6500
 6004              	.LASF44:
 6005 0098 43795379 		.ascii	"CySysClkWcoEnabled\000"
 6005      73436C6B 
 6005      57636F45 
 6005      6E61626C 
 6005      656400
 6006              	.LASF93:
 6007 00ab 43795379 		.ascii	"CySysTimerEnableIsr\000"
 6007      7354696D 
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 178


 6007      6572456E 
 6007      61626C65 
 6007      49737200 
 6008              	.LASF116:
 6009 00bf 43795379 		.ascii	"CySysClkWcoSetHighPowerMode\000"
 6009      73436C6B 
 6009      57636F53 
 6009      65744869 
 6009      6768506F 
 6010              	.LASF6:
 6011 00db 6C6F6E67 		.ascii	"long long int\000"
 6011      206C6F6E 
 6011      6720696E 
 6011      7400
 6012              	.LASF0:
 6013 00e9 7369676E 		.ascii	"signed char\000"
 6013      65642063 
 6013      68617200 
 6014              	.LASF95:
 6015 00f5 43795379 		.ascii	"CySysTimerIsr\000"
 6015      7354696D 
 6015      65724973 
 6015      7200
 6016              	.LASF59:
 6017 0103 66756E63 		.ascii	"function\000"
 6017      74696F6E 
 6017      00
 6018              	.LASF65:
 6019 010c 696E7465 		.ascii	"interruptState\000"
 6019      72727570 
 6019      74537461 
 6019      746500
 6020              	.LASF54:
 6021 011b 43795379 		.ascii	"CySysWdtGetIgnoreBits\000"
 6021      73576474 
 6021      47657449 
 6021      676E6F72 
 6021      65426974 
 6022              	.LASF20:
 6023 0131 63795764 		.ascii	"cyWdtCallback\000"
 6023      7443616C 
 6023      6C626163 
 6023      6B00
 6024              	.LASF110:
 6025 013f 43794465 		.ascii	"CyDelayUs\000"
 6025      6C617955 
 6025      7300
 6026              	.LASF19:
 6027 0149 63795F73 		.ascii	"cy_sys_timer_delaytype_enum\000"
 6027      79735F74 
 6027      696D6572 
 6027      5F64656C 
 6027      61797479 
 6028              	.LASF84:
 6029 0165 62697473 		.ascii	"bits\000"
 6029      00
 6030              	.LASF4:
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 179


 6031 016a 6C6F6E67 		.ascii	"long int\000"
 6031      20696E74 
 6031      00
 6032              	.LASF82:
 6033 0173 72656756 		.ascii	"regValue\000"
 6033      616C7565 
 6033      00
 6034              	.LASF43:
 6035 017c 636C6F63 		.ascii	"clockSel\000"
 6035      6B53656C 
 6035      00
 6036              	.LASF9:
 6037 0185 75696E74 		.ascii	"uint8\000"
 6037      3800
 6038              	.LASF72:
 6039 018b 656E6162 		.ascii	"enable\000"
 6039      6C6500
 6040              	.LASF13:
 6041 0192 646F7562 		.ascii	"double\000"
 6041      6C6500
 6042              	.LASF29:
 6043 0199 636F6D70 		.ascii	"compensatedCycles\000"
 6043      656E7361 
 6043      74656443 
 6043      79636C65 
 6043      7300
 6044              	.LASF25:
 6045 01ab 43795379 		.ascii	"CySysClkIloStop\000"
 6045      73436C6B 
 6045      496C6F53 
 6045      746F7000 
 6046              	.LASF31:
 6047 01bb 696C6F43 		.ascii	"iloCompensatedCycles\000"
 6047      6F6D7065 
 6047      6E736174 
 6047      65644379 
 6047      636C6573 
 6048              	.LASF97:
 6049 01d0 636F756E 		.ascii	"countersMask\000"
 6049      74657273 
 6049      4D61736B 
 6049      00
 6050              	.LASF71:
 6051 01dd 43795379 		.ascii	"CySysTimerSetClearOnMatch\000"
 6051      7354696D 
 6051      65725365 
 6051      74436C65 
 6051      61724F6E 
 6052              	.LASF11:
 6053 01f7 75696E74 		.ascii	"uint32\000"
 6053      333200
 6054              	.LASF27:
 6055 01fe 43795379 		.ascii	"CySysClkIloStopMeasurement\000"
 6055      73436C6B 
 6055      496C6F53 
 6055      746F704D 
 6055      65617375 
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 180


 6056              	.LASF105:
 6057 0219 74696D65 		.ascii	"timerIsrMask\000"
 6057      72497372 
 6057      4D61736B 
 6057      00
 6058              	.LASF60:
 6059 0226 70726576 		.ascii	"prevCallback\000"
 6059      43616C6C 
 6059      6261636B 
 6059      00
 6060              	.LASF48:
 6061 0233 43795379 		.ascii	"CySysWdtSetMatch\000"
 6061      73576474 
 6061      5365744D 
 6061      61746368 
 6061      00
 6062              	.LASF77:
 6063 0244 43795379 		.ascii	"CySysTimerSetCascade\000"
 6063      7354696D 
 6063      65725365 
 6063      74436173 
 6063      63616465 
 6064              	.LASF46:
 6065 0259 43795379 		.ascii	"CySysWdtEnable\000"
 6065      73576474 
 6065      456E6162 
 6065      6C6500
 6066              	.LASF58:
 6067 0268 43795379 		.ascii	"CySysWdtSetInterruptCallback\000"
 6067      73576474 
 6067      53657449 
 6067      6E746572 
 6067      72757074 
 6068              	.LASF75:
 6069 0285 636F756E 		.ascii	"counterMask\000"
 6069      7465724D 
 6069      61736B00 
 6070              	.LASF91:
 6071 0291 43795379 		.ascii	"CySysTimerGetInterruptCallback\000"
 6071      7354696D 
 6071      65724765 
 6071      74496E74 
 6071      65727275 
 6072              	.LASF8:
 6073 02b0 756E7369 		.ascii	"unsigned int\000"
 6073      676E6564 
 6073      20696E74 
 6073      00
 6074              	.LASF88:
 6075 02bd 43795379 		.ascii	"CySysTimerGetInterruptSource\000"
 6075      7354696D 
 6075      65724765 
 6075      74496E74 
 6075      65727275 
 6076              	.LASF52:
 6077 02da 43795379 		.ascii	"CySysWdtSetIgnoreBits\000"
 6077      73576474 
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 181


 6077      53657449 
 6077      676E6F72 
 6077      65426974 
 6078              	.LASF92:
 6079 02f0 72657443 		.ascii	"retCallback\000"
 6079      616C6C62 
 6079      61636B00 
 6080              	.LASF28:
 6081 02fc 64657369 		.ascii	"desiredDelay\000"
 6081      72656444 
 6081      656C6179 
 6081      00
 6082              	.LASF5:
 6083 0309 6C6F6E67 		.ascii	"long unsigned int\000"
 6083      20756E73 
 6083      69676E65 
 6083      6420696E 
 6083      7400
 6084              	.LASF106:
 6085 031b 636F756E 		.ascii	"counterTimerIntMaskTbl\000"
 6085      74657254 
 6085      696D6572 
 6085      496E744D 
 6085      61736B54 
 6086              	.LASF103:
 6087 0332 6D617463 		.ascii	"matchValue\000"
 6087      6856616C 
 6087      756500
 6088              	.LASF56:
 6089 033d 43795379 		.ascii	"CySysWdtMaskInterrupt\000"
 6089      73576474 
 6089      4D61736B 
 6089      496E7465 
 6089      72727570 
 6090              	.LASF3:
 6091 0353 73686F72 		.ascii	"short unsigned int\000"
 6091      7420756E 
 6091      7369676E 
 6091      65642069 
 6091      6E7400
 6092              	.LASF76:
 6093 0366 43795379 		.ascii	"CySysTimerDisable\000"
 6093      7354696D 
 6093      65724469 
 6093      7361626C 
 6093      6500
 6094              	.LASF45:
 6095 0378 43795379 		.ascii	"CySysWdtGetEnabledStatus\000"
 6095      73576474 
 6095      47657445 
 6095      6E61626C 
 6095      65645374 
 6096              	.LASF61:
 6097 0391 43795379 		.ascii	"CySysWdtGetInterruptCallback\000"
 6097      73576474 
 6097      47657449 
 6097      6E746572 
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 182


 6097      72757074 
 6098              	.LASF85:
 6099 03ae 43795379 		.ascii	"CySysTimerGetToggleBit\000"
 6099      7354696D 
 6099      65724765 
 6099      74546F67 
 6099      676C6542 
 6100              	.LASF62:
 6101 03c5 43795379 		.ascii	"CySysWdtIsr\000"
 6101      73576474 
 6101      49737200 
 6102              	.LASF24:
 6103 03d1 43795379 		.ascii	"CySysClkIloStart\000"
 6103      73436C6B 
 6103      496C6F53 
 6103      74617274 
 6103      00
 6104              	.LASF30:
 6105 03e2 74696D65 		.ascii	"timerSource\000"
 6105      72536F75 
 6105      72636500 
 6106              	.LASF41:
 6107 03ee 706F7765 		.ascii	"powerModeStatus\000"
 6107      724D6F64 
 6107      65537461 
 6107      74757300 
 6108              	.LASF16:
 6109 03fe 72656733 		.ascii	"reg32\000"
 6109      3200
 6110              	.LASF111:
 6111 0404 4379456E 		.ascii	"CyEnterCriticalSection\000"
 6111      74657243 
 6111      72697469 
 6111      63616C53 
 6111      65637469 
 6112              	.LASF117:
 6113 041b 43795379 		.ascii	"CySysClkGetTimerSource\000"
 6113      73436C6B 
 6113      47657454 
 6113      696D6572 
 6113      536F7572 
 6114              	.LASF35:
 6115 0432 72657475 		.ascii	"returnStatus\000"
 6115      726E5374 
 6115      61747573 
 6115      00
 6116              	.LASF64:
 6117 043f 736F7572 		.ascii	"source\000"
 6117      636500
 6118              	.LASF42:
 6119 0446 43795379 		.ascii	"CySysClkWcoClockOutSelect\000"
 6119      73436C6B 
 6119      57636F43 
 6119      6C6F636B 
 6119      4F757453 
 6120              	.LASF23:
 6121 0460 73697A65 		.ascii	"sizetype\000"
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 183


 6121      74797065 
 6121      00
 6122              	.LASF22:
 6123 0469 6C6F6E67 		.ascii	"long double\000"
 6123      20646F75 
 6123      626C6500 
 6124              	.LASF50:
 6125 0475 43795379 		.ascii	"CySysWdtGetMatch\000"
 6125      73576474 
 6125      4765744D 
 6125      61746368 
 6125      00
 6126              	.LASF87:
 6127 0486 43795379 		.ascii	"CySysTimerGetCount\000"
 6127      7354696D 
 6127      65724765 
 6127      74436F75 
 6127      6E7400
 6128              	.LASF49:
 6129 0499 6D617463 		.ascii	"match\000"
 6129      6800
 6130              	.LASF80:
 6131 049f 43795379 		.ascii	"CySysTimerGetCascade\000"
 6131      7354696D 
 6131      65724765 
 6131      74436173 
 6131      63616465 
 6132              	.LASF17:
 6133 04b4 43595F53 		.ascii	"CY_SYS_TIMER_WAIT\000"
 6133      59535F54 
 6133      494D4552 
 6133      5F574149 
 6133      5400
 6134              	.LASF34:
 6135 04c6 63686563 		.ascii	"checkStatus\000"
 6135      6B537461 
 6135      74757300 
 6136              	.LASF118:
 6137 04d2 63796465 		.ascii	"cydelayFreqHz\000"
 6137      6C617946 
 6137      72657148 
 6137      7A00
 6138              	.LASF68:
 6139 04e0 43795379 		.ascii	"CySysTimerSetMode\000"
 6139      7354696D 
 6139      65725365 
 6139      744D6F64 
 6139      6500
 6140              	.LASF55:
 6141 04f2 43795379 		.ascii	"CySysWdtClearInterrupt\000"
 6141      73576474 
 6141      436C6561 
 6141      72496E74 
 6141      65727275 
 6142              	.LASF12:
 6143 0509 666C6F61 		.ascii	"float\000"
 6143      7400
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 184


 6144              	.LASF98:
 6145 050f 43795379 		.ascii	"CySysTimerDelayUntilMatch\000"
 6145      7354696D 
 6145      65724465 
 6145      6C617955 
 6145      6E74696C 
 6146              	.LASF57:
 6147 0529 43795379 		.ascii	"CySysWdtUnmaskInterrupt\000"
 6147      73576474 
 6147      556E6D61 
 6147      736B496E 
 6147      74657272 
 6148              	.LASF53:
 6149 0541 62697473 		.ascii	"bitsNum\000"
 6149      4E756D00 
 6150              	.LASF101:
 6151 0549 43795379 		.ascii	"CySysTimerDelay\000"
 6151      7354696D 
 6151      65724465 
 6151      6C617900 
 6152              	.LASF94:
 6153 0559 43795379 		.ascii	"CySysTimerDisableIsr\000"
 6153      7354696D 
 6153      65724469 
 6153      7361626C 
 6153      65497372 
 6154              	.LASF109:
 6155 056e 43794861 		.ascii	"CyHalt\000"
 6155      6C7400
 6156              	.LASF1:
 6157 0575 756E7369 		.ascii	"unsigned char\000"
 6157      676E6564 
 6157      20636861 
 6157      7200
 6158              	.LASF33:
 6159 0583 636F6D70 		.ascii	"compensateRunningStatus\000"
 6159      656E7361 
 6159      74655275 
 6159      6E6E696E 
 6159      67537461 
 6160              	.LASF102:
 6161 059b 64656C61 		.ascii	"delay\000"
 6161      7900
 6162              	.LASF2:
 6163 05a1 73686F72 		.ascii	"short int\000"
 6163      7420696E 
 6163      7400
 6164              	.LASF96:
 6165 05ab 43795379 		.ascii	"CySysTimerResetCounters\000"
 6165      7354696D 
 6165      65725265 
 6165      73657443 
 6165      6F756E74 
 6166              	.LASF47:
 6167 05c3 43795379 		.ascii	"CySysWdtDisable\000"
 6167      73576474 
 6167      44697361 
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 185


 6167      626C6500 
 6168              	.LASF74:
 6169 05d3 43795379 		.ascii	"CySysTimerEnable\000"
 6169      7354696D 
 6169      6572456E 
 6169      61626C65 
 6169      00
 6170              	.LASF66:
 6171 05e4 43795379 		.ascii	"CySysTimerGetEnabledStatus\000"
 6171      7354696D 
 6171      65724765 
 6171      74456E61 
 6171      626C6564 
 6172              	.LASF26:
 6173 05ff 43795379 		.ascii	"CySysClkIloStartMeasurement\000"
 6173      73436C6B 
 6173      496C6F53 
 6173      74617274 
 6173      4D656173 
 6174              	.LASF79:
 6175 061b 636F756E 		.ascii	"countersEnableStatus\000"
 6175      74657273 
 6175      456E6162 
 6175      6C655374 
 6175      61747573 
 6176              	.LASF114:
 6177 0630 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyLFClk.c\000"
 6177      72617465 
 6177      645F536F 
 6177      75726365 
 6177      5C50536F 
 6178              	.LASF81:
 6179 0651 43795379 		.ascii	"CySysTimerSetMatch\000"
 6179      7354696D 
 6179      65725365 
 6179      744D6174 
 6179      636800
 6180              	.LASF63:
 6181 0664 43795379 		.ascii	"CySysClkSetTimerSource\000"
 6181      73436C6B 
 6181      53657454 
 6181      696D6572 
 6181      536F7572 
 6182              	.LASF37:
 6183 067b 43795379 		.ascii	"CySysClkWcoStop\000"
 6183      73436C6B 
 6183      57636F53 
 6183      746F7000 
 6184              	.LASF113:
 6185 068b 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 6185      43313120 
 6185      352E342E 
 6185      31203230 
 6185      31363036 
 6186 06be 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 6186      20726576 
 6186      6973696F 
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 186


 6186      6E203233 
 6186      37373135 
 6187 06f1 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 6187      67202D66 
 6187      66756E63 
 6187      74696F6E 
 6187      2D736563 
 6188              	.LASF39:
 6189 071d 43795379 		.ascii	"CySysClkWcoSetPowerMode\000"
 6189      73436C6B 
 6189      57636F53 
 6189      6574506F 
 6189      7765724D 
 6190              	.LASF14:
 6191 0735 63686172 		.ascii	"char\000"
 6191      00
 6192              	.LASF40:
 6193 073a 6D6F6465 		.ascii	"mode\000"
 6193      00
 6194              	.LASF51:
 6195 073f 43795379 		.ascii	"CySysWdtGetCount\000"
 6195      73576474 
 6195      47657443 
 6195      6F756E74 
 6195      00
 6196              	.LASF73:
 6197 0750 43795379 		.ascii	"CySysTimerGetClearOnMatch\000"
 6197      7354696D 
 6197      65724765 
 6197      74436C65 
 6197      61724F6E 
 6198              	.LASF100:
 6199 076a 746D7056 		.ascii	"tmpValue\000"
 6199      616C7565 
 6199      00
 6200              	.LASF90:
 6201 0773 43795379 		.ascii	"CySysTimerSetInterruptCallback\000"
 6201      7354696D 
 6201      65725365 
 6201      74496E74 
 6201      65727275 
 6202              	.LASF32:
 6203 0792 64657369 		.ascii	"desiredDelayInCounts\000"
 6203      72656444 
 6203      656C6179 
 6203      496E436F 
 6203      756E7473 
 6204              	.LASF36:
 6205 07a7 43795379 		.ascii	"CySysClkWcoStart\000"
 6205      73436C6B 
 6205      57636F53 
 6205      74617274 
 6205      00
 6206              	.LASF99:
 6207 07b8 64656C61 		.ascii	"delayType\000"
 6207      79547970 
 6207      6500
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 187


 6208              	.LASF69:
 6209 07c2 636F6E66 		.ascii	"configRegValue\000"
 6209      69675265 
 6209      6756616C 
 6209      756500
 6210              	.LASF83:
 6211 07d1 43795379 		.ascii	"CySysTimerSetToggleBit\000"
 6211      7354696D 
 6211      65725365 
 6211      74546F67 
 6211      676C6542 
 6212              	.LASF78:
 6213 07e8 63617363 		.ascii	"cascadeMask\000"
 6213      6164654D 
 6213      61736B00 
 6214              	.LASF115:
 6215 07f4 433A5C55 		.ascii	"C:\\Users\\gcristini\\OneDrive - Datalogic S.p.a\\D"
 6215      73657273 
 6215      5C676372 
 6215      69737469 
 6215      6E695C4F 
 6216 0823 6174615C 		.ascii	"ata\\PhytonWorkspace\\SkorpioTemperatureTest\\PSOC-"
 6216      50687974 
 6216      6F6E576F 
 6216      726B7370 
 6216      6163655C 
 6217 0853 4669726D 		.ascii	"Firmware\\SerialTemperatureSensor.cydsn\000"
 6217      77617265 
 6217      5C536572 
 6217      69616C54 
 6217      656D7065 
 6218              	.LASF15:
 6219 087a 63797374 		.ascii	"cystatus\000"
 6219      61747573 
 6219      00
 6220              	.LASF89:
 6221 0883 43795379 		.ascii	"CySysTimerClearInterrupt\000"
 6221      7354696D 
 6221      6572436C 
 6221      65617249 
 6221      6E746572 
 6222              	.LASF104:
 6223 089c 64697361 		.ascii	"disableTimerServicedIsr\000"
 6223      626C6554 
 6223      696D6572 
 6223      53657276 
 6223      69636564 
 6224              	.LASF38:
 6225 08b4 43795379 		.ascii	"CySysClkIloCompensate\000"
 6225      73436C6B 
 6225      496C6F43 
 6225      6F6D7065 
 6225      6E736174 
 6226              	.LASF18:
 6227 08ca 43595F53 		.ascii	"CY_SYS_TIMER_INTERRUPT\000"
 6227      59535F54 
 6227      494D4552 
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccPVGIBS.s 			page 188


 6227      5F494E54 
 6227      45525255 
 6228              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
