ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CyLib.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CySysClkImoStart,"ax",%progbits
  20              		.align	2
  21              		.global	CySysClkImoStart
  22              		.code	16
  23              		.thumb_func
  24              		.type	CySysClkImoStart, %function
  25              	CySysClkImoStart:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC4\\CyLib.c"
   1:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLib.c **** * \file CyLib.c
   3:Generated_Source\PSoC4/CyLib.c **** * \version 5.90
   4:Generated_Source\PSoC4/CyLib.c **** *
   5:Generated_Source\PSoC4/CyLib.c **** * \brief Provides a system API for the Clocking, Interrupts, SysTick, and
   6:Generated_Source\PSoC4/CyLib.c **** * Voltage Detect.
   7:Generated_Source\PSoC4/CyLib.c **** *
   8:Generated_Source\PSoC4/CyLib.c **** * \note Documentation of the API's in this file is located in the PSoC 4 System
   9:Generated_Source\PSoC4/CyLib.c **** * Reference Guide provided with PSoC Creator.
  10:Generated_Source\PSoC4/CyLib.c **** *
  11:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CyLib.c **** * \copyright
  13:Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2018, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/CyLib.c **** 
  19:Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  20:Generated_Source\PSoC4/CyLib.c **** 
  21:Generated_Source\PSoC4/CyLib.c **** /* CySysClkWriteImoFreq() || CySysClkImoEnableWcoLock() */
  22:Generated_Source\PSoC4/CyLib.c **** #if ((CY_IP_SRSSV2 && CY_IP_FMLT) || CY_IP_IMO_TRIMMABLE_BY_WCO)
  23:Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  24:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  25:Generated_Source\PSoC4/CyLib.c **** 
  26:Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  27:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  28:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  29:Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  30:Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 2


  31:Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
  32:Generated_Source\PSoC4/CyLib.c **** 
  33:Generated_Source\PSoC4/CyLib.c **** 
  34:Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  35:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  36:Generated_Source\PSoC4/CyLib.c **** 
  37:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_PLL)
  38:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll);
  39:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll);
  40:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_PLL) */
  41:Generated_Source\PSoC4/CyLib.c **** 
  42:Generated_Source\PSoC4/CyLib.c **** 
  43:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
  44:Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  45:Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  46:Generated_Source\PSoC4/CyLib.c **** *
  47:Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
  48:Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  49:Generated_Source\PSoC4/CyLib.c **** *
  50:Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  51:Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  52:Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  53:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  54:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  55:Generated_Source\PSoC4/CyLib.c **** 
  56:Generated_Source\PSoC4/CyLib.c **** 
  57:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  58:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
  59:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  60:Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  61:Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  62:Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  63:Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  64:Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  65:Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  66:Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  67:Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  68:Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  69:Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  70:Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  71:Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
  72:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  73:Generated_Source\PSoC4/CyLib.c **** 
  74:Generated_Source\PSoC4/CyLib.c **** /* Stored CY_SYS_CLK_IMO_TRIM4_REG when modified for USB lock */
  75:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2)
  76:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim4 = 0u;
  77:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim5 = 0u;
  78:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2) */
  79:Generated_Source\PSoC4/CyLib.c **** 
  80:Generated_Source\PSoC4/CyLib.c **** /* Stored PUMP_SEL configuration during disable (IMO output by default) */
  81:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkPumpConfig = CY_SYS_CLK_PUMP_ENABLE;
  82:Generated_Source\PSoC4/CyLib.c **** 
  83:Generated_Source\PSoC4/CyLib.c **** 
  84:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  85:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  86:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
  87:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 3


  88:Generated_Source\PSoC4/CyLib.c **** * Enables the IMO.
  89:Generated_Source\PSoC4/CyLib.c **** *
  90:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4500 / PSoC Analog 
  91:Generated_Source\PSoC4/CyLib.c **** * Coprocessor devices, this function will also enable WCO lock if selected in 
  92:Generated_Source\PSoC4/CyLib.c **** * the Design Wide Resources tab.
  93:Generated_Source\PSoC4/CyLib.c **** *
  94:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L devices, this function will also enable USB lock if selected
  95:Generated_Source\PSoC4/CyLib.c **** * in the Design Wide Resources tab.
  96:Generated_Source\PSoC4/CyLib.c **** *
  97:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  98:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
  99:Generated_Source\PSoC4/CyLib.c **** {
  28              		.loc 1 99 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 100:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
  33              		.loc 1 100 0
  34 0000 034A     		ldr	r2, .L2
  35 0002 1368     		ldr	r3, [r2]
  36 0004 8021     		movs	r1, #128
  37 0006 0906     		lsls	r1, r1, #24
  38 0008 0B43     		orrs	r3, r1
  39 000a 1360     		str	r3, [r2]
 101:Generated_Source\PSoC4/CyLib.c **** 
 102:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 103:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
 104:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
 105:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
 106:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 107:Generated_Source\PSoC4/CyLib.c **** 
 108:Generated_Source\PSoC4/CyLib.c **** 
 109:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 110:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_USB == 1u)
 111:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableUsbLock();
 112:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 1u) */
 113:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 114:Generated_Source\PSoC4/CyLib.c **** 
 115:Generated_Source\PSoC4/CyLib.c **** }
  40              		.loc 1 115 0
  41              		@ sp needed
  42 000c 7047     		bx	lr
  43              	.L3:
  44 000e C046     		.align	2
  45              	.L2:
  46 0010 30000340 		.word	1073938480
  47              		.cfi_endproc
  48              	.LFE1:
  49              		.size	CySysClkImoStart, .-CySysClkImoStart
  50              		.section	.text.CySysClkImoDisableWcoLock,"ax",%progbits
  51              		.align	2
  52              		.global	CySysClkImoDisableWcoLock
  53              		.code	16
  54              		.thumb_func
  55              		.type	CySysClkImoDisableWcoLock, %function
  56              	CySysClkImoDisableWcoLock:
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 4


  57              	.LFB4:
 116:Generated_Source\PSoC4/CyLib.c **** 
 117:Generated_Source\PSoC4/CyLib.c **** 
 118:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 119:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
 120:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 121:Generated_Source\PSoC4/CyLib.c **** *
 122:Generated_Source\PSoC4/CyLib.c **** * Disables the IMO.
 123:Generated_Source\PSoC4/CyLib.c **** *
 124:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4200L / PSoC 4000S / PSoC 4100S / 
 125:Generated_Source\PSoC4/CyLib.c **** * PSoC 4500 / PSoC Analog Coprocessor devices, this function will also 
 126:Generated_Source\PSoC4/CyLib.c **** * disable WCO lock.
 127:Generated_Source\PSoC4/CyLib.c **** *
 128:Generated_Source\PSoC4/CyLib.c **** * For PSoC PSoC 4200L devices, this function will also disable USB lock.
 129:Generated_Source\PSoC4/CyLib.c **** *
 130:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 131:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 132:Generated_Source\PSoC4/CyLib.c **** {
 133:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 134:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
 135:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 136:Generated_Source\PSoC4/CyLib.c **** 
 137:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 138:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableUsbLock();
 139:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 140:Generated_Source\PSoC4/CyLib.c **** 
 141:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
 142:Generated_Source\PSoC4/CyLib.c **** }
 143:Generated_Source\PSoC4/CyLib.c **** 
 144:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 145:Generated_Source\PSoC4/CyLib.c **** 
 146:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 147:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
 148:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 149:Generated_Source\PSoC4/CyLib.c ****     *
 150:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to WCO lock feature. This function works only if the WCO is
 151:Generated_Source\PSoC4/CyLib.c ****     * already enabled. If the WCO is not enabled then this function returns
 152:Generated_Source\PSoC4/CyLib.c ****     * without enabling the lock feature.
 153:Generated_Source\PSoC4/CyLib.c ****     *
 154:Generated_Source\PSoC4/CyLib.c ****     * It takes up to 20 ms for the IMO to stabilize. The delay is implemented with
 155:Generated_Source\PSoC4/CyLib.c ****     * CyDelay() function. The delay interval is measured based on the system
 156:Generated_Source\PSoC4/CyLib.c ****     * frequency defined by PSoC Creator at build time. If System clock frequency
 157:Generated_Source\PSoC4/CyLib.c ****     * is changed in runtime, the CyDelayFreq() with the appropriate parameter
 158:Generated_Source\PSoC4/CyLib.c ****     * should be called.
 159:Generated_Source\PSoC4/CyLib.c ****     *
 160:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 161:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 162:Generated_Source\PSoC4/CyLib.c ****     *
 163:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 164:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4500 / PSoC Analog Coprocessor / PSoC 4200L.
 165:Generated_Source\PSoC4/CyLib.c ****     *
 166:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 167:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 168:Generated_Source\PSoC4/CyLib.c ****     {
 169:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 170:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 171:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 5


 172:Generated_Source\PSoC4/CyLib.c **** 
 173:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 174:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 175:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 176:Generated_Source\PSoC4/CyLib.c ****         uint32 lfLimit = 0u;
 177:Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 178:Generated_Source\PSoC4/CyLib.c **** 
 179:Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 180:Generated_Source\PSoC4/CyLib.c ****         {
 181:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 182:Generated_Source\PSoC4/CyLib.c **** 
 183:Generated_Source\PSoC4/CyLib.c ****             /* Set oscillator interface control port to WCO */
 184:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 185:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_OSCINTF_CTL_REG =
 186:Generated_Source\PSoC4/CyLib.c ****                     (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_MASK) |
 187:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_WCO;
 188:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 189:Generated_Source\PSoC4/CyLib.c **** 
 190:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 191:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 192:Generated_Source\PSoC4/CyLib.c ****                 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 193:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 194:Generated_Source\PSoC4/CyLib.c ****                 {
 195:Generated_Source\PSoC4/CyLib.c ****                     if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImo
 196:Generated_Source\PSoC4/CyLib.c ****                     {
 197:Generated_Source\PSoC4/CyLib.c ****                         freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 198:Generated_Source\PSoC4/CyLib.c ****                         break;
 199:Generated_Source\PSoC4/CyLib.c ****                     }
 200:Generated_Source\PSoC4/CyLib.c ****                 }
 201:Generated_Source\PSoC4/CyLib.c ****             #else
 202:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate frequency by shifting register field value and adding constant. */
 203:Generated_Source\PSoC4/CyLib.c ****                 #if(CY_IP_SRSSLT)
 204:Generated_Source\PSoC4/CyLib.c ****                     freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT
 205:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 206:Generated_Source\PSoC4/CyLib.c ****                                       ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)
 207:Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 208:Generated_Source\PSoC4/CyLib.c ****                 #else
 209:Generated_Source\PSoC4/CyLib.c ****                     freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_
 210:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_
 211:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CY_IP_SRSSLT) */
 212:Generated_Source\PSoC4/CyLib.c **** 
 213:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSV2) */
 214:Generated_Source\PSoC4/CyLib.c ****             
 215:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = 0;
 216:Generated_Source\PSoC4/CyLib.c ****             
 217:Generated_Source\PSoC4/CyLib.c ****             /* For the WCO locking mode, the IMO gain needs to be CY_SYS_CLK_IMO_TRIM4_GAIN */
 218:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 219:Generated_Source\PSoC4/CyLib.c ****                 if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
 220:Generated_Source\PSoC4/CyLib.c ****                 {
 221:Generated_Source\PSoC4/CyLib.c ****                      CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IM
 222:Generated_Source\PSoC4/CyLib.c ****                                                  CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 223:Generated_Source\PSoC4/CyLib.c ****                 }
 224:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
 225:Generated_Source\PSoC4/CyLib.c **** 
 226:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
 227:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 228:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK |
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 6


 229:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 230:Generated_Source\PSoC4/CyLib.c **** 
 231:Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
 232:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 233:Generated_Source\PSoC4/CyLib.c **** 
 234:Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 235:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 236:Generated_Source\PSoC4/CyLib.c **** 
 237:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
 238:Generated_Source\PSoC4/CyLib.c ****             
 239:Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 240:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 241:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 242:Generated_Source\PSoC4/CyLib.c **** 
 243:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 244:Generated_Source\PSoC4/CyLib.c ****             
 245:Generated_Source\PSoC4/CyLib.c ****             while (lfLimit < (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX - CY_SYS_CLK_WCO_CONFIG_DPLL_
 246:Generated_Source\PSoC4/CyLib.c ****             {
 247:Generated_Source\PSoC4/CyLib.c ****                 CyDelay(CY_SYS_CLK_WCO_DPLL_TIMEOUT_MS);
 248:Generated_Source\PSoC4/CyLib.c ****                 lfLimit += CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_STEP;
 249:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_WCO_DPLL_REG = (regTmp | (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT
 250:Generated_Source\PSoC4/CyLib.c ****             }
 251:Generated_Source\PSoC4/CyLib.c **** 
 252:Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_DPLL_TIMEOUT_MS);
 253:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = (regTmp | (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX << 
 254:Generated_Source\PSoC4/CyLib.c ****                                                  CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT));
 255:Generated_Source\PSoC4/CyLib.c **** 
 256:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 257:Generated_Source\PSoC4/CyLib.c **** 
 258:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 259:Generated_Source\PSoC4/CyLib.c ****         }
 260:Generated_Source\PSoC4/CyLib.c ****     }
 261:Generated_Source\PSoC4/CyLib.c **** 
 262:Generated_Source\PSoC4/CyLib.c **** 
 263:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 264:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 265:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 266:Generated_Source\PSoC4/CyLib.c ****     *
 267:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to WCO lock feature.
 268:Generated_Source\PSoC4/CyLib.c ****     *
 269:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 270:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 271:Generated_Source\PSoC4/CyLib.c ****     *
 272:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 273:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4500 / PSoC Analog Coprocessor / PSoC 4200L.
 274:Generated_Source\PSoC4/CyLib.c ****     *
 275:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 276:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
 277:Generated_Source\PSoC4/CyLib.c ****     {
  58              		.loc 1 277 0
  59              		.cfi_startproc
  60              		@ args = 0, pretend = 0, frame = 0
  61              		@ frame_needed = 0, uses_anonymous_args = 0
  62              		@ link register save eliminated.
 278:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 279:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 280:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 7


 281:Generated_Source\PSoC4/CyLib.c **** 
 282:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 283:Generated_Source\PSoC4/CyLib.c ****         
 284:Generated_Source\PSoC4/CyLib.c ****         /* Get current IMO frequency based on the register value */
 285:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 286:Generated_Source\PSoC4/CyLib.c ****             freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 287:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 288:Generated_Source\PSoC4/CyLib.c ****             {
 289:Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
 290:Generated_Source\PSoC4/CyLib.c ****                 {
 291:Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 292:Generated_Source\PSoC4/CyLib.c ****                     break;
 293:Generated_Source\PSoC4/CyLib.c ****                 }
 294:Generated_Source\PSoC4/CyLib.c ****             }
 295:Generated_Source\PSoC4/CyLib.c ****         #else
 296:Generated_Source\PSoC4/CyLib.c ****             /* Calculate frequency by shifting register field value and adding constant. */
 297:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSLT)
 298:Generated_Source\PSoC4/CyLib.c ****                 freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_FRE
  63              		.loc 1 298 0
  64 0000 0C4B     		ldr	r3, .L5
  65 0002 1B68     		ldr	r3, [r3]
  66 0004 9B00     		lsls	r3, r3, #2
  67 0006 1C22     		movs	r2, #28
  68 0008 1340     		ands	r3, r2
 299:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_MHZ
  69              		.loc 1 299 0
  70 000a 1833     		adds	r3, r3, #24
 300:Generated_Source\PSoC4/CyLib.c ****                                   ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT) & 
  71              		.loc 1 300 0
  72 000c 0A4A     		ldr	r2, .L5+4
  73 000e 1268     		ldr	r2, [r2]
  74 0010 9208     		lsrs	r2, r2, #2
  75 0012 0321     		movs	r1, #3
  76 0014 0A40     		ands	r2, r1
 298:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_MHZ
  77              		.loc 1 298 0
  78 0016 D340     		lsrs	r3, r3, r2
  79              	.LVL0:
 301:Generated_Source\PSoC4/CyLib.c ****                                    (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 302:Generated_Source\PSoC4/CyLib.c ****             #else
 303:Generated_Source\PSoC4/CyLib.c ****                 freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_FREQ
 304:Generated_Source\PSoC4/CyLib.c ****                                    CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
 305:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSLT) */
 306:Generated_Source\PSoC4/CyLib.c **** 
 307:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 308:Generated_Source\PSoC4/CyLib.c **** 
 309:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
  80              		.loc 1 309 0
  81 0018 0849     		ldr	r1, .L5+8
  82 001a 0868     		ldr	r0, [r1]
  83 001c 084A     		ldr	r2, .L5+12
  84 001e 0240     		ands	r2, r0
  85 0020 0A60     		str	r2, [r1]
 310:Generated_Source\PSoC4/CyLib.c ****         
 311:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSLT)
 312:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
  86              		.loc 1 312 0
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 8


  87 0022 084A     		ldr	r2, .L5+16
  88 0024 9446     		mov	ip, r2
  89 0026 6344     		add	r3, r3, ip
  90              	.LVL1:
  91 0028 1B78     		ldrb	r3, [r3]
  92              	.LVL2:
  93 002a DBB2     		uxtb	r3, r3
  94 002c 064A     		ldr	r2, .L5+20
  95 002e 1360     		str	r3, [r2]
 313:Generated_Source\PSoC4/CyLib.c ****         #else
 314:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 315:Generated_Source\PSoC4/CyLib.c ****         #endif
 316:Generated_Source\PSoC4/CyLib.c ****     }
  96              		.loc 1 316 0
  97              		@ sp needed
  98 0030 7047     		bx	lr
  99              	.L6:
 100 0032 C046     		.align	2
 101              	.L5:
 102 0034 080F0340 		.word	1073942280
 103 0038 28000340 		.word	1073938472
 104 003c 00000640 		.word	1074135040
 105 0040 FFFFFFBF 		.word	-1073741825
 106 0044 CDF1FF0F 		.word	268431821
 107 0048 0C0F0340 		.word	1073942284
 108              		.cfi_endproc
 109              	.LFE4:
 110              		.size	CySysClkImoDisableWcoLock, .-CySysClkImoDisableWcoLock
 111              		.section	.text.CySysClkImoStop,"ax",%progbits
 112              		.align	2
 113              		.global	CySysClkImoStop
 114              		.code	16
 115              		.thumb_func
 116              		.type	CySysClkImoStop, %function
 117              	CySysClkImoStop:
 118              	.LFB2:
 132:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 119              		.loc 1 132 0
 120              		.cfi_startproc
 121              		@ args = 0, pretend = 0, frame = 0
 122              		@ frame_needed = 0, uses_anonymous_args = 0
 123 0000 10B5     		push	{r4, lr}
 124              		.cfi_def_cfa_offset 8
 125              		.cfi_offset 4, -8
 126              		.cfi_offset 14, -4
 134:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 127              		.loc 1 134 0
 128 0002 FFF7FEFF 		bl	CySysClkImoDisableWcoLock
 129              	.LVL3:
 141:Generated_Source\PSoC4/CyLib.c **** }
 130              		.loc 1 141 0
 131 0006 034A     		ldr	r2, .L8
 132 0008 1368     		ldr	r3, [r2]
 133 000a 5B00     		lsls	r3, r3, #1
 134 000c 5B08     		lsrs	r3, r3, #1
 135 000e 1360     		str	r3, [r2]
 142:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 9


 136              		.loc 1 142 0
 137              		@ sp needed
 138 0010 10BD     		pop	{r4, pc}
 139              	.L9:
 140 0012 C046     		.align	2
 141              	.L8:
 142 0014 30000340 		.word	1073938480
 143              		.cfi_endproc
 144              	.LFE2:
 145              		.size	CySysClkImoStop, .-CySysClkImoStop
 146              		.section	.text.CySysClkImoGetWcoLock,"ax",%progbits
 147              		.align	2
 148              		.global	CySysClkImoGetWcoLock
 149              		.code	16
 150              		.thumb_func
 151              		.type	CySysClkImoGetWcoLock, %function
 152              	CySysClkImoGetWcoLock:
 153              	.LFB5:
 317:Generated_Source\PSoC4/CyLib.c **** 
 318:Generated_Source\PSoC4/CyLib.c **** 
 319:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 320:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 321:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 322:Generated_Source\PSoC4/CyLib.c ****     *
 323:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to WCO lock enable state.
 324:Generated_Source\PSoC4/CyLib.c ****     *
 325:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 326:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4500 / PSoC Analog Coprocessor / PSoC 4200L.
 327:Generated_Source\PSoC4/CyLib.c ****     *
 328:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to WCO lock is enabled.
 329:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to WCO lock is disabled.
 330:Generated_Source\PSoC4/CyLib.c ****     *
 331:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 332:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetWcoLock(void)
 333:Generated_Source\PSoC4/CyLib.c ****     {
 154              		.loc 1 333 0
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 0
 157              		@ frame_needed = 0, uses_anonymous_args = 0
 158              		@ link register save eliminated.
 334:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 159              		.loc 1 334 0
 160 0000 034B     		ldr	r3, .L12
 161 0002 1868     		ldr	r0, [r3]
 162 0004 8023     		movs	r3, #128
 163 0006 DB05     		lsls	r3, r3, #23
 164 0008 1840     		ands	r0, r3
 335:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 165              		.loc 1 335 0
 166 000a 00D0     		beq	.L11
 167 000c 0120     		movs	r0, #1
 168              	.L11:
 336:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 337:Generated_Source\PSoC4/CyLib.c ****     }
 169              		.loc 1 337 0
 170              		@ sp needed
 171 000e 7047     		bx	lr
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 10


 172              	.L13:
 173              		.align	2
 174              	.L12:
 175 0010 00000640 		.word	1074135040
 176              		.cfi_endproc
 177              	.LFE5:
 178              		.size	CySysClkImoGetWcoLock, .-CySysClkImoGetWcoLock
 179              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
 180              		.align	2
 181              		.global	CySysClkWriteHfclkDirect
 182              		.code	16
 183              		.thumb_func
 184              		.type	CySysClkWriteHfclkDirect, %function
 185              	CySysClkWriteHfclkDirect:
 186              	.LFB6:
 338:Generated_Source\PSoC4/CyLib.c **** 
 339:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 340:Generated_Source\PSoC4/CyLib.c **** 
 341:Generated_Source\PSoC4/CyLib.c **** 
 342:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 343:Generated_Source\PSoC4/CyLib.c **** 
 344:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 345:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableUsbLock
 346:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 347:Generated_Source\PSoC4/CyLib.c ****     *
 348:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to USB lock feature.
 349:Generated_Source\PSoC4/CyLib.c ****     *
 350:Generated_Source\PSoC4/CyLib.c ****     * This function must be called before CySysClkWriteImoFreq().
 351:Generated_Source\PSoC4/CyLib.c ****     *
 352:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStart() function if USB lock
 353:Generated_Source\PSoC4/CyLib.c ****     * selected in the Design Wide Resources tab.
 354:Generated_Source\PSoC4/CyLib.c ****     *
 355:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 356:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 357:Generated_Source\PSoC4/CyLib.c ****     *
 358:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 359:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableUsbLock(void)
 360:Generated_Source\PSoC4/CyLib.c ****     {
 361:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 362:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 363:Generated_Source\PSoC4/CyLib.c ****             
 364:Generated_Source\PSoC4/CyLib.c ****             /* Check for new trim algorithm */
 365:Generated_Source\PSoC4/CyLib.c ****             uint32 CySysClkUsbCuSortTrim = ((CY_SFLASH_S1_TESTPGM_OLD_REV < (CY_SFLASH_S1_TESTPGM_R
 366:Generated_Source\PSoC4/CyLib.c ****                                                                             CY_SFLASH_S1_TESTPGM_RE
 367:Generated_Source\PSoC4/CyLib.c **** 
 368:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 369:Generated_Source\PSoC4/CyLib.c ****             uint32 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 370:Generated_Source\PSoC4/CyLib.c **** 
 371:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 372:Generated_Source\PSoC4/CyLib.c ****             {
 373:Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
 374:Generated_Source\PSoC4/CyLib.c ****                 {
 375:Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 376:Generated_Source\PSoC4/CyLib.c ****                     break;
 377:Generated_Source\PSoC4/CyLib.c ****                 }
 378:Generated_Source\PSoC4/CyLib.c ****             }
 379:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 11


 380:Generated_Source\PSoC4/CyLib.c ****         
 381:Generated_Source\PSoC4/CyLib.c ****         /* Set oscillator interface control port to USB */
 382:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 383:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_OSCINTF_CTL_REG = (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF
 384:Generated_Source\PSoC4/CyLib.c ****                                           CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_USB;
 385:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 386:Generated_Source\PSoC4/CyLib.c **** 
 387:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 388:Generated_Source\PSoC4/CyLib.c ****            
 389:Generated_Source\PSoC4/CyLib.c ****             /* Save CY_SYS_CLK_IMO_TRIM4_REG and set IMO gain for USB lock */
 390:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim4 = CY_SYS_CLK_IMO_TRIM4_REG;
 391:Generated_Source\PSoC4/CyLib.c ****             
 392:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkUsbCuSortTrim)
 393:Generated_Source\PSoC4/CyLib.c ****             {
 394:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoTrim5 = CY_PWR_BG_TRIM5_REG;
 395:Generated_Source\PSoC4/CyLib.c ****                 
 396:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM4_REG = (CySysClkImoTrim4 & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_
 397:Generated_Source\PSoC4/CyLib.c ****                                             CY_SFLASH_USBMODE_IMO_GAIN_TRIM_REG;
 398:Generated_Source\PSoC4/CyLib.c ****                 CY_PWR_BG_TRIM5_REG = CY_SFLASH_USBMODE_IMO_TEMPCO_REG;
 399:Generated_Source\PSoC4/CyLib.c ****                 
 400:Generated_Source\PSoC4/CyLib.c ****             }
 401:Generated_Source\PSoC4/CyLib.c ****             else
 402:Generated_Source\PSoC4/CyLib.c ****             {
 403:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM4_REG = (CySysClkImoTrim4 & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_
 404:Generated_Source\PSoC4/CyLib.c ****                                             CY_SYS_CLK_IMO_TRIM4_USB_GAIN;
 405:Generated_Source\PSoC4/CyLib.c **** 
 406:Generated_Source\PSoC4/CyLib.c ****             }
 407:Generated_Source\PSoC4/CyLib.c **** 
 408:Generated_Source\PSoC4/CyLib.c ****             if (48u == freq)
 409:Generated_Source\PSoC4/CyLib.c ****             {
 410:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (0u != CySysClkUsbCuSortTrim) ? 
 411:Generated_Source\PSoC4/CyLib.c ****                                            (uint32)CY_SFLASH_CU_IMO_TRIM_USBMODE_48_REG :
 412:Generated_Source\PSoC4/CyLib.c ****                                            (uint32)CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 413:Generated_Source\PSoC4/CyLib.c ****             }
 414:Generated_Source\PSoC4/CyLib.c ****             else if (24u == freq)
 415:Generated_Source\PSoC4/CyLib.c ****             {
 416:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (0u != CySysClkUsbCuSortTrim) ? 
 417:Generated_Source\PSoC4/CyLib.c ****                                            (uint32)CY_SFLASH_CU_IMO_TRIM_USBMODE_24_REG :
 418:Generated_Source\PSoC4/CyLib.c ****                                            (uint32)CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 419:Generated_Source\PSoC4/CyLib.c ****             }
 420:Generated_Source\PSoC4/CyLib.c ****             else
 421:Generated_Source\PSoC4/CyLib.c ****             {
 422:Generated_Source\PSoC4/CyLib.c ****                 /* Do nothing */
 423:Generated_Source\PSoC4/CyLib.c ****             }
 424:Generated_Source\PSoC4/CyLib.c ****             
 425:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 426:Generated_Source\PSoC4/CyLib.c **** 
 427:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG |= CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 428:Generated_Source\PSoC4/CyLib.c ****     }
 429:Generated_Source\PSoC4/CyLib.c **** 
 430:Generated_Source\PSoC4/CyLib.c **** 
 431:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 432:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableUsbLock
 433:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 434:Generated_Source\PSoC4/CyLib.c ****     *
 435:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to USB lock feature.
 436:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 12


 437:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStop() function if USB lock selected
 438:Generated_Source\PSoC4/CyLib.c ****     * in the Design Wide Resources tab.
 439:Generated_Source\PSoC4/CyLib.c ****     *
 440:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 441:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 442:Generated_Source\PSoC4/CyLib.c ****     *
 443:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 444:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableUsbLock(void)
 445:Generated_Source\PSoC4/CyLib.c ****     {
 446:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 447:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 448:Generated_Source\PSoC4/CyLib.c ****             
 449:Generated_Source\PSoC4/CyLib.c ****             /* Check for new trim algorithm */
 450:Generated_Source\PSoC4/CyLib.c ****             uint32 CySysClkUsbCuSortTrim = ((CY_SFLASH_S1_TESTPGM_OLD_REV < (CY_SFLASH_S1_TESTPGM_R
 451:Generated_Source\PSoC4/CyLib.c ****                                                                             CY_SFLASH_S1_TESTPGM_RE
 452:Generated_Source\PSoC4/CyLib.c **** 
 453:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 454:Generated_Source\PSoC4/CyLib.c ****             uint32 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;;
 455:Generated_Source\PSoC4/CyLib.c **** 
 456:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 457:Generated_Source\PSoC4/CyLib.c ****             {
 458:Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
 459:Generated_Source\PSoC4/CyLib.c ****                 {
 460:Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 461:Generated_Source\PSoC4/CyLib.c ****                     break;
 462:Generated_Source\PSoC4/CyLib.c ****                 }
 463:Generated_Source\PSoC4/CyLib.c ****             }           
 464:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 465:Generated_Source\PSoC4/CyLib.c ****         
 466:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG &= (uint32) ~CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 467:Generated_Source\PSoC4/CyLib.c **** 
 468:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 469:Generated_Source\PSoC4/CyLib.c ****             /* Restore CY_SYS_CLK_IMO_TRIM4_REG */
 470:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = ((CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_
 471:Generated_Source\PSoC4/CyLib.c ****                                         (CySysClkImoTrim4 & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK));
 472:Generated_Source\PSoC4/CyLib.c **** 
 473:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkUsbCuSortTrim)
 474:Generated_Source\PSoC4/CyLib.c ****             {
 475:Generated_Source\PSoC4/CyLib.c ****                 CY_PWR_BG_TRIM5_REG = CySysClkImoTrim5;
 476:Generated_Source\PSoC4/CyLib.c ****             }
 477:Generated_Source\PSoC4/CyLib.c ****             
 478:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 479:Generated_Source\PSoC4/CyLib.c ****             
 480:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 481:Generated_Source\PSoC4/CyLib.c ****     }
 482:Generated_Source\PSoC4/CyLib.c **** 
 483:Generated_Source\PSoC4/CyLib.c **** 
 484:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 485:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetUsbLock
 486:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 487:Generated_Source\PSoC4/CyLib.c ****     *
 488:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to USB lock enable state.
 489:Generated_Source\PSoC4/CyLib.c ****     *
 490:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 491:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 492:Generated_Source\PSoC4/CyLib.c ****     *
 493:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to USB lock is enabled.
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 13


 494:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to USB lock is disabled.
 495:Generated_Source\PSoC4/CyLib.c ****     *
 496:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 497:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetUsbLock(void)
 498:Generated_Source\PSoC4/CyLib.c ****     {
 499:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_USBDEVv2_CR1_REG & CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK)) ?
 500:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 501:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 502:Generated_Source\PSoC4/CyLib.c ****     }
 503:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 504:Generated_Source\PSoC4/CyLib.c **** 
 505:Generated_Source\PSoC4/CyLib.c **** 
 506:Generated_Source\PSoC4/CyLib.c **** 
 507:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 508:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 509:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 510:Generated_Source\PSoC4/CyLib.c **** *
 511:Generated_Source\PSoC4/CyLib.c **** * Selects the direct source for the HFCLK.
 512:Generated_Source\PSoC4/CyLib.c **** *
 513:Generated_Source\PSoC4/CyLib.c **** * The new source must be running and stable before calling this function.
 514:Generated_Source\PSoC4/CyLib.c **** *
 515:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000:
 516:Generated_Source\PSoC4/CyLib.c **** * The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 517:Generated_Source\PSoC4/CyLib.c **** * be selected in a way to not to exceed 16 MHz for the System clock.
 518:Generated_Source\PSoC4/CyLib.c **** *
 519:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during device operation, call
 520:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 521:Generated_Source\PSoC4/CyLib.c **** * of clock cycles the cache will wait before sampling data comes back from
 522:Generated_Source\PSoC4/CyLib.c **** * Flash. If the SYSCLK clock frequency decreases, you can call
 523:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() to improve the CPU performance. See
 524:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() description for more information.
 525:Generated_Source\PSoC4/CyLib.c **** *
 526:Generated_Source\PSoC4/CyLib.c **** * Do not select PLL as the source for HFCLK if PLL output frequency exceeds
 527:Generated_Source\PSoC4/CyLib.c **** * maximum permissible value for HFCLK.
 528:Generated_Source\PSoC4/CyLib.c **** *
 529:Generated_Source\PSoC4/CyLib.c **** * \param clkSelect One of the available HFCLK direct sources.
 530:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_IMO     IMO.
 531:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_EXTCLK  External clock pin.
 532:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_ECO     External crystal oscillator. Applicable for
 533:Generated_Source\PSoC4/CyLib.c **** *                          PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L /
 534:Generated_Source\PSoC4/CyLib.c **** *                          4100S / 4500 with ECO.
 535:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL0    PLL#0. Applicable for PSoC 4200L /
 536:Generated_Source\PSoC4/CyLib.c **** *                          4100S / 4500 with PLL.
 537:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL1    PLL#1. Applicable for PSoC 4200L.
 538:Generated_Source\PSoC4/CyLib.c **** *
 539:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 540:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
 541:Generated_Source\PSoC4/CyLib.c **** {
 187              		.loc 1 541 0
 188              		.cfi_startproc
 189              		@ args = 0, pretend = 0, frame = 0
 190              		@ frame_needed = 0, uses_anonymous_args = 0
 191              	.LVL4:
 192 0000 10B5     		push	{r4, lr}
 193              		.cfi_def_cfa_offset 8
 194              		.cfi_offset 4, -8
 195              		.cfi_offset 14, -4
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 14


 196 0002 0400     		movs	r4, r0
 542:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 543:Generated_Source\PSoC4/CyLib.c ****     uint32 tmpReg;
 544:Generated_Source\PSoC4/CyLib.c ****     
 545:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SRSSLT && CY_IP_PLL)
 546:Generated_Source\PSoC4/CyLib.c ****         uint8 i = 0u;
 547:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 548:Generated_Source\PSoC4/CyLib.c **** 
 549:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 197              		.loc 1 549 0
 198 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 199              	.LVL5:
 550:Generated_Source\PSoC4/CyLib.c **** 
 551:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSLT && CY_IP_PLL)
 552:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_ECO == clkSelect))
 553:Generated_Source\PSoC4/CyLib.c ****     {
 554:Generated_Source\PSoC4/CyLib.c ****         tmpReg = CY_SYS_CLK_SELECT_REG & ~CY_SYS_CLK_SELECT_DIRECT_SEL_MASK;
 555:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= CY_SYS_CLK_HFCLK_IMO;
 556:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = tmpReg;
 557:Generated_Source\PSoC4/CyLib.c ****         
 558:Generated_Source\PSoC4/CyLib.c ****         /* SRSSLT block does not have registers to select PLL. It is part of EXCO */ 
 559:Generated_Source\PSoC4/CyLib.c ****         tmpReg = CY_SYS_ECO_CLK_SELECT_REG & ~CY_SYS_ECO_CLK_SELECT_ECO_PLL_MASK;
 560:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= ((clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_PLL_MASK) >> CY_SYS_CLK_SELECT_HFCLK_PL
 561:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_ECO_CLK_SELECT_REG = tmpReg;
 562:Generated_Source\PSoC4/CyLib.c ****         
 563:Generated_Source\PSoC4/CyLib.c ****         /* Generate clock sequence to change clock source in CY_SYS_ECO_CLK_SELECT_REG */
 564:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
 565:Generated_Source\PSoC4/CyLib.c ****         
 566:Generated_Source\PSoC4/CyLib.c ****         for(i = 0u; i < CY_SYS_EXCO_PGM_CLK_SEQ_GENERATOR; i++)
 567:Generated_Source\PSoC4/CyLib.c ****         {
 568:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
 569:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
 570:Generated_Source\PSoC4/CyLib.c ****         }
 571:Generated_Source\PSoC4/CyLib.c ****         
 572:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;    
 573:Generated_Source\PSoC4/CyLib.c ****     }
 574:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 575:Generated_Source\PSoC4/CyLib.c **** 
 576:Generated_Source\PSoC4/CyLib.c ****     tmpReg = CY_SYS_CLK_SELECT_REG & ~(CY_SYS_CLK_SELECT_DIRECT_SEL_MASK |
 200              		.loc 1 576 0
 201 0008 044A     		ldr	r2, .L15
 202 000a 1368     		ldr	r3, [r2]
 203 000c 0321     		movs	r1, #3
 204 000e 8B43     		bics	r3, r1
 205              	.LVL6:
 577:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 578:Generated_Source\PSoC4/CyLib.c **** 
 579:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 580:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_PLL1 == clkSelect))
 581:Generated_Source\PSoC4/CyLib.c ****     {
 582:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 583:Generated_Source\PSoC4/CyLib.c ****     }
 584:Generated_Source\PSoC4/CyLib.c ****     else
 585:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 586:Generated_Source\PSoC4/CyLib.c ****     {
 587:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 206              		.loc 1 587 0
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 15


 207 0010 0C40     		ands	r4, r1
 208              	.LVL7:
 209 0012 1C43     		orrs	r4, r3
 210              	.LVL8:
 588:Generated_Source\PSoC4/CyLib.c ****     }   
 589:Generated_Source\PSoC4/CyLib.c ****     
 590:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = tmpReg;
 211              		.loc 1 590 0
 212 0014 1460     		str	r4, [r2]
 591:Generated_Source\PSoC4/CyLib.c ****     
 592:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 213              		.loc 1 592 0
 214 0016 FFF7FEFF 		bl	CyExitCriticalSection
 215              	.LVL9:
 593:Generated_Source\PSoC4/CyLib.c **** }
 216              		.loc 1 593 0
 217              		@ sp needed
 218              	.LVL10:
 219 001a 10BD     		pop	{r4, pc}
 220              	.L16:
 221              		.align	2
 222              	.L15:
 223 001c 28000340 		.word	1073938472
 224              		.cfi_endproc
 225              	.LFE6:
 226              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
 227              		.section	.text.CySysEnablePumpClock,"ax",%progbits
 228              		.align	2
 229              		.global	CySysEnablePumpClock
 230              		.code	16
 231              		.thumb_func
 232              		.type	CySysEnablePumpClock, %function
 233              	CySysEnablePumpClock:
 234              	.LFB7:
 594:Generated_Source\PSoC4/CyLib.c **** 
 595:Generated_Source\PSoC4/CyLib.c **** 
 596:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 597:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysEnablePumpClock
 598:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 599:Generated_Source\PSoC4/CyLib.c **** *
 600:Generated_Source\PSoC4/CyLib.c **** * Enables / disables the pump clock.
 601:Generated_Source\PSoC4/CyLib.c **** *
 602:Generated_Source\PSoC4/CyLib.c **** * \param enable  
 603:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_DISABLE - Disables the pump clock
 604:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_ENABLE - Enables and restores the operating source of 
 605:Generated_Source\PSoC4/CyLib.c **** * the pump clock.
 606:Generated_Source\PSoC4/CyLib.c **** *
 607:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
 608:Generated_Source\PSoC4/CyLib.c **** *  Enabling/disabling the pump clock does not guarantee glitch free operation 
 609:Generated_Source\PSoC4/CyLib.c **** *  when changing the IMO parameters or clock divider settings.
 610:Generated_Source\PSoC4/CyLib.c **** *
 611:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 612:Generated_Source\PSoC4/CyLib.c **** void CySysEnablePumpClock(uint32 enable)
 613:Generated_Source\PSoC4/CyLib.c **** {
 235              		.loc 1 613 0
 236              		.cfi_startproc
 237              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 16


 238              		@ frame_needed = 0, uses_anonymous_args = 0
 239              		@ link register save eliminated.
 240              	.LVL11:
 614:Generated_Source\PSoC4/CyLib.c ****     #if(CY_IP_SRSSV2)
 615:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 616:Generated_Source\PSoC4/CyLib.c ****         {
 617:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG |= (CySysClkPumpConfig << CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIF
 618:Generated_Source\PSoC4/CyLib.c ****         }
 619:Generated_Source\PSoC4/CyLib.c ****         else
 620:Generated_Source\PSoC4/CyLib.c ****         {
 621:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_IMO_CONFIG_REG >> CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIFT
 622:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK;
 623:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG &= ~(CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK << CY_SYS_CLK_IMO_CO
 624:Generated_Source\PSoC4/CyLib.c ****         }
 625:Generated_Source\PSoC4/CyLib.c ****     #else /* CY_IP_SRSSLT */
 626:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 241              		.loc 1 626 0
 242 0000 C307     		lsls	r3, r0, #31
 243 0002 07D5     		bpl	.L18
 627:Generated_Source\PSoC4/CyLib.c ****         {
 628:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG |= (CySysClkPumpConfig << CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT);
 244              		.loc 1 628 0
 245 0004 094A     		ldr	r2, .L20
 246 0006 1168     		ldr	r1, [r2]
 247 0008 094B     		ldr	r3, .L20+4
 248 000a 1B68     		ldr	r3, [r3]
 249 000c 1B01     		lsls	r3, r3, #4
 250 000e 0B43     		orrs	r3, r1
 251 0010 1360     		str	r3, [r2]
 252 0012 0AE0     		b	.L17
 253              	.L18:
 629:Generated_Source\PSoC4/CyLib.c ****         }
 630:Generated_Source\PSoC4/CyLib.c ****         else
 631:Generated_Source\PSoC4/CyLib.c ****         {
 632:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT) & 
 254              		.loc 1 632 0
 255 0014 054A     		ldr	r2, .L20
 256 0016 1368     		ldr	r3, [r2]
 257 0018 1B09     		lsrs	r3, r3, #4
 258 001a 0321     		movs	r1, #3
 259 001c 0B40     		ands	r3, r1
 260 001e 0449     		ldr	r1, .L20+4
 261 0020 0B60     		str	r3, [r1]
 633:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_SELECT_PUMP_SEL_MASK;
 634:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG &= ~(CY_SYS_CLK_SELECT_PUMP_SEL_MASK << CY_SYS_CLK_SELECT_PUMP_SE
 262              		.loc 1 634 0
 263 0022 1368     		ldr	r3, [r2]
 264 0024 3021     		movs	r1, #48
 265 0026 8B43     		bics	r3, r1
 266 0028 1360     		str	r3, [r2]
 267              	.L17:
 635:Generated_Source\PSoC4/CyLib.c ****         }
 636:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_SRSSV2) */
 637:Generated_Source\PSoC4/CyLib.c **** }
 268              		.loc 1 637 0
 269              		@ sp needed
 270 002a 7047     		bx	lr
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 17


 271              	.L21:
 272              		.align	2
 273              	.L20:
 274 002c 28000340 		.word	1073938472
 275 0030 00000000 		.word	.LANCHOR0
 276              		.cfi_endproc
 277              	.LFE7:
 278              		.size	CySysEnablePumpClock, .-CySysEnablePumpClock
 279              		.section	.text.CySysClkGetSysclkSource,"ax",%progbits
 280              		.align	2
 281              		.global	CySysClkGetSysclkSource
 282              		.code	16
 283              		.thumb_func
 284              		.type	CySysClkGetSysclkSource, %function
 285              	CySysClkGetSysclkSource:
 286              	.LFB8:
 638:Generated_Source\PSoC4/CyLib.c **** 
 639:Generated_Source\PSoC4/CyLib.c **** 
 640:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 641:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkGetSysclkSource
 642:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 643:Generated_Source\PSoC4/CyLib.c **** *
 644:Generated_Source\PSoC4/CyLib.c **** * Returns the source of the System clock.
 645:Generated_Source\PSoC4/CyLib.c **** *
 646:Generated_Source\PSoC4/CyLib.c **** * \return The same as \ref CySysClkWriteHfclkDirect() function parameters.
 647:Generated_Source\PSoC4/CyLib.c **** *
 648:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 649:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkGetSysclkSource(void)
 650:Generated_Source\PSoC4/CyLib.c **** {
 287              		.loc 1 650 0
 288              		.cfi_startproc
 289              		@ args = 0, pretend = 0, frame = 0
 290              		@ frame_needed = 0, uses_anonymous_args = 0
 291 0000 10B5     		push	{r4, lr}
 292              		.cfi_def_cfa_offset 8
 293              		.cfi_offset 4, -8
 294              		.cfi_offset 14, -4
 651:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 652:Generated_Source\PSoC4/CyLib.c ****     uint32 sysclkSource;
 653:Generated_Source\PSoC4/CyLib.c **** 
 654:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 295              		.loc 1 654 0
 296 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 297              	.LVL12:
 655:Generated_Source\PSoC4/CyLib.c **** 
 656:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 657:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK) != 0u)
 658:Generated_Source\PSoC4/CyLib.c ****     {
 659:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 660:Generated_Source\PSoC4/CyLib.c ****     }
 661:Generated_Source\PSoC4/CyLib.c ****     else
 662:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 663:Generated_Source\PSoC4/CyLib.c ****     {
 664:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 298              		.loc 1 664 0
 299 0006 044B     		ldr	r3, .L23
 300 0008 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 18


 301 000a 0324     		movs	r4, #3
 302 000c 1C40     		ands	r4, r3
 303              	.LVL13:
 665:Generated_Source\PSoC4/CyLib.c **** 
 666:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SRSSLT && CY_IP_PLL)
 667:Generated_Source\PSoC4/CyLib.c ****         sysclkSource |= (((uint32)(CY_SYS_ECO_CLK_SELECT_REG & CY_SYS_ECO_CLK_SELECT_ECO_PLL_MASK))
 668:Generated_Source\PSoC4/CyLib.c ****                          CY_SYS_CLK_SELECT_HFCLK_PLL_SHIFT);
 669:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 670:Generated_Source\PSoC4/CyLib.c ****         
 671:Generated_Source\PSoC4/CyLib.c ****     }
 672:Generated_Source\PSoC4/CyLib.c **** 
 673:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 304              		.loc 1 673 0
 305 000e FFF7FEFF 		bl	CyExitCriticalSection
 306              	.LVL14:
 674:Generated_Source\PSoC4/CyLib.c **** 
 675:Generated_Source\PSoC4/CyLib.c ****     return (sysclkSource);
 676:Generated_Source\PSoC4/CyLib.c **** }
 307              		.loc 1 676 0
 308 0012 2000     		movs	r0, r4
 309              		@ sp needed
 310              	.LVL15:
 311 0014 10BD     		pop	{r4, pc}
 312              	.L24:
 313 0016 C046     		.align	2
 314              	.L23:
 315 0018 28000340 		.word	1073938472
 316              		.cfi_endproc
 317              	.LFE8:
 318              		.size	CySysClkGetSysclkSource, .-CySysClkGetSysclkSource
 319              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
 320              		.align	2
 321              		.global	CySysClkWriteSysclkDiv
 322              		.code	16
 323              		.thumb_func
 324              		.type	CySysClkWriteSysclkDiv, %function
 325              	CySysClkWriteSysclkDiv:
 326              	.LFB9:
 677:Generated_Source\PSoC4/CyLib.c **** 
 678:Generated_Source\PSoC4/CyLib.c **** 
 679:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 680:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 681:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 682:Generated_Source\PSoC4/CyLib.c **** *
 683:Generated_Source\PSoC4/CyLib.c **** * Selects the prescaler divide amount for SYSCLK from HFCLK.
 684:Generated_Source\PSoC4/CyLib.c **** *
 685:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 686:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 687:Generated_Source\PSoC4/CyLib.c **** *
 688:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 689:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 690:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 691:Generated_Source\PSoC4/CyLib.c **** *
 692:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 693:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 694:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 695:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 19


 696:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 697:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 698:Generated_Source\PSoC4/CyLib.c **** *
 699:Generated_Source\PSoC4/CyLib.c **** * \param divider Power of 2 prescaler selection
 700:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
 701:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 702:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 703:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 704:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
 705:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 706:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 707:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 708:Generated_Source\PSoC4/CyLib.c **** *
 709:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 710:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 711:Generated_Source\PSoC4/CyLib.c **** {
 327              		.loc 1 711 0
 328              		.cfi_startproc
 329              		@ args = 0, pretend = 0, frame = 0
 330              		@ frame_needed = 0, uses_anonymous_args = 0
 331              	.LVL16:
 332 0000 10B5     		push	{r4, lr}
 333              		.cfi_def_cfa_offset 8
 334              		.cfi_offset 4, -8
 335              		.cfi_offset 14, -4
 336 0002 0400     		movs	r4, r0
 712:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 713:Generated_Source\PSoC4/CyLib.c **** 
 714:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 337              		.loc 1 714 0
 338 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 339              	.LVL17:
 715:Generated_Source\PSoC4/CyLib.c **** 
 716:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 340              		.loc 1 716 0
 341 0008 A401     		lsls	r4, r4, #6
 342              	.LVL18:
 343 000a FF23     		movs	r3, #255
 344 000c 2340     		ands	r3, r4
 717:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 718:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 345              		.loc 1 718 0
 346 000e 0449     		ldr	r1, .L26
 347 0010 0A68     		ldr	r2, [r1]
 348 0012 C024     		movs	r4, #192
 349 0014 A243     		bics	r2, r4
 717:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 350              		.loc 1 717 0
 351 0016 1343     		orrs	r3, r2
 716:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 352              		.loc 1 716 0
 353 0018 0B60     		str	r3, [r1]
 719:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 720:Generated_Source\PSoC4/CyLib.c **** 
 721:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 354              		.loc 1 721 0
 355 001a FFF7FEFF 		bl	CyExitCriticalSection
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 20


 356              	.LVL19:
 722:Generated_Source\PSoC4/CyLib.c **** }
 357              		.loc 1 722 0
 358              		@ sp needed
 359 001e 10BD     		pop	{r4, pc}
 360              	.L27:
 361              		.align	2
 362              	.L26:
 363 0020 28000340 		.word	1073938472
 364              		.cfi_endproc
 365              	.LFE9:
 366              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 367              		.section	.text.CySysClkWriteHfclkDiv,"ax",%progbits
 368              		.align	2
 369              		.global	CySysClkWriteHfclkDiv
 370              		.code	16
 371              		.thumb_func
 372              		.type	CySysClkWriteHfclkDiv, %function
 373              	CySysClkWriteHfclkDiv:
 374              	.LFB11:
 723:Generated_Source\PSoC4/CyLib.c **** 
 724:Generated_Source\PSoC4/CyLib.c **** 
 725:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 726:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 727:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 728:Generated_Source\PSoC4/CyLib.c **** *
 729:Generated_Source\PSoC4/CyLib.c **** * Sets the frequency of the IMO.
 730:Generated_Source\PSoC4/CyLib.c **** *
 731:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 732:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 733:Generated_Source\PSoC4/CyLib.c **** *
 734:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 735:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 736:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 737:Generated_Source\PSoC4/CyLib.c **** *
 738:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200M and PSoC 4200L device families, if WCO lock feature is enabled
 739:Generated_Source\PSoC4/CyLib.c **** * then this API will disable the lock, write the new IMO frequency and then
 740:Generated_Source\PSoC4/CyLib.c **** * re-enable the lock.
 741:Generated_Source\PSoC4/CyLib.c **** *
 742:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L device families, this function enables the USB lock when 24 or
 743:Generated_Source\PSoC4/CyLib.c **** * 48 MHz passed as a parameter if the USB lock option is enabled in Design Wide
 744:Generated_Source\PSoC4/CyLib.c **** * Resources tab or CySysClkImoEnableUsbLock() was called before. Note the USB
 745:Generated_Source\PSoC4/CyLib.c **** * lock is disabled during IMO frequency change.
 746:Generated_Source\PSoC4/CyLib.c **** *
 747:Generated_Source\PSoC4/CyLib.c **** * The CPU is halted if new frequency is invalid and project is compiled
 748:Generated_Source\PSoC4/CyLib.c **** * in debug mode.
 749:Generated_Source\PSoC4/CyLib.c **** *
 750:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 751:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 752:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 753:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 754:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 755:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 756:Generated_Source\PSoC4/CyLib.c **** *
 757:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 758:Generated_Source\PSoC4/CyLib.c **** * and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
 759:Generated_Source\PSoC4/CyLib.c **** * the System clock.
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 21


 760:Generated_Source\PSoC4/CyLib.c **** *
 761:Generated_Source\PSoC4/CyLib.c **** * \param freq All PSoC 4 families excluding the following: Valid range [3-48]
 762:Generated_Source\PSoC4/CyLib.c **** * with step size equals 1. PSoC 4000: Valid values are 24, 32, and 48.
 763:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor: Valid range [24-48] with 
 764:Generated_Source\PSoC4/CyLib.c **** * step size equals 4.
 765:Generated_Source\PSoC4/CyLib.c **** *
 766:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 767:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 768:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 769:Generated_Source\PSoC4/CyLib.c ****     {
 770:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 771:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 772:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
 773:Generated_Source\PSoC4/CyLib.c ****         #else
 774:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
 775:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
 776:Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
 777:Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
 778:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 779:Generated_Source\PSoC4/CyLib.c **** 
 780:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 781:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 782:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 783:Generated_Source\PSoC4/CyLib.c **** 
 784:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 785:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 786:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 787:Generated_Source\PSoC4/CyLib.c **** 
 788:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 789:Generated_Source\PSoC4/CyLib.c **** 
 790:Generated_Source\PSoC4/CyLib.c **** 
 791:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 792:Generated_Source\PSoC4/CyLib.c **** 
 793:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 794:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
 795:Generated_Source\PSoC4/CyLib.c ****             {
 796:Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
 797:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 798:Generated_Source\PSoC4/CyLib.c ****             }
 799:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 800:Generated_Source\PSoC4/CyLib.c **** 
 801:Generated_Source\PSoC4/CyLib.c **** 
 802:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 803:Generated_Source\PSoC4/CyLib.c **** 
 804:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 805:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetUsbLock())
 806:Generated_Source\PSoC4/CyLib.c ****                 {
 807:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 808:Generated_Source\PSoC4/CyLib.c **** 
 809:Generated_Source\PSoC4/CyLib.c ****                 if ((24u == freq) || (48u == freq))
 810:Generated_Source\PSoC4/CyLib.c ****                 {
 811:Generated_Source\PSoC4/CyLib.c ****                     usbLock = 1u;
 812:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableUsbLock();
 813:Generated_Source\PSoC4/CyLib.c ****                 }
 814:Generated_Source\PSoC4/CyLib.c **** 
 815:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 816:Generated_Source\PSoC4/CyLib.c ****                 }
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 22


 817:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 818:Generated_Source\PSoC4/CyLib.c **** 
 819:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 820:Generated_Source\PSoC4/CyLib.c **** 
 821:Generated_Source\PSoC4/CyLib.c **** 
 822:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 823:Generated_Source\PSoC4/CyLib.c **** 
 824:Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
 825:Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 826:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 827:Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 828:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 829:Generated_Source\PSoC4/CyLib.c **** 
 830:Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 831:Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 832:Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
 833:Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 834:Generated_Source\PSoC4/CyLib.c **** 
 835:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 836:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 837:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 838:Generated_Source\PSoC4/CyLib.c **** 
 839:Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
 840:Generated_Source\PSoC4/CyLib.c **** 
 841:Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 842:Generated_Source\PSoC4/CyLib.c ****         {
 843:Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 844:Generated_Source\PSoC4/CyLib.c ****             {
 845:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 846:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 847:Generated_Source\PSoC4/CyLib.c ****             }
 848:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 849:Generated_Source\PSoC4/CyLib.c ****             {
 850:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 851:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 852:Generated_Source\PSoC4/CyLib.c ****             }
 853:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 854:Generated_Source\PSoC4/CyLib.c ****             {
 855:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 856:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 857:Generated_Source\PSoC4/CyLib.c ****             }
 858:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 859:Generated_Source\PSoC4/CyLib.c ****             {
 860:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 861:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 862:Generated_Source\PSoC4/CyLib.c ****             }
 863:Generated_Source\PSoC4/CyLib.c ****             else
 864:Generated_Source\PSoC4/CyLib.c ****             {
 865:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 866:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 867:Generated_Source\PSoC4/CyLib.c ****             }
 868:Generated_Source\PSoC4/CyLib.c **** 
 869:Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 870:Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 871:Generated_Source\PSoC4/CyLib.c **** 
 872:Generated_Source\PSoC4/CyLib.c **** 
 873:Generated_Source\PSoC4/CyLib.c ****             /****************************************************************************
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 23


 874:Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 875:Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
 876:Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
 877:Generated_Source\PSoC4/CyLib.c ****             *
 878:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 879:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 880:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 881:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 882:Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 883:Generated_Source\PSoC4/CyLib.c ****             {
 884:Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 885:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 886:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 887:Generated_Source\PSoC4/CyLib.c **** 
 888:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 889:Generated_Source\PSoC4/CyLib.c **** 
 890:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 891:Generated_Source\PSoC4/CyLib.c ****             }
 892:Generated_Source\PSoC4/CyLib.c ****             else
 893:Generated_Source\PSoC4/CyLib.c ****             {
 894:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 895:Generated_Source\PSoC4/CyLib.c ****             }
 896:Generated_Source\PSoC4/CyLib.c **** 
 897:Generated_Source\PSoC4/CyLib.c **** 
 898:Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 899:Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 900:Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 901:Generated_Source\PSoC4/CyLib.c ****             *
 902:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 903:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 904:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 905:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 906:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 907:Generated_Source\PSoC4/CyLib.c ****             {
 908:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 909:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 910:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 911:Generated_Source\PSoC4/CyLib.c ****             }
 912:Generated_Source\PSoC4/CyLib.c **** 
 913:Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 914:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_T
 915:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 916:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 917:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 918:Generated_Source\PSoC4/CyLib.c **** 
 919:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 920:Generated_Source\PSoC4/CyLib.c ****             {
 921:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 922:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 923:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 924:Generated_Source\PSoC4/CyLib.c ****             }
 925:Generated_Source\PSoC4/CyLib.c ****         }
 926:Generated_Source\PSoC4/CyLib.c ****         else
 927:Generated_Source\PSoC4/CyLib.c ****         {
 928:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 929:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 930:Generated_Source\PSoC4/CyLib.c ****         }
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 24


 931:Generated_Source\PSoC4/CyLib.c **** 
 932:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
 933:Generated_Source\PSoC4/CyLib.c **** 
 934:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 935:Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
 936:Generated_Source\PSoC4/CyLib.c ****             {
 937:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 938:Generated_Source\PSoC4/CyLib.c ****             }
 939:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 940:Generated_Source\PSoC4/CyLib.c **** 
 941:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 942:Generated_Source\PSoC4/CyLib.c ****             if (1u == usbLock)
 943:Generated_Source\PSoC4/CyLib.c ****             {
 944:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableUsbLock();
 945:Generated_Source\PSoC4/CyLib.c ****             }
 946:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 947:Generated_Source\PSoC4/CyLib.c **** 
 948:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 949:Generated_Source\PSoC4/CyLib.c ****     }
 950:Generated_Source\PSoC4/CyLib.c **** 
 951:Generated_Source\PSoC4/CyLib.c **** #else
 952:Generated_Source\PSoC4/CyLib.c **** 
 953:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 954:Generated_Source\PSoC4/CyLib.c ****     {
 955:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 956:Generated_Source\PSoC4/CyLib.c ****         uint8  imoTrim1Value;
 957:Generated_Source\PSoC4/CyLib.c **** 
 958:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 959:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 960:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */        
 961:Generated_Source\PSoC4/CyLib.c ****         
 962:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 963:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 964:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 965:Generated_Source\PSoC4/CyLib.c **** 
 966:Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4000)
 967:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 32u) || (freq == 48u))
 968:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_CCG3)
 969:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 36u) || (freq == 48u))
 970:Generated_Source\PSoC4/CyLib.c ****         #else
 971:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 28u) || (freq == 32u) ||
 972:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 973:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 974:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_PSOC4_4000) */
 975:Generated_Source\PSoC4/CyLib.c ****         {
 976:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 977:Generated_Source\PSoC4/CyLib.c **** 
 978:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 979:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetWcoLock())
 980:Generated_Source\PSoC4/CyLib.c ****                 {
 981:Generated_Source\PSoC4/CyLib.c ****                     wcoLock = 1u;
 982:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
 983:Generated_Source\PSoC4/CyLib.c ****                 }
 984:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 985:Generated_Source\PSoC4/CyLib.c **** 
 986:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 987:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 25


 988:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 989:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkImoGetUsbLock())
 990:Generated_Source\PSoC4/CyLib.c ****                     {
 991:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 992:Generated_Source\PSoC4/CyLib.c **** 
 993:Generated_Source\PSoC4/CyLib.c ****                     if (48u == freq)
 994:Generated_Source\PSoC4/CyLib.c ****                     {
 995:Generated_Source\PSoC4/CyLib.c ****                         usbLock = 1u;
 996:Generated_Source\PSoC4/CyLib.c ****                         CySysClkImoDisableUsbLock();
 997:Generated_Source\PSoC4/CyLib.c ****                     }
 998:Generated_Source\PSoC4/CyLib.c **** 
 999:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
1000:Generated_Source\PSoC4/CyLib.c ****                     }
1001:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
1002:Generated_Source\PSoC4/CyLib.c **** 
1003:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
1004:Generated_Source\PSoC4/CyLib.c **** 
1005:Generated_Source\PSoC4/CyLib.c **** 
1006:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
1007:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
1008:Generated_Source\PSoC4/CyLib.c **** 
1009:Generated_Source\PSoC4/CyLib.c **** 
1010:Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
1011:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
1012:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
1013:Generated_Source\PSoC4/CyLib.c ****                 {
1014:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
1015:Generated_Source\PSoC4/CyLib.c ****                 }
1016:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
1017:Generated_Source\PSoC4/CyLib.c ****                 {
1018:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
1019:Generated_Source\PSoC4/CyLib.c ****                 }
1020:Generated_Source\PSoC4/CyLib.c ****                 else
1021:Generated_Source\PSoC4/CyLib.c ****                 {
1022:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_M
1023:Generated_Source\PSoC4/CyLib.c ****                 }
1024:Generated_Source\PSoC4/CyLib.c ****             #else
1025:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
1026:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
1027:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
1028:Generated_Source\PSoC4/CyLib.c **** 
1029:Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
1030:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
1031:Generated_Source\PSoC4/CyLib.c **** 
1032:Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
1033:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
1034:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
1035:Generated_Source\PSoC4/CyLib.c **** 
1036:Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
1037:Generated_Source\PSoC4/CyLib.c **** 
1038:Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
1039:Generated_Source\PSoC4/CyLib.c ****             {
1040:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
1041:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
1042:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
1043:Generated_Source\PSoC4/CyLib.c **** 
1044:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 26


1045:Generated_Source\PSoC4/CyLib.c **** 
1046:Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
1047:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
1048:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
1049:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
1050:Generated_Source\PSoC4/CyLib.c ****             }
1051:Generated_Source\PSoC4/CyLib.c **** 
1052:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
1053:Generated_Source\PSoC4/CyLib.c ****                 if (1u == wcoLock)
1054:Generated_Source\PSoC4/CyLib.c ****                 {
1055:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableWcoLock();
1056:Generated_Source\PSoC4/CyLib.c ****                 }
1057:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
1058:Generated_Source\PSoC4/CyLib.c ****         
1059:Generated_Source\PSoC4/CyLib.c ****         
1060:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
1061:Generated_Source\PSoC4/CyLib.c ****                 if (1u == usbLock)
1062:Generated_Source\PSoC4/CyLib.c ****                 {
1063:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableUsbLock();
1064:Generated_Source\PSoC4/CyLib.c ****                 }
1065:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
1066:Generated_Source\PSoC4/CyLib.c **** 
1067:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1068:Generated_Source\PSoC4/CyLib.c ****         }
1069:Generated_Source\PSoC4/CyLib.c ****         else
1070:Generated_Source\PSoC4/CyLib.c ****         {
1071:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
1072:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
1073:Generated_Source\PSoC4/CyLib.c ****         }
1074:Generated_Source\PSoC4/CyLib.c ****     }
1075:Generated_Source\PSoC4/CyLib.c **** 
1076:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
1077:Generated_Source\PSoC4/CyLib.c **** 
1078:Generated_Source\PSoC4/CyLib.c **** 
1079:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
1080:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1081:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
1082:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1083:Generated_Source\PSoC4/CyLib.c ****     *
1084:Generated_Source\PSoC4/CyLib.c ****     * Selects the pre-scaler divider value for HFCLK from IMO.
1085:Generated_Source\PSoC4/CyLib.c ****     *
1086:Generated_Source\PSoC4/CyLib.c ****     * The HFCLK predivider allows the device to divide the HFCLK selection mux
1087:Generated_Source\PSoC4/CyLib.c ****     * input before use as HFCLK. The predivider is capable of dividing the HFCLK by
1088:Generated_Source\PSoC4/CyLib.c ****     * powers of 2 between 1 and 8.
1089:Generated_Source\PSoC4/CyLib.c ****     *
1090:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
1091:Generated_Source\PSoC4/CyLib.c ****     * should be selected in a way, not to exceed 16 MHz for SYSCLK.
1092:Generated_Source\PSoC4/CyLib.c ****     *
1093:Generated_Source\PSoC4/CyLib.c ****     * If the SYSCLK clock frequency increases during the device operation, call
1094:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
1095:Generated_Source\PSoC4/CyLib.c ****     * number of clock cycles the cache will wait before sampling data comes back
1096:Generated_Source\PSoC4/CyLib.c ****     * from Flash. If the SYSCLK clock frequency decreases, you can call
1097:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
1098:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() description for more information.
1099:Generated_Source\PSoC4/CyLib.c ****     *
1100:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
1101:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 27


1102:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
1103:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
1104:Generated_Source\PSoC4/CyLib.c ****     *
1105:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1106:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
1107:Generated_Source\PSoC4/CyLib.c ****     {
 375              		.loc 1 1107 0
 376              		.cfi_startproc
 377              		@ args = 0, pretend = 0, frame = 0
 378              		@ frame_needed = 0, uses_anonymous_args = 0
 379              	.LVL20:
 380 0000 70B5     		push	{r4, r5, r6, lr}
 381              		.cfi_def_cfa_offset 16
 382              		.cfi_offset 4, -16
 383              		.cfi_offset 5, -12
 384              		.cfi_offset 6, -8
 385              		.cfi_offset 14, -4
 386 0002 0400     		movs	r4, r0
1108:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1109:Generated_Source\PSoC4/CyLib.c **** 
1110:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 387              		.loc 1 1110 0
 388 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 389              	.LVL21:
1111:Generated_Source\PSoC4/CyLib.c **** 
1112:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
 390              		.loc 1 1112 0
 391 0008 0549     		ldr	r1, .L29
 392 000a 0A68     		ldr	r2, [r1]
 393 000c 0C25     		movs	r5, #12
 394 000e AA43     		bics	r2, r5
1113:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
1114:Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
 395              		.loc 1 1114 0
 396 0010 A300     		lsls	r3, r4, #2
 397 0012 2C00     		movs	r4, r5
 398              	.LVL22:
 399 0014 1C40     		ands	r4, r3
1113:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 400              		.loc 1 1113 0
 401 0016 1443     		orrs	r4, r2
1112:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 402              		.loc 1 1112 0
 403 0018 0C60     		str	r4, [r1]
1115:Generated_Source\PSoC4/CyLib.c **** 
1116:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 404              		.loc 1 1116 0
 405 001a FFF7FEFF 		bl	CyExitCriticalSection
 406              	.LVL23:
1117:Generated_Source\PSoC4/CyLib.c ****     }
 407              		.loc 1 1117 0
 408              		@ sp needed
 409 001e 70BD     		pop	{r4, r5, r6, pc}
 410              	.L30:
 411              		.align	2
 412              	.L29:
 413 0020 28000340 		.word	1073938472
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 28


 414              		.cfi_endproc
 415              	.LFE11:
 416              		.size	CySysClkWriteHfclkDiv, .-CySysClkWriteHfclkDiv
 417              		.section	.text.CySysGetResetReason,"ax",%progbits
 418              		.align	2
 419              		.global	CySysGetResetReason
 420              		.code	16
 421              		.thumb_func
 422              		.type	CySysGetResetReason, %function
 423              	CySysGetResetReason:
 424              	.LFB12:
1118:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
1119:Generated_Source\PSoC4/CyLib.c **** 
1120:Generated_Source\PSoC4/CyLib.c **** 
1121:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_ECO)
1122:Generated_Source\PSoC4/CyLib.c **** 
1123:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1124:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
1125:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1126:Generated_Source\PSoC4/CyLib.c ****     *
1127:Generated_Source\PSoC4/CyLib.c ****     * Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
1128:Generated_Source\PSoC4/CyLib.c ****     * for the ECO startup time.
1129:Generated_Source\PSoC4/CyLib.c ****     *
1130:Generated_Source\PSoC4/CyLib.c ****     * The timeout interval is measured based on the system frequency defined by
1131:Generated_Source\PSoC4/CyLib.c ****     * PSoC Creator at build time. If System clock frequency is changed in
1132:Generated_Source\PSoC4/CyLib.c ****     * runtime, the \ref CyDelayFreq() with the appropriate parameter should be
1133:Generated_Source\PSoC4/CyLib.c ****     * called.
1134:Generated_Source\PSoC4/CyLib.c ****     *
1135:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100 BLE / PSoC 4200 BLE: The WCO must be enabled prior to enabling ECO.
1136:Generated_Source\PSoC4/CyLib.c ****     *
1137:Generated_Source\PSoC4/CyLib.c ****     * \param timeoutUs Timeout in microseconds.
1138:Generated_Source\PSoC4/CyLib.c ****     *
1139:Generated_Source\PSoC4/CyLib.c ****     * If zero is specified, the function does not wait for timeout and returns
1140:Generated_Source\PSoC4/CyLib.c ****     * CYRET_SUCCESS. If non-zero is specified, the function waits for the timeout.
1141:Generated_Source\PSoC4/CyLib.c ****     *
1142:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS Completed successfully. The ECO is oscillating and
1143:Generated_Source\PSoC4/CyLib.c ****     * amplitude reached 60% and it does not mean 24 MHz crystal is within 50 ppm.
1144:Generated_Source\PSoC4/CyLib.c ****     *
1145:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_TIMEOUT Timeout occurred. If the crystal is not oscillating
1146:Generated_Source\PSoC4/CyLib.c ****     * or amplitude didn't reach 60% after specified amount of time, CYRET_TIMEOUT
1147:Generated_Source\PSoC4/CyLib.c ****     * is returned.
1148:Generated_Source\PSoC4/CyLib.c ****     *
1149:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1150:Generated_Source\PSoC4/CyLib.c ****     *
1151:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1152:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
1153:Generated_Source\PSoC4/CyLib.c ****     {
1154:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1155:Generated_Source\PSoC4/CyLib.c **** 
1156:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_ECO_BLESS)
1157:Generated_Source\PSoC4/CyLib.c ****             /* Enable the RF oscillator band gap */
1158:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1159:Generated_Source\PSoC4/CyLib.c **** 
1160:Generated_Source\PSoC4/CyLib.c ****             /* Update trimming register */
1161:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
1162:Generated_Source\PSoC4/CyLib.c **** 
1163:Generated_Source\PSoC4/CyLib.c ****             /* Enable the Crystal */
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 29


1164:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1165:Generated_Source\PSoC4/CyLib.c ****         
1166:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1167:Generated_Source\PSoC4/CyLib.c ****             uint32 regConfig;
1168:Generated_Source\PSoC4/CyLib.c ****             uint32 intrRegMaskStore = 0u;
1169:Generated_Source\PSoC4/CyLib.c ****             
1170:Generated_Source\PSoC4/CyLib.c ****             if (0u != (CY_SYS_BLESS_MT_CFG_REG & (CY_SYS_BLESS_MT_CFG_ENABLE_BLERD <<  CYFLD_BLE_BL
1171:Generated_Source\PSoC4/CyLib.c ****             {
1172:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG |= (CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_D
1173:Generated_Source\PSoC4/CyLib.c ****             }
1174:Generated_Source\PSoC4/CyLib.c ****             else
1175:Generated_Source\PSoC4/CyLib.c ****             {
1176:Generated_Source\PSoC4/CyLib.c ****                 /* Init BLE core */
1177:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG_REG = CY_SYS_BLESS_MT_DELAY_CFG_INIT;
1178:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG2_REG = CY_SYS_BLESS_MT_DELAY_CFG2_INIT;
1179:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG3_REG = CY_SYS_BLESS_MT_DELAY_CFG3_INIT;
1180:Generated_Source\PSoC4/CyLib.c ****             
1181:Generated_Source\PSoC4/CyLib.c ****                 /* RCB init */
1182:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_CTRL_REG;
1183:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_RCB_CTRL_CLEAR;
1184:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_RCB_CTRL_INIT;
1185:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_CTRL_REG = regConfig;
1186:Generated_Source\PSoC4/CyLib.c ****                 
1187:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1188:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1189:Generated_Source\PSoC4/CyLib.c ****                 {
1190:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1191:Generated_Source\PSoC4/CyLib.c ****                 }
1192:Generated_Source\PSoC4/CyLib.c ****                 
1193:Generated_Source\PSoC4/CyLib.c ****                 /* Enable BLE core */
1194:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_BLESS_MT_CFG_REG;
1195:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_BLESS_MT_CFG_CLEAR;
1196:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_BLESS_MT_CFG_INIT;
1197:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG = regConfig;
1198:Generated_Source\PSoC4/CyLib.c **** 
1199:Generated_Source\PSoC4/CyLib.c ****                 while(0u == ((CY_SYS_BLESS_BLERD_ACTIVE_INTR_STAT & CY_SYS_BLESS_INTR_STAT_REG)))
1200:Generated_Source\PSoC4/CyLib.c ****                 {
1201:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until BLERD55 moves to active state */
1202:Generated_Source\PSoC4/CyLib.c ****                 }
1203:Generated_Source\PSoC4/CyLib.c **** 
1204:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1205:Generated_Source\PSoC4/CyLib.c ****                 {
1206:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1207:Generated_Source\PSoC4/CyLib.c ****                 }
1208:Generated_Source\PSoC4/CyLib.c ****                 
1209:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1210:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_NRST_SET;
1211:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_DIG_CLK_SET;
1212:Generated_Source\PSoC4/CyLib.c ****                 
1213:Generated_Source\PSoC4/CyLib.c ****                 #if (CY_SYS_BLE_CLK_ECO_FREQ_32MHZ == CYDEV_ECO_CLK_MHZ)
1214:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_DIV_SET;
1215:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | CY_SYS_RCB_RBUS_
1216:Generated_Source\PSoC4/CyLib.c ****                 #else
1217:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_NODIV_SET;
1218:Generated_Source\PSoC4/CyLib.c ****                 #endif
1219:Generated_Source\PSoC4/CyLib.c ****                 
1220:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 30


1221:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_RCB_INTR_RCB_DONE & intrRegMaskStore))
1222:Generated_Source\PSoC4/CyLib.c ****                 {
1223:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~(CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_
1224:Generated_Source\PSoC4/CyLib.c ****                 }
1225:Generated_Source\PSoC4/CyLib.c ****                 
1226:Generated_Source\PSoC4/CyLib.c ****                 /* Send read commands to RBUS */
1227:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RD_CMD | 
1228:Generated_Source\PSoC4/CyLib.c ****                                             (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET & ~CY_SYS_RCB_RBUS_VAL
1229:Generated_Source\PSoC4/CyLib.c ****                                             
1230:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY & CY_SYS_RCB_INTR_REG))
1231:Generated_Source\PSoC4/CyLib.c ****                 {
1232:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RX_FIFO_NOT_EMPTY state */
1233:Generated_Source\PSoC4/CyLib.c ****                 }
1234:Generated_Source\PSoC4/CyLib.c **** 
1235:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG |= CY_SYS_RCB_INTR_RCB_DONE;
1236:Generated_Source\PSoC4/CyLib.c ****                 
1237:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_RX_FIFO_RD_REG & CY_SYS_RCB_RBUS_TRIM_MASK;
1238:Generated_Source\PSoC4/CyLib.c ****                 
1239:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1240:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | regConfig | CY_SYS_R
1241:Generated_Source\PSoC4/CyLib.c ****                 
1242:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_DONE & CY_SYS_RCB_INTR_REG))
1243:Generated_Source\PSoC4/CyLib.c ****                 {
1244:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RCB_DONE state */
1245:Generated_Source\PSoC4/CyLib.c ****                 }
1246:Generated_Source\PSoC4/CyLib.c ****                 
1247:Generated_Source\PSoC4/CyLib.c ****                 /* Clear Interrupt */
1248:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG = CY_SYS_RCB_INTR_CLEAR;
1249:Generated_Source\PSoC4/CyLib.c ****                 
1250:Generated_Source\PSoC4/CyLib.c ****                 if(0u != ((CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY) & intr
1251:Generated_Source\PSoC4/CyLib.c ****                 {
1252:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= intrRegMaskStore;
1253:Generated_Source\PSoC4/CyLib.c ****                 }
1254:Generated_Source\PSoC4/CyLib.c ****                 
1255:Generated_Source\PSoC4/CyLib.c ****             }
1256:Generated_Source\PSoC4/CyLib.c ****         #else /* CY_IP_ECO_SRSSV2 || CY_IP_ECO_SRSSLT */
1257:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_ENABLE;
1258:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_ECO_CONFIG_CLK_EN_TIMEOUT_US);
1259:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_ECOV2_SRSSLT)
1260:Generated_Source\PSoC4/CyLib.c ****                 CySysClkPllClearPendingInterrupt(CY_SYS_PLL_INTR_WD_ERR);
1261:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_ECOV2_SRSSLT) */
1262:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_CLK_EN;
1263:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_ECO_BLESS) */
1264:Generated_Source\PSoC4/CyLib.c **** 
1265:Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
1266:Generated_Source\PSoC4/CyLib.c ****         {
1267:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_TIMEOUT;
1268:Generated_Source\PSoC4/CyLib.c **** 
1269:Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
1270:Generated_Source\PSoC4/CyLib.c ****             {
1271:Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
1272:Generated_Source\PSoC4/CyLib.c **** 
1273:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
1274:Generated_Source\PSoC4/CyLib.c ****                 {
1275:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_SUCCESS;
1276:Generated_Source\PSoC4/CyLib.c ****                     break;
1277:Generated_Source\PSoC4/CyLib.c ****                 }
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 31


1278:Generated_Source\PSoC4/CyLib.c ****             }
1279:Generated_Source\PSoC4/CyLib.c **** 
1280:Generated_Source\PSoC4/CyLib.c ****         }
1281:Generated_Source\PSoC4/CyLib.c **** 
1282:Generated_Source\PSoC4/CyLib.c ****         return(returnStatus);
1283:Generated_Source\PSoC4/CyLib.c ****     }
1284:Generated_Source\PSoC4/CyLib.c **** 
1285:Generated_Source\PSoC4/CyLib.c **** 
1286:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1287:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
1288:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1289:Generated_Source\PSoC4/CyLib.c ****     *
1290:Generated_Source\PSoC4/CyLib.c ****     * Stops the megahertz crystal.
1291:Generated_Source\PSoC4/CyLib.c ****     *
1292:Generated_Source\PSoC4/CyLib.c ****     * If ECO is disabled when it is sourcing HFCLK, the CPU will halt. In addition,
1293:Generated_Source\PSoC4/CyLib.c ****     * for PSoC 4100 BLE / PSoC 4200 BLE devices, the BLE sub-system will stop
1294:Generated_Source\PSoC4/CyLib.c ****     * functioning.
1295:Generated_Source\PSoC4/CyLib.c ****     *
1296:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1297:Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
1298:Generated_Source\PSoC4/CyLib.c ****     {
1299:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1300:Generated_Source\PSoC4/CyLib.c ****             /* Disable the RF oscillator band gap */
1301:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1302:Generated_Source\PSoC4/CyLib.c **** 
1303:Generated_Source\PSoC4/CyLib.c ****             /* Disable the Crystal */
1304:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1305:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1306:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_BLESS_MT_CFG_REG &= ~(CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_DPSL
1307:Generated_Source\PSoC4/CyLib.c ****         #else
1308:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~(CY_SYS_CLK_ECO_CONFIG_ENABLE | CY_SYS_CLK_ECO_C
1309:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1310:Generated_Source\PSoC4/CyLib.c ****     }
1311:Generated_Source\PSoC4/CyLib.c **** 
1312:Generated_Source\PSoC4/CyLib.c **** 
1313:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1314:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
1315:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1316:Generated_Source\PSoC4/CyLib.c ****     *
1317:Generated_Source\PSoC4/CyLib.c ****     * Reads the status bit for the megahertz crystal.
1318:Generated_Source\PSoC4/CyLib.c ****     *
1319:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4100 BLE / PSoC 4200 BLE devices, the status bit is the
1320:Generated_Source\PSoC4/CyLib.c ****     * XO_AMP_DETECT bit in FSM register.
1321:Generated_Source\PSoC4/CyLib.c ****     *
1322:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L / 4100S / 4500 with ECO devices, the error status bit is 
1323:Generated_Source\PSoC4/CyLib.c ****     * the WATCHDOG_ERROR bit in ECO_STATUS register.
1324:Generated_Source\PSoC4/CyLib.c ****     *
1325:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4100 BLE/PSoC 4200 BLE: Non-zero indicates that ECO output
1326:Generated_Source\PSoC4/CyLib.c ****     * reached 50 ppm and is oscillating in valid range.
1327:Generated_Source\PSoC4/CyLib.c ****     *
1328:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4200L / 4100S / 4500 with ECO: Non-zero indicates that ECO 
1329:Generated_Source\PSoC4/CyLib.c ****     * is running.
1330:Generated_Source\PSoC4/CyLib.c ****     *
1331:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1332:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
1333:Generated_Source\PSoC4/CyLib.c ****     {
1334:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 32


1335:Generated_Source\PSoC4/CyLib.c **** 
1336:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1337:Generated_Source\PSoC4/CyLib.c ****             returnValue = CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT;
1338:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1339:Generated_Source\PSoC4/CyLib.c ****             returnValue = (CY_SYS_BLESS_MT_STATUS_REG & CY_SYS_BLESS_MT_STATUS_CURR_STATE_MASK) >> 
1340:Generated_Source\PSoC4/CyLib.c **** 
1341:Generated_Source\PSoC4/CyLib.c ****             returnValue =  ((CY_SYS_BLESS_MT_STATUS_BLERD_IDLE == returnValue) || 
1342:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_SWITCH_EN  == returnValue) ||
1343:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ACTIVE  ==  returnValue) ||
1344:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ISOLATE == returnValue));
1345:Generated_Source\PSoC4/CyLib.c ****         #else
1346:Generated_Source\PSoC4/CyLib.c ****             returnValue = (0u != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)
1347:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1348:Generated_Source\PSoC4/CyLib.c **** 
1349:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1350:Generated_Source\PSoC4/CyLib.c ****     }
1351:Generated_Source\PSoC4/CyLib.c **** 
1352:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECO_BLESS || CY_IP_ECO_BLESSV3)
1353:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1354:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkWriteEcoDiv
1355:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1356:Generated_Source\PSoC4/CyLib.c ****         *
1357:Generated_Source\PSoC4/CyLib.c ****         * Selects value for the ECO divider.
1358:Generated_Source\PSoC4/CyLib.c ****         *
1359:Generated_Source\PSoC4/CyLib.c ****         * The ECO must not be the HFCLK clock source when this function is called.
1360:Generated_Source\PSoC4/CyLib.c ****         * The HFCLK source can be changed to the other clock source by call to the
1361:Generated_Source\PSoC4/CyLib.c ****         * CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
1362:Generated_Source\PSoC4/CyLib.c ****         * function will not have any effect if compiler in release mode, and halt the
1363:Generated_Source\PSoC4/CyLib.c ****         * CPU when compiler in debug mode.
1364:Generated_Source\PSoC4/CyLib.c ****         *
1365:Generated_Source\PSoC4/CyLib.c ****         * If the SYSCLK clock frequency increases during the device operation, call
1366:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
1367:Generated_Source\PSoC4/CyLib.c ****         * of clock cycles the cache will wait before sampling data comes back from
1368:Generated_Source\PSoC4/CyLib.c ****         * Flash. If the SYSCLK clock frequency decreases, you can call
1369:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() to improve the CPU performance. See
1370:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() description for more information.
1371:Generated_Source\PSoC4/CyLib.c ****         *
1372:Generated_Source\PSoC4/CyLib.c ****         * \param divider Power of 2 divider selection.
1373:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV1
1374:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV2
1375:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV4
1376:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV8
1377:Generated_Source\PSoC4/CyLib.c ****         *
1378:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1379:Generated_Source\PSoC4/CyLib.c ****         void CySysClkWriteEcoDiv(uint32 divider)
1380:Generated_Source\PSoC4/CyLib.c ****         {
1381:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1382:Generated_Source\PSoC4/CyLib.c **** 
1383:Generated_Source\PSoC4/CyLib.c ****             if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK)
1384:Generated_Source\PSoC4/CyLib.c ****             {
1385:Generated_Source\PSoC4/CyLib.c ****                 interruptState = CyEnterCriticalSection();
1386:Generated_Source\PSoC4/CyLib.c **** 
1387:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
1388:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
1389:Generated_Source\PSoC4/CyLib.c **** 
1390:Generated_Source\PSoC4/CyLib.c ****                 CyExitCriticalSection(interruptState);
1391:Generated_Source\PSoC4/CyLib.c ****             }
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 33


1392:Generated_Source\PSoC4/CyLib.c ****             else
1393:Generated_Source\PSoC4/CyLib.c ****             {
1394:Generated_Source\PSoC4/CyLib.c ****                 /* Halt CPU in debug mode if ECO sources HFCLK */
1395:Generated_Source\PSoC4/CyLib.c ****                 CYASSERT(0u != 0u);
1396:Generated_Source\PSoC4/CyLib.c ****             }
1397:Generated_Source\PSoC4/CyLib.c ****         }
1398:Generated_Source\PSoC4/CyLib.c **** 
1399:Generated_Source\PSoC4/CyLib.c ****     #else
1400:Generated_Source\PSoC4/CyLib.c **** 
1401:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1402:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoTrim
1403:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1404:Generated_Source\PSoC4/CyLib.c ****         *
1405:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO. This API is available only for PSoC
1406:Generated_Source\PSoC4/CyLib.c ****         * 4200L / 4100S /4500 with ECO devices only.
1407:Generated_Source\PSoC4/CyLib.c ****         *
1408:Generated_Source\PSoC4/CyLib.c ****         * The following parameters can be trimmed for ECO. The affected registers are
1409:Generated_Source\PSoC4/CyLib.c ****         * ECO_TRIM0 and ECO_TRIM1.
1410:Generated_Source\PSoC4/CyLib.c ****         *
1411:Generated_Source\PSoC4/CyLib.c ****         * Watchdog trim - This bit field sets the error threshold below the steady
1412:Generated_Source\PSoC4/CyLib.c ****         * state amplitude level.
1413:Generated_Source\PSoC4/CyLib.c ****         *
1414:Generated_Source\PSoC4/CyLib.c ****         * Amplitude trim - This bit field is to set the crystal drive level when
1415:Generated_Source\PSoC4/CyLib.c ****         * ECO_CONFIG.AGC_EN = 1. WARNING: use care when setting this field because
1416:Generated_Source\PSoC4/CyLib.c ****         * driving a crystal beyond its rated limit can permanently damage the crystal.
1417:Generated_Source\PSoC4/CyLib.c ****         *
1418:Generated_Source\PSoC4/CyLib.c ****         * Filter frequency trim - This bit field sets LPF frequency trim and affects
1419:Generated_Source\PSoC4/CyLib.c ****         * the 3rd harmonic content.
1420:Generated_Source\PSoC4/CyLib.c ****         *
1421:Generated_Source\PSoC4/CyLib.c ****         * Feedback resistor trim - This bit field sets the feedback resistor trim and
1422:Generated_Source\PSoC4/CyLib.c ****         * impacts the oscillation amplitude.
1423:Generated_Source\PSoC4/CyLib.c ****         *
1424:Generated_Source\PSoC4/CyLib.c ****         * Amplifier gain trim - This bit field sets the amplifier gain trim and affects
1425:Generated_Source\PSoC4/CyLib.c ****         * the startup time of the crystal.
1426:Generated_Source\PSoC4/CyLib.c ****         *
1427:Generated_Source\PSoC4/CyLib.c ****         * Use care when setting the amplitude trim field because driving a crystal
1428:Generated_Source\PSoC4/CyLib.c ****         * beyond its rated limit can permanently damage the crystal.
1429:Generated_Source\PSoC4/CyLib.c ****         *
1430:Generated_Source\PSoC4/CyLib.c ****         * \param wDTrim: Watchdog trim
1431:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM0      Error threshold is 0.05 V
1432:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM1      Error threshold is 0.10 V
1433:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM2      Error threshold is 0.15 V
1434:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM3      Error threshold is 0.20 V
1435:Generated_Source\PSoC4/CyLib.c ****         *
1436:Generated_Source\PSoC4/CyLib.c ****         * \param aTrim: Amplitude trim
1437:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM0       Amplitude is 0.3 Vpp
1438:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM1       Amplitude is 0.4 Vpp
1439:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM2       Amplitude is 0.5 Vpp
1440:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM3       Amplitude is 0.6 Vpp
1441:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM4       Amplitude is 0.7 Vpp
1442:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM5       Amplitude is 0.8 Vpp
1443:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM6       Amplitude is 0.9 Vpp
1444:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM7       Amplitude is 1.0 Vpp
1445:Generated_Source\PSoC4/CyLib.c ****         *
1446:Generated_Source\PSoC4/CyLib.c ****         * \param fTrim: Filter frequency trim
1447:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM0       Crystal frequency > 30 MHz
1448:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM1       24 MHz < Crystal frequency <= 30 MHz
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 34


1449:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM2       17 MHz < Crystal frequency <= 24 MHz
1450:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM3       Crystal frequency <= 17 MHz
1451:Generated_Source\PSoC4/CyLib.c ****         *
1452:Generated_Source\PSoC4/CyLib.c ****         * \param rTrim: Feedback resistor trim
1453:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM0       Crystal frequency > 30 MHz
1454:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM1       24 MHz < Crystal frequency <= 30 MHz
1455:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM2       17 MHz < Crystal frequency <= 24 MHz
1456:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM3       Crystal frequency <= 17 MHz
1457:Generated_Source\PSoC4/CyLib.c ****         *
1458:Generated_Source\PSoC4/CyLib.c ****         * \param gTrim: Amplifier gain trim. Calculate the minimum required gm
1459:Generated_Source\PSoC4/CyLib.c ****         * (trans-conductance value). Divide the calculated gm value by 4.5 to
1460:Generated_Source\PSoC4/CyLib.c ****         * obtain an integer value 'result'. For more information please refer
1461:Generated_Source\PSoC4/CyLib.c ****         * to the device TRM.
1462:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM0       If result = 1
1463:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM1       If result = 0
1464:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 2
1465:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 3
1466:Generated_Source\PSoC4/CyLib.c ****         *
1467:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1468:Generated_Source\PSoC4/CyLib.c ****         void CySysClkConfigureEcoTrim(uint32 wDTrim, uint32 aTrim, uint32 fTrim, uint32 rTrim, uint
1469:Generated_Source\PSoC4/CyLib.c ****         {
1470:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1471:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
1472:Generated_Source\PSoC4/CyLib.c **** 
1473:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1474:Generated_Source\PSoC4/CyLib.c **** 
1475:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM0_REG & ~(CY_SYS_CLK_ECO_TRIM0_WDTRIM_MASK | CY_SYS_CLK_EC
1476:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (wDTrim << CY_SYS_CLK_ECO_TRIM0_WDTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM
1477:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (aTrim << CY_SYS_CLK_ECO_TRIM0_ATRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM0_
1478:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM0_REG = regTmp;
1479:Generated_Source\PSoC4/CyLib.c **** 
1480:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM1_REG & ~(CY_SYS_CLK_ECO_TRIM1_FTRIM_MASK |
1481:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_RTRIM_MASK |
1482:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_GTRIM_MASK);
1483:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (fTrim << CY_SYS_CLK_ECO_TRIM1_FTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1484:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (rTrim << CY_SYS_CLK_ECO_TRIM1_RTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1485:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (gTrim << CY_SYS_CLK_ECO_TRIM1_GTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1486:Generated_Source\PSoC4/CyLib.c **** 
1487:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM1_REG = regTmp;
1488:Generated_Source\PSoC4/CyLib.c **** 
1489:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1490:Generated_Source\PSoC4/CyLib.c ****         }
1491:Generated_Source\PSoC4/CyLib.c **** 
1492:Generated_Source\PSoC4/CyLib.c **** 
1493:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1494:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoDrive
1495:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1496:Generated_Source\PSoC4/CyLib.c ****         *
1497:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO based on crystal parameters. Use care
1498:Generated_Source\PSoC4/CyLib.c ****         * when setting the driveLevel parameter because driving a crystal beyond its
1499:Generated_Source\PSoC4/CyLib.c ****         * rated limit can permanently damage the crystal.
1500:Generated_Source\PSoC4/CyLib.c ****         *
1501:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4200L / 4100S / 4500 with ECO 
1502:Generated_Source\PSoC4/CyLib.c ****         * devices only.
1503:Generated_Source\PSoC4/CyLib.c ****         *
1504:Generated_Source\PSoC4/CyLib.c ****         * \param freq Frequency of the crystal in kHz.
1505:Generated_Source\PSoC4/CyLib.c ****         * \param cLoad Crystal load capacitance in pF.
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 35


1506:Generated_Source\PSoC4/CyLib.c ****         * \param esr Equivalent series resistance of the crystal in ohm.
1507:Generated_Source\PSoC4/CyLib.c ****         *  maxAmplitude: maximum amplitude level in mV. Calculate as
1508:Generated_Source\PSoC4/CyLib.c ****         *  ((sqrt(driveLevel in uW / 2 / esr))/(3.14 * freq * cLoad)) * 10^9.
1509:Generated_Source\PSoC4/CyLib.c ****         *
1510:Generated_Source\PSoC4/CyLib.c ****         *  The Automatic Gain Control (AGC) is disabled when the specified maximum
1511:Generated_Source\PSoC4/CyLib.c ****         *  amplitude level equals or above 2. In this case the amplitude is not
1512:Generated_Source\PSoC4/CyLib.c ****         *  explicitly controlled and will grow until it saturates to the supply rail
1513:Generated_Source\PSoC4/CyLib.c ****         *  (1.8V nom). WARNING: use care when disabling AGC because driving a crystal
1514:Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1515:Generated_Source\PSoC4/CyLib.c ****         *
1516:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_SUCCESS ECO configuration completed successfully.
1517:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1518:Generated_Source\PSoC4/CyLib.c ****         *
1519:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1520:Generated_Source\PSoC4/CyLib.c ****         cystatus CySysClkConfigureEcoDrive(uint32 freq, uint32 cLoad, uint32 esr, uint32 maxAmplitu
1521:Generated_Source\PSoC4/CyLib.c ****         {
1522:Generated_Source\PSoC4/CyLib.c ****             cystatus returnStatus = CYRET_SUCCESS;
1523:Generated_Source\PSoC4/CyLib.c **** 
1524:Generated_Source\PSoC4/CyLib.c ****             uint32 wDTrim;
1525:Generated_Source\PSoC4/CyLib.c ****             uint32 aTrim;
1526:Generated_Source\PSoC4/CyLib.c ****             uint32 fTrim;
1527:Generated_Source\PSoC4/CyLib.c ****             uint32 rTrim;
1528:Generated_Source\PSoC4/CyLib.c ****             uint32 gTrim;
1529:Generated_Source\PSoC4/CyLib.c **** 
1530:Generated_Source\PSoC4/CyLib.c ****             uint32 gmMin;
1531:Generated_Source\PSoC4/CyLib.c **** 
1532:Generated_Source\PSoC4/CyLib.c **** 
1533:Generated_Source\PSoC4/CyLib.c ****             if ((maxAmplitude < CY_SYS_CLK_ECO_MAX_AMPL_MIN_mV) ||
1534:Generated_Source\PSoC4/CyLib.c ****                 (freq < CY_SYS_CLK_ECO_FREQ_KHZ_MIN) || (freq > CY_SYS_CLK_ECO_FREQ_KHZ_MAX))
1535:Generated_Source\PSoC4/CyLib.c ****             {
1536:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_BAD_PARAM;
1537:Generated_Source\PSoC4/CyLib.c ****             }
1538:Generated_Source\PSoC4/CyLib.c ****             else
1539:Generated_Source\PSoC4/CyLib.c ****             {
1540:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplitude trim */
1541:Generated_Source\PSoC4/CyLib.c ****                 aTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/100u) - 4u) 
1542:Generated_Source\PSoC4/CyLib.c **** 
1543:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM0)
1544:Generated_Source\PSoC4/CyLib.c ****                 {
1545:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM0;
1546:Generated_Source\PSoC4/CyLib.c ****                 }
1547:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM1)
1548:Generated_Source\PSoC4/CyLib.c ****                 {
1549:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM1;
1550:Generated_Source\PSoC4/CyLib.c ****                 }
1551:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM2)
1552:Generated_Source\PSoC4/CyLib.c ****                 {
1553:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM2;
1554:Generated_Source\PSoC4/CyLib.c ****                 }
1555:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM3)
1556:Generated_Source\PSoC4/CyLib.c ****                 {
1557:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM3;
1558:Generated_Source\PSoC4/CyLib.c ****                 }
1559:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM4)
1560:Generated_Source\PSoC4/CyLib.c ****                 {
1561:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM4;
1562:Generated_Source\PSoC4/CyLib.c ****                 }
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 36


1563:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM5)
1564:Generated_Source\PSoC4/CyLib.c ****                 {
1565:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM5;
1566:Generated_Source\PSoC4/CyLib.c ****                 }
1567:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM6)
1568:Generated_Source\PSoC4/CyLib.c ****                 {
1569:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM6;
1570:Generated_Source\PSoC4/CyLib.c ****                 }
1571:Generated_Source\PSoC4/CyLib.c ****                 else
1572:Generated_Source\PSoC4/CyLib.c ****                 {
1573:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM7;
1574:Generated_Source\PSoC4/CyLib.c ****                 }
1575:Generated_Source\PSoC4/CyLib.c **** 
1576:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate Watchdog trim. */
1577:Generated_Source\PSoC4/CyLib.c ****                 wDTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/200u) - 2u)
1578:Generated_Source\PSoC4/CyLib.c **** 
1579:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplifier gain trim. */
1580:Generated_Source\PSoC4/CyLib.c ****                 gmMin = (uint32) (((((CY_SYS_CLK_ECO_GMMIN_COEFFICIENT * freq * cLoad) / 1000) * ((
1581:Generated_Source\PSoC4/CyLib.c ****                 if (gmMin > 3u)
1582:Generated_Source\PSoC4/CyLib.c ****                 {
1583:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_BAD_PARAM;
1584:Generated_Source\PSoC4/CyLib.c ****                     gTrim = 0u;
1585:Generated_Source\PSoC4/CyLib.c ****                 }
1586:Generated_Source\PSoC4/CyLib.c ****                 else if (gmMin > 1u)
1587:Generated_Source\PSoC4/CyLib.c ****                 {
1588:Generated_Source\PSoC4/CyLib.c ****                     gTrim = gmMin;
1589:Generated_Source\PSoC4/CyLib.c ****                 }
1590:Generated_Source\PSoC4/CyLib.c ****                 else
1591:Generated_Source\PSoC4/CyLib.c ****                 {
1592:Generated_Source\PSoC4/CyLib.c ****                     gTrim = (gmMin == 1u) ? 0u : 1u;
1593:Generated_Source\PSoC4/CyLib.c ****                 }
1594:Generated_Source\PSoC4/CyLib.c **** 
1595:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate feedback resistor trim */
1596:Generated_Source\PSoC4/CyLib.c ****                 if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM0)
1597:Generated_Source\PSoC4/CyLib.c ****                 {
1598:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM0;
1599:Generated_Source\PSoC4/CyLib.c ****                 }
1600:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM1)
1601:Generated_Source\PSoC4/CyLib.c ****                 {
1602:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM1;
1603:Generated_Source\PSoC4/CyLib.c ****                 }
1604:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM2)
1605:Generated_Source\PSoC4/CyLib.c ****                 {
1606:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM2;
1607:Generated_Source\PSoC4/CyLib.c ****                 }
1608:Generated_Source\PSoC4/CyLib.c ****                 else
1609:Generated_Source\PSoC4/CyLib.c ****                 {
1610:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM3;
1611:Generated_Source\PSoC4/CyLib.c ****                 }
1612:Generated_Source\PSoC4/CyLib.c **** 
1613:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate filter frequency trim */
1614:Generated_Source\PSoC4/CyLib.c ****                 fTrim = rTrim;
1615:Generated_Source\PSoC4/CyLib.c **** 
1616:Generated_Source\PSoC4/CyLib.c ****                 CySysClkConfigureEcoTrim(wDTrim, aTrim, fTrim, rTrim, gTrim);
1617:Generated_Source\PSoC4/CyLib.c **** 
1618:Generated_Source\PSoC4/CyLib.c ****                 /* Automatic Gain Control (AGC) enable */
1619:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < 2u)
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 37


1620:Generated_Source\PSoC4/CyLib.c ****                 {
1621:Generated_Source\PSoC4/CyLib.c ****                     /* The oscillation amplitude is controlled to the level selected by amplitude t
1622:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1623:Generated_Source\PSoC4/CyLib.c ****                 }
1624:Generated_Source\PSoC4/CyLib.c ****                 else
1625:Generated_Source\PSoC4/CyLib.c ****                 {
1626:Generated_Source\PSoC4/CyLib.c ****                     /* The amplitude is not explicitly controlled and will grow until it saturates 
1627:Generated_Source\PSoC4/CyLib.c ****                     * supply rail (1.8V nom).
1628:Generated_Source\PSoC4/CyLib.c ****                     */
1629:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1630:Generated_Source\PSoC4/CyLib.c ****                 }
1631:Generated_Source\PSoC4/CyLib.c ****             }
1632:Generated_Source\PSoC4/CyLib.c **** 
1633:Generated_Source\PSoC4/CyLib.c ****             return (returnStatus);
1634:Generated_Source\PSoC4/CyLib.c ****         }
1635:Generated_Source\PSoC4/CyLib.c **** 
1636:Generated_Source\PSoC4/CyLib.c ****     #endif /* CY_IP_ECO_BLESS */
1637:Generated_Source\PSoC4/CyLib.c **** 
1638:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_ECO) */
1639:Generated_Source\PSoC4/CyLib.c **** 
1640:Generated_Source\PSoC4/CyLib.c **** 
1641:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_PLL)
1642:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1643:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStart
1644:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1645:Generated_Source\PSoC4/CyLib.c ****     *
1646:Generated_Source\PSoC4/CyLib.c ****     * Enables the PLL. Optionally waits for it to become stable. Waits at least
1647:Generated_Source\PSoC4/CyLib.c ****     * 250 us or until it is detected that the PLL is stable.
1648:Generated_Source\PSoC4/CyLib.c ****     *
1649:Generated_Source\PSoC4/CyLib.c ****     * Clears the unlock occurred status bit by calling CySysClkPllGetUnlockStatus(),
1650:Generated_Source\PSoC4/CyLib.c ****     * once the PLL is locked if the wait parameter is 1).
1651:Generated_Source\PSoC4/CyLib.c ****     *
1652:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1653:Generated_Source\PSoC4/CyLib.c ****     *
1654:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1655:Generated_Source\PSoC4/CyLib.c ****     * 0   PLL#0
1656:Generated_Source\PSoC4/CyLib.c ****     * 1   PLL#1 (available only for PSoC 4200L)
1657:Generated_Source\PSoC4/CyLib.c ****     *
1658:Generated_Source\PSoC4/CyLib.c ****     * \param wait:
1659:Generated_Source\PSoC4/CyLib.c ****     * 0 - Return immediately after configuration.
1660:Generated_Source\PSoC4/CyLib.c ****     * 1 - Wait for PLL lock or timeout. This API shall use the CyDelayUs() to
1661:Generated_Source\PSoC4/CyLib.c ****     * implement the timeout feature.
1662:Generated_Source\PSoC4/CyLib.c ****     *
1663:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1664:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_TIMEOUT The timeout occurred without detecting a stable clock.
1665:Generated_Source\PSoC4/CyLib.c ****     * If the input source of the clock is jittery, then the lock indication may
1666:Generated_Source\PSoC4/CyLib.c ****     * not occur. However, after the timeout has expired, the generated PLL clock can
1667:Generated_Source\PSoC4/CyLib.c ****     * still be used.
1668:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM - Either the PLL or wait parameter is invalid.
1669:Generated_Source\PSoC4/CyLib.c ****     *
1670:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1671:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllStart(uint32 pll, uint32 wait)
1672:Generated_Source\PSoC4/CyLib.c ****     {
1673:Generated_Source\PSoC4/CyLib.c ****         uint32 counts = CY_SYS_CLK_PLL_MAX_STARTUP_US;
1674:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1675:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1676:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 38


1677:Generated_Source\PSoC4/CyLib.c ****         if((pll < CY_IP_PLL_NR) && (wait <= 1u))
1678:Generated_Source\PSoC4/CyLib.c ****         {
1679:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1680:Generated_Source\PSoC4/CyLib.c **** 
1681:Generated_Source\PSoC4/CyLib.c ****             /* Isolate PLL outputs */
1682:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1683:Generated_Source\PSoC4/CyLib.c **** 
1684:Generated_Source\PSoC4/CyLib.c ****             /* Enable PLL */
1685:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ENABLE;
1686:Generated_Source\PSoC4/CyLib.c **** 
1687:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1688:Generated_Source\PSoC4/CyLib.c **** 
1689:Generated_Source\PSoC4/CyLib.c ****             /* De-isolate >= CY_SYS_CLK_PLL_MIN_STARTUP_US after PLL enabled */
1690:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_PLL_MIN_STARTUP_US);
1691:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1692:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1693:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1694:Generated_Source\PSoC4/CyLib.c **** 
1695:Generated_Source\PSoC4/CyLib.c ****             if(wait != 0u)
1696:Generated_Source\PSoC4/CyLib.c ****             {
1697:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_TIMEOUT;
1698:Generated_Source\PSoC4/CyLib.c **** 
1699:Generated_Source\PSoC4/CyLib.c ****                 while(0u != counts)
1700:Generated_Source\PSoC4/CyLib.c ****                 {
1701:Generated_Source\PSoC4/CyLib.c **** 
1702:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkPllGetLockStatus(pll))
1703:Generated_Source\PSoC4/CyLib.c ****                     {
1704:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CYRET_SUCCESS;
1705:Generated_Source\PSoC4/CyLib.c ****                         (void) CySysClkPllGetUnlockStatus(pll);
1706:Generated_Source\PSoC4/CyLib.c ****                         break;
1707:Generated_Source\PSoC4/CyLib.c ****                     }
1708:Generated_Source\PSoC4/CyLib.c **** 
1709:Generated_Source\PSoC4/CyLib.c ****                     CyDelayUs(1u);
1710:Generated_Source\PSoC4/CyLib.c ****                     counts--;
1711:Generated_Source\PSoC4/CyLib.c ****                 }
1712:Generated_Source\PSoC4/CyLib.c ****             }
1713:Generated_Source\PSoC4/CyLib.c ****         }
1714:Generated_Source\PSoC4/CyLib.c ****         else
1715:Generated_Source\PSoC4/CyLib.c ****         {
1716:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_BAD_PARAM;
1717:Generated_Source\PSoC4/CyLib.c ****         }
1718:Generated_Source\PSoC4/CyLib.c **** 
1719:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1720:Generated_Source\PSoC4/CyLib.c ****     }
1721:Generated_Source\PSoC4/CyLib.c **** 
1722:Generated_Source\PSoC4/CyLib.c **** 
1723:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1724:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetLockStatus
1725:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1726:Generated_Source\PSoC4/CyLib.c ****     *
1727:Generated_Source\PSoC4/CyLib.c ****     * Returns non-zero if the output of the specified PLL output is locked.
1728:Generated_Source\PSoC4/CyLib.c ****     *
1729:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1730:Generated_Source\PSoC4/CyLib.c ****     *
1731:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1732:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1733:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 39


1734:Generated_Source\PSoC4/CyLib.c ****     *
1735:Generated_Source\PSoC4/CyLib.c ****     * \return A non-zero value when the specified PLL is locked.
1736:Generated_Source\PSoC4/CyLib.c ****     *
1737:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1738:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetLockStatus(uint32 pll)
1739:Generated_Source\PSoC4/CyLib.c ****     {
1740:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1741:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus;
1742:Generated_Source\PSoC4/CyLib.c **** 
1743:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1744:Generated_Source\PSoC4/CyLib.c **** 
1745:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1746:Generated_Source\PSoC4/CyLib.c **** 
1747:Generated_Source\PSoC4/CyLib.c ****         /* PLL is locked if reported so for two consecutive read. */
1748:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1749:Generated_Source\PSoC4/CyLib.c ****         if(0u != returnStatus)
1750:Generated_Source\PSoC4/CyLib.c ****         {
1751:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1752:Generated_Source\PSoC4/CyLib.c ****         }
1753:Generated_Source\PSoC4/CyLib.c **** 
1754:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1755:Generated_Source\PSoC4/CyLib.c **** 
1756:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1757:Generated_Source\PSoC4/CyLib.c ****     }
1758:Generated_Source\PSoC4/CyLib.c **** 
1759:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1760:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStop
1761:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1762:Generated_Source\PSoC4/CyLib.c ****     *
1763:Generated_Source\PSoC4/CyLib.c ****     * Disables the PLL.
1764:Generated_Source\PSoC4/CyLib.c ****     *
1765:Generated_Source\PSoC4/CyLib.c ****     * Ensures that either PLL is not the source of HFCLK before it is disabled,
1766:Generated_Source\PSoC4/CyLib.c ****     * otherwise, the CPU will halt.
1767:Generated_Source\PSoC4/CyLib.c ****     *
1768:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1769:Generated_Source\PSoC4/CyLib.c ****     *
1770:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1771:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1772:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1773:Generated_Source\PSoC4/CyLib.c ****     *
1774:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1775:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllStop(uint32 pll)
1776:Generated_Source\PSoC4/CyLib.c ****     {
1777:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1778:Generated_Source\PSoC4/CyLib.c **** 
1779:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1780:Generated_Source\PSoC4/CyLib.c ****         {
1781:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1782:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~(CY_SYS_CLK_PLL_CONFIG_ISOLATE | CY_SY
1783:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1784:Generated_Source\PSoC4/CyLib.c ****         }
1785:Generated_Source\PSoC4/CyLib.c ****     }
1786:Generated_Source\PSoC4/CyLib.c **** 
1787:Generated_Source\PSoC4/CyLib.c **** 
1788:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1789:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetPQ
1790:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 40


1791:Generated_Source\PSoC4/CyLib.c ****     *
1792:Generated_Source\PSoC4/CyLib.c ****     * Sets feedback (P) and reference the (Q) divider value. This API also sets the
1793:Generated_Source\PSoC4/CyLib.c ****     * programmable charge pump current value. Note that the PLL has to be disabled
1794:Generated_Source\PSoC4/CyLib.c ****     * before calling this API. If this function is called while any PLL is sourcing,
1795:Generated_Source\PSoC4/CyLib.c ****     * the SYSCLK will return an error.
1796:Generated_Source\PSoC4/CyLib.c ****     *
1797:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1798:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1799:Generated_Source\PSoC4/CyLib.c ****     *
1800:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1801:Generated_Source\PSoC4/CyLib.c ****     *
1802:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1803:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1804:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1805:Generated_Source\PSoC4/CyLib.c ****     *
1806:Generated_Source\PSoC4/CyLib.c ****     * \param feedback The P divider. Range 4 - 259. Control bits for the feedback
1807:Generated_Source\PSoC4/CyLib.c ****     * divider.
1808:Generated_Source\PSoC4/CyLib.c ****     *
1809:Generated_Source\PSoC4/CyLib.c ****     * \param reference The Q divider. Range 1 - 64. Divide by the reference.
1810:Generated_Source\PSoC4/CyLib.c ****     *
1811:Generated_Source\PSoC4/CyLib.c ****     * \param current Charge the pump current in uA. The 2 uA for output frequencies
1812:Generated_Source\PSoC4/CyLib.c ****     * of 67 MHz or less, and 3 uA for higher output frequencies. The default
1813:Generated_Source\PSoC4/CyLib.c ****     * value is 2 uA.
1814:Generated_Source\PSoC4/CyLib.c ****     *
1815:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1816:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The parameters are out of range or the specified PLL
1817:Generated_Source\PSoC4/CyLib.c ****     * sources the system clock.
1818:Generated_Source\PSoC4/CyLib.c ****     *
1819:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1820:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetPQ(uint32 pll, uint32 feedback, uint32 reference, uint32 current)
1821:Generated_Source\PSoC4/CyLib.c ****     {
1822:Generated_Source\PSoC4/CyLib.c ****         uint32   regTmp;
1823:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1824:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1825:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1826:Generated_Source\PSoC4/CyLib.c **** 
1827:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1828:Generated_Source\PSoC4/CyLib.c **** 
1829:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1830:Generated_Source\PSoC4/CyLib.c **** 
1831:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1832:Generated_Source\PSoC4/CyLib.c ****             (feedback  >= CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_MIN)  && (feedback  <= CY_SYS_CLK_PLL_
1833:Generated_Source\PSoC4/CyLib.c ****             (reference >= CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_MIN) && (reference <= CY_SYS_CLK_PLL_
1834:Generated_Source\PSoC4/CyLib.c ****             (current   >= CY_SYS_CLK_PLL_CONFIG_ICP_SEL_MIN )      && (current   <= CY_SYS_CLK_PLL_
1835:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1836:Generated_Source\PSoC4/CyLib.c ****         {
1837:Generated_Source\PSoC4/CyLib.c ****             /* Set new feedback, reference and current values */
1838:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_FEEDBA
1839:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_REFERE
1840:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_ICP_SE
1841:Generated_Source\PSoC4/CyLib.c **** 
1842:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((feedback << CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_SHIFT) & CY_SYS_CLK_PLL_CONF
1843:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (((reference - 1u) << CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_SHIFT) & CY_SYS_CLK
1844:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((current << CY_SYS_CLK_PLL_CONFIG_ICP_SEL_SHIFT) & CY_SYS_CLK_PLL_CONFIG_ICP
1845:Generated_Source\PSoC4/CyLib.c **** 
1846:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1847:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 41


1848:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1849:Generated_Source\PSoC4/CyLib.c ****         }
1850:Generated_Source\PSoC4/CyLib.c **** 
1851:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1852:Generated_Source\PSoC4/CyLib.c **** 
1853:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1854:Generated_Source\PSoC4/CyLib.c ****     }
1855:Generated_Source\PSoC4/CyLib.c **** 
1856:Generated_Source\PSoC4/CyLib.c **** 
1857:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1858:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetBypassMode
1859:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1860:Generated_Source\PSoC4/CyLib.c ****     *
1861:Generated_Source\PSoC4/CyLib.c ****     * Sets the bypass mode for the specified PLL.
1862:Generated_Source\PSoC4/CyLib.c ****     *
1863:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function.
1864:Generated_Source\PSoC4/CyLib.c ****     * The PLL output will glitch during this function call.
1865:Generated_Source\PSoC4/CyLib.c ****     *
1866:Generated_Source\PSoC4/CyLib.c ****     * When the PLL's reference input is higher than HFCLK frequency the device may 
1867:Generated_Source\PSoC4/CyLib.c ****     * lock due to incorrect flash wait cycle configuration and bypass switches from 
1868:Generated_Source\PSoC4/CyLib.c ****     * PLL output to the reference input. See description of 
1869:Generated_Source\PSoC4/CyLib.c ****     * CySysFlashSetWaitCycles() for more information.
1870:Generated_Source\PSoC4/CyLib.c ****     *
1871:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 swith PLL devices.
1872:Generated_Source\PSoC4/CyLib.c ****     *
1873:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1874:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1875:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1876:Generated_Source\PSoC4/CyLib.c ****     *
1877:Generated_Source\PSoC4/CyLib.c ****     * \param bypass: The bypass mode.
1878:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_AUTO - Automatic usage of the lock indicator. When unlocked,
1879:Generated_Source\PSoC4/CyLib.c ****     * automatically selects PLL the reference input (bypass mode). When locked,
1880:Generated_Source\PSoC4/CyLib.c ****     * automatically selects the PLL output.
1881:Generated_Source\PSoC4/CyLib.c ****     *
1882:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_REF - Selects the PLL reference input (bypass mode).
1883:Generated_Source\PSoC4/CyLib.c ****     * Ignores the lock indicator.
1884:Generated_Source\PSoC4/CyLib.c ****     *
1885:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_OUT - Selects the PLL output.  Ignores the lock indicator.
1886:Generated_Source\PSoC4/CyLib.c ****     *
1887:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1888:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetBypassMode(uint32 pll, uint32 bypass)
1889:Generated_Source\PSoC4/CyLib.c ****     {
1890:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1891:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1892:Generated_Source\PSoC4/CyLib.c **** 
1893:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1894:Generated_Source\PSoC4/CyLib.c **** 
1895:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (bypass <= CY_SYS_PLL_BYPASS_PLL_OUT))
1896:Generated_Source\PSoC4/CyLib.c ****         {
1897:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~CY_SYS_CLK_PLL_CONFIG_BYPASS_
1898:Generated_Source\PSoC4/CyLib.c ****             regTmp |=  (uint32)(bypass << CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT);
1899:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1900:Generated_Source\PSoC4/CyLib.c ****         }
1901:Generated_Source\PSoC4/CyLib.c **** 
1902:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1903:Generated_Source\PSoC4/CyLib.c ****     }
1904:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 42


1905:Generated_Source\PSoC4/CyLib.c **** 
1906:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1907:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetBypassMode
1908:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1909:Generated_Source\PSoC4/CyLib.c ****     *
1910:Generated_Source\PSoC4/CyLib.c ****     *  Gets the bypass mode for the specified PLL.
1911:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1912:Generated_Source\PSoC4/CyLib.c ****     *
1913:Generated_Source\PSoC4/CyLib.c ****     *  \return bypass: Bypass mode.
1914:Generated_Source\PSoC4/CyLib.c ****     *   The same as the parameter of the CySysClkPllSetBypassMode().
1915:Generated_Source\PSoC4/CyLib.c ****     *
1916:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1917:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll)
1918:Generated_Source\PSoC4/CyLib.c ****     {
1919:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1920:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1921:Generated_Source\PSoC4/CyLib.c **** 
1922:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1923:Generated_Source\PSoC4/CyLib.c **** 
1924:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1925:Generated_Source\PSoC4/CyLib.c **** 
1926:Generated_Source\PSoC4/CyLib.c ****         returnValue = CY_SYS_CLK_PLL_BASE.pll[pll].config & CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_MASK;
1927:Generated_Source\PSoC4/CyLib.c ****         returnValue =  returnValue >> CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT;
1928:Generated_Source\PSoC4/CyLib.c **** 
1929:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1930:Generated_Source\PSoC4/CyLib.c **** 
1931:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1932:Generated_Source\PSoC4/CyLib.c ****     }
1933:Generated_Source\PSoC4/CyLib.c **** 
1934:Generated_Source\PSoC4/CyLib.c **** 
1935:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1936:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllConfigChangeAllowed
1937:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1938:Generated_Source\PSoC4/CyLib.c ****     *
1939:Generated_Source\PSoC4/CyLib.c ****     *  The function returns non-zero value if the specified PLL sources the System
1940:Generated_Source\PSoC4/CyLib.c ****     *  clock and the PLL is not in the bypass mode.
1941:Generated_Source\PSoC4/CyLib.c ****     *
1942:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1943:Generated_Source\PSoC4/CyLib.c ****     *
1944:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1945:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1946:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
1947:Generated_Source\PSoC4/CyLib.c ****     *
1948:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL sources the System clock and
1949:Generated_Source\PSoC4/CyLib.c ****     * the PLL is not in the bypass mode.
1950:Generated_Source\PSoC4/CyLib.c ****     *
1951:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1952:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll)
1953:Generated_Source\PSoC4/CyLib.c ****     {
1954:Generated_Source\PSoC4/CyLib.c ****         uint32   pllBypassMode;
1955:Generated_Source\PSoC4/CyLib.c ****         uint32   sysclkSource;
1956:Generated_Source\PSoC4/CyLib.c ****         cystatus returnValue = CYRET_INVALID_STATE;
1957:Generated_Source\PSoC4/CyLib.c **** 
1958:Generated_Source\PSoC4/CyLib.c ****         sysclkSource  = CySysClkGetSysclkSource();
1959:Generated_Source\PSoC4/CyLib.c ****         pllBypassMode = CySysClkPllGetBypassMode(pll);
1960:Generated_Source\PSoC4/CyLib.c **** 
1961:Generated_Source\PSoC4/CyLib.c ****         if ((CY_SYS_PLL_BYPASS_PLL_REF == pllBypassMode)             ||
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 43


1962:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL0 != sysclkSource) && (0u == pll))
1963:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_SRSSV2)
1964:Generated_Source\PSoC4/CyLib.c ****             || ((CY_SYS_CLK_HFCLK_PLL1 != sysclkSource) && (1u == pll))
1965:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_SRSSV2) */
1966:Generated_Source\PSoC4/CyLib.c ****             )
1967:Generated_Source\PSoC4/CyLib.c ****         {
1968:Generated_Source\PSoC4/CyLib.c ****             returnValue = CYRET_SUCCESS;
1969:Generated_Source\PSoC4/CyLib.c ****         }
1970:Generated_Source\PSoC4/CyLib.c **** 
1971:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1972:Generated_Source\PSoC4/CyLib.c ****     }
1973:Generated_Source\PSoC4/CyLib.c **** 
1974:Generated_Source\PSoC4/CyLib.c **** 
1975:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1976:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetUnlockStatus
1977:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1978:Generated_Source\PSoC4/CyLib.c ****     *
1979:Generated_Source\PSoC4/CyLib.c ****     *  Returns a non-zero value if the specified PLL output was unlocked.
1980:Generated_Source\PSoC4/CyLib.c ****     *  The unlock status is an indicator that the PLL has lost a lock at least once
1981:Generated_Source\PSoC4/CyLib.c ****     *  during its operation. The unlock status is cleared once it is read using
1982:Generated_Source\PSoC4/CyLib.c ****     *  this API.
1983:Generated_Source\PSoC4/CyLib.c ****     *
1984:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1985:Generated_Source\PSoC4/CyLib.c ****     *
1986:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1987:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1988:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
1989:Generated_Source\PSoC4/CyLib.c ****     *
1990:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL was unlocked.
1991:Generated_Source\PSoC4/CyLib.c ****     *
1992:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1993:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetUnlockStatus(uint32 pll)
1994:Generated_Source\PSoC4/CyLib.c ****     {
1995:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus = 0u;
1996:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1997:Generated_Source\PSoC4/CyLib.c **** 
1998:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1999:Generated_Source\PSoC4/CyLib.c **** 
2000:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].test & CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK
2001:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_PLL_BASE.pll[pll].test |= CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK;
2002:Generated_Source\PSoC4/CyLib.c **** 
2003:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2004:Generated_Source\PSoC4/CyLib.c **** 
2005:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2006:Generated_Source\PSoC4/CyLib.c ****     }
2007:Generated_Source\PSoC4/CyLib.c **** 
2008:Generated_Source\PSoC4/CyLib.c **** 
2009:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2010:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetFrequency
2011:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2012:Generated_Source\PSoC4/CyLib.c ****     *
2013:Generated_Source\PSoC4/CyLib.c ****     * Configures either PLL#0 or PLL#1 for the requested input/output frequencies.
2014:Generated_Source\PSoC4/CyLib.c ****     * The input frequency is the frequency of the source to the PLL. The source is
2015:Generated_Source\PSoC4/CyLib.c ****     * set using the CySysClkPllSetSource() function.
2016:Generated_Source\PSoC4/CyLib.c ****     *
2017:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
2018:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 44


2019:Generated_Source\PSoC4/CyLib.c ****     *
2020:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
2021:Generated_Source\PSoC4/CyLib.c ****     *
2022:Generated_Source\PSoC4/CyLib.c ****     * \param pll:
2023:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2024:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
2025:Generated_Source\PSoC4/CyLib.c ****     *
2026:Generated_Source\PSoC4/CyLib.c ****     * \param inputFreq The reference frequency in KHz. The valid range is from 1000 to 49152 KHz.
2027:Generated_Source\PSoC4/CyLib.c ****     *
2028:Generated_Source\PSoC4/CyLib.c ****     * \param pllFreq The target frequency in KHz. The valid range is from 22500 to 49152 KHz.
2029:Generated_Source\PSoC4/CyLib.c ****     *
2030:Generated_Source\PSoC4/CyLib.c ****     * \param divider The output clock divider for the PLL:
2031:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIVPASS    Pass Through
2032:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2033:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2034:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2035:Generated_Source\PSoC4/CyLib.c ****     *
2036:Generated_Source\PSoC4/CyLib.c ****     * \param freqTol The tolerance in ppm, 10 ppm is equal to 0.001%.
2037:Generated_Source\PSoC4/CyLib.c ****     *
2038:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS The PLL was successfully configured for the requested
2039:Generated_Source\PSoC4/CyLib.c ****     * frequency.
2040:Generated_Source\PSoC4/CyLib.c ****     *
2041:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The PLL was not able to successfully configure for the
2042:Generated_Source\PSoC4/CyLib.c ****     * requested frequency.
2043:Generated_Source\PSoC4/CyLib.c ****     *
2044:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2045:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetFrequency(uint32 pll, uint32 inputFreq, uint32 pllFreq, uint32 divider, 
2046:Generated_Source\PSoC4/CyLib.c ****     {
2047:Generated_Source\PSoC4/CyLib.c ****         uint32 qMin;
2048:Generated_Source\PSoC4/CyLib.c ****         uint32 qMax;
2049:Generated_Source\PSoC4/CyLib.c **** 
2050:Generated_Source\PSoC4/CyLib.c ****         uint32 qVal = CY_SYS_CLK_PLL_INVALID;
2051:Generated_Source\PSoC4/CyLib.c ****         uint32 pVal = CY_SYS_CLK_PLL_INVALID;
2052:Generated_Source\PSoC4/CyLib.c **** 
2053:Generated_Source\PSoC4/CyLib.c ****         uint32 q;
2054:Generated_Source\PSoC4/CyLib.c ****         uint32 p;
2055:Generated_Source\PSoC4/CyLib.c **** 
2056:Generated_Source\PSoC4/CyLib.c ****         uint32 fvco;
2057:Generated_Source\PSoC4/CyLib.c ****         int32 ferr;
2058:Generated_Source\PSoC4/CyLib.c **** 
2059:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2060:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2061:Generated_Source\PSoC4/CyLib.c **** 
2062:Generated_Source\PSoC4/CyLib.c **** 
2063:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2064:Generated_Source\PSoC4/CyLib.c **** 
2065:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
2066:Generated_Source\PSoC4/CyLib.c ****             (inputFreq  >= CY_SYS_CLK_PLL_INPUT_FREQ_MIN )  && (inputFreq  <= CY_SYS_CLK_PLL_INPUT_
2067:Generated_Source\PSoC4/CyLib.c ****             (pllFreq >= CY_SYS_CLK_PLL_OUTPUT_FREQ_MIN ) && (pllFreq <= CY_SYS_CLK_PLL_OUTPUT_FREQ_
2068:Generated_Source\PSoC4/CyLib.c ****             (divider <= CY_SYS_PLL_OUTPUT_DIV8) &&
2069:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
2070:Generated_Source\PSoC4/CyLib.c ****         {
2071:Generated_Source\PSoC4/CyLib.c **** 
2072:Generated_Source\PSoC4/CyLib.c ****             /* Minimum feed forward loop divisor */
2073:Generated_Source\PSoC4/CyLib.c ****             qMin = (inputFreq + (CY_SYS_CLK_PLL_FPFDMAX - 1u)) / CY_SYS_CLK_PLL_FPFDMAX;
2074:Generated_Source\PSoC4/CyLib.c ****             qMin = (qMin < CY_SYS_CLK_PLL_QMINIP) ? CY_SYS_CLK_PLL_QMINIP : qMin;
2075:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 45


2076:Generated_Source\PSoC4/CyLib.c ****             /* Maximum feed forward loop divisor */
2077:Generated_Source\PSoC4/CyLib.c ****             qMax = inputFreq / CY_SYS_CLK_PLL_FPFDMIN;
2078:Generated_Source\PSoC4/CyLib.c ****             qMax = (qMax > CY_SYS_CLK_PLL_QMAXIP) ? CY_SYS_CLK_PLL_QMAXIP : qMax;
2079:Generated_Source\PSoC4/CyLib.c **** 
2080:Generated_Source\PSoC4/CyLib.c ****             if (qMin <= qMax)
2081:Generated_Source\PSoC4/CyLib.c ****             {
2082:Generated_Source\PSoC4/CyLib.c ****                 for(q = qMin; q <= qMax; q++)
2083:Generated_Source\PSoC4/CyLib.c ****                 {
2084:Generated_Source\PSoC4/CyLib.c ****                     /* Solve for the feedback divisor value */
2085:Generated_Source\PSoC4/CyLib.c **** 
2086:Generated_Source\PSoC4/CyLib.c ****                     /* INT((pllFreq * q ) / inputFreq), where INT is normal rounding  */
2087:Generated_Source\PSoC4/CyLib.c ****                     p = ((pllFreq * q) + (inputFreq / 2u)) / inputFreq;
2088:Generated_Source\PSoC4/CyLib.c **** 
2089:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the actual VCO frequency (FVCO) */
2090:Generated_Source\PSoC4/CyLib.c ****                     fvco = ((inputFreq * p) / q);
2091:Generated_Source\PSoC4/CyLib.c **** 
2092:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the frequency error (FERR) */
2093:Generated_Source\PSoC4/CyLib.c ****                     ferr = ((1000000 * ((int32) fvco - (int32) pllFreq))/ (int32) pllFreq);
2094:Generated_Source\PSoC4/CyLib.c **** 
2095:Generated_Source\PSoC4/CyLib.c ****                     /* Bound check the frequency error and decide next action */
2096:Generated_Source\PSoC4/CyLib.c ****                     if ((( -1 * (int32) freqTol) <= ferr) && (ferr <= (int32) freqTol))
2097:Generated_Source\PSoC4/CyLib.c ****                     {
2098:Generated_Source\PSoC4/CyLib.c ****                         qVal = q;
2099:Generated_Source\PSoC4/CyLib.c ****                         pVal = p;
2100:Generated_Source\PSoC4/CyLib.c ****                         break;
2101:Generated_Source\PSoC4/CyLib.c ****                     }
2102:Generated_Source\PSoC4/CyLib.c ****                 }
2103:Generated_Source\PSoC4/CyLib.c **** 
2104:Generated_Source\PSoC4/CyLib.c **** 
2105:Generated_Source\PSoC4/CyLib.c ****                 if ((pVal != CY_SYS_CLK_PLL_INVALID) && (qVal != CY_SYS_CLK_PLL_INVALID))
2106:Generated_Source\PSoC4/CyLib.c ****                 {
2107:Generated_Source\PSoC4/CyLib.c ****                     if (CySysClkPllSetPQ(pll, pVal, qVal, CY_SYS_CLK_PLL_CURRENT_DEFAULT) == CYRET_
2108:Generated_Source\PSoC4/CyLib.c ****                     {
2109:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CySysClkPllSetOutputDivider(pll, divider);
2110:Generated_Source\PSoC4/CyLib.c ****                     }
2111:Generated_Source\PSoC4/CyLib.c ****                 }
2112:Generated_Source\PSoC4/CyLib.c ****             }
2113:Generated_Source\PSoC4/CyLib.c **** 
2114:Generated_Source\PSoC4/CyLib.c ****         }
2115:Generated_Source\PSoC4/CyLib.c **** 
2116:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2117:Generated_Source\PSoC4/CyLib.c ****     }
2118:Generated_Source\PSoC4/CyLib.c **** 
2119:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2120:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetSource
2121:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2122:Generated_Source\PSoC4/CyLib.c ****     *
2123:Generated_Source\PSoC4/CyLib.c ****     *  Sets the input clock source to the PLL. The PLL must be disabled before
2124:Generated_Source\PSoC4/CyLib.c ****     *  calling this function.
2125:Generated_Source\PSoC4/CyLib.c ****     *
2126:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S /4500 with PLL devices.
2127:Generated_Source\PSoC4/CyLib.c ****     *
2128:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2129:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2130:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
2131:Generated_Source\PSoC4/CyLib.c ****     *
2132:Generated_Source\PSoC4/CyLib.c ****     * \param source:
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 46


2133:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_IMO        IMO
2134:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_EXTCLK     External Clock (available only for PSoC 4200L 
2135:Generated_Source\PSoC4/CyLib.c ****     *  and PSoC 4500 with PLL devices)
2136:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_ECO        ECO
2137:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI0       DSI_OUT[0] (available only for PSoC 4200L)
2138:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI1       DSI_OUT[1] (available only for PSoC 4200L)
2139:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI2       DSI_OUT[2] (available only for PSoC 4200L)
2140:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI3       DSI_OUT[3] (available only for PSoC 4200L)
2141:Generated_Source\PSoC4/CyLib.c ****     *
2142:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2143:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetSource(uint32 pll, uint32 source)
2144:Generated_Source\PSoC4/CyLib.c ****     {
2145:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
2146:Generated_Source\PSoC4/CyLib.c ****         
2147:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_SRSSLT)
2148:Generated_Source\PSoC4/CyLib.c ****             uint8 i = 0u;
2149:Generated_Source\PSoC4/CyLib.c ****         #else
2150:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
2151:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_SRSSLT) */
2152:Generated_Source\PSoC4/CyLib.c **** 
2153:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2154:Generated_Source\PSoC4/CyLib.c **** 
2155:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
2156:Generated_Source\PSoC4/CyLib.c ****         {
2157:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
2158:Generated_Source\PSoC4/CyLib.c ****                 regTmp = CY_SYS_CLK_SELECT_REG & (uint32) ~CY_SYS_CLK_SELECT_PLL_MASK(pll);
2159:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= ((source << CY_SYS_CLK_SELECT_PLL_SHIFT(pll)) & CY_SYS_CLK_SELECT_PLL_MAS
2160:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_SELECT_REG = regTmp;
2161:Generated_Source\PSoC4/CyLib.c ****             #else
2162:Generated_Source\PSoC4/CyLib.c ****                 CY_SET_REG32_FIELD(CYREG_EXCO_CLK_SELECT, CYFLD_EXCO_REF_SEL, source);
2163:Generated_Source\PSoC4/CyLib.c ****                 
2164:Generated_Source\PSoC4/CyLib.c ****                 /* Generate clock sequence to change clock source in CY_SYS_ECO_CLK_SELECT_REG */
2165:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
2166:Generated_Source\PSoC4/CyLib.c ****                 
2167:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_EXCO_PGM_CLK_SEQ_GENERATOR; i++)
2168:Generated_Source\PSoC4/CyLib.c ****                 {
2169:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
2170:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
2171:Generated_Source\PSoC4/CyLib.c ****                 }
2172:Generated_Source\PSoC4/CyLib.c ****                 
2173:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
2174:Generated_Source\PSoC4/CyLib.c **** 
2175:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
2176:Generated_Source\PSoC4/CyLib.c ****         }
2177:Generated_Source\PSoC4/CyLib.c **** 
2178:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2179:Generated_Source\PSoC4/CyLib.c ****     }
2180:Generated_Source\PSoC4/CyLib.c **** 
2181:Generated_Source\PSoC4/CyLib.c ****     
2182:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2183:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetOutputDivider
2184:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2185:Generated_Source\PSoC4/CyLib.c ****     *
2186:Generated_Source\PSoC4/CyLib.c ****     *  Sets the output clock divider for the PLL.
2187:Generated_Source\PSoC4/CyLib.c ****     *
2188:Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the System Clock source when calling this function. The
2189:Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 47


2190:Generated_Source\PSoC4/CyLib.c ****     *
2191:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
2192:Generated_Source\PSoC4/CyLib.c ****     *
2193:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2194:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
2195:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
2196:Generated_Source\PSoC4/CyLib.c ****     *
2197:Generated_Source\PSoC4/CyLib.c ****     * \param divider:
2198:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass through
2199:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2200:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2201:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2202:Generated_Source\PSoC4/CyLib.c ****     *
2203:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS    Completed successfully.
2204:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM  The parameters are out of range or the
2205:Generated_Source\PSoC4/CyLib.c ****     * specified PLL sources the System clock.
2206:Generated_Source\PSoC4/CyLib.c ****     *
2207:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2208:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetOutputDivider(uint32 pll, uint32 divider)
2209:Generated_Source\PSoC4/CyLib.c ****     {
2210:Generated_Source\PSoC4/CyLib.c ****         uint32   tmpReg;
2211:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
2212:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2213:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2214:Generated_Source\PSoC4/CyLib.c **** 
2215:Generated_Source\PSoC4/CyLib.c **** 
2216:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2217:Generated_Source\PSoC4/CyLib.c **** 
2218:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2219:Generated_Source\PSoC4/CyLib.c **** 
2220:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (CYRET_SUCCESS == tmp) && (divider <= CY_SYS_PLL_OUTPUT_DIV8))
2221:Generated_Source\PSoC4/CyLib.c ****         {
2222:Generated_Source\PSoC4/CyLib.c ****             tmpReg  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_OUTPUT
2223:Generated_Source\PSoC4/CyLib.c ****             tmpReg |= ((divider << CY_SYS_CLK_PLL_CONFIG_OUTPUT_DIV_SHIFT) & CY_SYS_CLK_PLL_CONFIG_
2224:Generated_Source\PSoC4/CyLib.c **** 
2225:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = tmpReg;
2226:Generated_Source\PSoC4/CyLib.c **** 
2227:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
2228:Generated_Source\PSoC4/CyLib.c ****         }
2229:Generated_Source\PSoC4/CyLib.c **** 
2230:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2231:Generated_Source\PSoC4/CyLib.c **** 
2232:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2233:Generated_Source\PSoC4/CyLib.c ****     }
2234:Generated_Source\PSoC4/CyLib.c ****     
2235:Generated_Source\PSoC4/CyLib.c ****     
2236:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECOV2_SRSSLT)
2237:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2238:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllGetInterruptCauseMasked
2239:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2240:Generated_Source\PSoC4/CyLib.c ****         *
2241:Generated_Source\PSoC4/CyLib.c ****         *  Returns a non-zero value that reflects a bit-wise AND between interrupt 
2242:Generated_Source\PSoC4/CyLib.c ****         *  request and mask registers. The API allows firmware to read the status of 
2243:Generated_Source\PSoC4/CyLib.c ****         *  all mask enabled interrupt causes with a single load operation.
2244:Generated_Source\PSoC4/CyLib.c ****         *
2245:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2246:Generated_Source\PSoC4/CyLib.c ****         *
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 48


2247:Generated_Source\PSoC4/CyLib.c ****         * \return A set bit indicates the source of the interrupt:
2248:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_PLL_LOCK
2249:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_WD_ERR
2250:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_CSV_CLK_SW
2251:Generated_Source\PSoC4/CyLib.c ****         *
2252:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2253:Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkPllGetInterruptCauseMasked(void)
2254:Generated_Source\PSoC4/CyLib.c ****         {
2255:Generated_Source\PSoC4/CyLib.c ****             return ((uint32)CY_GET_REG32(CYREG_EXCO_INTR_MASKED));
2256:Generated_Source\PSoC4/CyLib.c ****         }
2257:Generated_Source\PSoC4/CyLib.c **** 
2258:Generated_Source\PSoC4/CyLib.c ****         
2259:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2260:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllGetInterruptCause
2261:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2262:Generated_Source\PSoC4/CyLib.c ****         *
2263:Generated_Source\PSoC4/CyLib.c ****         *  Returns a non-zero value that reflects the interrupt request registers.
2264:Generated_Source\PSoC4/CyLib.c ****         *
2265:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2266:Generated_Source\PSoC4/CyLib.c ****         *
2267:Generated_Source\PSoC4/CyLib.c ****         * \return A set bit indicates the source of the interrupt:
2268:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_PLL_LOCK
2269:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_WD_ERR
2270:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_CSV_CLK_SW
2271:Generated_Source\PSoC4/CyLib.c ****         *
2272:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2273:Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkPllGetInterruptCause(void)
2274:Generated_Source\PSoC4/CyLib.c ****         {
2275:Generated_Source\PSoC4/CyLib.c ****             return ((uint32)CY_GET_REG32(CYREG_EXCO_INTR));
2276:Generated_Source\PSoC4/CyLib.c ****         }
2277:Generated_Source\PSoC4/CyLib.c **** 
2278:Generated_Source\PSoC4/CyLib.c **** 
2279:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2280:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllClearPendingInterrupt
2281:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2282:Generated_Source\PSoC4/CyLib.c ****         *
2283:Generated_Source\PSoC4/CyLib.c ****         *  Clears the pending interrupt. 
2284:Generated_Source\PSoC4/CyLib.c ****         *
2285:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2286:Generated_Source\PSoC4/CyLib.c ****         *
2287:Generated_Source\PSoC4/CyLib.c ****         * \param interrupt:
2288:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_PLL_LOCK
2289:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_WD_ERR
2290:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_CSV_CLK_SW
2291:Generated_Source\PSoC4/CyLib.c ****         *  A logical OR of above can be used as input parameter.
2292:Generated_Source\PSoC4/CyLib.c ****         *
2293:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2294:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllClearPendingInterrupt(uint32 interrupt)
2295:Generated_Source\PSoC4/CyLib.c ****         {
2296:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32(CYREG_EXCO_INTR, interrupt);
2297:Generated_Source\PSoC4/CyLib.c ****         }
2298:Generated_Source\PSoC4/CyLib.c ****         
2299:Generated_Source\PSoC4/CyLib.c ****         
2300:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2301:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllSetInterruptMask
2302:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2303:Generated_Source\PSoC4/CyLib.c ****         *
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 49


2304:Generated_Source\PSoC4/CyLib.c ****         *  This API sets the interrupt mask bit for the corresponding interrupts.
2305:Generated_Source\PSoC4/CyLib.c ****         *
2306:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2307:Generated_Source\PSoC4/CyLib.c ****         *
2308:Generated_Source\PSoC4/CyLib.c ****         * \param intrMask:
2309:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_PLL_LOCK
2310:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_WD_ERR
2311:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_CSV_CLK_SW
2312:Generated_Source\PSoC4/CyLib.c ****         *  A logical OR of above can be used as input parameter.
2313:Generated_Source\PSoC4/CyLib.c ****         *
2314:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/        
2315:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllSetInterruptMask(uint32 intrMask)
2316:Generated_Source\PSoC4/CyLib.c ****         {
2317:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32(CYREG_EXCO_INTR_MASK, intrMask);
2318:Generated_Source\PSoC4/CyLib.c ****         }
2319:Generated_Source\PSoC4/CyLib.c **** 
2320:Generated_Source\PSoC4/CyLib.c ****         
2321:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2322:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllGetInterruptMask
2323:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2324:Generated_Source\PSoC4/CyLib.c ****         *
2325:Generated_Source\PSoC4/CyLib.c ****         *  This API returns the current interrupt mask register value.
2326:Generated_Source\PSoC4/CyLib.c ****         *
2327:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2328:Generated_Source\PSoC4/CyLib.c ****         *
2329:Generated_Source\PSoC4/CyLib.c ****         * \return A set bit indicates the source of the interrupt:
2330:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_PLL_LOCK
2331:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_WD_ERR
2332:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_CSV_CLK_SW
2333:Generated_Source\PSoC4/CyLib.c ****         *
2334:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/        
2335:Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkPllGetInterruptMask(void)
2336:Generated_Source\PSoC4/CyLib.c ****         {
2337:Generated_Source\PSoC4/CyLib.c ****             return ((uint32)CY_GET_REG32(CYREG_EXCO_INTR_MASK));
2338:Generated_Source\PSoC4/CyLib.c ****         }
2339:Generated_Source\PSoC4/CyLib.c **** 
2340:Generated_Source\PSoC4/CyLib.c ****         
2341:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2342:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllSetInterrupt
2343:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2344:Generated_Source\PSoC4/CyLib.c ****         *
2345:Generated_Source\PSoC4/CyLib.c ****         *  This API asserts an interrupt. This can be used for firmware debugging.
2346:Generated_Source\PSoC4/CyLib.c ****         *
2347:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2348:Generated_Source\PSoC4/CyLib.c ****         *
2349:Generated_Source\PSoC4/CyLib.c ****         * \param interrupt:
2350:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_PLL_LOCK
2351:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_WD_ERR
2352:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_CSV_CLK_SW
2353:Generated_Source\PSoC4/CyLib.c ****         *  A logical OR of above can be used as input parameter.
2354:Generated_Source\PSoC4/CyLib.c ****         *
2355:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/        
2356:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllSetInterrupt(uint32 interrupt)
2357:Generated_Source\PSoC4/CyLib.c ****         {
2358:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32(CYREG_EXCO_INTR_SET, interrupt);
2359:Generated_Source\PSoC4/CyLib.c ****         }
2360:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 50


2361:Generated_Source\PSoC4/CyLib.c ****         
2362:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2363:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvEnable
2364:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2365:Generated_Source\PSoC4/CyLib.c ****         *
2366:Generated_Source\PSoC4/CyLib.c ****         * This API enables clock supervision on PLL frequency lock and loss.
2367:Generated_Source\PSoC4/CyLib.c ****         *
2368:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4500 with PLL devices.
2369:Generated_Source\PSoC4/CyLib.c ****         *
2370:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/          
2371:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvEnable(void)
2372:Generated_Source\PSoC4/CyLib.c ****         {
2373:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_EXCO_REF_CTL, CYFLD_EXCO_CSV_EN, 0x1uL);
2374:Generated_Source\PSoC4/CyLib.c ****         }
2375:Generated_Source\PSoC4/CyLib.c **** 
2376:Generated_Source\PSoC4/CyLib.c ****         
2377:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2378:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvDisable
2379:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2380:Generated_Source\PSoC4/CyLib.c ****         *
2381:Generated_Source\PSoC4/CyLib.c ****         * This API disables clock supervision on PLL.
2382:Generated_Source\PSoC4/CyLib.c ****         *
2383:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4500 with PLL devices.
2384:Generated_Source\PSoC4/CyLib.c ****         *
2385:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/         
2386:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvDisable(void)
2387:Generated_Source\PSoC4/CyLib.c ****         {
2388:Generated_Source\PSoC4/CyLib.c ****             CY_CLEAR_REG32_FIELD(CYREG_EXCO_REF_CTL, CYFLD_EXCO_CSV_EN);
2389:Generated_Source\PSoC4/CyLib.c ****         }
2390:Generated_Source\PSoC4/CyLib.c **** 
2391:Generated_Source\PSoC4/CyLib.c ****         
2392:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2393:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvSetSpvrCtl
2394:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2395:Generated_Source\PSoC4/CyLib.c ****         *
2396:Generated_Source\PSoC4/CyLib.c ****         *  This API enables sets the clock supervision parameters.
2397:Generated_Source\PSoC4/CyLib.c ****         *
2398:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2399:Generated_Source\PSoC4/CyLib.c ****         *
2400:Generated_Source\PSoC4/CyLib.c ****         * \param startupDelay:
2401:Generated_Source\PSoC4/CyLib.c ****         *  startup delay time -1 in reference clock cycles after enable 
2402:Generated_Source\PSoC4/CyLib.c ****         *  or deep sleep wake up from reference clock start to monitored clock start
2403:Generated_Source\PSoC4/CyLib.c ****         *
2404:Generated_Source\PSoC4/CyLib.c ****         * \param csvSwitch:
2405:Generated_Source\PSoC4/CyLib.c ****         * CY_SYS_PLL_CSV_INT_EN – Enable INTR.CSV_CLK_SW if a clock switch occurs to IMO
2406:Generated_Source\PSoC4/CyLib.c ****         * CY_SYS_PLL_CSV_TRIG_EN – Enable CSV to cause trigger if a clock switch occurs to IMO
2407:Generated_Source\PSoC4/CyLib.c ****         * CY_SYS_PLL_CSV_CLK_SW_EN – Enable CSV to cause clock switch IMO (enabled by default in 
2408:Generated_Source\PSoC4/CyLib.c ****         *
2409:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/           
2410:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvSetSpvrCtl(uint32 startupDelay, uint32 csvSwitch)
2411:Generated_Source\PSoC4/CyLib.c ****         {
2412:Generated_Source\PSoC4/CyLib.c ****             uint32 tmpRegVal = CY_GET_REG32(CYREG_EXCO_REF_CTL);
2413:Generated_Source\PSoC4/CyLib.c ****             
2414:Generated_Source\PSoC4/CyLib.c ****             tmpRegVal &= ~(CY_SYS_PLL_STARTUP_MASK | CY_SYS_PLL_CSV_MASK);
2415:Generated_Source\PSoC4/CyLib.c ****             tmpRegVal |= (startupDelay | csvSwitch);
2416:Generated_Source\PSoC4/CyLib.c ****             
2417:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32(CYREG_EXCO_REF_CTL, tmpRegVal);
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 51


2418:Generated_Source\PSoC4/CyLib.c ****         }
2419:Generated_Source\PSoC4/CyLib.c **** 
2420:Generated_Source\PSoC4/CyLib.c ****         
2421:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2422:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvSetRefLimits
2423:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2424:Generated_Source\PSoC4/CyLib.c ****         *
2425:Generated_Source\PSoC4/CyLib.c ****         *  This API sets the cycle time lower and upper limits.
2426:Generated_Source\PSoC4/CyLib.c ****         *
2427:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2428:Generated_Source\PSoC4/CyLib.c ****         *
2429:Generated_Source\PSoC4/CyLib.c ****         * \param lower:
2430:Generated_Source\PSoC4/CyLib.c ****         *  Sets the lower limit -1, in reference clock cycles, 
2431:Generated_Source\PSoC4/CyLib.c ****         *  before the next monitored clock event is allowed to happen.  If a monitored 
2432:Generated_Source\PSoC4/CyLib.c ****         *  clock event happens before this limit is reached a CSV error is detected.
2433:Generated_Source\PSoC4/CyLib.c ****         *
2434:Generated_Source\PSoC4/CyLib.c ****         * \param upper:
2435:Generated_Source\PSoC4/CyLib.c ****         *  Sets the upper limit -1, in reference clock cycles, before (or same time) 
2436:Generated_Source\PSoC4/CyLib.c ****         *  the next monitored clock event must happen.  If a monitored clock event 
2437:Generated_Source\PSoC4/CyLib.c ****         *  does not happen before this limit is reached, or does not happen at all 
2438:Generated_Source\PSoC4/CyLib.c ****         *  (clock loss), a CSV error is detected.
2439:Generated_Source\PSoC4/CyLib.c ****         *
2440:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/ 
2441:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvSetRefLimits(uint32 lower, uint32 upper)
2442:Generated_Source\PSoC4/CyLib.c ****         {
2443:Generated_Source\PSoC4/CyLib.c ****             uint32 tmpRegVal = CY_GET_REG32(CYREG_EXCO_REF_LIMIT);
2444:Generated_Source\PSoC4/CyLib.c ****             
2445:Generated_Source\PSoC4/CyLib.c ****             tmpRegVal &= ~(CY_SYS_PLL_REF_LIMIT_LOWER_MASK | CY_SYS_PLL_REF_LIMIT_UPPER_MASK);
2446:Generated_Source\PSoC4/CyLib.c ****             tmpRegVal |= (lower | ((uint32)(upper << CY_SYS_PLL_REF_LIMIT_UPPER_OFFSET)));
2447:Generated_Source\PSoC4/CyLib.c ****             
2448:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32(CYREG_EXCO_REF_LIMIT, tmpRegVal);
2449:Generated_Source\PSoC4/CyLib.c ****         }
2450:Generated_Source\PSoC4/CyLib.c **** 
2451:Generated_Source\PSoC4/CyLib.c ****         
2452:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2453:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvGetRefLimits
2454:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2455:Generated_Source\PSoC4/CyLib.c ****         *
2456:Generated_Source\PSoC4/CyLib.c ****         *  This API gets the cycle time lower and upper limits.
2457:Generated_Source\PSoC4/CyLib.c ****         *
2458:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2459:Generated_Source\PSoC4/CyLib.c ****         *
2460:Generated_Source\PSoC4/CyLib.c ****         * \return 
2461:Generated_Source\PSoC4/CyLib.c ****         *  *Bits 31:16 – upper limit
2462:Generated_Source\PSoC4/CyLib.c ****         *  *Bits 15:0 – lower limit
2463:Generated_Source\PSoC4/CyLib.c ****         *
2464:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/  
2465:Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkPllCsvGetRefLimits(void)
2466:Generated_Source\PSoC4/CyLib.c ****         {
2467:Generated_Source\PSoC4/CyLib.c ****             return ((uint32)CY_GET_REG32(CYREG_EXCO_REF_LIMIT));
2468:Generated_Source\PSoC4/CyLib.c ****         }
2469:Generated_Source\PSoC4/CyLib.c **** 
2470:Generated_Source\PSoC4/CyLib.c ****         
2471:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2472:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvSetPeriod
2473:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2474:Generated_Source\PSoC4/CyLib.c ****         *
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 52


2475:Generated_Source\PSoC4/CyLib.c ****         *  This API sets the csv period time.
2476:Generated_Source\PSoC4/CyLib.c ****         *
2477:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2478:Generated_Source\PSoC4/CyLib.c ****         *
2479:Generated_Source\PSoC4/CyLib.c ****         * \param period:
2480:Generated_Source\PSoC4/CyLib.c ****         *  Set the Period -1, in monitored clock cycles, before the next monitored 
2481:Generated_Source\PSoC4/CyLib.c ****         *  clock event happens.
2482:Generated_Source\PSoC4/CyLib.c ****         *  PERIOD <=  (UPPER+1) / FREQ_RATIO -1, with 
2483:Generated_Source\PSoC4/CyLib.c ****         *  FREQ_RATIO = (Reference frequency / Monitored frequency).
2484:Generated_Source\PSoC4/CyLib.c ****         *  In case the clocks are asynchronous: PERIOD <=  UPPER / FREQ_RATIO -1
2485:Generated_Source\PSoC4/CyLib.c ****         *
2486:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/           
2487:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvSetPeriod(uint32 period)
2488:Generated_Source\PSoC4/CyLib.c ****         {
2489:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_EXCO_MON_CTL, CYFLD_EXCO_PERIOD, period);
2490:Generated_Source\PSoC4/CyLib.c ****         }
2491:Generated_Source\PSoC4/CyLib.c **** 
2492:Generated_Source\PSoC4/CyLib.c **** 
2493:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2494:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvGetPeriod
2495:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2496:Generated_Source\PSoC4/CyLib.c ****         *
2497:Generated_Source\PSoC4/CyLib.c ****         *  This API returns the CSV period time.
2498:Generated_Source\PSoC4/CyLib.c ****         *
2499:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2500:Generated_Source\PSoC4/CyLib.c ****         *
2501:Generated_Source\PSoC4/CyLib.c ****         * \return Period time
2502:Generated_Source\PSoC4/CyLib.c ****         *
2503:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/         
2504:Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkPllCsvGetPeriod(void)
2505:Generated_Source\PSoC4/CyLib.c ****         {
2506:Generated_Source\PSoC4/CyLib.c ****             return ((uint32)CY_GET_REG32_FIELD(CYREG_EXCO_MON_CTL, CYFLD_EXCO_PERIOD));
2507:Generated_Source\PSoC4/CyLib.c ****         }
2508:Generated_Source\PSoC4/CyLib.c **** 
2509:Generated_Source\PSoC4/CyLib.c ****         
2510:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2511:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvEnableReset
2512:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2513:Generated_Source\PSoC4/CyLib.c ****         *
2514:Generated_Source\PSoC4/CyLib.c ****         *  This API enables the system reset feature when the clock supervisor switches 
2515:Generated_Source\PSoC4/CyLib.c ****         *  the clock source to IMO. A programmable delay counter starts at delay count 
2516:Generated_Source\PSoC4/CyLib.c ****         *  value (see CySysClkPllCsvReloadPgmDlyCounter API) and counts down. 
2517:Generated_Source\PSoC4/CyLib.c ****         *
2518:Generated_Source\PSoC4/CyLib.c ****         *  The CSV block will assert system reset when the counter reaches zero unless 
2519:Generated_Source\PSoC4/CyLib.c ****         *  firmware intervenes and reloads the counter using 
2520:Generated_Source\PSoC4/CyLib.c ****         *  CySysClkPllCsvReloadPgmDlyCounter() API.
2521:Generated_Source\PSoC4/CyLib.c ****         *
2522:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2523:Generated_Source\PSoC4/CyLib.c ****         *
2524:Generated_Source\PSoC4/CyLib.c ****         *  Side Effects and Restrictions:
2525:Generated_Source\PSoC4/CyLib.c ****         *  If a clock switch occurs, CSV block will reset the device when the delay 
2526:Generated_Source\PSoC4/CyLib.c ****         *  counter reaches zero unless firmware reloads the counter using 
2527:Generated_Source\PSoC4/CyLib.c ****         *  CySysClkPllCsvReloadPgmDlyCounter() API.
2528:Generated_Source\PSoC4/CyLib.c ****         *
2529:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/  
2530:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvEnableReset(void)
2531:Generated_Source\PSoC4/CyLib.c ****         {
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 53


2532:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_EXCO_RSTDLY_CTL, CYFLD_EXCO_EN, 0x1uL);
2533:Generated_Source\PSoC4/CyLib.c ****         }
2534:Generated_Source\PSoC4/CyLib.c ****         
2535:Generated_Source\PSoC4/CyLib.c **** 
2536:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2537:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvDisableReset
2538:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2539:Generated_Source\PSoC4/CyLib.c ****         *
2540:Generated_Source\PSoC4/CyLib.c ****         *  This API disables the system reset feature when the clock supervisor 
2541:Generated_Source\PSoC4/CyLib.c ****         *  switches the clock source to IMO. 
2542:Generated_Source\PSoC4/CyLib.c ****         *
2543:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2544:Generated_Source\PSoC4/CyLib.c ****         *
2545:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/  
2546:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvDisableReset(void)
2547:Generated_Source\PSoC4/CyLib.c ****         {
2548:Generated_Source\PSoC4/CyLib.c ****             CY_CLEAR_REG32_FIELD(CYREG_EXCO_RSTDLY_CTL, CYFLD_EXCO_EN);
2549:Generated_Source\PSoC4/CyLib.c ****         }
2550:Generated_Source\PSoC4/CyLib.c **** 
2551:Generated_Source\PSoC4/CyLib.c ****         
2552:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2553:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvReloadPgmDlyCounter
2554:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2555:Generated_Source\PSoC4/CyLib.c ****         *
2556:Generated_Source\PSoC4/CyLib.c ****         *  This API reloads the programmable delay counter with the delay count value. 
2557:Generated_Source\PSoC4/CyLib.c ****         *
2558:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2559:Generated_Source\PSoC4/CyLib.c ****         *
2560:Generated_Source\PSoC4/CyLib.c ****         * \param delayCount:
2561:Generated_Source\PSoC4/CyLib.c ****         *  Valid range 0-65535, device default value is 256. 
2562:Generated_Source\PSoC4/CyLib.c ****         *  Sets the # of counts of IMO clock before system reset is asserted.
2563:Generated_Source\PSoC4/CyLib.c ****         *
2564:Generated_Source\PSoC4/CyLib.c ****         *
2565:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/           
2566:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvReloadPgmDlyCounter(uint32 delayCount)
2567:Generated_Source\PSoC4/CyLib.c ****         {
2568:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_EXCO_RSTDLY, CYFLD_EXCO_DLYCOUNT, delayCount);
2569:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_EXCO_RSTDLY_CTL, CYFLD_EXCO_LOAD, 0x1uL);
2570:Generated_Source\PSoC4/CyLib.c ****         }
2571:Generated_Source\PSoC4/CyLib.c **** 
2572:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_ECOV2_SRSSLT) */
2573:Generated_Source\PSoC4/CyLib.c ****     
2574:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_PLL) */
2575:Generated_Source\PSoC4/CyLib.c **** 
2576:Generated_Source\PSoC4/CyLib.c **** 
2577:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
2578:Generated_Source\PSoC4/CyLib.c **** 
2579:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2580:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
2581:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2582:Generated_Source\PSoC4/CyLib.c ****     *
2583:Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
2584:Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
2585:Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
2586:Generated_Source\PSoC4/CyLib.c ****     *
2587:Generated_Source\PSoC4/CyLib.c ****     *  \param threshold: Threshold selection for Low Voltage Detect circuit.
2588:Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 54


2589:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
2590:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
2591:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
2592:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
2593:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
2594:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
2595:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
2596:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
2597:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
2598:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
2599:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
2600:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
2601:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
2602:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
2603:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
2604:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
2605:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
2606:Generated_Source\PSoC4/CyLib.c ****     *
2607:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2608:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
2609:Generated_Source\PSoC4/CyLib.c ****     {
2610:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
2611:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
2612:Generated_Source\PSoC4/CyLib.c **** 
2613:Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
2614:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
2615:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
2616:Generated_Source\PSoC4/CyLib.c **** 
2617:Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
2618:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
2619:Generated_Source\PSoC4/CyLib.c **** 
2620:Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
2621:Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
2622:Generated_Source\PSoC4/CyLib.c **** 
2623:Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
2624:Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
2625:Generated_Source\PSoC4/CyLib.c **** 
2626:Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
2627:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
2628:Generated_Source\PSoC4/CyLib.c ****     }
2629:Generated_Source\PSoC4/CyLib.c **** 
2630:Generated_Source\PSoC4/CyLib.c **** 
2631:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2632:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
2633:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2634:Generated_Source\PSoC4/CyLib.c ****     *
2635:Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
2636:Generated_Source\PSoC4/CyLib.c ****     *
2637:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2638:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
2639:Generated_Source\PSoC4/CyLib.c ****     {
2640:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
2641:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
2642:Generated_Source\PSoC4/CyLib.c ****     }
2643:Generated_Source\PSoC4/CyLib.c **** 
2644:Generated_Source\PSoC4/CyLib.c **** 
2645:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 55


2646:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
2647:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2648:Generated_Source\PSoC4/CyLib.c ****     *
2649:Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
2650:Generated_Source\PSoC4/CyLib.c ****     *
2651:Generated_Source\PSoC4/CyLib.c ****     * \return
2652:Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
2653:Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
2654:Generated_Source\PSoC4/CyLib.c ****     *
2655:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2656:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
2657:Generated_Source\PSoC4/CyLib.c ****     {
2658:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
2659:Generated_Source\PSoC4/CyLib.c ****     }
2660:Generated_Source\PSoC4/CyLib.c **** 
2661:Generated_Source\PSoC4/CyLib.c **** 
2662:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2663:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
2664:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2665:Generated_Source\PSoC4/CyLib.c ****     *
2666:Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
2667:Generated_Source\PSoC4/CyLib.c ****     *
2668:Generated_Source\PSoC4/CyLib.c ****     * \return
2669:Generated_Source\PSoC4/CyLib.c ****     *  None
2670:Generated_Source\PSoC4/CyLib.c ****     *
2671:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2672:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
2673:Generated_Source\PSoC4/CyLib.c ****     {
2674:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
2675:Generated_Source\PSoC4/CyLib.c ****     }
2676:Generated_Source\PSoC4/CyLib.c **** 
2677:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
2678:Generated_Source\PSoC4/CyLib.c **** 
2679:Generated_Source\PSoC4/CyLib.c **** 
2680:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2681:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
2682:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2683:Generated_Source\PSoC4/CyLib.c **** *
2684:Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
2685:Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
2686:Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
2687:Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
2688:Generated_Source\PSoC4/CyLib.c **** *
2689:Generated_Source\PSoC4/CyLib.c **** *  \param reason: bits in the RES_CAUSE register to clear.
2690:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
2691:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
2692:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
2693:Generated_Source\PSoC4/CyLib.c **** *
2694:Generated_Source\PSoC4/CyLib.c **** * \return
2695:Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
2696:Generated_Source\PSoC4/CyLib.c **** *
2697:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2698:Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
2699:Generated_Source\PSoC4/CyLib.c **** {
 425              		.loc 1 2699 0
 426              		.cfi_startproc
 427              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 56


 428              		@ frame_needed = 0, uses_anonymous_args = 0
 429              		@ link register save eliminated.
 430              	.LVL24:
 431 0000 0200     		movs	r2, r0
2700:Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
2701:Generated_Source\PSoC4/CyLib.c **** 
2702:Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 432              		.loc 1 2702 0
 433 0002 1920     		movs	r0, #25
 434              	.LVL25:
 435 0004 0240     		ands	r2, r0
 436              	.LVL26:
2703:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 437              		.loc 1 2703 0
 438 0006 0249     		ldr	r1, .L32
 439 0008 0B68     		ldr	r3, [r1]
 440 000a 1840     		ands	r0, r3
 441              	.LVL27:
2704:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2705:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
 442              		.loc 1 2705 0
 443 000c 0A60     		str	r2, [r1]
2706:Generated_Source\PSoC4/CyLib.c **** 
2707:Generated_Source\PSoC4/CyLib.c ****     return (returnStatus);
2708:Generated_Source\PSoC4/CyLib.c **** }
 444              		.loc 1 2708 0
 445              		@ sp needed
 446 000e 7047     		bx	lr
 447              	.L33:
 448              		.align	2
 449              	.L32:
 450 0010 54000340 		.word	1073938516
 451              		.cfi_endproc
 452              	.LFE12:
 453              		.size	CySysGetResetReason, .-CySysGetResetReason
 454              		.section	.text.CyDisableInts,"ax",%progbits
 455              		.align	2
 456              		.global	CyDisableInts
 457              		.code	16
 458              		.thumb_func
 459              		.type	CyDisableInts, %function
 460              	CyDisableInts:
 461              	.LFB13:
2709:Generated_Source\PSoC4/CyLib.c **** 
2710:Generated_Source\PSoC4/CyLib.c **** 
2711:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2712:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
2713:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2714:Generated_Source\PSoC4/CyLib.c **** *
2715:Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
2716:Generated_Source\PSoC4/CyLib.c **** *
2717:Generated_Source\PSoC4/CyLib.c **** * \return
2718:Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
2719:Generated_Source\PSoC4/CyLib.c **** *
2720:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2721:Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
2722:Generated_Source\PSoC4/CyLib.c **** {
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 57


 462              		.loc 1 2722 0
 463              		.cfi_startproc
 464              		@ args = 0, pretend = 0, frame = 0
 465              		@ frame_needed = 0, uses_anonymous_args = 0
 466              		@ link register save eliminated.
2723:Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
2724:Generated_Source\PSoC4/CyLib.c **** 
2725:Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
2726:Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
 467              		.loc 1 2726 0
 468 0000 024B     		ldr	r3, .L35
 469 0002 1868     		ldr	r0, [r3]
 470              	.LVL28:
2727:Generated_Source\PSoC4/CyLib.c **** 
2728:Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
2729:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
 471              		.loc 1 2729 0
 472 0004 0122     		movs	r2, #1
 473 0006 5242     		rsbs	r2, r2, #0
 474 0008 1A60     		str	r2, [r3]
2730:Generated_Source\PSoC4/CyLib.c **** 
2731:Generated_Source\PSoC4/CyLib.c ****     return (intState);
2732:Generated_Source\PSoC4/CyLib.c **** }
 475              		.loc 1 2732 0
 476              		@ sp needed
 477 000a 7047     		bx	lr
 478              	.L36:
 479              		.align	2
 480              	.L35:
 481 000c 80E100E0 		.word	-536813184
 482              		.cfi_endproc
 483              	.LFE13:
 484              		.size	CyDisableInts, .-CyDisableInts
 485              		.section	.text.CyEnableInts,"ax",%progbits
 486              		.align	2
 487              		.global	CyEnableInts
 488              		.code	16
 489              		.thumb_func
 490              		.type	CyEnableInts, %function
 491              	CyEnableInts:
 492              	.LFB14:
2733:Generated_Source\PSoC4/CyLib.c **** 
2734:Generated_Source\PSoC4/CyLib.c **** 
2735:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2736:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
2737:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2738:Generated_Source\PSoC4/CyLib.c **** *
2739:Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
2740:Generated_Source\PSoC4/CyLib.c **** *
2741:Generated_Source\PSoC4/CyLib.c **** *  \param mask The 32 bit mask of interrupts to enable.
2742:Generated_Source\PSoC4/CyLib.c **** *
2743:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2744:Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
2745:Generated_Source\PSoC4/CyLib.c **** {
 493              		.loc 1 2745 0
 494              		.cfi_startproc
 495              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 58


 496              		@ frame_needed = 0, uses_anonymous_args = 0
 497              		@ link register save eliminated.
 498              	.LVL29:
2746:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 499              		.loc 1 2746 0
 500 0000 014B     		ldr	r3, .L38
 501 0002 1860     		str	r0, [r3]
2747:Generated_Source\PSoC4/CyLib.c **** }
 502              		.loc 1 2747 0
 503              		@ sp needed
 504 0004 7047     		bx	lr
 505              	.L39:
 506 0006 C046     		.align	2
 507              	.L38:
 508 0008 00E100E0 		.word	-536813312
 509              		.cfi_endproc
 510              	.LFE14:
 511              		.size	CyEnableInts, .-CyEnableInts
 512              		.section	.text.CyIntEnable,"ax",%progbits
 513              		.align	2
 514              		.global	CyIntEnable
 515              		.code	16
 516              		.thumb_func
 517              		.type	CyIntEnable, %function
 518              	CyIntEnable:
 519              	.LFB21:
2748:Generated_Source\PSoC4/CyLib.c **** 
2749:Generated_Source\PSoC4/CyLib.c **** 
2750:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2751:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
2752:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2753:Generated_Source\PSoC4/CyLib.c **** *
2754:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
2755:Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
2756:Generated_Source\PSoC4/CyLib.c **** *
2757:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2758:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2759:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2760:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2761:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2762:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2763:Generated_Source\PSoC4/CyLib.c **** *
2764:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine.
2765:Generated_Source\PSoC4/CyLib.c **** *
2766:Generated_Source\PSoC4/CyLib.c **** * \return The old ISR vector at this location.
2767:Generated_Source\PSoC4/CyLib.c **** *
2768:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2769:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
2770:Generated_Source\PSoC4/CyLib.c **** {
2771:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2772:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2773:Generated_Source\PSoC4/CyLib.c **** 
2774:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2775:Generated_Source\PSoC4/CyLib.c **** 
2776:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2777:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
2778:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 59


2779:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2780:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
2781:Generated_Source\PSoC4/CyLib.c **** 
2782:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2783:Generated_Source\PSoC4/CyLib.c **** }
2784:Generated_Source\PSoC4/CyLib.c **** 
2785:Generated_Source\PSoC4/CyLib.c **** 
2786:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2787:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
2788:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2789:Generated_Source\PSoC4/CyLib.c **** *
2790:Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
2791:Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
2792:Generated_Source\PSoC4/CyLib.c **** *
2793:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2794:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2795:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2796:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2797:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2798:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2799:Generated_Source\PSoC4/CyLib.c **** *
2800:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2801:Generated_Source\PSoC4/CyLib.c **** *
2802:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2803:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
2804:Generated_Source\PSoC4/CyLib.c **** {
2805:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2806:Generated_Source\PSoC4/CyLib.c **** 
2807:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2808:Generated_Source\PSoC4/CyLib.c **** 
2809:Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
2810:Generated_Source\PSoC4/CyLib.c **** }
2811:Generated_Source\PSoC4/CyLib.c **** 
2812:Generated_Source\PSoC4/CyLib.c **** 
2813:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2814:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
2815:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2816:Generated_Source\PSoC4/CyLib.c **** *
2817:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
2818:Generated_Source\PSoC4/CyLib.c **** *
2819:Generated_Source\PSoC4/CyLib.c **** *  \param number Valid range [0-31].  Interrupt number
2820:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine
2821:Generated_Source\PSoC4/CyLib.c **** *
2822:Generated_Source\PSoC4/CyLib.c **** * \return Previous interrupt vector value.
2823:Generated_Source\PSoC4/CyLib.c **** *
2824:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2825:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
2826:Generated_Source\PSoC4/CyLib.c **** {
2827:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2828:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2829:Generated_Source\PSoC4/CyLib.c **** 
2830:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2831:Generated_Source\PSoC4/CyLib.c **** 
2832:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2833:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
2834:Generated_Source\PSoC4/CyLib.c **** 
2835:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 60


2836:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
2837:Generated_Source\PSoC4/CyLib.c **** 
2838:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2839:Generated_Source\PSoC4/CyLib.c **** }
2840:Generated_Source\PSoC4/CyLib.c **** 
2841:Generated_Source\PSoC4/CyLib.c **** 
2842:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2843:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
2844:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2845:Generated_Source\PSoC4/CyLib.c **** *
2846:Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
2847:Generated_Source\PSoC4/CyLib.c **** *
2848:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2849:Generated_Source\PSoC4/CyLib.c **** *
2850:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2851:Generated_Source\PSoC4/CyLib.c **** *
2852:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2853:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
2854:Generated_Source\PSoC4/CyLib.c **** {
2855:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2856:Generated_Source\PSoC4/CyLib.c **** 
2857:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2858:Generated_Source\PSoC4/CyLib.c **** 
2859:Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
2860:Generated_Source\PSoC4/CyLib.c **** }
2861:Generated_Source\PSoC4/CyLib.c **** 
2862:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2863:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
2864:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2865:Generated_Source\PSoC4/CyLib.c **** *
2866:Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
2867:Generated_Source\PSoC4/CyLib.c **** *
2868:Generated_Source\PSoC4/CyLib.c **** *  \param priority: Priority of the interrupt. 0 - 3, 0 being the highest.
2869:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2870:Generated_Source\PSoC4/CyLib.c **** *
2871:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2872:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
2873:Generated_Source\PSoC4/CyLib.c **** {
2874:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
2875:Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
2876:Generated_Source\PSoC4/CyLib.c ****     uint32 value;
2877:Generated_Source\PSoC4/CyLib.c **** 
2878:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
2879:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2880:Generated_Source\PSoC4/CyLib.c **** 
2881:Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
2882:Generated_Source\PSoC4/CyLib.c **** 
2883:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
2884:Generated_Source\PSoC4/CyLib.c **** 
2885:Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
2886:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
2887:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
2888:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
2889:Generated_Source\PSoC4/CyLib.c **** 
2890:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
2891:Generated_Source\PSoC4/CyLib.c **** }
2892:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 61


2893:Generated_Source\PSoC4/CyLib.c **** 
2894:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2895:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
2896:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2897:Generated_Source\PSoC4/CyLib.c **** *
2898:Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
2899:Generated_Source\PSoC4/CyLib.c **** *
2900:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2901:Generated_Source\PSoC4/CyLib.c **** *
2902:Generated_Source\PSoC4/CyLib.c **** * \return
2903:Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
2904:Generated_Source\PSoC4/CyLib.c **** *
2905:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2906:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
2907:Generated_Source\PSoC4/CyLib.c **** {
2908:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
2909:Generated_Source\PSoC4/CyLib.c **** 
2910:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2911:Generated_Source\PSoC4/CyLib.c **** 
2912:Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
2913:Generated_Source\PSoC4/CyLib.c **** 
2914:Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
2915:Generated_Source\PSoC4/CyLib.c **** }
2916:Generated_Source\PSoC4/CyLib.c **** 
2917:Generated_Source\PSoC4/CyLib.c **** 
2918:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2919:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
2920:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2921:Generated_Source\PSoC4/CyLib.c **** *
2922:Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
2923:Generated_Source\PSoC4/CyLib.c **** *
2924:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2925:Generated_Source\PSoC4/CyLib.c **** *
2926:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2927:Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
2928:Generated_Source\PSoC4/CyLib.c **** {
 520              		.loc 1 2928 0
 521              		.cfi_startproc
 522              		@ args = 0, pretend = 0, frame = 0
 523              		@ frame_needed = 0, uses_anonymous_args = 0
 524              		@ link register save eliminated.
 525              	.LVL30:
2929:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 526              		.loc 1 2929 0
 527 0000 1F23     		movs	r3, #31
 528 0002 1840     		ands	r0, r3
 529              	.LVL31:
 530 0004 1E3B     		subs	r3, r3, #30
 531 0006 8340     		lsls	r3, r3, r0
 532 0008 014A     		ldr	r2, .L41
 533 000a 1360     		str	r3, [r2]
2930:Generated_Source\PSoC4/CyLib.c **** }
 534              		.loc 1 2930 0
 535              		@ sp needed
 536 000c 7047     		bx	lr
 537              	.L42:
 538 000e C046     		.align	2
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 62


 539              	.L41:
 540 0010 00E100E0 		.word	-536813312
 541              		.cfi_endproc
 542              	.LFE21:
 543              		.size	CyIntEnable, .-CyIntEnable
 544              		.section	.text.CyIntGetState,"ax",%progbits
 545              		.align	2
 546              		.global	CyIntGetState
 547              		.code	16
 548              		.thumb_func
 549              		.type	CyIntGetState, %function
 550              	CyIntGetState:
 551              	.LFB22:
2931:Generated_Source\PSoC4/CyLib.c **** 
2932:Generated_Source\PSoC4/CyLib.c **** 
2933:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2934:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
2935:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2936:Generated_Source\PSoC4/CyLib.c **** *
2937:Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
2938:Generated_Source\PSoC4/CyLib.c **** *
2939:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2940:Generated_Source\PSoC4/CyLib.c **** *
2941:Generated_Source\PSoC4/CyLib.c **** * \return
2942:Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
2943:Generated_Source\PSoC4/CyLib.c **** *
2944:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2945:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
2946:Generated_Source\PSoC4/CyLib.c **** {
 552              		.loc 1 2946 0
 553              		.cfi_startproc
 554              		@ args = 0, pretend = 0, frame = 0
 555              		@ frame_needed = 0, uses_anonymous_args = 0
 556              		@ link register save eliminated.
 557              	.LVL32:
2947:Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
2948:Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
 558              		.loc 1 2948 0
 559 0000 044B     		ldr	r3, .L44
 560 0002 1B68     		ldr	r3, [r3]
 561 0004 1F22     		movs	r2, #31
 562 0006 1040     		ands	r0, r2
 563              	.LVL33:
 564 0008 C340     		lsrs	r3, r3, r0
 565 000a 1800     		movs	r0, r3
 566 000c 0123     		movs	r3, #1
 567 000e 1840     		ands	r0, r3
2949:Generated_Source\PSoC4/CyLib.c **** }
 568              		.loc 1 2949 0
 569              		@ sp needed
 570 0010 7047     		bx	lr
 571              	.L45:
 572 0012 C046     		.align	2
 573              	.L44:
 574 0014 00E100E0 		.word	-536813312
 575              		.cfi_endproc
 576              	.LFE22:
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 63


 577              		.size	CyIntGetState, .-CyIntGetState
 578              		.section	.text.CyIntDisable,"ax",%progbits
 579              		.align	2
 580              		.global	CyIntDisable
 581              		.code	16
 582              		.thumb_func
 583              		.type	CyIntDisable, %function
 584              	CyIntDisable:
 585              	.LFB23:
2950:Generated_Source\PSoC4/CyLib.c **** 
2951:Generated_Source\PSoC4/CyLib.c **** 
2952:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2953:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
2954:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2955:Generated_Source\PSoC4/CyLib.c **** *
2956:Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
2957:Generated_Source\PSoC4/CyLib.c **** *
2958:Generated_Source\PSoC4/CyLib.c **** *   \param number: Valid range [0-31].  Interrupt number.
2959:Generated_Source\PSoC4/CyLib.c **** *
2960:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2961:Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
2962:Generated_Source\PSoC4/CyLib.c **** {
 586              		.loc 1 2962 0
 587              		.cfi_startproc
 588              		@ args = 0, pretend = 0, frame = 0
 589              		@ frame_needed = 0, uses_anonymous_args = 0
 590              		@ link register save eliminated.
 591              	.LVL34:
2963:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 592              		.loc 1 2963 0
 593 0000 1F23     		movs	r3, #31
 594 0002 1840     		ands	r0, r3
 595              	.LVL35:
 596 0004 1E3B     		subs	r3, r3, #30
 597 0006 8340     		lsls	r3, r3, r0
 598 0008 014A     		ldr	r2, .L47
 599 000a 1360     		str	r3, [r2]
2964:Generated_Source\PSoC4/CyLib.c **** }
 600              		.loc 1 2964 0
 601              		@ sp needed
 602 000c 7047     		bx	lr
 603              	.L48:
 604 000e C046     		.align	2
 605              	.L47:
 606 0010 80E100E0 		.word	-536813184
 607              		.cfi_endproc
 608              	.LFE23:
 609              		.size	CyIntDisable, .-CyIntDisable
 610              		.section	.text.CyIntSetPending,"ax",%progbits
 611              		.align	2
 612              		.global	CyIntSetPending
 613              		.code	16
 614              		.thumb_func
 615              		.type	CyIntSetPending, %function
 616              	CyIntSetPending:
 617              	.LFB24:
2965:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 64


2966:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2967:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
2968:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2969:Generated_Source\PSoC4/CyLib.c **** *
2970:Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
2971:Generated_Source\PSoC4/CyLib.c **** *
2972:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2973:Generated_Source\PSoC4/CyLib.c **** *
2974:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2975:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
2976:Generated_Source\PSoC4/CyLib.c **** {
 618              		.loc 1 2976 0
 619              		.cfi_startproc
 620              		@ args = 0, pretend = 0, frame = 0
 621              		@ frame_needed = 0, uses_anonymous_args = 0
 622              		@ link register save eliminated.
 623              	.LVL36:
2977:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 624              		.loc 1 2977 0
 625 0000 1F23     		movs	r3, #31
 626 0002 1840     		ands	r0, r3
 627              	.LVL37:
 628 0004 1E3B     		subs	r3, r3, #30
 629 0006 8340     		lsls	r3, r3, r0
 630 0008 014A     		ldr	r2, .L50
 631 000a 1360     		str	r3, [r2]
2978:Generated_Source\PSoC4/CyLib.c **** }
 632              		.loc 1 2978 0
 633              		@ sp needed
 634 000c 7047     		bx	lr
 635              	.L51:
 636 000e C046     		.align	2
 637              	.L50:
 638 0010 00E200E0 		.word	-536813056
 639              		.cfi_endproc
 640              	.LFE24:
 641              		.size	CyIntSetPending, .-CyIntSetPending
 642              		.section	.text.CyIntClearPending,"ax",%progbits
 643              		.align	2
 644              		.global	CyIntClearPending
 645              		.code	16
 646              		.thumb_func
 647              		.type	CyIntClearPending, %function
 648              	CyIntClearPending:
 649              	.LFB25:
2979:Generated_Source\PSoC4/CyLib.c **** 
2980:Generated_Source\PSoC4/CyLib.c **** 
2981:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2982:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
2983:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2984:Generated_Source\PSoC4/CyLib.c **** *
2985:Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
2986:Generated_Source\PSoC4/CyLib.c **** *
2987:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2988:Generated_Source\PSoC4/CyLib.c **** *
2989:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2990:Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 65


2991:Generated_Source\PSoC4/CyLib.c **** {
 650              		.loc 1 2991 0
 651              		.cfi_startproc
 652              		@ args = 0, pretend = 0, frame = 0
 653              		@ frame_needed = 0, uses_anonymous_args = 0
 654              		@ link register save eliminated.
 655              	.LVL38:
2992:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 656              		.loc 1 2992 0
 657 0000 1F23     		movs	r3, #31
 658 0002 1840     		ands	r0, r3
 659              	.LVL39:
 660 0004 1E3B     		subs	r3, r3, #30
 661 0006 8340     		lsls	r3, r3, r0
 662 0008 014A     		ldr	r2, .L53
 663 000a 1360     		str	r3, [r2]
2993:Generated_Source\PSoC4/CyLib.c **** }
 664              		.loc 1 2993 0
 665              		@ sp needed
 666 000c 7047     		bx	lr
 667              	.L54:
 668 000e C046     		.align	2
 669              	.L53:
 670 0010 80E200E0 		.word	-536812928
 671              		.cfi_endproc
 672              	.LFE25:
 673              		.size	CyIntClearPending, .-CyIntClearPending
 674              		.section	.text.CyHalt,"ax",%progbits
 675              		.align	2
 676              		.global	CyHalt
 677              		.code	16
 678              		.thumb_func
 679              		.type	CyHalt, %function
 680              	CyHalt:
 681              	.LFB26:
2994:Generated_Source\PSoC4/CyLib.c **** 
2995:Generated_Source\PSoC4/CyLib.c **** 
2996:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2997:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
2998:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2999:Generated_Source\PSoC4/CyLib.c **** *
3000:Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
3001:Generated_Source\PSoC4/CyLib.c **** *
3002:Generated_Source\PSoC4/CyLib.c **** *  \param reason: Value to be used during debugging.
3003:Generated_Source\PSoC4/CyLib.c **** *
3004:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3005:Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
3006:Generated_Source\PSoC4/CyLib.c **** {
 682              		.loc 1 3006 0
 683              		.cfi_startproc
 684              		@ args = 0, pretend = 0, frame = 0
 685              		@ frame_needed = 0, uses_anonymous_args = 0
 686              		@ link register save eliminated.
 687              	.LVL40:
3007:Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
3008:Generated_Source\PSoC4/CyLib.c ****     {
3009:Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 66


3010:Generated_Source\PSoC4/CyLib.c ****     }
3011:Generated_Source\PSoC4/CyLib.c **** 
3012:Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
3013:Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
3014:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
3015:Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
 688              		.loc 1 3015 0
 689              		.syntax divided
 690              	@ 3015 "Generated_Source\PSoC4\CyLib.c" 1
 691 0000 01BE     		    bkpt    1
 692              	@ 0 "" 2
3016:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
3017:Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
3018:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
3019:Generated_Source\PSoC4/CyLib.c **** }
 693              		.loc 1 3019 0
 694              		.thumb
 695              		.syntax unified
 696              		@ sp needed
 697 0002 7047     		bx	lr
 698              		.cfi_endproc
 699              	.LFE26:
 700              		.size	CyHalt, .-CyHalt
 701              		.section	.text.CyIntSetSysVector,"ax",%progbits
 702              		.align	2
 703              		.global	CyIntSetSysVector
 704              		.code	16
 705              		.thumb_func
 706              		.type	CyIntSetSysVector, %function
 707              	CyIntSetSysVector:
 708              	.LFB15:
2770:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 709              		.loc 1 2770 0
 710              		.cfi_startproc
 711              		@ args = 0, pretend = 0, frame = 0
 712              		@ frame_needed = 0, uses_anonymous_args = 0
 713              	.LVL41:
 714 0000 70B5     		push	{r4, r5, r6, lr}
 715              		.cfi_def_cfa_offset 16
 716              		.cfi_offset 4, -16
 717              		.cfi_offset 5, -12
 718              		.cfi_offset 6, -8
 719              		.cfi_offset 14, -4
 720 0002 0400     		movs	r4, r0
 721 0004 0D00     		movs	r5, r1
 722              	.LVL42:
2774:Generated_Source\PSoC4/CyLib.c **** 
 723              		.loc 1 2774 0
 724 0006 0F28     		cmp	r0, #15
 725 0008 02D9     		bls	.L57
2774:Generated_Source\PSoC4/CyLib.c **** 
 726              		.loc 1 2774 0 is_stmt 0 discriminator 1
 727 000a 0020     		movs	r0, #0
 728              	.LVL43:
 729 000c FFF7FEFF 		bl	CyHalt
 730              	.LVL44:
 731              	.L57:
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 67


2777:Generated_Source\PSoC4/CyLib.c **** 
 732              		.loc 1 2777 0 is_stmt 1
 733 0010 A400     		lsls	r4, r4, #2
 734 0012 8023     		movs	r3, #128
 735 0014 9B05     		lsls	r3, r3, #22
 736 0016 9C46     		mov	ip, r3
 737 0018 6444     		add	r4, r4, ip
 738 001a 2068     		ldr	r0, [r4]
 739              	.LVL45:
2780:Generated_Source\PSoC4/CyLib.c **** 
 740              		.loc 1 2780 0
 741 001c 2560     		str	r5, [r4]
2783:Generated_Source\PSoC4/CyLib.c **** 
 742              		.loc 1 2783 0
 743              		@ sp needed
 744              	.LVL46:
 745 001e 70BD     		pop	{r4, r5, r6, pc}
 746              		.cfi_endproc
 747              	.LFE15:
 748              		.size	CyIntSetSysVector, .-CyIntSetSysVector
 749              		.section	.text.CyIntGetSysVector,"ax",%progbits
 750              		.align	2
 751              		.global	CyIntGetSysVector
 752              		.code	16
 753              		.thumb_func
 754              		.type	CyIntGetSysVector, %function
 755              	CyIntGetSysVector:
 756              	.LFB16:
2804:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 757              		.loc 1 2804 0
 758              		.cfi_startproc
 759              		@ args = 0, pretend = 0, frame = 0
 760              		@ frame_needed = 0, uses_anonymous_args = 0
 761              	.LVL47:
 762 0000 10B5     		push	{r4, lr}
 763              		.cfi_def_cfa_offset 8
 764              		.cfi_offset 4, -8
 765              		.cfi_offset 14, -4
 766 0002 0400     		movs	r4, r0
 767              	.LVL48:
2807:Generated_Source\PSoC4/CyLib.c **** 
 768              		.loc 1 2807 0
 769 0004 0F28     		cmp	r0, #15
 770 0006 02D9     		bls	.L59
2807:Generated_Source\PSoC4/CyLib.c **** 
 771              		.loc 1 2807 0 is_stmt 0 discriminator 1
 772 0008 0020     		movs	r0, #0
 773              	.LVL49:
 774 000a FFF7FEFF 		bl	CyHalt
 775              	.LVL50:
 776              	.L59:
2809:Generated_Source\PSoC4/CyLib.c **** }
 777              		.loc 1 2809 0 is_stmt 1
 778 000e A400     		lsls	r4, r4, #2
 779 0010 8023     		movs	r3, #128
 780 0012 9B05     		lsls	r3, r3, #22
 781 0014 9C46     		mov	ip, r3
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 68


 782 0016 6444     		add	r4, r4, ip
 783 0018 2068     		ldr	r0, [r4]
2810:Generated_Source\PSoC4/CyLib.c **** 
 784              		.loc 1 2810 0
 785              		@ sp needed
 786 001a 10BD     		pop	{r4, pc}
 787              		.cfi_endproc
 788              	.LFE16:
 789              		.size	CyIntGetSysVector, .-CyIntGetSysVector
 790              		.section	.text.CyIntSetVector,"ax",%progbits
 791              		.align	2
 792              		.global	CyIntSetVector
 793              		.code	16
 794              		.thumb_func
 795              		.type	CyIntSetVector, %function
 796              	CyIntSetVector:
 797              	.LFB17:
2826:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 798              		.loc 1 2826 0
 799              		.cfi_startproc
 800              		@ args = 0, pretend = 0, frame = 0
 801              		@ frame_needed = 0, uses_anonymous_args = 0
 802              	.LVL51:
 803 0000 70B5     		push	{r4, r5, r6, lr}
 804              		.cfi_def_cfa_offset 16
 805              		.cfi_offset 4, -16
 806              		.cfi_offset 5, -12
 807              		.cfi_offset 6, -8
 808              		.cfi_offset 14, -4
 809 0002 0400     		movs	r4, r0
 810 0004 0D00     		movs	r5, r1
 811              	.LVL52:
2830:Generated_Source\PSoC4/CyLib.c **** 
 812              		.loc 1 2830 0
 813 0006 1828     		cmp	r0, #24
 814 0008 02D9     		bls	.L61
2830:Generated_Source\PSoC4/CyLib.c **** 
 815              		.loc 1 2830 0 is_stmt 0 discriminator 1
 816 000a 0020     		movs	r0, #0
 817              	.LVL53:
 818 000c FFF7FEFF 		bl	CyHalt
 819              	.LVL54:
 820              	.L61:
2833:Generated_Source\PSoC4/CyLib.c **** 
 821              		.loc 1 2833 0 is_stmt 1
 822 0010 1034     		adds	r4, r4, #16
 823 0012 A400     		lsls	r4, r4, #2
 824 0014 8023     		movs	r3, #128
 825 0016 9B05     		lsls	r3, r3, #22
 826 0018 9C46     		mov	ip, r3
 827 001a 6444     		add	r4, r4, ip
 828 001c 2068     		ldr	r0, [r4]
 829              	.LVL55:
2836:Generated_Source\PSoC4/CyLib.c **** 
 830              		.loc 1 2836 0
 831 001e 2560     		str	r5, [r4]
2839:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 69


 832              		.loc 1 2839 0
 833              		@ sp needed
 834              	.LVL56:
 835 0020 70BD     		pop	{r4, r5, r6, pc}
 836              		.cfi_endproc
 837              	.LFE17:
 838              		.size	CyIntSetVector, .-CyIntSetVector
 839 0022 C046     		.section	.text.CyIntGetVector,"ax",%progbits
 840              		.align	2
 841              		.global	CyIntGetVector
 842              		.code	16
 843              		.thumb_func
 844              		.type	CyIntGetVector, %function
 845              	CyIntGetVector:
 846              	.LFB18:
2854:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 847              		.loc 1 2854 0
 848              		.cfi_startproc
 849              		@ args = 0, pretend = 0, frame = 0
 850              		@ frame_needed = 0, uses_anonymous_args = 0
 851              	.LVL57:
 852 0000 10B5     		push	{r4, lr}
 853              		.cfi_def_cfa_offset 8
 854              		.cfi_offset 4, -8
 855              		.cfi_offset 14, -4
 856 0002 0400     		movs	r4, r0
 857              	.LVL58:
2857:Generated_Source\PSoC4/CyLib.c **** 
 858              		.loc 1 2857 0
 859 0004 1828     		cmp	r0, #24
 860 0006 02D9     		bls	.L63
2857:Generated_Source\PSoC4/CyLib.c **** 
 861              		.loc 1 2857 0 is_stmt 0 discriminator 1
 862 0008 0020     		movs	r0, #0
 863              	.LVL59:
 864 000a FFF7FEFF 		bl	CyHalt
 865              	.LVL60:
 866              	.L63:
2859:Generated_Source\PSoC4/CyLib.c **** }
 867              		.loc 1 2859 0 is_stmt 1
 868 000e 1034     		adds	r4, r4, #16
 869 0010 A400     		lsls	r4, r4, #2
 870 0012 8023     		movs	r3, #128
 871 0014 9B05     		lsls	r3, r3, #22
 872 0016 9C46     		mov	ip, r3
 873 0018 6444     		add	r4, r4, ip
 874 001a 2068     		ldr	r0, [r4]
2860:Generated_Source\PSoC4/CyLib.c **** 
 875              		.loc 1 2860 0
 876              		@ sp needed
 877 001c 10BD     		pop	{r4, pc}
 878              		.cfi_endproc
 879              	.LFE18:
 880              		.size	CyIntGetVector, .-CyIntGetVector
 881 001e C046     		.section	.text.CyIntSetPriority,"ax",%progbits
 882              		.align	2
 883              		.global	CyIntSetPriority
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 70


 884              		.code	16
 885              		.thumb_func
 886              		.type	CyIntSetPriority, %function
 887              	CyIntSetPriority:
 888              	.LFB19:
2873:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
 889              		.loc 1 2873 0
 890              		.cfi_startproc
 891              		@ args = 0, pretend = 0, frame = 0
 892              		@ frame_needed = 0, uses_anonymous_args = 0
 893              	.LVL61:
 894 0000 70B5     		push	{r4, r5, r6, lr}
 895              		.cfi_def_cfa_offset 16
 896              		.cfi_offset 4, -16
 897              		.cfi_offset 5, -12
 898              		.cfi_offset 6, -8
 899              		.cfi_offset 14, -4
 900 0002 0400     		movs	r4, r0
 901 0004 0E00     		movs	r6, r1
2878:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 902              		.loc 1 2878 0
 903 0006 0329     		cmp	r1, #3
 904 0008 02D9     		bls	.L65
2878:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 905              		.loc 1 2878 0 is_stmt 0 discriminator 1
 906 000a 0020     		movs	r0, #0
 907              	.LVL62:
 908 000c FFF7FEFF 		bl	CyHalt
 909              	.LVL63:
 910              	.L65:
2879:Generated_Source\PSoC4/CyLib.c **** 
 911              		.loc 1 2879 0 is_stmt 1
 912 0010 182C     		cmp	r4, #24
 913 0012 02D9     		bls	.L66
2879:Generated_Source\PSoC4/CyLib.c **** 
 914              		.loc 1 2879 0 is_stmt 0 discriminator 1
 915 0014 0020     		movs	r0, #0
 916 0016 FFF7FEFF 		bl	CyHalt
 917              	.LVL64:
 918              	.L66:
2881:Generated_Source\PSoC4/CyLib.c **** 
 919              		.loc 1 2881 0 is_stmt 1
 920 001a 0325     		movs	r5, #3
 921 001c 2540     		ands	r5, r4
 922 001e ED00     		lsls	r5, r5, #3
 923 0020 0635     		adds	r5, r5, #6
 924              	.LVL65:
2883:Generated_Source\PSoC4/CyLib.c **** 
 925              		.loc 1 2883 0
 926 0022 FFF7FEFF 		bl	CyEnterCriticalSection
 927              	.LVL66:
2885:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 928              		.loc 1 2885 0
 929 0026 A408     		lsrs	r4, r4, #2
 930 0028 A400     		lsls	r4, r4, #2
 931 002a 074B     		ldr	r3, .L67
 932 002c 9C46     		mov	ip, r3
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 71


 933 002e 6444     		add	r4, r4, ip
 934 0030 2168     		ldr	r1, [r4]
 935              	.LVL67:
2886:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 936              		.loc 1 2886 0
 937 0032 0323     		movs	r3, #3
 938 0034 AB40     		lsls	r3, r3, r5
 939 0036 9943     		bics	r1, r3
 940              	.LVL68:
 941 0038 0B00     		movs	r3, r1
 942              	.LVL69:
2887:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 943              		.loc 1 2887 0
 944 003a 3100     		movs	r1, r6
 945              	.LVL70:
 946 003c A940     		lsls	r1, r1, r5
 947 003e 1943     		orrs	r1, r3
 948              	.LVL71:
2888:Generated_Source\PSoC4/CyLib.c **** 
 949              		.loc 1 2888 0
 950 0040 2160     		str	r1, [r4]
2890:Generated_Source\PSoC4/CyLib.c **** }
 951              		.loc 1 2890 0
 952 0042 FFF7FEFF 		bl	CyExitCriticalSection
 953              	.LVL72:
2891:Generated_Source\PSoC4/CyLib.c **** 
 954              		.loc 1 2891 0
 955              		@ sp needed
 956              	.LVL73:
 957 0046 70BD     		pop	{r4, r5, r6, pc}
 958              	.L68:
 959              		.align	2
 960              	.L67:
 961 0048 00E400E0 		.word	-536812544
 962              		.cfi_endproc
 963              	.LFE19:
 964              		.size	CyIntSetPriority, .-CyIntSetPriority
 965              		.section	.text.CyIntGetPriority,"ax",%progbits
 966              		.align	2
 967              		.global	CyIntGetPriority
 968              		.code	16
 969              		.thumb_func
 970              		.type	CyIntGetPriority, %function
 971              	CyIntGetPriority:
 972              	.LFB20:
2907:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
 973              		.loc 1 2907 0
 974              		.cfi_startproc
 975              		@ args = 0, pretend = 0, frame = 0
 976              		@ frame_needed = 0, uses_anonymous_args = 0
 977              	.LVL74:
 978 0000 10B5     		push	{r4, lr}
 979              		.cfi_def_cfa_offset 8
 980              		.cfi_offset 4, -8
 981              		.cfi_offset 14, -4
 982 0002 0400     		movs	r4, r0
2910:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 72


 983              		.loc 1 2910 0
 984 0004 1828     		cmp	r0, #24
 985 0006 02D9     		bls	.L70
2910:Generated_Source\PSoC4/CyLib.c **** 
 986              		.loc 1 2910 0 is_stmt 0 discriminator 1
 987 0008 0020     		movs	r0, #0
 988              	.LVL75:
 989 000a FFF7FEFF 		bl	CyHalt
 990              	.LVL76:
 991              	.L70:
2912:Generated_Source\PSoC4/CyLib.c **** 
 992              		.loc 1 2912 0 is_stmt 1
 993 000e A308     		lsrs	r3, r4, #2
 994 0010 9B00     		lsls	r3, r3, #2
 995 0012 054A     		ldr	r2, .L71
 996 0014 9446     		mov	ip, r2
 997 0016 6344     		add	r3, r3, ip
 998 0018 1868     		ldr	r0, [r3]
 999 001a 0323     		movs	r3, #3
 1000 001c 1C40     		ands	r4, r3
 1001 001e E400     		lsls	r4, r4, #3
 1002 0020 0634     		adds	r4, r4, #6
 1003 0022 E040     		lsrs	r0, r0, r4
 1004              	.LVL77:
2914:Generated_Source\PSoC4/CyLib.c **** }
 1005              		.loc 1 2914 0
 1006 0024 1840     		ands	r0, r3
 1007              	.LVL78:
2915:Generated_Source\PSoC4/CyLib.c **** 
 1008              		.loc 1 2915 0
 1009              		@ sp needed
 1010 0026 10BD     		pop	{r4, pc}
 1011              	.L72:
 1012              		.align	2
 1013              	.L71:
 1014 0028 00E400E0 		.word	-536812544
 1015              		.cfi_endproc
 1016              	.LFE20:
 1017              		.size	CyIntGetPriority, .-CyIntGetPriority
 1018              		.section	.text.CySoftwareReset,"ax",%progbits
 1019              		.align	2
 1020              		.global	CySoftwareReset
 1021              		.code	16
 1022              		.thumb_func
 1023              		.type	CySoftwareReset, %function
 1024              	CySoftwareReset:
 1025              	.LFB27:
3020:Generated_Source\PSoC4/CyLib.c **** 
3021:Generated_Source\PSoC4/CyLib.c **** 
3022:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3023:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
3024:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3025:Generated_Source\PSoC4/CyLib.c **** *
3026:Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
3027:Generated_Source\PSoC4/CyLib.c **** *
3028:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3029:Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 73


3030:Generated_Source\PSoC4/CyLib.c **** {
 1026              		.loc 1 3030 0
 1027              		.cfi_startproc
 1028              		@ args = 0, pretend = 0, frame = 0
 1029              		@ frame_needed = 0, uses_anonymous_args = 0
 1030              		@ link register save eliminated.
3031:Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
3032:Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
3033:Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
3034:Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
3035:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_AIRCR_REG = (CY_SYS_AIRCR_REG & (uint32)(~CY_SYS_AIRCR_VECTKEY_MASK)) |
 1031              		.loc 1 3035 0
 1032 0000 034A     		ldr	r2, .L74
 1033 0002 1368     		ldr	r3, [r2]
 1034 0004 1B04     		lsls	r3, r3, #16
 1035 0006 1B0C     		lsrs	r3, r3, #16
3036:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1036              		.loc 1 3036 0
 1037 0008 0249     		ldr	r1, .L74+4
 1038 000a 0B43     		orrs	r3, r1
3035:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1039              		.loc 1 3035 0
 1040 000c 1360     		str	r3, [r2]
3037:Generated_Source\PSoC4/CyLib.c **** }
 1041              		.loc 1 3037 0
 1042              		@ sp needed
 1043 000e 7047     		bx	lr
 1044              	.L75:
 1045              		.align	2
 1046              	.L74:
 1047 0010 0CED00E0 		.word	-536810228
 1048 0014 0400FA05 		.word	100270084
 1049              		.cfi_endproc
 1050              	.LFE27:
 1051              		.size	CySoftwareReset, .-CySoftwareReset
 1052              		.section	.text.CyDelay,"ax",%progbits
 1053              		.align	2
 1054              		.global	CyDelay
 1055              		.code	16
 1056              		.thumb_func
 1057              		.type	CyDelay, %function
 1058              	CyDelay:
 1059              	.LFB28:
3038:Generated_Source\PSoC4/CyLib.c **** 
3039:Generated_Source\PSoC4/CyLib.c **** 
3040:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3041:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
3042:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3043:Generated_Source\PSoC4/CyLib.c **** *
3044:Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
3045:Generated_Source\PSoC4/CyLib.c **** *
3046:Generated_Source\PSoC4/CyLib.c **** *  \param milliseconds: number of milliseconds to delay.
3047:Generated_Source\PSoC4/CyLib.c **** *
3048:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3049:Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
3050:Generated_Source\PSoC4/CyLib.c **** {
 1060              		.loc 1 3050 0
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 74


 1061              		.cfi_startproc
 1062              		@ args = 0, pretend = 0, frame = 0
 1063              		@ frame_needed = 0, uses_anonymous_args = 0
 1064              	.LVL79:
 1065 0000 10B5     		push	{r4, lr}
 1066              		.cfi_def_cfa_offset 8
 1067              		.cfi_offset 4, -8
 1068              		.cfi_offset 14, -4
 1069 0002 0400     		movs	r4, r0
3051:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1070              		.loc 1 3051 0
 1071 0004 06E0     		b	.L77
 1072              	.LVL80:
 1073              	.L78:
3052:Generated_Source\PSoC4/CyLib.c ****     {
3053:Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
3054:Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
3055:Generated_Source\PSoC4/CyLib.c ****          */
3056:Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
 1074              		.loc 1 3056 0
 1075 0006 084B     		ldr	r3, .L79
 1076 0008 5868     		ldr	r0, [r3, #4]
 1077 000a FFF7FEFF 		bl	CyDelayCycles
 1078              	.LVL81:
3057:Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 1079              		.loc 1 3057 0
 1080 000e 074B     		ldr	r3, .L79+4
 1081 0010 9C46     		mov	ip, r3
 1082 0012 6444     		add	r4, r4, ip
 1083              	.LVL82:
 1084              	.L77:
3051:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1085              		.loc 1 3051 0
 1086 0014 8023     		movs	r3, #128
 1087 0016 1B02     		lsls	r3, r3, #8
 1088 0018 9C42     		cmp	r4, r3
 1089 001a F4D8     		bhi	.L78
3058:Generated_Source\PSoC4/CyLib.c ****     }
3059:Generated_Source\PSoC4/CyLib.c **** 
3060:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
 1090              		.loc 1 3060 0
 1091 001c 024B     		ldr	r3, .L79
 1092 001e 9868     		ldr	r0, [r3, #8]
 1093 0020 6043     		muls	r0, r4
 1094 0022 FFF7FEFF 		bl	CyDelayCycles
 1095              	.LVL83:
3061:Generated_Source\PSoC4/CyLib.c **** }
 1096              		.loc 1 3061 0
 1097              		@ sp needed
 1098              	.LVL84:
 1099 0026 10BD     		pop	{r4, pc}
 1100              	.L80:
 1101              		.align	2
 1102              	.L79:
 1103 0028 00000000 		.word	.LANCHOR0
 1104 002c 0080FFFF 		.word	-32768
 1105              		.cfi_endproc
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 75


 1106              	.LFE28:
 1107              		.size	CyDelay, .-CyDelay
 1108              		.section	.text.CySysClkImoEnableWcoLock,"ax",%progbits
 1109              		.align	2
 1110              		.global	CySysClkImoEnableWcoLock
 1111              		.code	16
 1112              		.thumb_func
 1113              		.type	CySysClkImoEnableWcoLock, %function
 1114              	CySysClkImoEnableWcoLock:
 1115              	.LFB3:
 168:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 1116              		.loc 1 168 0
 1117              		.cfi_startproc
 1118              		@ args = 0, pretend = 0, frame = 8
 1119              		@ frame_needed = 0, uses_anonymous_args = 0
 1120 0000 70B5     		push	{r4, r5, r6, lr}
 1121              		.cfi_def_cfa_offset 16
 1122              		.cfi_offset 4, -16
 1123              		.cfi_offset 5, -12
 1124              		.cfi_offset 6, -8
 1125              		.cfi_offset 14, -4
 1126 0002 82B0     		sub	sp, sp, #8
 1127              		.cfi_def_cfa_offset 24
 1128              	.LVL85:
 179:Generated_Source\PSoC4/CyLib.c ****         {
 1129              		.loc 1 179 0
 1130 0004 FFF7FEFF 		bl	CySysClkWcoEnabled
 1131              	.LVL86:
 1132 0008 0028     		cmp	r0, #0
 1133 000a 4DD0     		beq	.L81
 181:Generated_Source\PSoC4/CyLib.c **** 
 1134              		.loc 1 181 0
 1135 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1136              	.LVL87:
 1137 0010 0500     		movs	r5, r0
 1138              	.LVL88:
 204:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 1139              		.loc 1 204 0
 1140 0012 264B     		ldr	r3, .L85
 1141 0014 1A68     		ldr	r2, [r3]
 1142 0016 9200     		lsls	r2, r2, #2
 1143 0018 1C23     		movs	r3, #28
 1144 001a 1A40     		ands	r2, r3
 205:Generated_Source\PSoC4/CyLib.c ****                                       ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)
 1145              		.loc 1 205 0
 1146 001c 1832     		adds	r2, r2, #24
 206:Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 1147              		.loc 1 206 0
 1148 001e 244B     		ldr	r3, .L85+4
 1149 0020 1B68     		ldr	r3, [r3]
 1150 0022 9B08     		lsrs	r3, r3, #2
 1151 0024 0321     		movs	r1, #3
 1152 0026 0B40     		ands	r3, r1
 204:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 1153              		.loc 1 204 0
 1154 0028 DA40     		lsrs	r2, r2, r3
 1155              	.LVL89:
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 76


 215:Generated_Source\PSoC4/CyLib.c ****             
 1156              		.loc 1 215 0
 1157 002a 0021     		movs	r1, #0
 1158 002c 214B     		ldr	r3, .L85+8
 1159 002e 1960     		str	r1, [r3]
 226:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 1160              		.loc 1 226 0
 1161 0030 214C     		ldr	r4, .L85+12
 1162 0032 2168     		ldr	r1, [r4]
 1163 0034 214B     		ldr	r3, .L85+16
 1164 0036 0B40     		ands	r3, r1
 1165              	.LVL90:
 232:Generated_Source\PSoC4/CyLib.c **** 
 1166              		.loc 1 232 0
 1167 0038 2149     		ldr	r1, .L85+20
 1168 003a 4A43     		muls	r2, r1
 1169              	.LVL91:
 1170 003c 8021     		movs	r1, #128
 1171 003e C901     		lsls	r1, r1, #7
 1172 0040 8C46     		mov	ip, r1
 1173 0042 6244     		add	r2, r2, ip
 1174 0044 D20B     		lsrs	r2, r2, #15
 1175 0046 013A     		subs	r2, r2, #1
 1176 0048 5205     		lsls	r2, r2, #21
 1177 004a 520D     		lsrs	r2, r2, #21
 1178 004c 1343     		orrs	r3, r2
 1179              	.LVL92:
 235:Generated_Source\PSoC4/CyLib.c **** 
 1180              		.loc 1 235 0
 1181 004e A022     		movs	r2, #160
 1182 0050 5203     		lsls	r2, r2, #13
 1183 0052 1343     		orrs	r3, r2
 1184              	.LVL93:
 237:Generated_Source\PSoC4/CyLib.c ****             
 1185              		.loc 1 237 0
 1186 0054 2360     		str	r3, [r4]
 239:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 1187              		.loc 1 239 0
 1188 0056 1B4B     		ldr	r3, .L85+24
 1189              	.LVL94:
 1190 0058 1B68     		ldr	r3, [r3]
 1191 005a 0193     		str	r3, [sp, #4]
 1192              	.LVL95:
 240:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 1193              		.loc 1 240 0
 1194 005c 3020     		movs	r0, #48
 1195 005e FFF7FEFF 		bl	CySysFlashSetWaitCycles
 1196              	.LVL96:
 241:Generated_Source\PSoC4/CyLib.c **** 
 1197              		.loc 1 241 0
 1198 0062 194A     		ldr	r2, .L85+28
 1199 0064 1368     		ldr	r3, [r2]
 1200 0066 8021     		movs	r1, #128
 1201 0068 C905     		lsls	r1, r1, #23
 1202 006a 0B43     		orrs	r3, r1
 1203 006c 1360     		str	r3, [r2]
 243:Generated_Source\PSoC4/CyLib.c ****             
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 77


 1204              		.loc 1 243 0
 1205 006e 2668     		ldr	r6, [r4]
 1206 0070 164B     		ldr	r3, .L85+32
 1207 0072 1E40     		ands	r6, r3
 1208              	.LVL97:
 176:Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 1209              		.loc 1 176 0
 1210 0074 0024     		movs	r4, #0
 245:Generated_Source\PSoC4/CyLib.c ****             {
 1211              		.loc 1 245 0
 1212 0076 07E0     		b	.L83
 1213              	.LVL98:
 1214              	.L84:
 247:Generated_Source\PSoC4/CyLib.c ****                 lfLimit += CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_STEP;
 1215              		.loc 1 247 0
 1216 0078 0120     		movs	r0, #1
 1217 007a FFF7FEFF 		bl	CyDelay
 1218              	.LVL99:
 248:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_WCO_DPLL_REG = (regTmp | (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT
 1219              		.loc 1 248 0
 1220 007e 1034     		adds	r4, r4, #16
 1221              	.LVL100:
 249:Generated_Source\PSoC4/CyLib.c ****             }
 1222              		.loc 1 249 0
 1223 0080 A305     		lsls	r3, r4, #22
 1224 0082 3343     		orrs	r3, r6
 1225 0084 0C4A     		ldr	r2, .L85+12
 1226 0086 1360     		str	r3, [r2]
 1227              	.LVL101:
 1228              	.L83:
 245:Generated_Source\PSoC4/CyLib.c ****             {
 1229              		.loc 1 245 0
 1230 0088 EE2C     		cmp	r4, #238
 1231 008a F5D9     		bls	.L84
 252:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = (regTmp | (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX << 
 1232              		.loc 1 252 0
 1233 008c 0120     		movs	r0, #1
 1234 008e FFF7FEFF 		bl	CyDelay
 1235              	.LVL102:
 253:Generated_Source\PSoC4/CyLib.c ****                                                  CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT));
 1236              		.loc 1 253 0
 1237 0092 FF23     		movs	r3, #255
 1238 0094 9B05     		lsls	r3, r3, #22
 1239 0096 1E43     		orrs	r6, r3
 1240              	.LVL103:
 1241 0098 074B     		ldr	r3, .L85+12
 1242 009a 1E60     		str	r6, [r3]
 256:Generated_Source\PSoC4/CyLib.c **** 
 1243              		.loc 1 256 0
 1244 009c 019A     		ldr	r2, [sp, #4]
 1245 009e 094B     		ldr	r3, .L85+24
 1246 00a0 1A60     		str	r2, [r3]
 258:Generated_Source\PSoC4/CyLib.c ****         }
 1247              		.loc 1 258 0
 1248 00a2 2800     		movs	r0, r5
 1249 00a4 FFF7FEFF 		bl	CyExitCriticalSection
 1250              	.LVL104:
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 78


 1251              	.L81:
 260:Generated_Source\PSoC4/CyLib.c **** 
 1252              		.loc 1 260 0
 1253 00a8 02B0     		add	sp, sp, #8
 1254              		@ sp needed
 1255 00aa 70BD     		pop	{r4, r5, r6, pc}
 1256              	.L86:
 1257              		.align	2
 1258              	.L85:
 1259 00ac 080F0340 		.word	1073942280
 1260 00b0 28000340 		.word	1073938472
 1261 00b4 0C0F0340 		.word	1073942284
 1262 00b8 08000640 		.word	1074135048
 1263 00bc 00F800C0 		.word	-1073678336
 1264 00c0 40420F00 		.word	1000000
 1265 00c4 30001040 		.word	1074790448
 1266 00c8 00000640 		.word	1074135040
 1267 00cc FFFF3FC0 		.word	-1069547521
 1268              		.cfi_endproc
 1269              	.LFE3:
 1270              		.size	CySysClkImoEnableWcoLock, .-CySysClkImoEnableWcoLock
 1271              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
 1272              		.align	2
 1273              		.global	CySysClkWriteImoFreq
 1274              		.code	16
 1275              		.thumb_func
 1276              		.type	CySysClkWriteImoFreq, %function
 1277              	CySysClkWriteImoFreq:
 1278              	.LFB10:
 954:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 1279              		.loc 1 954 0
 1280              		.cfi_startproc
 1281              		@ args = 0, pretend = 0, frame = 8
 1282              		@ frame_needed = 0, uses_anonymous_args = 0
 1283              	.LVL105:
 1284 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1285              		.cfi_def_cfa_offset 20
 1286              		.cfi_offset 4, -20
 1287              		.cfi_offset 5, -16
 1288              		.cfi_offset 6, -12
 1289              		.cfi_offset 7, -8
 1290              		.cfi_offset 14, -4
 1291 0002 83B0     		sub	sp, sp, #12
 1292              		.cfi_def_cfa_offset 32
 1293 0004 0400     		movs	r4, r0
 1294              	.LVL106:
 971:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 1295              		.loc 1 971 0
 1296 0006 1828     		cmp	r0, #24
 1297 0008 0BD0     		beq	.L88
 971:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 1298              		.loc 1 971 0 is_stmt 0 discriminator 1
 1299 000a 1C28     		cmp	r0, #28
 1300 000c 09D0     		beq	.L88
 971:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 1301              		.loc 1 971 0 discriminator 2
 1302 000e 2028     		cmp	r0, #32
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 79


 1303 0010 07D0     		beq	.L88
 971:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 1304              		.loc 1 971 0 discriminator 3
 1305 0012 2428     		cmp	r0, #36
 1306 0014 05D0     		beq	.L88
 972:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 1307              		.loc 1 972 0 is_stmt 1
 1308 0016 2828     		cmp	r0, #40
 1309 0018 03D0     		beq	.L88
 972:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 1310              		.loc 1 972 0 is_stmt 0 discriminator 1
 1311 001a 2C28     		cmp	r0, #44
 1312 001c 01D0     		beq	.L88
 972:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 1313              		.loc 1 972 0 discriminator 2
 1314 001e 3028     		cmp	r0, #48
 1315 0020 49D1     		bne	.L89
 1316              	.L88:
 976:Generated_Source\PSoC4/CyLib.c **** 
 1317              		.loc 1 976 0 is_stmt 1
 1318 0022 FFF7FEFF 		bl	CyEnterCriticalSection
 1319              	.LVL107:
 1320 0026 0190     		str	r0, [sp, #4]
 1321              	.LVL108:
 979:Generated_Source\PSoC4/CyLib.c ****                 {
 1322              		.loc 1 979 0
 1323 0028 FFF7FEFF 		bl	CySysClkImoGetWcoLock
 1324              	.LVL109:
 1325 002c 0028     		cmp	r0, #0
 1326 002e 03D0     		beq	.L94
 1327              	.LVL110:
 982:Generated_Source\PSoC4/CyLib.c ****                 }
 1328              		.loc 1 982 0
 1329 0030 FFF7FEFF 		bl	CySysClkImoDisableWcoLock
 1330              	.LVL111:
 981:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
 1331              		.loc 1 981 0
 1332 0034 0126     		movs	r6, #1
 1333 0036 00E0     		b	.L90
 1334              	.LVL112:
 1335              	.L94:
 959:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */        
 1336              		.loc 1 959 0
 1337 0038 0026     		movs	r6, #0
 1338              	.LVL113:
 1339              	.L90:
1007:Generated_Source\PSoC4/CyLib.c **** 
 1340              		.loc 1 1007 0
 1341 003a 214A     		ldr	r2, .L95
 1342 003c 1368     		ldr	r3, [r2]
 1343 003e 0721     		movs	r1, #7
 1344 0040 8B43     		bics	r3, r1
 1345 0042 1360     		str	r3, [r2]
 1346              	.LVL114:
1025:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 1347              		.loc 1 1025 0
 1348 0044 1F4B     		ldr	r3, .L95+4
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 80


 1349 0046 E318     		adds	r3, r4, r3
 1350 0048 1B78     		ldrb	r3, [r3]
 1351 004a DBB2     		uxtb	r3, r3
 1352              	.LVL115:
1027:Generated_Source\PSoC4/CyLib.c **** 
 1353              		.loc 1 1027 0
 1354 004c 1E4A     		ldr	r2, .L95+8
 1355 004e 1360     		str	r3, [r2]
1030:Generated_Source\PSoC4/CyLib.c **** 
 1356              		.loc 1 1030 0
 1357 0050 1E4A     		ldr	r2, .L95+12
 1358 0052 1368     		ldr	r3, [r2]
 1359              	.LVL116:
 1360 0054 8B43     		bics	r3, r1
 1361 0056 1360     		str	r3, [r2]
 1362              	.LVL117:
1033:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 1363              		.loc 1 1033 0
 1364 0058 1D48     		ldr	r0, .L95+16
 1365 005a 0368     		ldr	r3, [r0]
 1366 005c 7F22     		movs	r2, #127
 1367 005e 9343     		bics	r3, r2
 1368 0060 1900     		movs	r1, r3
1034:Generated_Source\PSoC4/CyLib.c **** 
 1369              		.loc 1 1034 0
 1370 0062 1C4B     		ldr	r3, .L95+20
 1371 0064 E318     		adds	r3, r4, r3
 1372 0066 1B78     		ldrb	r3, [r3]
 1373 0068 1340     		ands	r3, r2
1033:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 1374              		.loc 1 1033 0
 1375 006a 0B43     		orrs	r3, r1
 1376 006c 0360     		str	r3, [r0]
1036:Generated_Source\PSoC4/CyLib.c **** 
 1377              		.loc 1 1036 0
 1378 006e 3220     		movs	r0, #50
 1379 0070 FFF7FEFF 		bl	CyDelayCycles
 1380              	.LVL118:
1038:Generated_Source\PSoC4/CyLib.c ****             {
 1381              		.loc 1 1038 0
 1382 0074 182C     		cmp	r4, #24
 1383 0076 16D9     		bls	.L91
1041:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 1384              		.loc 1 1041 0
 1385 0078 114F     		ldr	r7, .L95
 1386 007a 3B68     		ldr	r3, [r7]
 1387 007c 0725     		movs	r5, #7
 1388 007e AB43     		bics	r3, r5
 1389 0080 1A00     		movs	r2, r3
1042:Generated_Source\PSoC4/CyLib.c **** 
 1390              		.loc 1 1042 0
 1391 0082 2300     		movs	r3, r4
 1392 0084 1C3B     		subs	r3, r3, #28
 1393 0086 9B08     		lsrs	r3, r3, #2
 1394 0088 2B40     		ands	r3, r5
1041:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 1395              		.loc 1 1041 0
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 81


 1396 008a 1343     		orrs	r3, r2
 1397 008c 3B60     		str	r3, [r7]
1044:Generated_Source\PSoC4/CyLib.c **** 
 1398              		.loc 1 1044 0
 1399 008e 3220     		movs	r0, #50
 1400 0090 FFF7FEFF 		bl	CyDelayCycles
 1401              	.LVL119:
1048:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 1402              		.loc 1 1048 0
 1403 0094 3A68     		ldr	r2, [r7]
 1404 0096 AA43     		bics	r2, r5
1049:Generated_Source\PSoC4/CyLib.c ****             }
 1405              		.loc 1 1049 0
 1406 0098 2300     		movs	r3, r4
 1407 009a 183B     		subs	r3, r3, #24
 1408 009c 9B08     		lsrs	r3, r3, #2
 1409 009e 2C00     		movs	r4, r5
 1410              	.LVL120:
 1411 00a0 1C40     		ands	r4, r3
1048:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 1412              		.loc 1 1048 0
 1413 00a2 1443     		orrs	r4, r2
 1414 00a4 3C60     		str	r4, [r7]
 1415              	.L91:
1053:Generated_Source\PSoC4/CyLib.c ****                 {
 1416              		.loc 1 1053 0
 1417 00a6 012E     		cmp	r6, #1
 1418 00a8 01D1     		bne	.L92
1055:Generated_Source\PSoC4/CyLib.c ****                 }
 1419              		.loc 1 1055 0
 1420 00aa FFF7FEFF 		bl	CySysClkImoEnableWcoLock
 1421              	.LVL121:
 1422              	.L92:
1067:Generated_Source\PSoC4/CyLib.c ****         }
 1423              		.loc 1 1067 0
 1424 00ae 0198     		ldr	r0, [sp, #4]
 1425 00b0 FFF7FEFF 		bl	CyExitCriticalSection
 1426              	.LVL122:
 1427 00b4 02E0     		b	.L87
 1428              	.LVL123:
 1429              	.L89:
1072:Generated_Source\PSoC4/CyLib.c ****         }
 1430              		.loc 1 1072 0 discriminator 1
 1431 00b6 0020     		movs	r0, #0
 1432              	.LVL124:
 1433 00b8 FFF7FEFF 		bl	CyHalt
 1434              	.LVL125:
 1435              	.L87:
1074:Generated_Source\PSoC4/CyLib.c **** 
 1436              		.loc 1 1074 0
 1437 00bc 03B0     		add	sp, sp, #12
 1438              		@ sp needed
 1439 00be F0BD     		pop	{r4, r5, r6, r7, pc}
 1440              	.L96:
 1441              		.align	2
 1442              	.L95:
 1443 00c0 080F0340 		.word	1073942280
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 82


 1444 00c4 CDF1FF0F 		.word	268431821
 1445 00c8 0C0F0340 		.word	1073942284
 1446 00cc 100F0340 		.word	1073942288
 1447 00d0 180F0340 		.word	1073942296
 1448 00d4 B4F1FF0F 		.word	268431796
 1449              		.cfi_endproc
 1450              	.LFE10:
 1451              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 1452              		.section	.text.CyDelayUs,"ax",%progbits
 1453              		.align	2
 1454              		.global	CyDelayUs
 1455              		.code	16
 1456              		.thumb_func
 1457              		.type	CyDelayUs, %function
 1458              	CyDelayUs:
 1459              	.LFB29:
3062:Generated_Source\PSoC4/CyLib.c **** 
3063:Generated_Source\PSoC4/CyLib.c **** 
3064:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3065:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
3066:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3067:Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
3068:Generated_Source\PSoC4/CyLib.c **** *
3069:Generated_Source\PSoC4/CyLib.c **** *  \param microseconds: number of microseconds to delay.
3070:Generated_Source\PSoC4/CyLib.c **** *
3071:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3072:Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
3073:Generated_Source\PSoC4/CyLib.c **** {
 1460              		.loc 1 3073 0
 1461              		.cfi_startproc
 1462              		@ args = 0, pretend = 0, frame = 0
 1463              		@ frame_needed = 0, uses_anonymous_args = 0
 1464              	.LVL126:
 1465 0000 10B5     		push	{r4, lr}
 1466              		.cfi_def_cfa_offset 8
 1467              		.cfi_offset 4, -8
 1468              		.cfi_offset 14, -4
3074:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 1469              		.loc 1 3074 0
 1470 0002 034B     		ldr	r3, .L98
 1471 0004 1B7B     		ldrb	r3, [r3, #12]
 1472 0006 5843     		muls	r0, r3
 1473              	.LVL127:
 1474 0008 FFF7FEFF 		bl	CyDelayCycles
 1475              	.LVL128:
3075:Generated_Source\PSoC4/CyLib.c **** }
 1476              		.loc 1 3075 0
 1477              		@ sp needed
 1478 000c 10BD     		pop	{r4, pc}
 1479              	.L99:
 1480 000e C046     		.align	2
 1481              	.L98:
 1482 0010 00000000 		.word	.LANCHOR0
 1483              		.cfi_endproc
 1484              	.LFE29:
 1485              		.size	CyDelayUs, .-CyDelayUs
 1486              		.global	__aeabi_uidiv
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 83


 1487              		.section	.text.CyDelayFreq,"ax",%progbits
 1488              		.align	2
 1489              		.global	CyDelayFreq
 1490              		.code	16
 1491              		.thumb_func
 1492              		.type	CyDelayFreq, %function
 1493              	CyDelayFreq:
 1494              	.LFB30:
3076:Generated_Source\PSoC4/CyLib.c **** 
3077:Generated_Source\PSoC4/CyLib.c **** 
3078:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3079:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
3080:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3081:Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
3082:Generated_Source\PSoC4/CyLib.c **** *
3083:Generated_Source\PSoC4/CyLib.c **** *  \param freq: Frequency of bus clock in Hertz.
3084:Generated_Source\PSoC4/CyLib.c **** *
3085:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3086:Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
3087:Generated_Source\PSoC4/CyLib.c **** {
 1495              		.loc 1 3087 0
 1496              		.cfi_startproc
 1497              		@ args = 0, pretend = 0, frame = 0
 1498              		@ frame_needed = 0, uses_anonymous_args = 0
 1499              	.LVL129:
 1500 0000 70B5     		push	{r4, r5, r6, lr}
 1501              		.cfi_def_cfa_offset 16
 1502              		.cfi_offset 4, -16
 1503              		.cfi_offset 5, -12
 1504              		.cfi_offset 6, -8
 1505              		.cfi_offset 14, -4
3088:Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 1506              		.loc 1 3088 0
 1507 0002 0028     		cmp	r0, #0
 1508 0004 02D0     		beq	.L101
3089:Generated_Source\PSoC4/CyLib.c ****     {
3090:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
 1509              		.loc 1 3090 0
 1510 0006 0C4B     		ldr	r3, .L103
 1511 0008 1861     		str	r0, [r3, #16]
 1512 000a 02E0     		b	.L102
 1513              	.L101:
3091:Generated_Source\PSoC4/CyLib.c ****     }
3092:Generated_Source\PSoC4/CyLib.c ****     else
3093:Generated_Source\PSoC4/CyLib.c ****     {
3094:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
 1514              		.loc 1 3094 0
 1515 000c 0B4A     		ldr	r2, .L103+4
 1516 000e 0A4B     		ldr	r3, .L103
 1517 0010 1A61     		str	r2, [r3, #16]
 1518              	.L102:
3095:Generated_Source\PSoC4/CyLib.c ****     }
3096:Generated_Source\PSoC4/CyLib.c **** 
3097:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
 1519              		.loc 1 3097 0
 1520 0012 094C     		ldr	r4, .L103
 1521 0014 2569     		ldr	r5, [r4, #16]
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 84


 1522 0016 0A4B     		ldr	r3, .L103+8
 1523 0018 E818     		adds	r0, r5, r3
 1524              	.LVL130:
 1525 001a 0A49     		ldr	r1, .L103+12
 1526 001c FFF7FEFF 		bl	__aeabi_uidiv
 1527              	.LVL131:
 1528 0020 2073     		strb	r0, [r4, #12]
3098:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1529              		.loc 1 3098 0
 1530 0022 094B     		ldr	r3, .L103+16
 1531 0024 E818     		adds	r0, r5, r3
 1532 0026 FA21     		movs	r1, #250
 1533 0028 8900     		lsls	r1, r1, #2
 1534 002a FFF7FEFF 		bl	__aeabi_uidiv
 1535              	.LVL132:
 1536 002e A060     		str	r0, [r4, #8]
3099:Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 1537              		.loc 1 3099 0
 1538 0030 C003     		lsls	r0, r0, #15
 1539 0032 6060     		str	r0, [r4, #4]
3100:Generated_Source\PSoC4/CyLib.c **** }
 1540              		.loc 1 3100 0
 1541              		@ sp needed
 1542 0034 70BD     		pop	{r4, r5, r6, pc}
 1543              	.L104:
 1544 0036 C046     		.align	2
 1545              	.L103:
 1546 0038 00000000 		.word	.LANCHOR0
 1547 003c 00366E01 		.word	24000000
 1548 0040 3F420F00 		.word	999999
 1549 0044 40420F00 		.word	1000000
 1550 0048 E7030000 		.word	999
 1551              		.cfi_endproc
 1552              	.LFE30:
 1553              		.size	CyDelayFreq, .-CyDelayFreq
 1554              		.section	.text.CySysTickStop,"ax",%progbits
 1555              		.align	2
 1556              		.global	CySysTickStop
 1557              		.code	16
 1558              		.thumb_func
 1559              		.type	CySysTickStop, %function
 1560              	CySysTickStop:
 1561              	.LFB34:
3101:Generated_Source\PSoC4/CyLib.c **** 
3102:Generated_Source\PSoC4/CyLib.c **** 
3103:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3104:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTick_Start
3105:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3106:Generated_Source\PSoC4/CyLib.c **** *
3107:Generated_Source\PSoC4/CyLib.c **** *  Starts the system timer (SysTick): configures SysTick to generate interrupt
3108:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms and enables the interrupt.
3109:Generated_Source\PSoC4/CyLib.c **** *
3110:Generated_Source\PSoC4/CyLib.c **** *  There are components (LIN, CapSense Gesture) that relies on the default 
3111:Generated_Source\PSoC4/CyLib.c **** *  interval (1 ms). And that changing the interval will negatively impact 
3112:Generated_Source\PSoC4/CyLib.c **** *  their functionality.
3113:Generated_Source\PSoC4/CyLib.c **** *
3114:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 85


3115:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
3116:Generated_Source\PSoC4/CyLib.c **** *
3117:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3118:Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
3119:Generated_Source\PSoC4/CyLib.c **** {
3120:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
3121:Generated_Source\PSoC4/CyLib.c ****     {
3122:Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
3123:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
3124:Generated_Source\PSoC4/CyLib.c ****     }
3125:Generated_Source\PSoC4/CyLib.c **** 
3126:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
3127:Generated_Source\PSoC4/CyLib.c **** }
3128:Generated_Source\PSoC4/CyLib.c **** 
3129:Generated_Source\PSoC4/CyLib.c **** 
3130:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3131:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
3132:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3133:Generated_Source\PSoC4/CyLib.c **** *
3134:Generated_Source\PSoC4/CyLib.c **** *  Initializes the callback addresses with pointers to NULL, associates the
3135:Generated_Source\PSoC4/CyLib.c **** *  SysTick system vector with the function that is responsible for calling
3136:Generated_Source\PSoC4/CyLib.c **** *  registered callback functions, configures SysTick timer to generate interrupt
3137:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms.
3138:Generated_Source\PSoC4/CyLib.c **** *
3139:Generated_Source\PSoC4/CyLib.c **** *  The 1 ms interrupt interval is configured based on the frequency determined
3140:Generated_Source\PSoC4/CyLib.c **** *  by PSoC Creator at build time. If System clock frequency is changed in
3141:Generated_Source\PSoC4/CyLib.c **** *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
3142:Generated_Source\PSoC4/CyLib.c **** *
3143:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3144:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
3145:Generated_Source\PSoC4/CyLib.c **** *
3146:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3147:Generated_Source\PSoC4/CyLib.c **** void CySysTickInit(void)
3148:Generated_Source\PSoC4/CyLib.c **** {
3149:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
3150:Generated_Source\PSoC4/CyLib.c **** 
3151:Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
3152:Generated_Source\PSoC4/CyLib.c ****     {
3153:Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
3154:Generated_Source\PSoC4/CyLib.c ****     }
3155:Generated_Source\PSoC4/CyLib.c **** 
3156:Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
3157:Generated_Source\PSoC4/CyLib.c **** 
3158:Generated_Source\PSoC4/CyLib.c ****     #if(CY_SYSTICK_LFCLK_SOURCE)
3159:Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
3160:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
3161:Generated_Source\PSoC4/CyLib.c **** 
3162:Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
3163:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
3164:Generated_Source\PSoC4/CyLib.c **** }
3165:Generated_Source\PSoC4/CyLib.c **** 
3166:Generated_Source\PSoC4/CyLib.c **** 
3167:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3168:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
3169:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3170:Generated_Source\PSoC4/CyLib.c **** *
3171:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 86


3172:Generated_Source\PSoC4/CyLib.c **** *
3173:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3174:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
3175:Generated_Source\PSoC4/CyLib.c **** *
3176:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3177:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
3178:Generated_Source\PSoC4/CyLib.c **** {
3179:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
3180:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
3181:Generated_Source\PSoC4/CyLib.c **** }
3182:Generated_Source\PSoC4/CyLib.c **** 
3183:Generated_Source\PSoC4/CyLib.c **** 
3184:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3185:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
3186:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3187:Generated_Source\PSoC4/CyLib.c **** *
3188:Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
3189:Generated_Source\PSoC4/CyLib.c **** *
3190:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3191:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
3192:Generated_Source\PSoC4/CyLib.c **** *
3193:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3194:Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
3195:Generated_Source\PSoC4/CyLib.c **** {
 1562              		.loc 1 3195 0
 1563              		.cfi_startproc
 1564              		@ args = 0, pretend = 0, frame = 0
 1565              		@ frame_needed = 0, uses_anonymous_args = 0
 1566              		@ link register save eliminated.
3196:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 1567              		.loc 1 3196 0
 1568 0000 024A     		ldr	r2, .L106
 1569 0002 1368     		ldr	r3, [r2]
 1570 0004 0121     		movs	r1, #1
 1571 0006 8B43     		bics	r3, r1
 1572 0008 1360     		str	r3, [r2]
3197:Generated_Source\PSoC4/CyLib.c **** }
 1573              		.loc 1 3197 0
 1574              		@ sp needed
 1575 000a 7047     		bx	lr
 1576              	.L107:
 1577              		.align	2
 1578              	.L106:
 1579 000c 10E000E0 		.word	-536813552
 1580              		.cfi_endproc
 1581              	.LFE34:
 1582              		.size	CySysTickStop, .-CySysTickStop
 1583              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
 1584              		.align	2
 1585              		.global	CySysTickEnableInterrupt
 1586              		.code	16
 1587              		.thumb_func
 1588              		.type	CySysTickEnableInterrupt, %function
 1589              	CySysTickEnableInterrupt:
 1590              	.LFB35:
3198:Generated_Source\PSoC4/CyLib.c **** 
3199:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 87


3200:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3201:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
3202:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3203:Generated_Source\PSoC4/CyLib.c **** *
3204:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
3205:Generated_Source\PSoC4/CyLib.c **** *
3206:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3207:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
3208:Generated_Source\PSoC4/CyLib.c **** *
3209:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3210:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
3211:Generated_Source\PSoC4/CyLib.c **** {
 1591              		.loc 1 3211 0
 1592              		.cfi_startproc
 1593              		@ args = 0, pretend = 0, frame = 0
 1594              		@ frame_needed = 0, uses_anonymous_args = 0
 1595              		@ link register save eliminated.
3212:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 1596              		.loc 1 3212 0
 1597 0000 024A     		ldr	r2, .L109
 1598 0002 1168     		ldr	r1, [r2]
 1599 0004 0223     		movs	r3, #2
 1600 0006 0B43     		orrs	r3, r1
 1601 0008 1360     		str	r3, [r2]
3213:Generated_Source\PSoC4/CyLib.c **** }
 1602              		.loc 1 3213 0
 1603              		@ sp needed
 1604 000a 7047     		bx	lr
 1605              	.L110:
 1606              		.align	2
 1607              	.L109:
 1608 000c 10E000E0 		.word	-536813552
 1609              		.cfi_endproc
 1610              	.LFE35:
 1611              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
 1612              		.section	.text.CySysTickEnable,"ax",%progbits
 1613              		.align	2
 1614              		.global	CySysTickEnable
 1615              		.code	16
 1616              		.thumb_func
 1617              		.type	CySysTickEnable, %function
 1618              	CySysTickEnable:
 1619              	.LFB33:
3178:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 1620              		.loc 1 3178 0
 1621              		.cfi_startproc
 1622              		@ args = 0, pretend = 0, frame = 0
 1623              		@ frame_needed = 0, uses_anonymous_args = 0
 1624 0000 10B5     		push	{r4, lr}
 1625              		.cfi_def_cfa_offset 8
 1626              		.cfi_offset 4, -8
 1627              		.cfi_offset 14, -4
3179:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
 1628              		.loc 1 3179 0
 1629 0002 FFF7FEFF 		bl	CySysTickEnableInterrupt
 1630              	.LVL133:
3180:Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 88


 1631              		.loc 1 3180 0
 1632 0006 034A     		ldr	r2, .L112
 1633 0008 1168     		ldr	r1, [r2]
 1634 000a 0123     		movs	r3, #1
 1635 000c 0B43     		orrs	r3, r1
 1636 000e 1360     		str	r3, [r2]
3181:Generated_Source\PSoC4/CyLib.c **** 
 1637              		.loc 1 3181 0
 1638              		@ sp needed
 1639 0010 10BD     		pop	{r4, pc}
 1640              	.L113:
 1641 0012 C046     		.align	2
 1642              	.L112:
 1643 0014 10E000E0 		.word	-536813552
 1644              		.cfi_endproc
 1645              	.LFE33:
 1646              		.size	CySysTickEnable, .-CySysTickEnable
 1647              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
 1648              		.align	2
 1649              		.global	CySysTickDisableInterrupt
 1650              		.code	16
 1651              		.thumb_func
 1652              		.type	CySysTickDisableInterrupt, %function
 1653              	CySysTickDisableInterrupt:
 1654              	.LFB36:
3214:Generated_Source\PSoC4/CyLib.c **** 
3215:Generated_Source\PSoC4/CyLib.c **** 
3216:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3217:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
3218:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3219:Generated_Source\PSoC4/CyLib.c **** *
3220:Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
3221:Generated_Source\PSoC4/CyLib.c **** *
3222:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3223:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
3224:Generated_Source\PSoC4/CyLib.c **** *
3225:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3226:Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
3227:Generated_Source\PSoC4/CyLib.c **** {
 1655              		.loc 1 3227 0
 1656              		.cfi_startproc
 1657              		@ args = 0, pretend = 0, frame = 0
 1658              		@ frame_needed = 0, uses_anonymous_args = 0
 1659              		@ link register save eliminated.
3228:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 1660              		.loc 1 3228 0
 1661 0000 024A     		ldr	r2, .L115
 1662 0002 1368     		ldr	r3, [r2]
 1663 0004 0221     		movs	r1, #2
 1664 0006 8B43     		bics	r3, r1
 1665 0008 1360     		str	r3, [r2]
3229:Generated_Source\PSoC4/CyLib.c **** }
 1666              		.loc 1 3229 0
 1667              		@ sp needed
 1668 000a 7047     		bx	lr
 1669              	.L116:
 1670              		.align	2
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 89


 1671              	.L115:
 1672 000c 10E000E0 		.word	-536813552
 1673              		.cfi_endproc
 1674              	.LFE36:
 1675              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 1676              		.section	.text.CySysTickSetReload,"ax",%progbits
 1677              		.align	2
 1678              		.global	CySysTickSetReload
 1679              		.code	16
 1680              		.thumb_func
 1681              		.type	CySysTickSetReload, %function
 1682              	CySysTickSetReload:
 1683              	.LFB37:
3230:Generated_Source\PSoC4/CyLib.c **** 
3231:Generated_Source\PSoC4/CyLib.c **** 
3232:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3233:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
3234:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3235:Generated_Source\PSoC4/CyLib.c **** *
3236:Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
3237:Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
3238:Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
3239:Generated_Source\PSoC4/CyLib.c **** *
3240:Generated_Source\PSoC4/CyLib.c **** *  \param value: Valid range [0x0-0x00FFFFFF]. Counter reset value
3241:Generated_Source\PSoC4/CyLib.c **** *
3242:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3243:Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
3244:Generated_Source\PSoC4/CyLib.c **** {
 1684              		.loc 1 3244 0
 1685              		.cfi_startproc
 1686              		@ args = 0, pretend = 0, frame = 0
 1687              		@ frame_needed = 0, uses_anonymous_args = 0
 1688              		@ link register save eliminated.
 1689              	.LVL134:
3245:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 1690              		.loc 1 3245 0
 1691 0000 0002     		lsls	r0, r0, #8
 1692              	.LVL135:
 1693 0002 000A     		lsrs	r0, r0, #8
 1694 0004 014B     		ldr	r3, .L118
 1695 0006 1860     		str	r0, [r3]
3246:Generated_Source\PSoC4/CyLib.c **** }
 1696              		.loc 1 3246 0
 1697              		@ sp needed
 1698 0008 7047     		bx	lr
 1699              	.L119:
 1700 000a C046     		.align	2
 1701              	.L118:
 1702 000c 14E000E0 		.word	-536813548
 1703              		.cfi_endproc
 1704              	.LFE37:
 1705              		.size	CySysTickSetReload, .-CySysTickSetReload
 1706              		.section	.text.CySysTickGetReload,"ax",%progbits
 1707              		.align	2
 1708              		.global	CySysTickGetReload
 1709              		.code	16
 1710              		.thumb_func
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 90


 1711              		.type	CySysTickGetReload, %function
 1712              	CySysTickGetReload:
 1713              	.LFB38:
3247:Generated_Source\PSoC4/CyLib.c **** 
3248:Generated_Source\PSoC4/CyLib.c **** 
3249:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3250:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
3251:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3252:Generated_Source\PSoC4/CyLib.c **** *
3253:Generated_Source\PSoC4/CyLib.c **** *  Gets value the counter is set to on startup and after it reaches zero.
3254:Generated_Source\PSoC4/CyLib.c **** *
3255:Generated_Source\PSoC4/CyLib.c **** * \return
3256:Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
3257:Generated_Source\PSoC4/CyLib.c **** *
3258:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3259:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
3260:Generated_Source\PSoC4/CyLib.c **** {
 1714              		.loc 1 3260 0
 1715              		.cfi_startproc
 1716              		@ args = 0, pretend = 0, frame = 0
 1717              		@ frame_needed = 0, uses_anonymous_args = 0
 1718              		@ link register save eliminated.
3261:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
 1719              		.loc 1 3261 0
 1720 0000 024B     		ldr	r3, .L121
 1721 0002 1868     		ldr	r0, [r3]
 1722 0004 0002     		lsls	r0, r0, #8
 1723 0006 000A     		lsrs	r0, r0, #8
3262:Generated_Source\PSoC4/CyLib.c **** }
 1724              		.loc 1 3262 0
 1725              		@ sp needed
 1726 0008 7047     		bx	lr
 1727              	.L122:
 1728 000a C046     		.align	2
 1729              	.L121:
 1730 000c 14E000E0 		.word	-536813548
 1731              		.cfi_endproc
 1732              	.LFE38:
 1733              		.size	CySysTickGetReload, .-CySysTickGetReload
 1734              		.section	.text.CySysTickGetValue,"ax",%progbits
 1735              		.align	2
 1736              		.global	CySysTickGetValue
 1737              		.code	16
 1738              		.thumb_func
 1739              		.type	CySysTickGetValue, %function
 1740              	CySysTickGetValue:
 1741              	.LFB39:
3263:Generated_Source\PSoC4/CyLib.c **** 
3264:Generated_Source\PSoC4/CyLib.c **** 
3265:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3266:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
3267:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3268:Generated_Source\PSoC4/CyLib.c **** *
3269:Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
3270:Generated_Source\PSoC4/CyLib.c **** *
3271:Generated_Source\PSoC4/CyLib.c **** * \return
3272:Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 91


3273:Generated_Source\PSoC4/CyLib.c **** *
3274:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3275:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
3276:Generated_Source\PSoC4/CyLib.c **** {
 1742              		.loc 1 3276 0
 1743              		.cfi_startproc
 1744              		@ args = 0, pretend = 0, frame = 0
 1745              		@ frame_needed = 0, uses_anonymous_args = 0
 1746              		@ link register save eliminated.
3277:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
 1747              		.loc 1 3277 0
 1748 0000 024B     		ldr	r3, .L124
 1749 0002 1868     		ldr	r0, [r3]
 1750 0004 0002     		lsls	r0, r0, #8
 1751 0006 000A     		lsrs	r0, r0, #8
3278:Generated_Source\PSoC4/CyLib.c **** }
 1752              		.loc 1 3278 0
 1753              		@ sp needed
 1754 0008 7047     		bx	lr
 1755              	.L125:
 1756 000a C046     		.align	2
 1757              	.L124:
 1758 000c 18E000E0 		.word	-536813544
 1759              		.cfi_endproc
 1760              	.LFE39:
 1761              		.size	CySysTickGetValue, .-CySysTickGetValue
 1762              		.section	.text.CySysTickSetClockSource,"ax",%progbits
 1763              		.align	2
 1764              		.global	CySysTickSetClockSource
 1765              		.code	16
 1766              		.thumb_func
 1767              		.type	CySysTickSetClockSource, %function
 1768              	CySysTickSetClockSource:
 1769              	.LFB40:
3279:Generated_Source\PSoC4/CyLib.c **** 
3280:Generated_Source\PSoC4/CyLib.c **** 
3281:Generated_Source\PSoC4/CyLib.c **** #if(CY_SYSTICK_LFCLK_SOURCE)
3282:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3283:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
3284:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3285:Generated_Source\PSoC4/CyLib.c ****     *
3286:Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
3287:Generated_Source\PSoC4/CyLib.c ****     *
3288:Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
3289:Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
3290:Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
3291:Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly longer and vice versa.
3292:Generated_Source\PSoC4/CyLib.c ****     *
3293:Generated_Source\PSoC4/CyLib.c ****     *  The changing of SysTick clock source and\or its frequency will change 
3294:Generated_Source\PSoC4/CyLib.c ****     *  the interrupt interval and that CySysTickSetReload() should be 
3295:Generated_Source\PSoC4/CyLib.c ****     *  called to compensate this change.    
3296:Generated_Source\PSoC4/CyLib.c ****     *
3297:Generated_Source\PSoC4/CyLib.c ****     *  The function is not available on PSoC 4000, PSoC 4100, and PSoC 42000
3298:Generated_Source\PSoC4/CyLib.c ****     *  devices. The SysTick timer clocked by the System clock on these devices.
3299:Generated_Source\PSoC4/CyLib.c ****     *
3300:Generated_Source\PSoC4/CyLib.c ****     *  \param clockSource Clock source for SysTick counter
3301:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 92


3302:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by the CPU clock.
3303:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
3304:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
3305:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
3306:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3307:Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
3308:Generated_Source\PSoC4/CyLib.c ****     {
 1770              		.loc 1 3308 0
 1771              		.cfi_startproc
 1772              		@ args = 0, pretend = 0, frame = 0
 1773              		@ frame_needed = 0, uses_anonymous_args = 0
 1774              		@ link register save eliminated.
 1775              	.LVL136:
3309:Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
 1776              		.loc 1 3309 0
 1777 0000 0128     		cmp	r0, #1
 1778 0002 05D1     		bne	.L127
3310:Generated_Source\PSoC4/CyLib.c ****         {
3311:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
 1779              		.loc 1 3311 0
 1780 0004 054A     		ldr	r2, .L129
 1781 0006 1168     		ldr	r1, [r2]
 1782 0008 0423     		movs	r3, #4
 1783 000a 0B43     		orrs	r3, r1
 1784 000c 1360     		str	r3, [r2]
 1785 000e 04E0     		b	.L126
 1786              	.L127:
3312:Generated_Source\PSoC4/CyLib.c ****         }
3313:Generated_Source\PSoC4/CyLib.c ****         else
3314:Generated_Source\PSoC4/CyLib.c ****         {
3315:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
 1787              		.loc 1 3315 0
 1788 0010 024A     		ldr	r2, .L129
 1789 0012 1368     		ldr	r3, [r2]
 1790 0014 0421     		movs	r1, #4
 1791 0016 8B43     		bics	r3, r1
 1792 0018 1360     		str	r3, [r2]
 1793              	.L126:
3316:Generated_Source\PSoC4/CyLib.c ****         }
3317:Generated_Source\PSoC4/CyLib.c ****     }
 1794              		.loc 1 3317 0
 1795              		@ sp needed
 1796 001a 7047     		bx	lr
 1797              	.L130:
 1798              		.align	2
 1799              	.L129:
 1800 001c 10E000E0 		.word	-536813552
 1801              		.cfi_endproc
 1802              	.LFE40:
 1803              		.size	CySysTickSetClockSource, .-CySysTickSetClockSource
 1804              		.section	.text.CySysTickGetClockSource,"ax",%progbits
 1805              		.align	2
 1806              		.global	CySysTickGetClockSource
 1807              		.code	16
 1808              		.thumb_func
 1809              		.type	CySysTickGetClockSource, %function
 1810              	CySysTickGetClockSource:
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 93


 1811              	.LFB41:
3318:Generated_Source\PSoC4/CyLib.c **** 
3319:Generated_Source\PSoC4/CyLib.c ****     
3320:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3321:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickGetClockSource
3322:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3323:Generated_Source\PSoC4/CyLib.c ****     *
3324:Generated_Source\PSoC4/CyLib.c ****     *  Returns the current clock source of the SysTick counter.
3325:Generated_Source\PSoC4/CyLib.c ****     *
3326:Generated_Source\PSoC4/CyLib.c ****     *  \return 
3327:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
3328:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
3329:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
3330:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
3331:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3332:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysTickGetClockSource(void)
3333:Generated_Source\PSoC4/CyLib.c ****     {
 1812              		.loc 1 3333 0
 1813              		.cfi_startproc
 1814              		@ args = 0, pretend = 0, frame = 0
 1815              		@ frame_needed = 0, uses_anonymous_args = 0
 1816              		@ link register save eliminated.
3334:Generated_Source\PSoC4/CyLib.c ****         return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_CLK_SOURCE_SHIFT) & CY_SYS_SYST_CSR_CLK_SRC
 1817              		.loc 1 3334 0
 1818 0000 024B     		ldr	r3, .L132
 1819 0002 1868     		ldr	r0, [r3]
 1820 0004 8008     		lsrs	r0, r0, #2
 1821 0006 0123     		movs	r3, #1
 1822 0008 1840     		ands	r0, r3
3335:Generated_Source\PSoC4/CyLib.c ****     }
 1823              		.loc 1 3335 0
 1824              		@ sp needed
 1825 000a 7047     		bx	lr
 1826              	.L133:
 1827              		.align	2
 1828              	.L132:
 1829 000c 10E000E0 		.word	-536813552
 1830              		.cfi_endproc
 1831              	.LFE41:
 1832              		.size	CySysTickGetClockSource, .-CySysTickGetClockSource
 1833              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 1834              		.align	2
 1835              		.global	CySysTickGetCountFlag
 1836              		.code	16
 1837              		.thumb_func
 1838              		.type	CySysTickGetCountFlag, %function
 1839              	CySysTickGetCountFlag:
 1840              	.LFB42:
3336:Generated_Source\PSoC4/CyLib.c ****     
3337:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
3338:Generated_Source\PSoC4/CyLib.c **** 
3339:Generated_Source\PSoC4/CyLib.c **** 
3340:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3341:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
3342:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3343:Generated_Source\PSoC4/CyLib.c **** *
3344:Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 94


3345:Generated_Source\PSoC4/CyLib.c **** *  The flag cleared on read.
3346:Generated_Source\PSoC4/CyLib.c **** *
3347:Generated_Source\PSoC4/CyLib.c **** * \return
3348:Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
3349:Generated_Source\PSoC4/CyLib.c **** *
3350:Generated_Source\PSoC4/CyLib.c **** *
3351:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3352:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
3353:Generated_Source\PSoC4/CyLib.c **** *
3354:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3355:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
3356:Generated_Source\PSoC4/CyLib.c **** {
 1841              		.loc 1 3356 0
 1842              		.cfi_startproc
 1843              		@ args = 0, pretend = 0, frame = 0
 1844              		@ frame_needed = 0, uses_anonymous_args = 0
 1845              		@ link register save eliminated.
3357:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 1846              		.loc 1 3357 0
 1847 0000 024B     		ldr	r3, .L135
 1848 0002 1868     		ldr	r0, [r3]
 1849 0004 000C     		lsrs	r0, r0, #16
 1850 0006 0123     		movs	r3, #1
 1851 0008 1840     		ands	r0, r3
3358:Generated_Source\PSoC4/CyLib.c **** }
 1852              		.loc 1 3358 0
 1853              		@ sp needed
 1854 000a 7047     		bx	lr
 1855              	.L136:
 1856              		.align	2
 1857              	.L135:
 1858 000c 10E000E0 		.word	-536813552
 1859              		.cfi_endproc
 1860              	.LFE42:
 1861              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 1862              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
 1863              		.align	2
 1864              		.code	16
 1865              		.thumb_func
 1866              		.type	CySysTickServiceCallbacks, %function
 1867              	CySysTickServiceCallbacks:
 1868              	.LFB46:
3359:Generated_Source\PSoC4/CyLib.c **** 
3360:Generated_Source\PSoC4/CyLib.c **** 
3361:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3362:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
3363:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3364:Generated_Source\PSoC4/CyLib.c **** *
3365:Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
3366:Generated_Source\PSoC4/CyLib.c **** *
3367:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3368:Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
3369:Generated_Source\PSoC4/CyLib.c **** {
3370:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
3371:Generated_Source\PSoC4/CyLib.c **** }
3372:Generated_Source\PSoC4/CyLib.c **** 
3373:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 95


3374:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3375:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
3376:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3377:Generated_Source\PSoC4/CyLib.c **** *
3378:Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
3379:Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
3380:Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
3381:Generated_Source\PSoC4/CyLib.c **** *
3382:Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
3383:Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
3384:Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
3385:Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
3386:Generated_Source\PSoC4/CyLib.c **** *  functions.
3387:Generated_Source\PSoC4/CyLib.c **** *
3388:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the callback function addresses to be set. The valid
3389:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
3390:Generated_Source\PSoC4/CyLib.c **** *
3391:Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
3392:Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
3393:Generated_Source\PSoC4/CyLib.c **** *                                specified number.
3394:Generated_Source\PSoC4/CyLib.c **** *
3395:Generated_Source\PSoC4/CyLib.c **** * \return
3396:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
3397:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
3398:Generated_Source\PSoC4/CyLib.c **** *
3399:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3400:Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
3401:Generated_Source\PSoC4/CyLib.c **** *
3402:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3403:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
3404:Generated_Source\PSoC4/CyLib.c **** {
3405:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
3406:Generated_Source\PSoC4/CyLib.c **** 
3407:Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
3408:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
3409:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
3410:Generated_Source\PSoC4/CyLib.c **** }
3411:Generated_Source\PSoC4/CyLib.c **** 
3412:Generated_Source\PSoC4/CyLib.c **** 
3413:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3414:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
3415:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3416:Generated_Source\PSoC4/CyLib.c **** *
3417:Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
3418:Generated_Source\PSoC4/CyLib.c **** *
3419:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of callback function address to get. The valid
3420:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
3421:Generated_Source\PSoC4/CyLib.c **** *
3422:Generated_Source\PSoC4/CyLib.c **** * \return
3423:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
3424:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
3425:Generated_Source\PSoC4/CyLib.c **** *
3426:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3427:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
3428:Generated_Source\PSoC4/CyLib.c **** {
3429:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
3430:Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 96


3431:Generated_Source\PSoC4/CyLib.c **** 
3432:Generated_Source\PSoC4/CyLib.c **** 
3433:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3434:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
3435:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3436:Generated_Source\PSoC4/CyLib.c **** *
3437:Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
3438:Generated_Source\PSoC4/CyLib.c **** *
3439:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3440:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
3441:Generated_Source\PSoC4/CyLib.c **** {
 1869              		.loc 1 3441 0
 1870              		.cfi_startproc
 1871              		@ args = 0, pretend = 0, frame = 0
 1872              		@ frame_needed = 0, uses_anonymous_args = 0
 1873 0000 10B5     		push	{r4, lr}
 1874              		.cfi_def_cfa_offset 8
 1875              		.cfi_offset 4, -8
 1876              		.cfi_offset 14, -4
3442:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
3443:Generated_Source\PSoC4/CyLib.c **** 
3444:Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
3445:Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
 1877              		.loc 1 3445 0
 1878 0002 FFF7FEFF 		bl	CySysTickGetCountFlag
 1879              	.LVL137:
 1880 0006 0128     		cmp	r0, #1
 1881 0008 0BD1     		bne	.L137
 1882 000a 07E0     		b	.L142
 1883              	.LVL138:
 1884              	.L141:
3446:Generated_Source\PSoC4/CyLib.c ****     {
3447:Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
3448:Generated_Source\PSoC4/CyLib.c ****         {
3449:Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
 1885              		.loc 1 3449 0
 1886 000c A300     		lsls	r3, r4, #2
 1887 000e 054A     		ldr	r2, .L143
 1888 0010 9B58     		ldr	r3, [r3, r2]
 1889 0012 002B     		cmp	r3, #0
 1890 0014 00D0     		beq	.L140
3450:Generated_Source\PSoC4/CyLib.c ****             {
3451:Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
 1891              		.loc 1 3451 0
 1892 0016 9847     		blx	r3
 1893              	.LVL139:
 1894              	.L140:
3447:Generated_Source\PSoC4/CyLib.c ****         {
 1895              		.loc 1 3447 0 discriminator 2
 1896 0018 0134     		adds	r4, r4, #1
 1897              	.LVL140:
 1898 001a 00E0     		b	.L138
 1899              	.LVL141:
 1900              	.L142:
 1901 001c 0024     		movs	r4, #0
 1902              	.L138:
 1903              	.LVL142:
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 97


3447:Generated_Source\PSoC4/CyLib.c ****         {
 1904              		.loc 1 3447 0 is_stmt 0 discriminator 1
 1905 001e 042C     		cmp	r4, #4
 1906 0020 F4D9     		bls	.L141
 1907              	.LVL143:
 1908              	.L137:
3452:Generated_Source\PSoC4/CyLib.c ****             }
3453:Generated_Source\PSoC4/CyLib.c ****         }
3454:Generated_Source\PSoC4/CyLib.c ****     }
3455:Generated_Source\PSoC4/CyLib.c **** }
 1909              		.loc 1 3455 0 is_stmt 1
 1910              		@ sp needed
 1911 0022 10BD     		pop	{r4, pc}
 1912              	.L144:
 1913              		.align	2
 1914              	.L143:
 1915 0024 00000000 		.word	.LANCHOR1
 1916              		.cfi_endproc
 1917              	.LFE46:
 1918              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
 1919              		.section	.text.CySysTickClear,"ax",%progbits
 1920              		.align	2
 1921              		.global	CySysTickClear
 1922              		.code	16
 1923              		.thumb_func
 1924              		.type	CySysTickClear, %function
 1925              	CySysTickClear:
 1926              	.LFB43:
3369:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 1927              		.loc 1 3369 0
 1928              		.cfi_startproc
 1929              		@ args = 0, pretend = 0, frame = 0
 1930              		@ frame_needed = 0, uses_anonymous_args = 0
 1931              		@ link register save eliminated.
3370:Generated_Source\PSoC4/CyLib.c **** }
 1932              		.loc 1 3370 0
 1933 0000 0022     		movs	r2, #0
 1934 0002 014B     		ldr	r3, .L146
 1935 0004 1A60     		str	r2, [r3]
3371:Generated_Source\PSoC4/CyLib.c **** 
 1936              		.loc 1 3371 0
 1937              		@ sp needed
 1938 0006 7047     		bx	lr
 1939              	.L147:
 1940              		.align	2
 1941              	.L146:
 1942 0008 18E000E0 		.word	-536813544
 1943              		.cfi_endproc
 1944              	.LFE43:
 1945              		.size	CySysTickClear, .-CySysTickClear
 1946              		.section	.text.CySysTickInit,"ax",%progbits
 1947              		.align	2
 1948              		.global	CySysTickInit
 1949              		.code	16
 1950              		.thumb_func
 1951              		.type	CySysTickInit, %function
 1952              	CySysTickInit:
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 98


 1953              	.LFB32:
3148:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
 1954              		.loc 1 3148 0
 1955              		.cfi_startproc
 1956              		@ args = 0, pretend = 0, frame = 0
 1957              		@ frame_needed = 0, uses_anonymous_args = 0
 1958 0000 10B5     		push	{r4, lr}
 1959              		.cfi_def_cfa_offset 8
 1960              		.cfi_offset 4, -8
 1961              		.cfi_offset 14, -4
 1962              	.LVL144:
3151:Generated_Source\PSoC4/CyLib.c ****     {
 1963              		.loc 1 3151 0
 1964 0002 0023     		movs	r3, #0
 1965 0004 04E0     		b	.L149
 1966              	.LVL145:
 1967              	.L150:
3153:Generated_Source\PSoC4/CyLib.c ****     }
 1968              		.loc 1 3153 0 discriminator 3
 1969 0006 9900     		lsls	r1, r3, #2
 1970 0008 0020     		movs	r0, #0
 1971 000a 0B4A     		ldr	r2, .L151
 1972 000c 8850     		str	r0, [r1, r2]
3151:Generated_Source\PSoC4/CyLib.c ****     {
 1973              		.loc 1 3151 0 discriminator 3
 1974 000e 0133     		adds	r3, r3, #1
 1975              	.LVL146:
 1976              	.L149:
3151:Generated_Source\PSoC4/CyLib.c ****     {
 1977              		.loc 1 3151 0 is_stmt 0 discriminator 1
 1978 0010 042B     		cmp	r3, #4
 1979 0012 F8D9     		bls	.L150
3156:Generated_Source\PSoC4/CyLib.c **** 
 1980              		.loc 1 3156 0 is_stmt 1
 1981 0014 0949     		ldr	r1, .L151+4
 1982 0016 0F20     		movs	r0, #15
 1983 0018 FFF7FEFF 		bl	CyIntSetSysVector
 1984              	.LVL147:
3159:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
 1985              		.loc 1 3159 0
 1986 001c 0120     		movs	r0, #1
 1987 001e FFF7FEFF 		bl	CySysTickSetClockSource
 1988              	.LVL148:
3162:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 1989              		.loc 1 3162 0
 1990 0022 074B     		ldr	r3, .L151+8
 1991 0024 1869     		ldr	r0, [r3, #16]
 1992 0026 FA21     		movs	r1, #250
 1993 0028 8900     		lsls	r1, r1, #2
 1994 002a FFF7FEFF 		bl	__aeabi_uidiv
 1995              	.LVL149:
 1996 002e FFF7FEFF 		bl	CySysTickSetReload
 1997              	.LVL150:
3163:Generated_Source\PSoC4/CyLib.c **** }
 1998              		.loc 1 3163 0
 1999 0032 FFF7FEFF 		bl	CySysTickClear
 2000              	.LVL151:
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 99


3164:Generated_Source\PSoC4/CyLib.c **** 
 2001              		.loc 1 3164 0
 2002              		@ sp needed
 2003 0036 10BD     		pop	{r4, pc}
 2004              	.L152:
 2005              		.align	2
 2006              	.L151:
 2007 0038 00000000 		.word	.LANCHOR1
 2008 003c 00000000 		.word	CySysTickServiceCallbacks
 2009 0040 00000000 		.word	.LANCHOR0
 2010              		.cfi_endproc
 2011              	.LFE32:
 2012              		.size	CySysTickInit, .-CySysTickInit
 2013              		.section	.text.CySysTickStart,"ax",%progbits
 2014              		.align	2
 2015              		.global	CySysTickStart
 2016              		.code	16
 2017              		.thumb_func
 2018              		.type	CySysTickStart, %function
 2019              	CySysTickStart:
 2020              	.LFB31:
3119:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
 2021              		.loc 1 3119 0
 2022              		.cfi_startproc
 2023              		@ args = 0, pretend = 0, frame = 0
 2024              		@ frame_needed = 0, uses_anonymous_args = 0
 2025 0000 10B5     		push	{r4, lr}
 2026              		.cfi_def_cfa_offset 8
 2027              		.cfi_offset 4, -8
 2028              		.cfi_offset 14, -4
3120:Generated_Source\PSoC4/CyLib.c ****     {
 2029              		.loc 1 3120 0
 2030 0002 064B     		ldr	r3, .L155
 2031 0004 5B69     		ldr	r3, [r3, #20]
 2032 0006 002B     		cmp	r3, #0
 2033 0008 04D1     		bne	.L154
3122:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
 2034              		.loc 1 3122 0
 2035 000a FFF7FEFF 		bl	CySysTickInit
 2036              	.LVL152:
3123:Generated_Source\PSoC4/CyLib.c ****     }
 2037              		.loc 1 3123 0
 2038 000e 0122     		movs	r2, #1
 2039 0010 024B     		ldr	r3, .L155
 2040 0012 5A61     		str	r2, [r3, #20]
 2041              	.L154:
3126:Generated_Source\PSoC4/CyLib.c **** }
 2042              		.loc 1 3126 0
 2043 0014 FFF7FEFF 		bl	CySysTickEnable
 2044              	.LVL153:
3127:Generated_Source\PSoC4/CyLib.c **** 
 2045              		.loc 1 3127 0
 2046              		@ sp needed
 2047 0018 10BD     		pop	{r4, pc}
 2048              	.L156:
 2049 001a C046     		.align	2
 2050              	.L155:
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 100


 2051 001c 00000000 		.word	.LANCHOR1
 2052              		.cfi_endproc
 2053              	.LFE31:
 2054              		.size	CySysTickStart, .-CySysTickStart
 2055              		.section	.text.CySysTickSetCallback,"ax",%progbits
 2056              		.align	2
 2057              		.global	CySysTickSetCallback
 2058              		.code	16
 2059              		.thumb_func
 2060              		.type	CySysTickSetCallback, %function
 2061              	CySysTickSetCallback:
 2062              	.LFB44:
3404:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
 2063              		.loc 1 3404 0
 2064              		.cfi_startproc
 2065              		@ args = 0, pretend = 0, frame = 0
 2066              		@ frame_needed = 0, uses_anonymous_args = 0
 2067              		@ link register save eliminated.
 2068              	.LVL154:
3407:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 2069              		.loc 1 3407 0
 2070 0000 024A     		ldr	r2, .L158
 2071 0002 8300     		lsls	r3, r0, #2
 2072 0004 9858     		ldr	r0, [r3, r2]
 2073              	.LVL155:
3408:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
 2074              		.loc 1 3408 0
 2075 0006 9950     		str	r1, [r3, r2]
3410:Generated_Source\PSoC4/CyLib.c **** 
 2076              		.loc 1 3410 0
 2077              		@ sp needed
 2078 0008 7047     		bx	lr
 2079              	.L159:
 2080 000a C046     		.align	2
 2081              	.L158:
 2082 000c 00000000 		.word	.LANCHOR1
 2083              		.cfi_endproc
 2084              	.LFE44:
 2085              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 2086              		.section	.text.CySysTickGetCallback,"ax",%progbits
 2087              		.align	2
 2088              		.global	CySysTickGetCallback
 2089              		.code	16
 2090              		.thumb_func
 2091              		.type	CySysTickGetCallback, %function
 2092              	CySysTickGetCallback:
 2093              	.LFB45:
3428:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 2094              		.loc 1 3428 0
 2095              		.cfi_startproc
 2096              		@ args = 0, pretend = 0, frame = 0
 2097              		@ frame_needed = 0, uses_anonymous_args = 0
 2098              		@ link register save eliminated.
 2099              	.LVL156:
3429:Generated_Source\PSoC4/CyLib.c **** }
 2100              		.loc 1 3429 0
 2101 0000 8000     		lsls	r0, r0, #2
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 101


 2102              	.LVL157:
 2103 0002 014B     		ldr	r3, .L161
 2104 0004 C058     		ldr	r0, [r0, r3]
3430:Generated_Source\PSoC4/CyLib.c **** 
 2105              		.loc 1 3430 0
 2106              		@ sp needed
 2107 0006 7047     		bx	lr
 2108              	.L162:
 2109              		.align	2
 2110              	.L161:
 2111 0008 00000000 		.word	.LANCHOR1
 2112              		.cfi_endproc
 2113              	.LFE45:
 2114              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 2115              		.section	.text.CyGetUniqueId,"ax",%progbits
 2116              		.align	2
 2117              		.global	CyGetUniqueId
 2118              		.code	16
 2119              		.thumb_func
 2120              		.type	CyGetUniqueId, %function
 2121              	CyGetUniqueId:
 2122              	.LFB47:
3456:Generated_Source\PSoC4/CyLib.c **** 
3457:Generated_Source\PSoC4/CyLib.c **** 
3458:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3459:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
3460:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3461:Generated_Source\PSoC4/CyLib.c **** *
3462:Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
3463:Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
3464:Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
3465:Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
3466:Generated_Source\PSoC4/CyLib.c **** *
3467:Generated_Source\PSoC4/CyLib.c **** *  \param uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
3468:Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
3469:Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
3470:Generated_Source\PSoC4/CyLib.c **** *
3471:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3472:Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
3473:Generated_Source\PSoC4/CyLib.c **** {
 2123              		.loc 1 3473 0
 2124              		.cfi_startproc
 2125              		@ args = 0, pretend = 0, frame = 0
 2126              		@ frame_needed = 0, uses_anonymous_args = 0
 2127              		@ link register save eliminated.
 2128              	.LVL158:
3474:Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
3475:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 2129              		.loc 1 3475 0
 2130 0000 134B     		ldr	r3, .L164
 2131 0002 1B78     		ldrb	r3, [r3]
 2132 0004 DAB2     		uxtb	r2, r3
 2133 0006 0260     		str	r2, [r0]
3476:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2134              		.loc 1 3476 0
 2135 0008 124B     		ldr	r3, .L164+4
 2136 000a 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 102


 2137 000c 1B02     		lsls	r3, r3, #8
 2138 000e 1343     		orrs	r3, r2
 2139 0010 0360     		str	r3, [r0]
3477:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
 2140              		.loc 1 3477 0
 2141 0012 114A     		ldr	r2, .L164+8
 2142 0014 1278     		ldrb	r2, [r2]
 2143 0016 1204     		lsls	r2, r2, #16
 2144 0018 1343     		orrs	r3, r2
 2145 001a 0360     		str	r3, [r0]
3478:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 2146              		.loc 1 3478 0
 2147 001c 0F4A     		ldr	r2, .L164+12
 2148 001e 1278     		ldrb	r2, [r2]
 2149 0020 1206     		lsls	r2, r2, #24
 2150 0022 1343     		orrs	r3, r2
 2151 0024 0360     		str	r3, [r0]
3479:Generated_Source\PSoC4/CyLib.c **** 
3480:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
 2152              		.loc 1 3480 0
 2153 0026 0E4B     		ldr	r3, .L164+16
 2154 0028 1B78     		ldrb	r3, [r3]
 2155 002a DAB2     		uxtb	r2, r3
 2156 002c 4260     		str	r2, [r0, #4]
3481:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 2157              		.loc 1 3481 0
 2158 002e 0D4B     		ldr	r3, .L164+20
 2159 0030 1B78     		ldrb	r3, [r3]
 2160 0032 1B02     		lsls	r3, r3, #8
 2161 0034 1343     		orrs	r3, r2
 2162 0036 4360     		str	r3, [r0, #4]
3482:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 2163              		.loc 1 3482 0
 2164 0038 0B4A     		ldr	r2, .L164+24
 2165 003a 1278     		ldrb	r2, [r2]
 2166 003c 1204     		lsls	r2, r2, #16
 2167 003e 1343     		orrs	r3, r2
 2168 0040 4360     		str	r3, [r0, #4]
3483:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 2169              		.loc 1 3483 0
 2170 0042 0A4A     		ldr	r2, .L164+28
 2171 0044 1278     		ldrb	r2, [r2]
 2172 0046 1206     		lsls	r2, r2, #24
 2173 0048 1343     		orrs	r3, r2
 2174 004a 4360     		str	r3, [r0, #4]
3484:Generated_Source\PSoC4/CyLib.c **** #else
3485:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
3486:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
3487:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
3488:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
3489:Generated_Source\PSoC4/CyLib.c **** 
3490:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
3491:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
3492:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
3493:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
3494:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
3495:Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 103


 2175              		.loc 1 3495 0
 2176              		@ sp needed
 2177 004c 7047     		bx	lr
 2178              	.L165:
 2179 004e C046     		.align	2
 2180              	.L164:
 2181 0050 78F1FF0F 		.word	268431736
 2182 0054 79F1FF0F 		.word	268431737
 2183 0058 7AF1FF0F 		.word	268431738
 2184 005c 7BF1FF0F 		.word	268431739
 2185 0060 7CF1FF0F 		.word	268431740
 2186 0064 7DF1FF0F 		.word	268431741
 2187 0068 7EF1FF0F 		.word	268431742
 2188 006c 7FF1FF0F 		.word	268431743
 2189              		.cfi_endproc
 2190              	.LFE47:
 2191              		.size	CyGetUniqueId, .-CyGetUniqueId
 2192              		.section	.text.CySysSetRamAccessArbPriority,"ax",%progbits
 2193              		.align	2
 2194              		.global	CySysSetRamAccessArbPriority
 2195              		.code	16
 2196              		.thumb_func
 2197              		.type	CySysSetRamAccessArbPriority, %function
 2198              	CySysSetRamAccessArbPriority:
 2199              	.LFB48:
3496:Generated_Source\PSoC4/CyLib.c **** 
3497:Generated_Source\PSoC4/CyLib.c **** 
3498:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_DMAC_PRESENT)
3499:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3500:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetRamAccessArbPriority
3501:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3502:Generated_Source\PSoC4/CyLib.c ****     *
3503:Generated_Source\PSoC4/CyLib.c ****     *  Sets RAM access priority between CPU and DMA. The RAM_CTL register is
3504:Generated_Source\PSoC4/CyLib.c ****     *  configured to set the priority. Please refer to the device TRM for more
3505:Generated_Source\PSoC4/CyLib.c ****     *  details.
3506:Generated_Source\PSoC4/CyLib.c ****     *
3507:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M / PSoC 4200L / 4100S with 
3508:Generated_Source\PSoC4/CyLib.c ****     *  DMA devices only.
3509:Generated_Source\PSoC4/CyLib.c ****     *
3510:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3511:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3512:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3513:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3514:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3515:Generated_Source\PSoC4/CyLib.c ****     *
3516:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3517:Generated_Source\PSoC4/CyLib.c ****     void CySysSetRamAccessArbPriority(uint32 source)
3518:Generated_Source\PSoC4/CyLib.c ****     {
 2200              		.loc 1 3518 0
 2201              		.cfi_startproc
 2202              		@ args = 0, pretend = 0, frame = 0
 2203              		@ frame_needed = 0, uses_anonymous_args = 0
 2204              		@ link register save eliminated.
 2205              	.LVL159:
3519:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3520:Generated_Source\PSoC4/CyLib.c **** 
3521:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_RAM_CTL_REG & ~CY_SYS_CPUSS_RAM_CTL_ARB_MASK;
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 104


 2206              		.loc 1 3521 0
 2207 0000 0549     		ldr	r1, .L167
 2208 0002 0A68     		ldr	r2, [r1]
 2209 0004 054B     		ldr	r3, .L167+4
 2210 0006 1A40     		ands	r2, r3
 2211              	.LVL160:
3522:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_RAM_CTL_ARB_SHIFT) & CY_SYS_CPUSS_RAM_CTL_ARB_M
 2212              		.loc 1 3522 0
 2213 0008 4004     		lsls	r0, r0, #17
 2214              	.LVL161:
 2215 000a C023     		movs	r3, #192
 2216 000c DB02     		lsls	r3, r3, #11
 2217 000e 1840     		ands	r0, r3
 2218 0010 1043     		orrs	r0, r2
 2219              	.LVL162:
3523:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_RAM_CTL_REG = regTmp;
 2220              		.loc 1 3523 0
 2221 0012 0860     		str	r0, [r1]
3524:Generated_Source\PSoC4/CyLib.c ****     }
 2222              		.loc 1 3524 0
 2223              		@ sp needed
 2224 0014 7047     		bx	lr
 2225              	.L168:
 2226 0016 C046     		.align	2
 2227              	.L167:
 2228 0018 38001040 		.word	1074790456
 2229 001c FFFFF9FF 		.word	-393217
 2230              		.cfi_endproc
 2231              	.LFE48:
 2232              		.size	CySysSetRamAccessArbPriority, .-CySysSetRamAccessArbPriority
 2233              		.section	.text.CySysSetFlashAccessArbPriority,"ax",%progbits
 2234              		.align	2
 2235              		.global	CySysSetFlashAccessArbPriority
 2236              		.code	16
 2237              		.thumb_func
 2238              		.type	CySysSetFlashAccessArbPriority, %function
 2239              	CySysSetFlashAccessArbPriority:
 2240              	.LFB49:
3525:Generated_Source\PSoC4/CyLib.c **** 
3526:Generated_Source\PSoC4/CyLib.c **** 
3527:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3528:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetFlashAccessArbPriority
3529:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3530:Generated_Source\PSoC4/CyLib.c ****     *
3531:Generated_Source\PSoC4/CyLib.c ****     *  Sets flash access priority between CPU and DMA. The FLASH_CTL register is
3532:Generated_Source\PSoC4/CyLib.c ****     *  configured to set the priority. Please refer to the device TRM for more
3533:Generated_Source\PSoC4/CyLib.c ****     *  details.
3534:Generated_Source\PSoC4/CyLib.c ****     *
3535:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M / PSoC 4200L / 4100S with 
3536:Generated_Source\PSoC4/CyLib.c ****     *  DMA devices only.
3537:Generated_Source\PSoC4/CyLib.c ****     *
3538:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3539:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3540:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3541:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3542:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3543:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 105


3544:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3545:Generated_Source\PSoC4/CyLib.c ****     void CySysSetFlashAccessArbPriority(uint32 source)
3546:Generated_Source\PSoC4/CyLib.c ****     {
 2241              		.loc 1 3546 0
 2242              		.cfi_startproc
 2243              		@ args = 0, pretend = 0, frame = 0
 2244              		@ frame_needed = 0, uses_anonymous_args = 0
 2245              		@ link register save eliminated.
 2246              	.LVL163:
3547:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3548:Generated_Source\PSoC4/CyLib.c **** 
3549:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_FLASH_CTL_REG & ~CY_SYS_CPUSS_FLASH_CTL_ARB_MASK;
 2247              		.loc 1 3549 0
 2248 0000 0549     		ldr	r1, .L170
 2249 0002 0A68     		ldr	r2, [r1]
 2250 0004 054B     		ldr	r3, .L170+4
 2251 0006 1A40     		ands	r2, r3
 2252              	.LVL164:
3550:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_FLASH_CTL_ARB_SHIFT) & CY_SYS_CPUSS_FLASH_CTL_A
 2253              		.loc 1 3550 0
 2254 0008 4004     		lsls	r0, r0, #17
 2255              	.LVL165:
 2256 000a C023     		movs	r3, #192
 2257 000c DB02     		lsls	r3, r3, #11
 2258 000e 1840     		ands	r0, r3
 2259 0010 1043     		orrs	r0, r2
 2260              	.LVL166:
3551:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_FLASH_CTL_REG = regTmp;
 2261              		.loc 1 3551 0
 2262 0012 0860     		str	r0, [r1]
3552:Generated_Source\PSoC4/CyLib.c ****     }
 2263              		.loc 1 3552 0
 2264              		@ sp needed
 2265 0014 7047     		bx	lr
 2266              	.L171:
 2267 0016 C046     		.align	2
 2268              	.L170:
 2269 0018 30001040 		.word	1074790448
 2270 001c FFFFF9FF 		.word	-393217
 2271              		.cfi_endproc
 2272              	.LFE49:
 2273              		.size	CySysSetFlashAccessArbPriority, .-CySysSetFlashAccessArbPriority
 2274              		.section	.text.CySysSetDmacAccessArbPriority,"ax",%progbits
 2275              		.align	2
 2276              		.global	CySysSetDmacAccessArbPriority
 2277              		.code	16
 2278              		.thumb_func
 2279              		.type	CySysSetDmacAccessArbPriority, %function
 2280              	CySysSetDmacAccessArbPriority:
 2281              	.LFB50:
3553:Generated_Source\PSoC4/CyLib.c **** 
3554:Generated_Source\PSoC4/CyLib.c **** 
3555:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3556:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetDmacAccessArbPriority
3557:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3558:Generated_Source\PSoC4/CyLib.c ****     *
3559:Generated_Source\PSoC4/CyLib.c ****     *  Sets DMAC slave interface access priority between CPU and DMA. The DMAC_CTL
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 106


3560:Generated_Source\PSoC4/CyLib.c ****     *  register is configured to set the priority. Please refer to the device TRM
3561:Generated_Source\PSoC4/CyLib.c ****     *  for more details.
3562:Generated_Source\PSoC4/CyLib.c ****     *
3563:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M / PSoC 4200L / 4100S with 
3564:Generated_Source\PSoC4/CyLib.c ****     *  DMA devices only.
3565:Generated_Source\PSoC4/CyLib.c ****     *
3566:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3567:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3568:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3569:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3570:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3571:Generated_Source\PSoC4/CyLib.c ****     *
3572:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3573:Generated_Source\PSoC4/CyLib.c ****     void CySysSetDmacAccessArbPriority(uint32 source)
3574:Generated_Source\PSoC4/CyLib.c ****     {
 2282              		.loc 1 3574 0
 2283              		.cfi_startproc
 2284              		@ args = 0, pretend = 0, frame = 0
 2285              		@ frame_needed = 0, uses_anonymous_args = 0
 2286              		@ link register save eliminated.
 2287              	.LVL167:
3575:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3576:Generated_Source\PSoC4/CyLib.c **** 
3577:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_DMAC_CTL_REG & ~CY_SYS_CPUSS_DMAC_CTL_ARB_MASK;
 2288              		.loc 1 3577 0
 2289 0000 0549     		ldr	r1, .L173
 2290 0002 0A68     		ldr	r2, [r1]
 2291 0004 054B     		ldr	r3, .L173+4
 2292 0006 1A40     		ands	r2, r3
 2293              	.LVL168:
3578:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_DMAC_CTL_ARB_SHIFT) & CY_SYS_CPUSS_DMAC_CTL_ARB
 2294              		.loc 1 3578 0
 2295 0008 4004     		lsls	r0, r0, #17
 2296              	.LVL169:
 2297 000a C023     		movs	r3, #192
 2298 000c DB02     		lsls	r3, r3, #11
 2299 000e 1840     		ands	r0, r3
 2300 0010 1043     		orrs	r0, r2
 2301              	.LVL170:
3579:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_DMAC_CTL_REG = regTmp;
 2302              		.loc 1 3579 0
 2303 0012 0860     		str	r0, [r1]
3580:Generated_Source\PSoC4/CyLib.c ****     }
 2304              		.loc 1 3580 0
 2305              		@ sp needed
 2306 0014 7047     		bx	lr
 2307              	.L174:
 2308 0016 C046     		.align	2
 2309              	.L173:
 2310 0018 3C001040 		.word	1074790460
 2311 001c FFFFF9FF 		.word	-393217
 2312              		.cfi_endproc
 2313              	.LFE50:
 2314              		.size	CySysSetDmacAccessArbPriority, .-CySysSetDmacAccessArbPriority
 2315              		.section	.text.CySysSetPeripheralAccessArbPriority,"ax",%progbits
 2316              		.align	2
 2317              		.global	CySysSetPeripheralAccessArbPriority
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 107


 2318              		.code	16
 2319              		.thumb_func
 2320              		.type	CySysSetPeripheralAccessArbPriority, %function
 2321              	CySysSetPeripheralAccessArbPriority:
 2322              	.LFB51:
3581:Generated_Source\PSoC4/CyLib.c **** 
3582:Generated_Source\PSoC4/CyLib.c **** 
3583:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3584:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetPeripheralAccessArbPriority
3585:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3586:Generated_Source\PSoC4/CyLib.c ****     *
3587:Generated_Source\PSoC4/CyLib.c ****     *  Sets slave peripheral interface access priority between CPU and DMA.
3588:Generated_Source\PSoC4/CyLib.c ****     *  The SL_CTL register is configured to set the priority. Please refer to the
3589:Generated_Source\PSoC4/CyLib.c ****     *  device TRM for more details.
3590:Generated_Source\PSoC4/CyLib.c ****     *
3591:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M / PSoC 4200L / 4100S with 
3592:Generated_Source\PSoC4/CyLib.c ****     *  DMA devices only.
3593:Generated_Source\PSoC4/CyLib.c ****     *
3594:Generated_Source\PSoC4/CyLib.c ****     *  \param  interfaceNumber: the slave interface number. Please refer to the
3595:Generated_Source\PSoC4/CyLib.c ****     *  device TRM for more details.
3596:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3597:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3598:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3599:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3600:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3601:Generated_Source\PSoC4/CyLib.c ****     *
3602:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3603:Generated_Source\PSoC4/CyLib.c ****     void CySysSetPeripheralAccessArbPriority(uint32 interfaceNumber, uint32 source)
3604:Generated_Source\PSoC4/CyLib.c ****     {
 2323              		.loc 1 3604 0
 2324              		.cfi_startproc
 2325              		@ args = 0, pretend = 0, frame = 0
 2326              		@ frame_needed = 0, uses_anonymous_args = 0
 2327              	.LVL171:
 2328 0000 10B5     		push	{r4, lr}
 2329              		.cfi_def_cfa_offset 8
 2330              		.cfi_offset 4, -8
 2331              		.cfi_offset 14, -4
3605:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3606:Generated_Source\PSoC4/CyLib.c **** 
3607:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 0u)
 2332              		.loc 1 3607 0
 2333 0002 0028     		cmp	r0, #0
 2334 0004 0AD1     		bne	.L176
3608:Generated_Source\PSoC4/CyLib.c ****         {
3609:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL0_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
 2335              		.loc 1 3609 0
 2336 0006 0E48     		ldr	r0, .L179
 2337              	.LVL172:
 2338 0008 0268     		ldr	r2, [r0]
 2339 000a 0E4B     		ldr	r3, .L179+4
 2340 000c 1A40     		ands	r2, r3
 2341              	.LVL173:
3610:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 2342              		.loc 1 3610 0
 2343 000e 4904     		lsls	r1, r1, #17
 2344              	.LVL174:
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 108


 2345 0010 C023     		movs	r3, #192
 2346 0012 DB02     		lsls	r3, r3, #11
 2347 0014 1940     		ands	r1, r3
 2348 0016 1143     		orrs	r1, r2
 2349              	.LVL175:
3611:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL0_REG = regTmp;
 2350              		.loc 1 3611 0
 2351 0018 0160     		str	r1, [r0]
 2352 001a 0FE0     		b	.L175
 2353              	.LVL176:
 2354              	.L176:
3612:Generated_Source\PSoC4/CyLib.c ****         } else
3613:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SL_NR >= 2)
3614:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 1u)
 2355              		.loc 1 3614 0
 2356 001c 0128     		cmp	r0, #1
 2357 001e 0AD1     		bne	.L178
3615:Generated_Source\PSoC4/CyLib.c ****         {
3616:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL1_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
 2358              		.loc 1 3616 0
 2359 0020 0948     		ldr	r0, .L179+8
 2360              	.LVL177:
 2361 0022 0268     		ldr	r2, [r0]
 2362 0024 074B     		ldr	r3, .L179+4
 2363 0026 1A40     		ands	r2, r3
 2364              	.LVL178:
3617:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 2365              		.loc 1 3617 0
 2366 0028 4904     		lsls	r1, r1, #17
 2367              	.LVL179:
 2368 002a C023     		movs	r3, #192
 2369 002c DB02     		lsls	r3, r3, #11
 2370 002e 1940     		ands	r1, r3
 2371 0030 1143     		orrs	r1, r2
 2372              	.LVL180:
3618:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL1_REG = regTmp;
 2373              		.loc 1 3618 0
 2374 0032 0160     		str	r1, [r0]
 2375 0034 02E0     		b	.L175
 2376              	.LVL181:
 2377              	.L178:
3619:Generated_Source\PSoC4/CyLib.c ****         } else
3620:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SL_NR >= 1) */
3621:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SL_NR >= 3)
3622:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 2u)
3623:Generated_Source\PSoC4/CyLib.c ****         {
3624:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL2_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
3625:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
3626:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL2_REG = regTmp;
3627:Generated_Source\PSoC4/CyLib.c ****         } else
3628:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SL_NR >= 1) */
3629:Generated_Source\PSoC4/CyLib.c ****         {
3630:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if interface is invalid */
3631:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 2378              		.loc 1 3631 0 discriminator 1
 2379 0036 0020     		movs	r0, #0
 2380              	.LVL182:
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 109


 2381 0038 FFF7FEFF 		bl	CyHalt
 2382              	.LVL183:
 2383              	.L175:
3632:Generated_Source\PSoC4/CyLib.c ****         }
3633:Generated_Source\PSoC4/CyLib.c ****     }
 2384              		.loc 1 3633 0
 2385              		@ sp needed
 2386 003c 10BD     		pop	{r4, pc}
 2387              	.L180:
 2388 003e C046     		.align	2
 2389              	.L179:
 2390 0040 00011040 		.word	1074790656
 2391 0044 FFFFF9FF 		.word	-393217
 2392 0048 04011040 		.word	1074790660
 2393              		.cfi_endproc
 2394              	.LFE51:
 2395              		.size	CySysSetPeripheralAccessArbPriority, .-CySysSetPeripheralAccessArbPriority
 2396              		.section	.text.CySysPrbSetGlobalVrefSource,"ax",%progbits
 2397              		.align	2
 2398              		.global	CySysPrbSetGlobalVrefSource
 2399              		.code	16
 2400              		.thumb_func
 2401              		.type	CySysPrbSetGlobalVrefSource, %function
 2402              	CySysPrbSetGlobalVrefSource:
 2403              	.LFB52:
3634:Generated_Source\PSoC4/CyLib.c **** 
3635:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_DMAC_PRESENT) */
3636:Generated_Source\PSoC4/CyLib.c **** 
3637:Generated_Source\PSoC4/CyLib.c **** 
3638:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_PASS)
3639:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3640:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysPrbSetGlobalVrefSource
3641:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3642:Generated_Source\PSoC4/CyLib.c ****     *
3643:Generated_Source\PSoC4/CyLib.c ****     *  Selects the source of the global voltage reference.
3644:Generated_Source\PSoC4/CyLib.c ****     *
3645:Generated_Source\PSoC4/CyLib.c ****     *  \note The global voltage reference uses one of the available programmable
3646:Generated_Source\PSoC4/CyLib.c ****     *  voltage reference lines.
3647:Generated_Source\PSoC4/CyLib.c ****     *
3648:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4 devices that support the programmable
3649:Generated_Source\PSoC4/CyLib.c ****     *  reference block. Please refer to the device TRM for more details.
3650:Generated_Source\PSoC4/CyLib.c ****     *
3651:Generated_Source\PSoC4/CyLib.c ****     *  This API affects the voltage values available in
3652:Generated_Source\PSoC4/CyLib.c ****     *  \ref CySysPrbSetGlobalVrefVoltage().
3653:Generated_Source\PSoC4/CyLib.c ****     *
3654:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M, PSoC 4200L and PSoC Analog 
3655:Generated_Source\PSoC4/CyLib.c ****     *  Coprocessor devices only.
3656:Generated_Source\PSoC4/CyLib.c ****     *
3657:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3658:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_VREF_SOURCE_BG   Sets bandgap as the source of the global voltage
3659:Generated_Source\PSoC4/CyLib.c ****     *   reference.
3660:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_VREF_SOURCE_VDDA Sets VDDA as the source of the global voltage
3661:Generated_Source\PSoC4/CyLib.c ****     *   reference.
3662:Generated_Source\PSoC4/CyLib.c ****     *
3663:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3664:Generated_Source\PSoC4/CyLib.c ****     #ifdef CyDesignWideVoltageReference_PRB_REF
3665:Generated_Source\PSoC4/CyLib.c ****         void CySysPrbSetGlobalVrefSource(uint32 source)
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 110


3666:Generated_Source\PSoC4/CyLib.c ****         {
 2404              		.loc 1 3666 0
 2405              		.cfi_startproc
 2406              		@ args = 0, pretend = 0, frame = 0
 2407              		@ frame_needed = 0, uses_anonymous_args = 0
 2408              		@ link register save eliminated.
 2409              	.LVL184:
 2410 0000 0300     		movs	r3, r0
3667:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_PASS_PRB_REF, CYFLD_PASS_VREF_SUP_SEL, source);
 2411              		.loc 1 3667 0
 2412 0002 0449     		ldr	r1, .L182
 2413 0004 0A68     		ldr	r2, [r1]
 2414 0006 0220     		movs	r0, #2
 2415              	.LVL185:
 2416 0008 8243     		bics	r2, r0
 2417 000a 5B00     		lsls	r3, r3, #1
 2418              	.LVL186:
 2419 000c 1840     		ands	r0, r3
 2420 000e 1043     		orrs	r0, r2
 2421 0010 0860     		str	r0, [r1]
3668:Generated_Source\PSoC4/CyLib.c ****         }
 2422              		.loc 1 3668 0
 2423              		@ sp needed
 2424 0012 7047     		bx	lr
 2425              	.L183:
 2426              		.align	2
 2427              	.L182:
 2428 0014 04023F40 		.word	1077871108
 2429              		.cfi_endproc
 2430              	.LFE52:
 2431              		.size	CySysPrbSetGlobalVrefSource, .-CySysPrbSetGlobalVrefSource
 2432              		.section	.text.CySysPrbSetBgGain,"ax",%progbits
 2433              		.align	2
 2434              		.global	CySysPrbSetBgGain
 2435              		.code	16
 2436              		.thumb_func
 2437              		.type	CySysPrbSetBgGain, %function
 2438              	CySysPrbSetBgGain:
 2439              	.LFB53:
3669:Generated_Source\PSoC4/CyLib.c ****     #endif
3670:Generated_Source\PSoC4/CyLib.c **** 
3671:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3672:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysPrbSetBgGain
3673:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3674:Generated_Source\PSoC4/CyLib.c ****     *
3675:Generated_Source\PSoC4/CyLib.c ****     * Selects the gain of bandgap reference buffer. Note that this API is effective
3676:Generated_Source\PSoC4/CyLib.c ****     * only when the bandgap is set as the source of global voltage reference.
3677:Generated_Source\PSoC4/CyLib.c ****     *
3678:Generated_Source\PSoC4/CyLib.c ****     * \note This API affects the voltage values available in \ref
3679:Generated_Source\PSoC4/CyLib.c ****     * CySysPrbSetGlobalVrefVoltage() API.
3680:Generated_Source\PSoC4/CyLib.c ****     *
3681:Generated_Source\PSoC4/CyLib.c ****     * This API is applicable for PSoC 4 devices that support the programmable
3682:Generated_Source\PSoC4/CyLib.c ****     * reference block. Please refer to the device TRM for more details.
3683:Generated_Source\PSoC4/CyLib.c ****     *
3684:Generated_Source\PSoC4/CyLib.c ****     * \param gain:
3685:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_VREF_BG_GAINx1  Gain is 1.
3686:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_VREF_BG_GAINx2  Gain is 2.
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 111


3687:Generated_Source\PSoC4/CyLib.c ****     *
3688:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3689:Generated_Source\PSoC4/CyLib.c ****     void CySysPrbSetBgGain(uint32 gain)
3690:Generated_Source\PSoC4/CyLib.c ****     {
 2440              		.loc 1 3690 0
 2441              		.cfi_startproc
 2442              		@ args = 0, pretend = 0, frame = 0
 2443              		@ frame_needed = 0, uses_anonymous_args = 0
 2444              		@ link register save eliminated.
 2445              	.LVL187:
3691:Generated_Source\PSoC4/CyLib.c ****         CY_SET_REG32_FIELD(CYREG_PASS_PRB_CTRL, CYFLD_PASS_VBGR_BUF_GAIN, gain);
 2446              		.loc 1 3691 0
 2447 0000 034A     		ldr	r2, .L185
 2448 0002 1368     		ldr	r3, [r2]
 2449 0004 0321     		movs	r1, #3
 2450 0006 8B43     		bics	r3, r1
 2451 0008 0840     		ands	r0, r1
 2452              	.LVL188:
 2453 000a 1843     		orrs	r0, r3
 2454 000c 1060     		str	r0, [r2]
3692:Generated_Source\PSoC4/CyLib.c ****     }
 2455              		.loc 1 3692 0
 2456              		@ sp needed
 2457 000e 7047     		bx	lr
 2458              	.L186:
 2459              		.align	2
 2460              	.L185:
 2461 0010 00023F40 		.word	1077871104
 2462              		.cfi_endproc
 2463              	.LFE53:
 2464              		.size	CySysPrbSetBgGain, .-CySysPrbSetBgGain
 2465              		.section	.text.CySysPrbSetGlobalVrefVoltage,"ax",%progbits
 2466              		.align	2
 2467              		.global	CySysPrbSetGlobalVrefVoltage
 2468              		.code	16
 2469              		.thumb_func
 2470              		.type	CySysPrbSetGlobalVrefVoltage, %function
 2471              	CySysPrbSetGlobalVrefVoltage:
 2472              	.LFB54:
3693:Generated_Source\PSoC4/CyLib.c **** 
3694:Generated_Source\PSoC4/CyLib.c **** 
3695:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3696:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysPrbSetGlobalVrefVoltage
3697:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3698:Generated_Source\PSoC4/CyLib.c ****     *
3699:Generated_Source\PSoC4/CyLib.c ****     * Selects the value of global voltage reference. Set the source of the global
3700:Generated_Source\PSoC4/CyLib.c ****     * voltage reference and bandgap buffer gain (if applicable) before calling this
3701:Generated_Source\PSoC4/CyLib.c ****     * API.
3702:Generated_Source\PSoC4/CyLib.c ****     *
3703:Generated_Source\PSoC4/CyLib.c ****     * This API is applicable for PSoC 4 devices that support the programmable
3704:Generated_Source\PSoC4/CyLib.c ****     * reference block. Please refer to the device TRM for more details.
3705:Generated_Source\PSoC4/CyLib.c ****     *
3706:Generated_Source\PSoC4/CyLib.c ****     * \param voltageTap The range is from 1 to 16 that corresponds to:
3707:Generated_Source\PSoC4/CyLib.c ****     * Source is bandgap (x1): 0.08 V to 1.20 V in steps of 0.07 V approximately.
3708:Generated_Source\PSoC4/CyLib.c ****     * Source is bandgap (x2): 0.16 V to 2.40 V in steps of 0.14 V approximately.
3709:Generated_Source\PSoC4/CyLib.c ****     * Source is Vdda: 0.21 V to 3.30 in steps of 0.21 V approximately. The Vdda
3710:Generated_Source\PSoC4/CyLib.c ****     * is equal to 3.3 V. Voltage value will change according to value of Vdda.
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 112


3711:Generated_Source\PSoC4/CyLib.c ****     *
3712:Generated_Source\PSoC4/CyLib.c ****     *   voltageTap  | If bandgap (x1), V| If bandgap (x2), V| If Vdda
3713:Generated_Source\PSoC4/CyLib.c ****     *   ------------|-------------------|-------------------|-------------------
3714:Generated_Source\PSoC4/CyLib.c ****     *       1       |       0.08        |       0.16        |       0.21
3715:Generated_Source\PSoC4/CyLib.c ****     *       2       |       0.15        |       0.30        |       0.41
3716:Generated_Source\PSoC4/CyLib.c ****     *       3       |       0.23        |       0.46        |       0.62
3717:Generated_Source\PSoC4/CyLib.c ****     *       4       |       0.30        |       0.60        |       0.83
3718:Generated_Source\PSoC4/CyLib.c ****     *       5       |       0.38        |       0.76        |       1.03
3719:Generated_Source\PSoC4/CyLib.c ****     *       6       |       0.45        |       0.90        |       1.24
3720:Generated_Source\PSoC4/CyLib.c ****     *       7       |       0.53        |       1.06        |       1.44
3721:Generated_Source\PSoC4/CyLib.c ****     *       8       |       0.60        |       1.20        |       1.65
3722:Generated_Source\PSoC4/CyLib.c ****     *       9       |       0.68        |       1.36        |       1.86
3723:Generated_Source\PSoC4/CyLib.c ****     *       10      |       0.75        |       1.50        |       2.06
3724:Generated_Source\PSoC4/CyLib.c ****     *       11      |       0.83        |       1.66        |       2.27
3725:Generated_Source\PSoC4/CyLib.c ****     *       12      |       0.90        |       1.80        |       2.48
3726:Generated_Source\PSoC4/CyLib.c ****     *       13      |       0.98        |       1.96        |       2.68
3727:Generated_Source\PSoC4/CyLib.c ****     *       14      |       1.05        |       2.10        |       2.89
3728:Generated_Source\PSoC4/CyLib.c ****     *       15      |       1.13        |       2.26        |       3.09
3729:Generated_Source\PSoC4/CyLib.c ****     *       16      |       1.20        |       2.40        |       3.30
3730:Generated_Source\PSoC4/CyLib.c ****     *
3731:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3732:Generated_Source\PSoC4/CyLib.c ****     #ifdef CyDesignWideVoltageReference_PRB_REF
3733:Generated_Source\PSoC4/CyLib.c ****         void CySysPrbSetGlobalVrefVoltage(uint32 voltageTap)
3734:Generated_Source\PSoC4/CyLib.c ****         {
 2473              		.loc 1 3734 0
 2474              		.cfi_startproc
 2475              		@ args = 0, pretend = 0, frame = 0
 2476              		@ frame_needed = 0, uses_anonymous_args = 0
 2477              		@ link register save eliminated.
 2478              	.LVL189:
3735:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_PASS_PRB_REF, CYFLD_PASS_VREF_SEL, voltageTap);
 2479              		.loc 1 3735 0
 2480 0000 0449     		ldr	r1, .L188
 2481 0002 0A68     		ldr	r2, [r1]
 2482 0004 F023     		movs	r3, #240
 2483 0006 9A43     		bics	r2, r3
 2484 0008 0301     		lsls	r3, r0, #4
 2485 000a FF20     		movs	r0, #255
 2486              	.LVL190:
 2487 000c 1840     		ands	r0, r3
 2488 000e 1043     		orrs	r0, r2
 2489 0010 0860     		str	r0, [r1]
3736:Generated_Source\PSoC4/CyLib.c ****         }
 2490              		.loc 1 3736 0
 2491              		@ sp needed
 2492 0012 7047     		bx	lr
 2493              	.L189:
 2494              		.align	2
 2495              	.L188:
 2496 0014 04023F40 		.word	1077871108
 2497              		.cfi_endproc
 2498              	.LFE54:
 2499              		.size	CySysPrbSetGlobalVrefVoltage, .-CySysPrbSetGlobalVrefVoltage
 2500              		.section	.text.CySysPrbEnableDeepsleepVddaRef,"ax",%progbits
 2501              		.align	2
 2502              		.global	CySysPrbEnableDeepsleepVddaRef
 2503              		.code	16
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 113


 2504              		.thumb_func
 2505              		.type	CySysPrbEnableDeepsleepVddaRef, %function
 2506              	CySysPrbEnableDeepsleepVddaRef:
 2507              	.LFB55:
3737:Generated_Source\PSoC4/CyLib.c ****     #endif
3738:Generated_Source\PSoC4/CyLib.c **** 
3739:Generated_Source\PSoC4/CyLib.c **** 
3740:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3741:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysPrbEnableDeepsleepVddaRef
3742:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3743:Generated_Source\PSoC4/CyLib.c ****     *
3744:Generated_Source\PSoC4/CyLib.c ****     * Enables the Vdda reference in deep sleep mode. The Vdda reference is by
3745:Generated_Source\PSoC4/CyLib.c ****     * default disabled when entering deep sleep mode.
3746:Generated_Source\PSoC4/CyLib.c ****     *
3747:Generated_Source\PSoC4/CyLib.c ****     * This API is applicable for PSoC 4 devices that support the programmable
3748:Generated_Source\PSoC4/CyLib.c ****     * reference block. Please refer to the device TRM for more details.
3749:Generated_Source\PSoC4/CyLib.c ****     *
3750:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3751:Generated_Source\PSoC4/CyLib.c ****     void CySysPrbEnableDeepsleepVddaRef(void)
3752:Generated_Source\PSoC4/CyLib.c ****     {
 2508              		.loc 1 3752 0
 2509              		.cfi_startproc
 2510              		@ args = 0, pretend = 0, frame = 0
 2511              		@ frame_needed = 0, uses_anonymous_args = 0
 2512              		@ link register save eliminated.
3753:Generated_Source\PSoC4/CyLib.c ****         CY_SET_REG32_FIELD(CYREG_PASS_PRB_CTRL, CYFLD_PASS_DEEPSLEEP_ON, 1u);
 2513              		.loc 1 3753 0
 2514 0000 034A     		ldr	r2, .L191
 2515 0002 1368     		ldr	r3, [r2]
 2516 0004 8021     		movs	r1, #128
 2517 0006 C905     		lsls	r1, r1, #23
 2518 0008 0B43     		orrs	r3, r1
 2519 000a 1360     		str	r3, [r2]
3754:Generated_Source\PSoC4/CyLib.c ****     }
 2520              		.loc 1 3754 0
 2521              		@ sp needed
 2522 000c 7047     		bx	lr
 2523              	.L192:
 2524 000e C046     		.align	2
 2525              	.L191:
 2526 0010 00023F40 		.word	1077871104
 2527              		.cfi_endproc
 2528              	.LFE55:
 2529              		.size	CySysPrbEnableDeepsleepVddaRef, .-CySysPrbEnableDeepsleepVddaRef
 2530              		.section	.text.CySysPrbDisableDeepsleepVddaRef,"ax",%progbits
 2531              		.align	2
 2532              		.global	CySysPrbDisableDeepsleepVddaRef
 2533              		.code	16
 2534              		.thumb_func
 2535              		.type	CySysPrbDisableDeepsleepVddaRef, %function
 2536              	CySysPrbDisableDeepsleepVddaRef:
 2537              	.LFB56:
3755:Generated_Source\PSoC4/CyLib.c **** 
3756:Generated_Source\PSoC4/CyLib.c **** 
3757:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3758:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysPrbDisableDeepsleepVddaRef
3759:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 114


3760:Generated_Source\PSoC4/CyLib.c ****     *
3761:Generated_Source\PSoC4/CyLib.c ****     * Disables the Vdda reference in deep sleep mode. The Vdda reference is by
3762:Generated_Source\PSoC4/CyLib.c ****     * default disabled when entering deep sleep mode.
3763:Generated_Source\PSoC4/CyLib.c ****     *
3764:Generated_Source\PSoC4/CyLib.c ****     * This API is applicable for PSoC 4 devices that support the programmable
3765:Generated_Source\PSoC4/CyLib.c ****     * reference block. Please refer to the device TRM for more details.
3766:Generated_Source\PSoC4/CyLib.c ****     *
3767:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3768:Generated_Source\PSoC4/CyLib.c ****     void CySysPrbDisableDeepsleepVddaRef(void)
3769:Generated_Source\PSoC4/CyLib.c ****     {
 2538              		.loc 1 3769 0
 2539              		.cfi_startproc
 2540              		@ args = 0, pretend = 0, frame = 0
 2541              		@ frame_needed = 0, uses_anonymous_args = 0
 2542              		@ link register save eliminated.
3770:Generated_Source\PSoC4/CyLib.c ****         CY_CLEAR_REG32_FIELD(CYREG_PASS_PRB_CTRL, CYFLD_PASS_DEEPSLEEP_ON);
 2543              		.loc 1 3770 0
 2544 0000 024A     		ldr	r2, .L194
 2545 0002 1168     		ldr	r1, [r2]
 2546 0004 024B     		ldr	r3, .L194+4
 2547 0006 0B40     		ands	r3, r1
 2548 0008 1360     		str	r3, [r2]
3771:Generated_Source\PSoC4/CyLib.c ****     }
 2549              		.loc 1 3771 0
 2550              		@ sp needed
 2551 000a 7047     		bx	lr
 2552              	.L195:
 2553              		.align	2
 2554              	.L194:
 2555 000c 00023F40 		.word	1077871104
 2556 0010 FFFFFFBF 		.word	-1073741825
 2557              		.cfi_endproc
 2558              	.LFE56:
 2559              		.size	CySysPrbDisableDeepsleepVddaRef, .-CySysPrbDisableDeepsleepVddaRef
 2560              		.section	.text.CySysPrbEnableVddaRef,"ax",%progbits
 2561              		.align	2
 2562              		.global	CySysPrbEnableVddaRef
 2563              		.code	16
 2564              		.thumb_func
 2565              		.type	CySysPrbEnableVddaRef, %function
 2566              	CySysPrbEnableVddaRef:
 2567              	.LFB57:
3772:Generated_Source\PSoC4/CyLib.c **** 
3773:Generated_Source\PSoC4/CyLib.c **** 
3774:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3775:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysPrbEnableVddaRef
3776:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3777:Generated_Source\PSoC4/CyLib.c ****     *
3778:Generated_Source\PSoC4/CyLib.c ****     * Enables the Vdda reference. The Vdda reference is by default not enabled.
3779:Generated_Source\PSoC4/CyLib.c ****     *
3780:Generated_Source\PSoC4/CyLib.c ****     * This API is applicable for PSoC 4 devices that support the programmable
3781:Generated_Source\PSoC4/CyLib.c ****     * reference block. Please refer to the device TRM for more details.
3782:Generated_Source\PSoC4/CyLib.c ****     *
3783:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3784:Generated_Source\PSoC4/CyLib.c ****     void CySysPrbEnableVddaRef(void)
3785:Generated_Source\PSoC4/CyLib.c ****     {
 2568              		.loc 1 3785 0
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 115


 2569              		.cfi_startproc
 2570              		@ args = 0, pretend = 0, frame = 0
 2571              		@ frame_needed = 0, uses_anonymous_args = 0
 2572              		@ link register save eliminated.
3786:Generated_Source\PSoC4/CyLib.c ****         CY_SET_REG32_FIELD(CYREG_PASS_PRB_CTRL, CYFLD_PASS_VDDA_ENABLE, 1u);
 2573              		.loc 1 3786 0
 2574 0000 024A     		ldr	r2, .L197
 2575 0002 1168     		ldr	r1, [r2]
 2576 0004 1023     		movs	r3, #16
 2577 0006 0B43     		orrs	r3, r1
 2578 0008 1360     		str	r3, [r2]
3787:Generated_Source\PSoC4/CyLib.c ****     }
 2579              		.loc 1 3787 0
 2580              		@ sp needed
 2581 000a 7047     		bx	lr
 2582              	.L198:
 2583              		.align	2
 2584              	.L197:
 2585 000c 00023F40 		.word	1077871104
 2586              		.cfi_endproc
 2587              	.LFE57:
 2588              		.size	CySysPrbEnableVddaRef, .-CySysPrbEnableVddaRef
 2589              		.section	.text.CySysPrbDisableVddaRef,"ax",%progbits
 2590              		.align	2
 2591              		.global	CySysPrbDisableVddaRef
 2592              		.code	16
 2593              		.thumb_func
 2594              		.type	CySysPrbDisableVddaRef, %function
 2595              	CySysPrbDisableVddaRef:
 2596              	.LFB58:
3788:Generated_Source\PSoC4/CyLib.c **** 
3789:Generated_Source\PSoC4/CyLib.c **** 
3790:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3791:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysPrbDisableVddaRef
3792:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3793:Generated_Source\PSoC4/CyLib.c ****     *
3794:Generated_Source\PSoC4/CyLib.c ****     * Disables the Vdda reference. The Vdda reference is by default not enabled.
3795:Generated_Source\PSoC4/CyLib.c ****     *
3796:Generated_Source\PSoC4/CyLib.c ****     * This API is applicable for PSoC 4 devices that support the programmable
3797:Generated_Source\PSoC4/CyLib.c ****     * reference block. Please refer to the device TRM for more details.
3798:Generated_Source\PSoC4/CyLib.c ****     *
3799:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3800:Generated_Source\PSoC4/CyLib.c ****     void CySysPrbDisableVddaRef(void)
3801:Generated_Source\PSoC4/CyLib.c ****     {
 2597              		.loc 1 3801 0
 2598              		.cfi_startproc
 2599              		@ args = 0, pretend = 0, frame = 0
 2600              		@ frame_needed = 0, uses_anonymous_args = 0
 2601              		@ link register save eliminated.
3802:Generated_Source\PSoC4/CyLib.c ****         CY_CLEAR_REG32_FIELD(CYREG_PASS_PRB_CTRL, CYFLD_PASS_VDDA_ENABLE);
 2602              		.loc 1 3802 0
 2603 0000 024A     		ldr	r2, .L200
 2604 0002 1368     		ldr	r3, [r2]
 2605 0004 1021     		movs	r1, #16
 2606 0006 8B43     		bics	r3, r1
 2607 0008 1360     		str	r3, [r2]
3803:Generated_Source\PSoC4/CyLib.c ****     }
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 116


 2608              		.loc 1 3803 0
 2609              		@ sp needed
 2610 000a 7047     		bx	lr
 2611              	.L201:
 2612              		.align	2
 2613              	.L200:
 2614 000c 00023F40 		.word	1077871104
 2615              		.cfi_endproc
 2616              	.LFE58:
 2617              		.size	CySysPrbDisableVddaRef, .-CySysPrbDisableVddaRef
 2618              		.section	.text.CySysPrbSetBgBufferTrim,"ax",%progbits
 2619              		.align	2
 2620              		.global	CySysPrbSetBgBufferTrim
 2621              		.code	16
 2622              		.thumb_func
 2623              		.type	CySysPrbSetBgBufferTrim, %function
 2624              	CySysPrbSetBgBufferTrim:
 2625              	.LFB59:
3804:Generated_Source\PSoC4/CyLib.c **** 
3805:Generated_Source\PSoC4/CyLib.c **** 
3806:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3807:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysPrbSetBgBufferTrim
3808:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3809:Generated_Source\PSoC4/CyLib.c ****     *
3810:Generated_Source\PSoC4/CyLib.c ****     * Sets the trim for the bandgap reference buffer.
3811:Generated_Source\PSoC4/CyLib.c ****     *
3812:Generated_Source\PSoC4/CyLib.c ****     * \note Affects all bandgap sourced references.
3813:Generated_Source\PSoC4/CyLib.c ****     *
3814:Generated_Source\PSoC4/CyLib.c ****     * \param bgTrim The trim value from -32 to 31. Step size is approximately 1 mV.
3815:Generated_Source\PSoC4/CyLib.c ****     *
3816:Generated_Source\PSoC4/CyLib.c ****     * This API is applicable for PSoC 4 devices that support the programmable
3817:Generated_Source\PSoC4/CyLib.c ****     * reference block. Please refer to the device TRM for more details.
3818:Generated_Source\PSoC4/CyLib.c ****     *
3819:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3820:Generated_Source\PSoC4/CyLib.c ****     void CySysPrbSetBgBufferTrim(int32 bgTrim)
3821:Generated_Source\PSoC4/CyLib.c ****     {
 2626              		.loc 1 3821 0
 2627              		.cfi_startproc
 2628              		@ args = 0, pretend = 0, frame = 0
 2629              		@ frame_needed = 0, uses_anonymous_args = 0
 2630              	.LVL191:
 2631 0000 10B5     		push	{r4, lr}
 2632              		.cfi_def_cfa_offset 8
 2633              		.cfi_offset 4, -8
 2634              		.cfi_offset 14, -4
 2635              	.LVL192:
3822:Generated_Source\PSoC4/CyLib.c ****         uint8 tmp = 0u;
3823:Generated_Source\PSoC4/CyLib.c **** 
3824:Generated_Source\PSoC4/CyLib.c ****         if (bgTrim >= 0)
 2636              		.loc 1 3824 0
 2637 0002 0028     		cmp	r0, #0
 2638 0004 07DB     		blt	.L203
3825:Generated_Source\PSoC4/CyLib.c ****         {
3826:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_PASS_PRB_TRIM, CYFLD_PASS_VBGR_BUF_TRIM, (uint32) bgTrim);
 2639              		.loc 1 3826 0
 2640 0006 0A4A     		ldr	r2, .L205
 2641 0008 1368     		ldr	r3, [r2]
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 117


 2642 000a 3F21     		movs	r1, #63
 2643 000c 8B43     		bics	r3, r1
 2644 000e 0840     		ands	r0, r1
 2645              	.LVL193:
 2646 0010 1843     		orrs	r0, r3
 2647 0012 1060     		str	r0, [r2]
 2648 0014 0AE0     		b	.L202
 2649              	.LVL194:
 2650              	.L203:
3827:Generated_Source\PSoC4/CyLib.c ****         }
3828:Generated_Source\PSoC4/CyLib.c ****         else
3829:Generated_Source\PSoC4/CyLib.c ****         {
3830:Generated_Source\PSoC4/CyLib.c ****             tmp = (uint8)((int32) bgTrim * (int8) (-1));   /* Make positive */
3831:Generated_Source\PSoC4/CyLib.c ****             tmp = (uint8) ~tmp + 1u;                      /* Two's complement */
3832:Generated_Source\PSoC4/CyLib.c ****             tmp |= (uint8) CY_SYS_VREF_BG_BUFFER_TRIM_SIGN_BIT;
3833:Generated_Source\PSoC4/CyLib.c **** 
3834:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_PASS_PRB_TRIM, CYFLD_PASS_VBGR_BUF_TRIM, tmp);
 2651              		.loc 1 3834 0
 2652 0016 064C     		ldr	r4, .L205
 2653 0018 2168     		ldr	r1, [r4]
 2654 001a 3F23     		movs	r3, #63
 2655 001c 9943     		bics	r1, r3
 2656 001e 1840     		ands	r0, r3
 2657              	.LVL195:
 2658 0020 2022     		movs	r2, #32
 2659 0022 0300     		movs	r3, r0
 2660 0024 1343     		orrs	r3, r2
 2661 0026 D8B2     		uxtb	r0, r3
 2662 0028 0843     		orrs	r0, r1
 2663 002a 2060     		str	r0, [r4]
 2664              	.L202:
3835:Generated_Source\PSoC4/CyLib.c ****         }
3836:Generated_Source\PSoC4/CyLib.c ****     }
 2665              		.loc 1 3836 0
 2666              		@ sp needed
 2667 002c 10BD     		pop	{r4, pc}
 2668              	.L206:
 2669 002e C046     		.align	2
 2670              	.L205:
 2671 0030 040F3F40 		.word	1077874436
 2672              		.cfi_endproc
 2673              	.LFE59:
 2674              		.size	CySysPrbSetBgBufferTrim, .-CySysPrbSetBgBufferTrim
 2675              		.section	.text.CySysPrbGetBgBufferTrim,"ax",%progbits
 2676              		.align	2
 2677              		.global	CySysPrbGetBgBufferTrim
 2678              		.code	16
 2679              		.thumb_func
 2680              		.type	CySysPrbGetBgBufferTrim, %function
 2681              	CySysPrbGetBgBufferTrim:
 2682              	.LFB60:
3837:Generated_Source\PSoC4/CyLib.c **** 
3838:Generated_Source\PSoC4/CyLib.c **** 
3839:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3840:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysPrbGetBgBufferTrim
3841:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3842:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 118


3843:Generated_Source\PSoC4/CyLib.c ****     * Returns the current trim of the bandgap reference buffer.
3844:Generated_Source\PSoC4/CyLib.c ****     *
3845:Generated_Source\PSoC4/CyLib.c ****     * This API is applicable for PSoC 4 devices that support the programmable
3846:Generated_Source\PSoC4/CyLib.c ****     * reference block. Please refer to the device TRM for more details.
3847:Generated_Source\PSoC4/CyLib.c ****     *
3848:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3849:Generated_Source\PSoC4/CyLib.c ****     int32 CySysPrbGetBgBufferTrim(void)
3850:Generated_Source\PSoC4/CyLib.c ****     {
 2683              		.loc 1 3850 0
 2684              		.cfi_startproc
 2685              		@ args = 0, pretend = 0, frame = 0
 2686              		@ frame_needed = 0, uses_anonymous_args = 0
 2687              		@ link register save eliminated.
3851:Generated_Source\PSoC4/CyLib.c ****         uint8 tmp;
3852:Generated_Source\PSoC4/CyLib.c ****         int32 returnValue;
3853:Generated_Source\PSoC4/CyLib.c **** 
3854:Generated_Source\PSoC4/CyLib.c ****         tmp = (uint8) CY_GET_REG32_FIELD(CYREG_PASS_PRB_TRIM, CYFLD_PASS_VBGR_BUF_TRIM);
 2688              		.loc 1 3854 0
 2689 0000 054B     		ldr	r3, .L210
 2690 0002 1B68     		ldr	r3, [r3]
 2691 0004 DBB2     		uxtb	r3, r3
 2692 0006 3F20     		movs	r0, #63
 2693 0008 1840     		ands	r0, r3
 2694              	.LVL196:
3855:Generated_Source\PSoC4/CyLib.c ****         if ((tmp & CY_SYS_VREF_BG_BUFFER_TRIM_SIGN_BIT) != 0u)
 2695              		.loc 1 3855 0
 2696 000a 9B06     		lsls	r3, r3, #26
 2697 000c 02D5     		bpl	.L209
3856:Generated_Source\PSoC4/CyLib.c ****         {
3857:Generated_Source\PSoC4/CyLib.c ****             tmp = ((uint8) ~tmp) + 1u;          /* Make positive */
 2698              		.loc 1 3857 0
 2699 000e 4042     		rsbs	r0, r0, #0
 2700              	.LVL197:
 2701 0010 C0B2     		uxtb	r0, r0
 2702              	.LVL198:
3858:Generated_Source\PSoC4/CyLib.c ****             returnValue = (int32) tmp * (-1);   /* Make negative */
 2703              		.loc 1 3858 0
 2704 0012 4042     		rsbs	r0, r0, #0
 2705              	.LVL199:
 2706              	.L209:
3859:Generated_Source\PSoC4/CyLib.c ****         }
3860:Generated_Source\PSoC4/CyLib.c ****         else
3861:Generated_Source\PSoC4/CyLib.c ****         {
3862:Generated_Source\PSoC4/CyLib.c ****             returnValue = (int32) tmp;
3863:Generated_Source\PSoC4/CyLib.c ****         }
3864:Generated_Source\PSoC4/CyLib.c **** 
3865:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
3866:Generated_Source\PSoC4/CyLib.c ****     }
 2707              		.loc 1 3866 0
 2708              		@ sp needed
 2709 0014 7047     		bx	lr
 2710              	.L211:
 2711 0016 C046     		.align	2
 2712              	.L210:
 2713 0018 040F3F40 		.word	1077874436
 2714              		.cfi_endproc
 2715              	.LFE60:
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 119


 2716              		.size	CySysPrbGetBgBufferTrim, .-CySysPrbGetBgBufferTrim
 2717              		.global	CySysClkPumpConfig
 2718              		.global	CySysTickInitVar
 2719              		.global	cydelay32kMs
 2720              		.global	cydelayFreqMhz
 2721              		.global	cydelayFreqKhz
 2722              		.global	cydelayFreqHz
 2723              		.data
 2724              		.align	2
 2725              		.set	.LANCHOR0,. + 0
 2726              		.type	CySysClkPumpConfig, %object
 2727              		.size	CySysClkPumpConfig, 4
 2728              	CySysClkPumpConfig:
 2729 0000 01000000 		.word	1
 2730              		.type	cydelay32kMs, %object
 2731              		.size	cydelay32kMs, 4
 2732              	cydelay32kMs:
 2733 0004 0000E02E 		.word	786432000
 2734              		.type	cydelayFreqKhz, %object
 2735              		.size	cydelayFreqKhz, 4
 2736              	cydelayFreqKhz:
 2737 0008 C05D0000 		.word	24000
 2738              		.type	cydelayFreqMhz, %object
 2739              		.size	cydelayFreqMhz, 1
 2740              	cydelayFreqMhz:
 2741 000c 18       		.byte	24
 2742 000d 000000   		.space	3
 2743              		.type	cydelayFreqHz, %object
 2744              		.size	cydelayFreqHz, 4
 2745              	cydelayFreqHz:
 2746 0010 00366E01 		.word	24000000
 2747              		.bss
 2748              		.align	2
 2749              		.set	.LANCHOR1,. + 0
 2750              		.type	CySysTickCallbacks, %object
 2751              		.size	CySysTickCallbacks, 20
 2752              	CySysTickCallbacks:
 2753 0000 00000000 		.space	20
 2753      00000000 
 2753      00000000 
 2753      00000000 
 2753      00000000 
 2754              		.type	CySysTickInitVar, %object
 2755              		.size	CySysTickInitVar, 4
 2756              	CySysTickInitVar:
 2757 0014 00000000 		.space	4
 2758              		.text
 2759              	.Letext0:
 2760              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 2761              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 2762              		.file 4 "Generated_Source\\PSoC4\\CyLFClk.h"
 2763              		.file 5 "Generated_Source\\PSoC4\\CyFlash.h"
 2764              		.section	.debug_info,"",%progbits
 2765              	.Ldebug_info0:
 2766 0000 0A0E0000 		.4byte	0xe0a
 2767 0004 0400     		.2byte	0x4
 2768 0006 00000000 		.4byte	.Ldebug_abbrev0
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 120


 2769 000a 04       		.byte	0x4
 2770 000b 01       		.uleb128 0x1
 2771 000c D9050000 		.4byte	.LASF129
 2772 0010 0C       		.byte	0xc
 2773 0011 91080000 		.4byte	.LASF130
 2774 0015 B1070000 		.4byte	.LASF131
 2775 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2776 001d 00000000 		.4byte	0
 2777 0021 00000000 		.4byte	.Ldebug_line0
 2778 0025 02       		.uleb128 0x2
 2779 0026 01       		.byte	0x1
 2780 0027 06       		.byte	0x6
 2781 0028 16010000 		.4byte	.LASF0
 2782 002c 02       		.uleb128 0x2
 2783 002d 01       		.byte	0x1
 2784 002e 08       		.byte	0x8
 2785 002f 7F050000 		.4byte	.LASF1
 2786 0033 02       		.uleb128 0x2
 2787 0034 02       		.byte	0x2
 2788 0035 05       		.byte	0x5
 2789 0036 8D050000 		.4byte	.LASF2
 2790 003a 02       		.uleb128 0x2
 2791 003b 02       		.byte	0x2
 2792 003c 07       		.byte	0x7
 2793 003d 5C030000 		.4byte	.LASF3
 2794 0041 02       		.uleb128 0x2
 2795 0042 04       		.byte	0x4
 2796 0043 05       		.byte	0x5
 2797 0044 84010000 		.4byte	.LASF4
 2798 0048 02       		.uleb128 0x2
 2799 0049 04       		.byte	0x4
 2800 004a 07       		.byte	0x7
 2801 004b F0020000 		.4byte	.LASF5
 2802 004f 02       		.uleb128 0x2
 2803 0050 08       		.byte	0x8
 2804 0051 05       		.byte	0x5
 2805 0052 08010000 		.4byte	.LASF6
 2806 0056 02       		.uleb128 0x2
 2807 0057 08       		.byte	0x8
 2808 0058 07       		.byte	0x7
 2809 0059 8C000000 		.4byte	.LASF7
 2810 005d 03       		.uleb128 0x3
 2811 005e 04       		.byte	0x4
 2812 005f 05       		.byte	0x5
 2813 0060 696E7400 		.ascii	"int\000"
 2814 0064 02       		.uleb128 0x2
 2815 0065 04       		.byte	0x4
 2816 0066 07       		.byte	0x7
 2817 0067 BE020000 		.4byte	.LASF8
 2818 006b 04       		.uleb128 0x4
 2819 006c CF010000 		.4byte	.LASF9
 2820 0070 02       		.byte	0x2
 2821 0071 F701     		.2byte	0x1f7
 2822 0073 2C000000 		.4byte	0x2c
 2823 0077 04       		.uleb128 0x4
 2824 0078 0F000000 		.4byte	.LASF10
 2825 007c 02       		.byte	0x2
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 121


 2826 007d F801     		.2byte	0x1f8
 2827 007f 3A000000 		.4byte	0x3a
 2828 0083 04       		.uleb128 0x4
 2829 0084 F8010000 		.4byte	.LASF11
 2830 0088 02       		.byte	0x2
 2831 0089 F901     		.2byte	0x1f9
 2832 008b 48000000 		.4byte	0x48
 2833 008f 04       		.uleb128 0x4
 2834 0090 A5030000 		.4byte	.LASF12
 2835 0094 02       		.byte	0x2
 2836 0095 FA01     		.2byte	0x1fa
 2837 0097 25000000 		.4byte	0x25
 2838 009b 04       		.uleb128 0x4
 2839 009c 42010000 		.4byte	.LASF13
 2840 00a0 02       		.byte	0x2
 2841 00a1 FC01     		.2byte	0x1fc
 2842 00a3 41000000 		.4byte	0x41
 2843 00a7 02       		.uleb128 0x2
 2844 00a8 04       		.byte	0x4
 2845 00a9 04       		.byte	0x4
 2846 00aa E2040000 		.4byte	.LASF14
 2847 00ae 02       		.uleb128 0x2
 2848 00af 08       		.byte	0x8
 2849 00b0 04       		.byte	0x4
 2850 00b1 EB010000 		.4byte	.LASF15
 2851 00b5 02       		.uleb128 0x2
 2852 00b6 01       		.byte	0x1
 2853 00b7 08       		.byte	0x8
 2854 00b8 88060000 		.4byte	.LASF16
 2855 00bc 04       		.uleb128 0x4
 2856 00bd 56050000 		.4byte	.LASF17
 2857 00c1 02       		.byte	0x2
 2858 00c2 A102     		.2byte	0x2a1
 2859 00c4 C8000000 		.4byte	0xc8
 2860 00c8 05       		.uleb128 0x5
 2861 00c9 6B000000 		.4byte	0x6b
 2862 00cd 04       		.uleb128 0x4
 2863 00ce 1A040000 		.4byte	.LASF18
 2864 00d2 02       		.byte	0x2
 2865 00d3 A302     		.2byte	0x2a3
 2866 00d5 D9000000 		.4byte	0xd9
 2867 00d9 05       		.uleb128 0x5
 2868 00da 83000000 		.4byte	0x83
 2869 00de 04       		.uleb128 0x4
 2870 00df 8D060000 		.4byte	.LASF19
 2871 00e3 02       		.byte	0x2
 2872 00e4 B302     		.2byte	0x2b3
 2873 00e6 EA000000 		.4byte	0xea
 2874 00ea 06       		.uleb128 0x6
 2875 00eb 04       		.byte	0x4
 2876 00ec F0000000 		.4byte	0xf0
 2877 00f0 07       		.uleb128 0x7
 2878 00f1 02       		.uleb128 0x2
 2879 00f2 08       		.byte	0x8
 2880 00f3 04       		.byte	0x4
 2881 00f4 82040000 		.4byte	.LASF20
 2882 00f8 02       		.uleb128 0x2
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 122


 2883 00f9 04       		.byte	0x4
 2884 00fa 07       		.byte	0x7
 2885 00fb 43040000 		.4byte	.LASF21
 2886 00ff 04       		.uleb128 0x4
 2887 0100 FE040000 		.4byte	.LASF22
 2888 0104 03       		.byte	0x3
 2889 0105 0801     		.2byte	0x108
 2890 0107 EA000000 		.4byte	0xea
 2891 010b 08       		.uleb128 0x8
 2892 010c 37080000 		.4byte	.LASF63
 2893 0110 01       		.byte	0x1
 2894 0111 62       		.byte	0x62
 2895 0112 00000000 		.4byte	.LFB1
 2896 0116 14000000 		.4byte	.LFE1-.LFB1
 2897 011a 01       		.uleb128 0x1
 2898 011b 9C       		.byte	0x9c
 2899 011c 09       		.uleb128 0x9
 2900 011d 00040000 		.4byte	.LASF23
 2901 0121 01       		.byte	0x1
 2902 0122 1401     		.2byte	0x114
 2903 0124 00000000 		.4byte	.LFB4
 2904 0128 4C000000 		.4byte	.LFE4-.LFB4
 2905 012c 01       		.uleb128 0x1
 2906 012d 9C       		.byte	0x9c
 2907 012e 43010000 		.4byte	0x143
 2908 0132 0A       		.uleb128 0xa
 2909 0133 22010000 		.4byte	.LASF26
 2910 0137 01       		.byte	0x1
 2911 0138 1A01     		.2byte	0x11a
 2912 013a 83000000 		.4byte	0x83
 2913 013e 00000000 		.4byte	.LLST0
 2914 0142 00       		.byte	0
 2915 0143 0B       		.uleb128 0xb
 2916 0144 09030000 		.4byte	.LASF24
 2917 0148 01       		.byte	0x1
 2918 0149 83       		.byte	0x83
 2919 014a 00000000 		.4byte	.LFB2
 2920 014e 18000000 		.4byte	.LFE2-.LFB2
 2921 0152 01       		.uleb128 0x1
 2922 0153 9C       		.byte	0x9c
 2923 0154 62010000 		.4byte	0x162
 2924 0158 0C       		.uleb128 0xc
 2925 0159 06000000 		.4byte	.LVL3
 2926 015d 1C010000 		.4byte	0x11c
 2927 0161 00       		.byte	0
 2928 0162 0D       		.uleb128 0xd
 2929 0163 66010000 		.4byte	.LASF82
 2930 0167 01       		.byte	0x1
 2931 0168 4C01     		.2byte	0x14c
 2932 016a 83000000 		.4byte	0x83
 2933 016e 00000000 		.4byte	.LFB5
 2934 0172 14000000 		.4byte	.LFE5-.LFB5
 2935 0176 01       		.uleb128 0x1
 2936 0177 9C       		.byte	0x9c
 2937 0178 09       		.uleb128 0x9
 2938 0179 1E000000 		.4byte	.LASF25
 2939 017d 01       		.byte	0x1
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 123


 2940 017e 1C02     		.2byte	0x21c
 2941 0180 00000000 		.4byte	.LFB6
 2942 0184 20000000 		.4byte	.LFE6-.LFB6
 2943 0188 01       		.uleb128 0x1
 2944 0189 9C       		.byte	0x9c
 2945 018a D1010000 		.4byte	0x1d1
 2946 018e 0E       		.uleb128 0xe
 2947 018f B5050000 		.4byte	.LASF30
 2948 0193 01       		.byte	0x1
 2949 0194 1C02     		.2byte	0x21c
 2950 0196 83000000 		.4byte	0x83
 2951 019a 24000000 		.4byte	.LLST1
 2952 019e 0A       		.uleb128 0xa
 2953 019f 33010000 		.4byte	.LASF27
 2954 01a3 01       		.byte	0x1
 2955 01a4 1E02     		.2byte	0x21e
 2956 01a6 6B000000 		.4byte	0x6b
 2957 01aa 50000000 		.4byte	.LLST2
 2958 01ae 0A       		.uleb128 0xa
 2959 01af BD080000 		.4byte	.LASF28
 2960 01b3 01       		.byte	0x1
 2961 01b4 1F02     		.2byte	0x21f
 2962 01b6 83000000 		.4byte	0x83
 2963 01ba 63000000 		.4byte	.LLST3
 2964 01be 0C       		.uleb128 0xc
 2965 01bf 08000000 		.4byte	.LVL5
 2966 01c3 D60D0000 		.4byte	0xdd6
 2967 01c7 0C       		.uleb128 0xc
 2968 01c8 1A000000 		.4byte	.LVL9
 2969 01cc E10D0000 		.4byte	0xde1
 2970 01d0 00       		.byte	0
 2971 01d1 09       		.uleb128 0x9
 2972 01d2 62000000 		.4byte	.LASF29
 2973 01d6 01       		.byte	0x1
 2974 01d7 6402     		.2byte	0x264
 2975 01d9 00000000 		.4byte	.LFB7
 2976 01dd 34000000 		.4byte	.LFE7-.LFB7
 2977 01e1 01       		.uleb128 0x1
 2978 01e2 9C       		.byte	0x9c
 2979 01e3 F6010000 		.4byte	0x1f6
 2980 01e7 0F       		.uleb128 0xf
 2981 01e8 E4010000 		.4byte	.LASF31
 2982 01ec 01       		.byte	0x1
 2983 01ed 6402     		.2byte	0x264
 2984 01ef 83000000 		.4byte	0x83
 2985 01f3 01       		.uleb128 0x1
 2986 01f4 50       		.byte	0x50
 2987 01f5 00       		.byte	0
 2988 01f6 10       		.uleb128 0x10
 2989 01f7 13020000 		.4byte	.LASF36
 2990 01fb 01       		.byte	0x1
 2991 01fc 8902     		.2byte	0x289
 2992 01fe 83000000 		.4byte	0x83
 2993 0202 00000000 		.4byte	.LFB8
 2994 0206 1C000000 		.4byte	.LFE8-.LFB8
 2995 020a 01       		.uleb128 0x1
 2996 020b 9C       		.byte	0x9c
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 124


 2997 020c 43020000 		.4byte	0x243
 2998 0210 0A       		.uleb128 0xa
 2999 0211 33010000 		.4byte	.LASF27
 3000 0215 01       		.byte	0x1
 3001 0216 8B02     		.2byte	0x28b
 3002 0218 6B000000 		.4byte	0x6b
 3003 021c 81000000 		.4byte	.LLST4
 3004 0220 0A       		.uleb128 0xa
 3005 0221 96040000 		.4byte	.LASF32
 3006 0225 01       		.byte	0x1
 3007 0226 8C02     		.2byte	0x28c
 3008 0228 83000000 		.4byte	0x83
 3009 022c 94000000 		.4byte	.LLST5
 3010 0230 0C       		.uleb128 0xc
 3011 0231 06000000 		.4byte	.LVL12
 3012 0235 D60D0000 		.4byte	0xdd6
 3013 0239 0C       		.uleb128 0xc
 3014 023a 12000000 		.4byte	.LVL14
 3015 023e E10D0000 		.4byte	0xde1
 3016 0242 00       		.byte	0
 3017 0243 09       		.uleb128 0x9
 3018 0244 C0060000 		.4byte	.LASF33
 3019 0248 01       		.byte	0x1
 3020 0249 C602     		.2byte	0x2c6
 3021 024b 00000000 		.4byte	.LFB9
 3022 024f 24000000 		.4byte	.LFE9-.LFB9
 3023 0253 01       		.uleb128 0x1
 3024 0254 9C       		.byte	0x9c
 3025 0255 8C020000 		.4byte	0x28c
 3026 0259 0E       		.uleb128 0xe
 3027 025a 16000000 		.4byte	.LASF34
 3028 025e 01       		.byte	0x1
 3029 025f C602     		.2byte	0x2c6
 3030 0261 83000000 		.4byte	0x83
 3031 0265 B2000000 		.4byte	.LLST6
 3032 0269 0A       		.uleb128 0xa
 3033 026a 33010000 		.4byte	.LASF27
 3034 026e 01       		.byte	0x1
 3035 026f C802     		.2byte	0x2c8
 3036 0271 6B000000 		.4byte	0x6b
 3037 0275 DE000000 		.4byte	.LLST7
 3038 0279 0C       		.uleb128 0xc
 3039 027a 08000000 		.4byte	.LVL17
 3040 027e D60D0000 		.4byte	0xdd6
 3041 0282 0C       		.uleb128 0xc
 3042 0283 1E000000 		.4byte	.LVL19
 3043 0287 E10D0000 		.4byte	0xde1
 3044 028b 00       		.byte	0
 3045 028c 09       		.uleb128 0x9
 3046 028d AA060000 		.4byte	.LASF35
 3047 0291 01       		.byte	0x1
 3048 0292 5204     		.2byte	0x452
 3049 0294 00000000 		.4byte	.LFB11
 3050 0298 24000000 		.4byte	.LFE11-.LFB11
 3051 029c 01       		.uleb128 0x1
 3052 029d 9C       		.byte	0x9c
 3053 029e D5020000 		.4byte	0x2d5
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 125


 3054 02a2 0E       		.uleb128 0xe
 3055 02a3 16000000 		.4byte	.LASF34
 3056 02a7 01       		.byte	0x1
 3057 02a8 5204     		.2byte	0x452
 3058 02aa 83000000 		.4byte	0x83
 3059 02ae F1000000 		.4byte	.LLST8
 3060 02b2 0A       		.uleb128 0xa
 3061 02b3 33010000 		.4byte	.LASF27
 3062 02b7 01       		.byte	0x1
 3063 02b8 5404     		.2byte	0x454
 3064 02ba 6B000000 		.4byte	0x6b
 3065 02be 1D010000 		.4byte	.LLST9
 3066 02c2 0C       		.uleb128 0xc
 3067 02c3 08000000 		.4byte	.LVL21
 3068 02c7 D60D0000 		.4byte	0xdd6
 3069 02cb 0C       		.uleb128 0xc
 3070 02cc 1E000000 		.4byte	.LVL23
 3071 02d0 E10D0000 		.4byte	0xde1
 3072 02d4 00       		.byte	0
 3073 02d5 10       		.uleb128 0x10
 3074 02d6 48030000 		.4byte	.LASF37
 3075 02da 01       		.byte	0x1
 3076 02db 8A0A     		.2byte	0xa8a
 3077 02dd 83000000 		.4byte	0x83
 3078 02e1 00000000 		.4byte	.LFB12
 3079 02e5 14000000 		.4byte	.LFE12-.LFB12
 3080 02e9 01       		.uleb128 0x1
 3081 02ea 9C       		.byte	0x9c
 3082 02eb 0E030000 		.4byte	0x30e
 3083 02ef 0E       		.uleb128 0xe
 3084 02f0 C9050000 		.4byte	.LASF38
 3085 02f4 01       		.byte	0x1
 3086 02f5 8A0A     		.2byte	0xa8a
 3087 02f7 83000000 		.4byte	0x83
 3088 02fb 30010000 		.4byte	.LLST10
 3089 02ff 11       		.uleb128 0x11
 3090 0300 2F040000 		.4byte	.LASF39
 3091 0304 01       		.byte	0x1
 3092 0305 8C0A     		.2byte	0xa8c
 3093 0307 83000000 		.4byte	0x83
 3094 030b 01       		.uleb128 0x1
 3095 030c 50       		.byte	0x50
 3096 030d 00       		.byte	0
 3097 030e 10       		.uleb128 0x10
 3098 030f 7E000000 		.4byte	.LASF40
 3099 0313 01       		.byte	0x1
 3100 0314 A10A     		.2byte	0xaa1
 3101 0316 83000000 		.4byte	0x83
 3102 031a 00000000 		.4byte	.LFB13
 3103 031e 10000000 		.4byte	.LFE13-.LFB13
 3104 0322 01       		.uleb128 0x1
 3105 0323 9C       		.byte	0x9c
 3106 0324 37030000 		.4byte	0x337
 3107 0328 11       		.uleb128 0x11
 3108 0329 D0050000 		.4byte	.LASF41
 3109 032d 01       		.byte	0x1
 3110 032e A30A     		.2byte	0xaa3
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 126


 3111 0330 83000000 		.4byte	0x83
 3112 0334 01       		.uleb128 0x1
 3113 0335 50       		.byte	0x50
 3114 0336 00       		.byte	0
 3115 0337 09       		.uleb128 0x9
 3116 0338 B4000000 		.4byte	.LASF42
 3117 033c 01       		.byte	0x1
 3118 033d B80A     		.2byte	0xab8
 3119 033f 00000000 		.4byte	.LFB14
 3120 0343 0C000000 		.4byte	.LFE14-.LFB14
 3121 0347 01       		.uleb128 0x1
 3122 0348 9C       		.byte	0x9c
 3123 0349 5C030000 		.4byte	0x35c
 3124 034d 0F       		.uleb128 0xf
 3125 034e 0E020000 		.4byte	.LASF43
 3126 0352 01       		.byte	0x1
 3127 0353 B80A     		.2byte	0xab8
 3128 0355 83000000 		.4byte	0x83
 3129 0359 01       		.uleb128 0x1
 3130 035a 50       		.byte	0x50
 3131 035b 00       		.byte	0
 3132 035c 09       		.uleb128 0x9
 3133 035d 97050000 		.4byte	.LASF44
 3134 0361 01       		.byte	0x1
 3135 0362 6F0B     		.2byte	0xb6f
 3136 0364 00000000 		.4byte	.LFB21
 3137 0368 14000000 		.4byte	.LFE21-.LFB21
 3138 036c 01       		.uleb128 0x1
 3139 036d 9C       		.byte	0x9c
 3140 036e 83030000 		.4byte	0x383
 3141 0372 0E       		.uleb128 0xe
 3142 0373 AA030000 		.4byte	.LASF45
 3143 0377 01       		.byte	0x1
 3144 0378 6F0B     		.2byte	0xb6f
 3145 037a 6B000000 		.4byte	0x6b
 3146 037e 4E010000 		.4byte	.LLST11
 3147 0382 00       		.byte	0
 3148 0383 10       		.uleb128 0x10
 3149 0384 FA000000 		.4byte	.LASF46
 3150 0388 01       		.byte	0x1
 3151 0389 810B     		.2byte	0xb81
 3152 038b 6B000000 		.4byte	0x6b
 3153 038f 00000000 		.4byte	.LFB22
 3154 0393 18000000 		.4byte	.LFE22-.LFB22
 3155 0397 01       		.uleb128 0x1
 3156 0398 9C       		.byte	0x9c
 3157 0399 AE030000 		.4byte	0x3ae
 3158 039d 0E       		.uleb128 0xe
 3159 039e AA030000 		.4byte	.LASF45
 3160 03a2 01       		.byte	0x1
 3161 03a3 810B     		.2byte	0xb81
 3162 03a5 6B000000 		.4byte	0x6b
 3163 03a9 6F010000 		.4byte	.LLST12
 3164 03ad 00       		.byte	0
 3165 03ae 09       		.uleb128 0x9
 3166 03af 8D010000 		.4byte	.LASF47
 3167 03b3 01       		.byte	0x1
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 127


 3168 03b4 910B     		.2byte	0xb91
 3169 03b6 00000000 		.4byte	.LFB23
 3170 03ba 14000000 		.4byte	.LFE23-.LFB23
 3171 03be 01       		.uleb128 0x1
 3172 03bf 9C       		.byte	0x9c
 3173 03c0 D5030000 		.4byte	0x3d5
 3174 03c4 0E       		.uleb128 0xe
 3175 03c5 AA030000 		.4byte	.LASF45
 3176 03c9 01       		.byte	0x1
 3177 03ca 910B     		.2byte	0xb91
 3178 03cc 6B000000 		.4byte	0x6b
 3179 03d0 90010000 		.4byte	.LLST13
 3180 03d4 00       		.byte	0
 3181 03d5 09       		.uleb128 0x9
 3182 03d6 30030000 		.4byte	.LASF48
 3183 03da 01       		.byte	0x1
 3184 03db 9F0B     		.2byte	0xb9f
 3185 03dd 00000000 		.4byte	.LFB24
 3186 03e1 14000000 		.4byte	.LFE24-.LFB24
 3187 03e5 01       		.uleb128 0x1
 3188 03e6 9C       		.byte	0x9c
 3189 03e7 FC030000 		.4byte	0x3fc
 3190 03eb 0E       		.uleb128 0xe
 3191 03ec AA030000 		.4byte	.LASF45
 3192 03f0 01       		.byte	0x1
 3193 03f1 9F0B     		.2byte	0xb9f
 3194 03f3 6B000000 		.4byte	0x6b
 3195 03f7 B1010000 		.4byte	.LLST14
 3196 03fb 00       		.byte	0
 3197 03fc 09       		.uleb128 0x9
 3198 03fd 70040000 		.4byte	.LASF49
 3199 0401 01       		.byte	0x1
 3200 0402 AE0B     		.2byte	0xbae
 3201 0404 00000000 		.4byte	.LFB25
 3202 0408 14000000 		.4byte	.LFE25-.LFB25
 3203 040c 01       		.uleb128 0x1
 3204 040d 9C       		.byte	0x9c
 3205 040e 23040000 		.4byte	0x423
 3206 0412 0E       		.uleb128 0xe
 3207 0413 AA030000 		.4byte	.LASF45
 3208 0417 01       		.byte	0x1
 3209 0418 AE0B     		.2byte	0xbae
 3210 041a 6B000000 		.4byte	0x6b
 3211 041e D2010000 		.4byte	.LLST15
 3212 0422 00       		.byte	0
 3213 0423 09       		.uleb128 0x9
 3214 0424 5B050000 		.4byte	.LASF50
 3215 0428 01       		.byte	0x1
 3216 0429 BD0B     		.2byte	0xbbd
 3217 042b 00000000 		.4byte	.LFB26
 3218 042f 04000000 		.4byte	.LFE26-.LFB26
 3219 0433 01       		.uleb128 0x1
 3220 0434 9C       		.byte	0x9c
 3221 0435 48040000 		.4byte	0x448
 3222 0439 0F       		.uleb128 0xf
 3223 043a C9050000 		.4byte	.LASF38
 3224 043e 01       		.byte	0x1
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 128


 3225 043f BD0B     		.2byte	0xbbd
 3226 0441 6B000000 		.4byte	0x6b
 3227 0445 01       		.uleb128 0x1
 3228 0446 50       		.byte	0x50
 3229 0447 00       		.byte	0
 3230 0448 10       		.uleb128 0x10
 3231 0449 EE030000 		.4byte	.LASF51
 3232 044d 01       		.byte	0x1
 3233 044e D10A     		.2byte	0xad1
 3234 0450 DE000000 		.4byte	0xde
 3235 0454 00000000 		.4byte	.LFB15
 3236 0458 20000000 		.4byte	.LFE15-.LFB15
 3237 045c 01       		.uleb128 0x1
 3238 045d 9C       		.byte	0x9c
 3239 045e B0040000 		.4byte	0x4b0
 3240 0462 0E       		.uleb128 0xe
 3241 0463 AA030000 		.4byte	.LASF45
 3242 0467 01       		.byte	0x1
 3243 0468 D10A     		.2byte	0xad1
 3244 046a 6B000000 		.4byte	0x6b
 3245 046e F3010000 		.4byte	.LLST16
 3246 0472 0E       		.uleb128 0xe
 3247 0473 8E040000 		.4byte	.LASF52
 3248 0477 01       		.byte	0x1
 3249 0478 D10A     		.2byte	0xad1
 3250 047a DE000000 		.4byte	0xde
 3251 047e 14020000 		.4byte	.LLST17
 3252 0482 11       		.uleb128 0x11
 3253 0483 5C070000 		.4byte	.LASF53
 3254 0487 01       		.byte	0x1
 3255 0488 D30A     		.2byte	0xad3
 3256 048a DE000000 		.4byte	0xde
 3257 048e 01       		.uleb128 0x1
 3258 048f 50       		.byte	0x50
 3259 0490 12       		.uleb128 0x12
 3260 0491 00000000 		.4byte	.LASF54
 3261 0495 01       		.byte	0x1
 3262 0496 D40A     		.2byte	0xad4
 3263 0498 B0040000 		.4byte	0x4b0
 3264 049c 00000020 		.4byte	0x20000000
 3265 04a0 13       		.uleb128 0x13
 3266 04a1 10000000 		.4byte	.LVL44
 3267 04a5 23040000 		.4byte	0x423
 3268 04a9 14       		.uleb128 0x14
 3269 04aa 01       		.uleb128 0x1
 3270 04ab 50       		.byte	0x50
 3271 04ac 01       		.uleb128 0x1
 3272 04ad 30       		.byte	0x30
 3273 04ae 00       		.byte	0
 3274 04af 00       		.byte	0
 3275 04b0 06       		.uleb128 0x6
 3276 04b1 04       		.byte	0x4
 3277 04b2 DE000000 		.4byte	0xde
 3278 04b6 10       		.uleb128 0x10
 3279 04b7 A3050000 		.4byte	.LASF55
 3280 04bb 01       		.byte	0x1
 3281 04bc F30A     		.2byte	0xaf3
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 129


 3282 04be DE000000 		.4byte	0xde
 3283 04c2 00000000 		.4byte	.LFB16
 3284 04c6 1C000000 		.4byte	.LFE16-.LFB16
 3285 04ca 01       		.uleb128 0x1
 3286 04cb 9C       		.byte	0x9c
 3287 04cc 00050000 		.4byte	0x500
 3288 04d0 0E       		.uleb128 0xe
 3289 04d1 AA030000 		.4byte	.LASF45
 3290 04d5 01       		.byte	0x1
 3291 04d6 F30A     		.2byte	0xaf3
 3292 04d8 6B000000 		.4byte	0x6b
 3293 04dc 40020000 		.4byte	.LLST18
 3294 04e0 12       		.uleb128 0x12
 3295 04e1 00000000 		.4byte	.LASF54
 3296 04e5 01       		.byte	0x1
 3297 04e6 F50A     		.2byte	0xaf5
 3298 04e8 B0040000 		.4byte	0x4b0
 3299 04ec 00000020 		.4byte	0x20000000
 3300 04f0 13       		.uleb128 0x13
 3301 04f1 0E000000 		.4byte	.LVL50
 3302 04f5 23040000 		.4byte	0x423
 3303 04f9 14       		.uleb128 0x14
 3304 04fa 01       		.uleb128 0x1
 3305 04fb 50       		.byte	0x50
 3306 04fc 01       		.uleb128 0x1
 3307 04fd 30       		.byte	0x30
 3308 04fe 00       		.byte	0
 3309 04ff 00       		.byte	0
 3310 0500 10       		.uleb128 0x10
 3311 0501 FF010000 		.4byte	.LASF56
 3312 0505 01       		.byte	0x1
 3313 0506 090B     		.2byte	0xb09
 3314 0508 DE000000 		.4byte	0xde
 3315 050c 00000000 		.4byte	.LFB17
 3316 0510 22000000 		.4byte	.LFE17-.LFB17
 3317 0514 01       		.uleb128 0x1
 3318 0515 9C       		.byte	0x9c
 3319 0516 68050000 		.4byte	0x568
 3320 051a 0E       		.uleb128 0xe
 3321 051b AA030000 		.4byte	.LASF45
 3322 051f 01       		.byte	0x1
 3323 0520 090B     		.2byte	0xb09
 3324 0522 6B000000 		.4byte	0x6b
 3325 0526 61020000 		.4byte	.LLST19
 3326 052a 0E       		.uleb128 0xe
 3327 052b 8E040000 		.4byte	.LASF52
 3328 052f 01       		.byte	0x1
 3329 0530 090B     		.2byte	0xb09
 3330 0532 DE000000 		.4byte	0xde
 3331 0536 82020000 		.4byte	.LLST20
 3332 053a 11       		.uleb128 0x11
 3333 053b 5C070000 		.4byte	.LASF53
 3334 053f 01       		.byte	0x1
 3335 0540 0B0B     		.2byte	0xb0b
 3336 0542 DE000000 		.4byte	0xde
 3337 0546 01       		.uleb128 0x1
 3338 0547 50       		.byte	0x50
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 130


 3339 0548 12       		.uleb128 0x12
 3340 0549 00000000 		.4byte	.LASF54
 3341 054d 01       		.byte	0x1
 3342 054e 0C0B     		.2byte	0xb0c
 3343 0550 B0040000 		.4byte	0x4b0
 3344 0554 00000020 		.4byte	0x20000000
 3345 0558 13       		.uleb128 0x13
 3346 0559 10000000 		.4byte	.LVL54
 3347 055d 23040000 		.4byte	0x423
 3348 0561 14       		.uleb128 0x14
 3349 0562 01       		.uleb128 0x1
 3350 0563 50       		.byte	0x50
 3351 0564 01       		.uleb128 0x1
 3352 0565 30       		.byte	0x30
 3353 0566 00       		.byte	0
 3354 0567 00       		.byte	0
 3355 0568 10       		.uleb128 0x10
 3356 0569 10050000 		.4byte	.LASF57
 3357 056d 01       		.byte	0x1
 3358 056e 250B     		.2byte	0xb25
 3359 0570 DE000000 		.4byte	0xde
 3360 0574 00000000 		.4byte	.LFB18
 3361 0578 1E000000 		.4byte	.LFE18-.LFB18
 3362 057c 01       		.uleb128 0x1
 3363 057d 9C       		.byte	0x9c
 3364 057e B2050000 		.4byte	0x5b2
 3365 0582 0E       		.uleb128 0xe
 3366 0583 AA030000 		.4byte	.LASF45
 3367 0587 01       		.byte	0x1
 3368 0588 250B     		.2byte	0xb25
 3369 058a 6B000000 		.4byte	0x6b
 3370 058e AE020000 		.4byte	.LLST21
 3371 0592 12       		.uleb128 0x12
 3372 0593 00000000 		.4byte	.LASF54
 3373 0597 01       		.byte	0x1
 3374 0598 270B     		.2byte	0xb27
 3375 059a B0040000 		.4byte	0x4b0
 3376 059e 00000020 		.4byte	0x20000000
 3377 05a2 13       		.uleb128 0x13
 3378 05a3 0E000000 		.4byte	.LVL60
 3379 05a7 23040000 		.4byte	0x423
 3380 05ab 14       		.uleb128 0x14
 3381 05ac 01       		.uleb128 0x1
 3382 05ad 50       		.byte	0x50
 3383 05ae 01       		.uleb128 0x1
 3384 05af 30       		.byte	0x30
 3385 05b0 00       		.byte	0
 3386 05b1 00       		.byte	0
 3387 05b2 09       		.uleb128 0x9
 3388 05b3 CC040000 		.4byte	.LASF58
 3389 05b7 01       		.byte	0x1
 3390 05b8 380B     		.2byte	0xb38
 3391 05ba 00000000 		.4byte	.LFB19
 3392 05be 4C000000 		.4byte	.LFE19-.LFB19
 3393 05c2 01       		.uleb128 0x1
 3394 05c3 9C       		.byte	0x9c
 3395 05c4 51060000 		.4byte	0x651
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 131


 3396 05c8 0E       		.uleb128 0xe
 3397 05c9 AA030000 		.4byte	.LASF45
 3398 05cd 01       		.byte	0x1
 3399 05ce 380B     		.2byte	0xb38
 3400 05d0 6B000000 		.4byte	0x6b
 3401 05d4 CF020000 		.4byte	.LLST22
 3402 05d8 0E       		.uleb128 0xe
 3403 05d9 B1030000 		.4byte	.LASF59
 3404 05dd 01       		.byte	0x1
 3405 05de 380B     		.2byte	0xb38
 3406 05e0 6B000000 		.4byte	0x6b
 3407 05e4 F0020000 		.4byte	.LLST23
 3408 05e8 0A       		.uleb128 0xa
 3409 05e9 33010000 		.4byte	.LASF27
 3410 05ed 01       		.byte	0x1
 3411 05ee 3A0B     		.2byte	0xb3a
 3412 05f0 6B000000 		.4byte	0x6b
 3413 05f4 11030000 		.4byte	.LLST24
 3414 05f8 0A       		.uleb128 0xa
 3415 05f9 F2010000 		.4byte	.LASF60
 3416 05fd 01       		.byte	0x1
 3417 05fe 3B0B     		.2byte	0xb3b
 3418 0600 83000000 		.4byte	0x83
 3419 0604 24030000 		.4byte	.LLST25
 3420 0608 0A       		.uleb128 0xa
 3421 0609 88020000 		.4byte	.LASF61
 3422 060d 01       		.byte	0x1
 3423 060e 3C0B     		.2byte	0xb3c
 3424 0610 83000000 		.4byte	0x83
 3425 0614 37030000 		.4byte	.LLST26
 3426 0618 15       		.uleb128 0x15
 3427 0619 10000000 		.4byte	.LVL63
 3428 061d 23040000 		.4byte	0x423
 3429 0621 2B060000 		.4byte	0x62b
 3430 0625 14       		.uleb128 0x14
 3431 0626 01       		.uleb128 0x1
 3432 0627 50       		.byte	0x50
 3433 0628 01       		.uleb128 0x1
 3434 0629 30       		.byte	0x30
 3435 062a 00       		.byte	0
 3436 062b 15       		.uleb128 0x15
 3437 062c 1A000000 		.4byte	.LVL64
 3438 0630 23040000 		.4byte	0x423
 3439 0634 3E060000 		.4byte	0x63e
 3440 0638 14       		.uleb128 0x14
 3441 0639 01       		.uleb128 0x1
 3442 063a 50       		.byte	0x50
 3443 063b 01       		.uleb128 0x1
 3444 063c 30       		.byte	0x30
 3445 063d 00       		.byte	0
 3446 063e 0C       		.uleb128 0xc
 3447 063f 26000000 		.4byte	.LVL66
 3448 0643 D60D0000 		.4byte	0xdd6
 3449 0647 0C       		.uleb128 0xc
 3450 0648 46000000 		.4byte	.LVL72
 3451 064c E10D0000 		.4byte	0xde1
 3452 0650 00       		.byte	0
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 132


 3453 0651 10       		.uleb128 0x10
 3454 0652 44020000 		.4byte	.LASF62
 3455 0656 01       		.byte	0x1
 3456 0657 5A0B     		.2byte	0xb5a
 3457 0659 6B000000 		.4byte	0x6b
 3458 065d 00000000 		.4byte	.LFB20
 3459 0661 2C000000 		.4byte	.LFE20-.LFB20
 3460 0665 01       		.uleb128 0x1
 3461 0666 9C       		.byte	0x9c
 3462 0667 9B060000 		.4byte	0x69b
 3463 066b 0E       		.uleb128 0xe
 3464 066c AA030000 		.4byte	.LASF45
 3465 0670 01       		.byte	0x1
 3466 0671 5A0B     		.2byte	0xb5a
 3467 0673 6B000000 		.4byte	0x6b
 3468 0677 6B030000 		.4byte	.LLST27
 3469 067b 0A       		.uleb128 0xa
 3470 067c B1030000 		.4byte	.LASF59
 3471 0680 01       		.byte	0x1
 3472 0681 5C0B     		.2byte	0xb5c
 3473 0683 6B000000 		.4byte	0x6b
 3474 0687 8C030000 		.4byte	.LLST28
 3475 068b 13       		.uleb128 0x13
 3476 068c 0E000000 		.4byte	.LVL76
 3477 0690 23040000 		.4byte	0x423
 3478 0694 14       		.uleb128 0x14
 3479 0695 01       		.uleb128 0x1
 3480 0696 50       		.byte	0x50
 3481 0697 01       		.uleb128 0x1
 3482 0698 30       		.byte	0x30
 3483 0699 00       		.byte	0
 3484 069a 00       		.byte	0
 3485 069b 16       		.uleb128 0x16
 3486 069c D1000000 		.4byte	.LASF64
 3487 06a0 01       		.byte	0x1
 3488 06a1 D50B     		.2byte	0xbd5
 3489 06a3 00000000 		.4byte	.LFB27
 3490 06a7 18000000 		.4byte	.LFE27-.LFB27
 3491 06ab 01       		.uleb128 0x1
 3492 06ac 9C       		.byte	0x9c
 3493 06ad 09       		.uleb128 0x9
 3494 06ae 22070000 		.4byte	.LASF65
 3495 06b2 01       		.byte	0x1
 3496 06b3 E90B     		.2byte	0xbe9
 3497 06b5 00000000 		.4byte	.LFB28
 3498 06b9 30000000 		.4byte	.LFE28-.LFB28
 3499 06bd 01       		.uleb128 0x1
 3500 06be 9C       		.byte	0x9c
 3501 06bf E6060000 		.4byte	0x6e6
 3502 06c3 0E       		.uleb128 0xe
 3503 06c4 1F050000 		.4byte	.LASF66
 3504 06c8 01       		.byte	0x1
 3505 06c9 E90B     		.2byte	0xbe9
 3506 06cb 83000000 		.4byte	0x83
 3507 06cf 9F030000 		.4byte	.LLST29
 3508 06d3 0C       		.uleb128 0xc
 3509 06d4 0E000000 		.4byte	.LVL81
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 133


 3510 06d8 EC0D0000 		.4byte	0xdec
 3511 06dc 0C       		.uleb128 0xc
 3512 06dd 26000000 		.4byte	.LVL83
 3513 06e1 EC0D0000 		.4byte	0xdec
 3514 06e5 00       		.byte	0
 3515 06e6 0B       		.uleb128 0xb
 3516 06e7 2B020000 		.4byte	.LASF67
 3517 06eb 01       		.byte	0x1
 3518 06ec A7       		.byte	0xa7
 3519 06ed 00000000 		.4byte	.LFB3
 3520 06f1 D0000000 		.4byte	.LFE3-.LFB3
 3521 06f5 01       		.uleb128 0x1
 3522 06f6 9C       		.byte	0x9c
 3523 06f7 A2070000 		.4byte	0x7a2
 3524 06fb 17       		.uleb128 0x17
 3525 06fc 22010000 		.4byte	.LASF26
 3526 0700 01       		.byte	0x1
 3527 0701 AD       		.byte	0xad
 3528 0702 83000000 		.4byte	0x83
 3529 0706 BD030000 		.4byte	.LLST30
 3530 070a 17       		.uleb128 0x17
 3531 070b 33010000 		.4byte	.LASF27
 3532 070f 01       		.byte	0x1
 3533 0710 AE       		.byte	0xae
 3534 0711 6B000000 		.4byte	0x6b
 3535 0715 D0030000 		.4byte	.LLST31
 3536 0719 17       		.uleb128 0x17
 3537 071a 6F030000 		.4byte	.LASF68
 3538 071e 01       		.byte	0x1
 3539 071f AF       		.byte	0xaf
 3540 0720 83000000 		.4byte	0x83
 3541 0724 E3030000 		.4byte	.LLST32
 3542 0728 17       		.uleb128 0x17
 3543 0729 40030000 		.4byte	.LASF69
 3544 072d 01       		.byte	0x1
 3545 072e B0       		.byte	0xb0
 3546 072f 83000000 		.4byte	0x83
 3547 0733 0D040000 		.4byte	.LLST33
 3548 0737 18       		.uleb128 0x18
 3549 0738 16070000 		.4byte	.LASF70
 3550 073c 01       		.byte	0x1
 3551 073d B1       		.byte	0xb1
 3552 073e D9000000 		.4byte	0xd9
 3553 0742 02       		.uleb128 0x2
 3554 0743 91       		.byte	0x91
 3555 0744 6C       		.sleb128 -20
 3556 0745 0C       		.uleb128 0xc
 3557 0746 08000000 		.4byte	.LVL86
 3558 074a F70D0000 		.4byte	0xdf7
 3559 074e 0C       		.uleb128 0xc
 3560 074f 10000000 		.4byte	.LVL87
 3561 0753 D60D0000 		.4byte	0xdd6
 3562 0757 15       		.uleb128 0x15
 3563 0758 62000000 		.4byte	.LVL96
 3564 075c 020E0000 		.4byte	0xe02
 3565 0760 6B070000 		.4byte	0x76b
 3566 0764 14       		.uleb128 0x14
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 134


 3567 0765 01       		.uleb128 0x1
 3568 0766 50       		.byte	0x50
 3569 0767 02       		.uleb128 0x2
 3570 0768 08       		.byte	0x8
 3571 0769 30       		.byte	0x30
 3572 076a 00       		.byte	0
 3573 076b 15       		.uleb128 0x15
 3574 076c 7E000000 		.4byte	.LVL99
 3575 0770 AD060000 		.4byte	0x6ad
 3576 0774 7E070000 		.4byte	0x77e
 3577 0778 14       		.uleb128 0x14
 3578 0779 01       		.uleb128 0x1
 3579 077a 50       		.byte	0x50
 3580 077b 01       		.uleb128 0x1
 3581 077c 31       		.byte	0x31
 3582 077d 00       		.byte	0
 3583 077e 15       		.uleb128 0x15
 3584 077f 92000000 		.4byte	.LVL102
 3585 0783 AD060000 		.4byte	0x6ad
 3586 0787 91070000 		.4byte	0x791
 3587 078b 14       		.uleb128 0x14
 3588 078c 01       		.uleb128 0x1
 3589 078d 50       		.byte	0x50
 3590 078e 01       		.uleb128 0x1
 3591 078f 31       		.byte	0x31
 3592 0790 00       		.byte	0
 3593 0791 13       		.uleb128 0x13
 3594 0792 A8000000 		.4byte	.LVL104
 3595 0796 E10D0000 		.4byte	0xde1
 3596 079a 14       		.uleb128 0x14
 3597 079b 01       		.uleb128 0x1
 3598 079c 50       		.byte	0x50
 3599 079d 02       		.uleb128 0x2
 3600 079e 75       		.byte	0x75
 3601 079f 00       		.sleb128 0
 3602 07a0 00       		.byte	0
 3603 07a1 00       		.byte	0
 3604 07a2 09       		.uleb128 0x9
 3605 07a3 BA030000 		.4byte	.LASF71
 3606 07a7 01       		.byte	0x1
 3607 07a8 B903     		.2byte	0x3b9
 3608 07aa 00000000 		.4byte	.LFB10
 3609 07ae D8000000 		.4byte	.LFE10-.LFB10
 3610 07b2 01       		.uleb128 0x1
 3611 07b3 9C       		.byte	0x9c
 3612 07b4 6A080000 		.4byte	0x86a
 3613 07b8 0E       		.uleb128 0xe
 3614 07b9 22010000 		.4byte	.LASF26
 3615 07bd 01       		.byte	0x1
 3616 07be B903     		.2byte	0x3b9
 3617 07c0 83000000 		.4byte	0x83
 3618 07c4 2C040000 		.4byte	.LLST34
 3619 07c8 0A       		.uleb128 0xa
 3620 07c9 33010000 		.4byte	.LASF27
 3621 07cd 01       		.byte	0x1
 3622 07ce BB03     		.2byte	0x3bb
 3623 07d0 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 135


 3624 07d4 7C040000 		.4byte	.LLST35
 3625 07d8 0A       		.uleb128 0xa
 3626 07d9 FF060000 		.4byte	.LASF72
 3627 07dd 01       		.byte	0x1
 3628 07de BC03     		.2byte	0x3bc
 3629 07e0 6B000000 		.4byte	0x6b
 3630 07e4 90040000 		.4byte	.LLST36
 3631 07e8 0A       		.uleb128 0xa
 3632 07e9 7C010000 		.4byte	.LASF73
 3633 07ed 01       		.byte	0x1
 3634 07ee BF03     		.2byte	0x3bf
 3635 07f0 83000000 		.4byte	0x83
 3636 07f4 B4040000 		.4byte	.LLST37
 3637 07f8 0C       		.uleb128 0xc
 3638 07f9 26000000 		.4byte	.LVL107
 3639 07fd D60D0000 		.4byte	0xdd6
 3640 0801 0C       		.uleb128 0xc
 3641 0802 2C000000 		.4byte	.LVL109
 3642 0806 62010000 		.4byte	0x162
 3643 080a 0C       		.uleb128 0xc
 3644 080b 34000000 		.4byte	.LVL111
 3645 080f 1C010000 		.4byte	0x11c
 3646 0813 15       		.uleb128 0x15
 3647 0814 74000000 		.4byte	.LVL118
 3648 0818 EC0D0000 		.4byte	0xdec
 3649 081c 27080000 		.4byte	0x827
 3650 0820 14       		.uleb128 0x14
 3651 0821 01       		.uleb128 0x1
 3652 0822 50       		.byte	0x50
 3653 0823 02       		.uleb128 0x2
 3654 0824 08       		.byte	0x8
 3655 0825 32       		.byte	0x32
 3656 0826 00       		.byte	0
 3657 0827 15       		.uleb128 0x15
 3658 0828 94000000 		.4byte	.LVL119
 3659 082c EC0D0000 		.4byte	0xdec
 3660 0830 3B080000 		.4byte	0x83b
 3661 0834 14       		.uleb128 0x14
 3662 0835 01       		.uleb128 0x1
 3663 0836 50       		.byte	0x50
 3664 0837 02       		.uleb128 0x2
 3665 0838 08       		.byte	0x8
 3666 0839 32       		.byte	0x32
 3667 083a 00       		.byte	0
 3668 083b 0C       		.uleb128 0xc
 3669 083c AE000000 		.4byte	.LVL121
 3670 0840 E6060000 		.4byte	0x6e6
 3671 0844 15       		.uleb128 0x15
 3672 0845 B4000000 		.4byte	.LVL122
 3673 0849 E10D0000 		.4byte	0xde1
 3674 084d 5A080000 		.4byte	0x85a
 3675 0851 14       		.uleb128 0x14
 3676 0852 01       		.uleb128 0x1
 3677 0853 50       		.byte	0x50
 3678 0854 04       		.uleb128 0x4
 3679 0855 91       		.byte	0x91
 3680 0856 64       		.sleb128 -28
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 136


 3681 0857 94       		.byte	0x94
 3682 0858 01       		.byte	0x1
 3683 0859 00       		.byte	0
 3684 085a 13       		.uleb128 0x13
 3685 085b BC000000 		.4byte	.LVL125
 3686 085f 23040000 		.4byte	0x423
 3687 0863 14       		.uleb128 0x14
 3688 0864 01       		.uleb128 0x1
 3689 0865 50       		.byte	0x50
 3690 0866 01       		.uleb128 0x1
 3691 0867 30       		.byte	0x30
 3692 0868 00       		.byte	0
 3693 0869 00       		.byte	0
 3694 086a 09       		.uleb128 0x9
 3695 086b BF050000 		.4byte	.LASF74
 3696 086f 01       		.byte	0x1
 3697 0870 000C     		.2byte	0xc00
 3698 0872 00000000 		.4byte	.LFB29
 3699 0876 14000000 		.4byte	.LFE29-.LFB29
 3700 087a 01       		.uleb128 0x1
 3701 087b 9C       		.byte	0x9c
 3702 087c 9A080000 		.4byte	0x89a
 3703 0880 0E       		.uleb128 0xe
 3704 0881 B0080000 		.4byte	.LASF75
 3705 0885 01       		.byte	0x1
 3706 0886 000C     		.2byte	0xc00
 3707 0888 77000000 		.4byte	0x77
 3708 088c F7040000 		.4byte	.LLST38
 3709 0890 0C       		.uleb128 0xc
 3710 0891 0C000000 		.4byte	.LVL128
 3711 0895 EC0D0000 		.4byte	0xdec
 3712 0899 00       		.byte	0
 3713 089a 19       		.uleb128 0x19
 3714 089b 27010000 		.4byte	.LASF76
 3715 089f 01       		.byte	0x1
 3716 08a0 0E0C     		.2byte	0xc0e
 3717 08a2 00000000 		.4byte	.LFB30
 3718 08a6 4C000000 		.4byte	.LFE30-.LFB30
 3719 08aa 01       		.uleb128 0x1
 3720 08ab 9C       		.byte	0x9c
 3721 08ac C1080000 		.4byte	0x8c1
 3722 08b0 0E       		.uleb128 0xe
 3723 08b1 22010000 		.4byte	.LASF26
 3724 08b5 01       		.byte	0x1
 3725 08b6 0E0C     		.2byte	0xc0e
 3726 08b8 83000000 		.4byte	0x83
 3727 08bc 18050000 		.4byte	.LLST39
 3728 08c0 00       		.byte	0
 3729 08c1 16       		.uleb128 0x16
 3730 08c2 A3070000 		.4byte	.LASF77
 3731 08c6 01       		.byte	0x1
 3732 08c7 7A0C     		.2byte	0xc7a
 3733 08c9 00000000 		.4byte	.LFB34
 3734 08cd 10000000 		.4byte	.LFE34-.LFB34
 3735 08d1 01       		.uleb128 0x1
 3736 08d2 9C       		.byte	0x9c
 3737 08d3 16       		.uleb128 0x16
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 137


 3738 08d4 E1000000 		.4byte	.LASF78
 3739 08d8 01       		.byte	0x1
 3740 08d9 8A0C     		.2byte	0xc8a
 3741 08db 00000000 		.4byte	.LFB35
 3742 08df 10000000 		.4byte	.LFE35-.LFB35
 3743 08e3 01       		.uleb128 0x1
 3744 08e4 9C       		.byte	0x9c
 3745 08e5 09       		.uleb128 0x9
 3746 08e6 9A060000 		.4byte	.LASF79
 3747 08ea 01       		.byte	0x1
 3748 08eb 690C     		.2byte	0xc69
 3749 08ed 00000000 		.4byte	.LFB33
 3750 08f1 18000000 		.4byte	.LFE33-.LFB33
 3751 08f5 01       		.uleb128 0x1
 3752 08f6 9C       		.byte	0x9c
 3753 08f7 05090000 		.4byte	0x905
 3754 08fb 0C       		.uleb128 0xc
 3755 08fc 06000000 		.4byte	.LVL133
 3756 0900 D3080000 		.4byte	0x8d3
 3757 0904 00       		.byte	0
 3758 0905 16       		.uleb128 0x16
 3759 0906 42070000 		.4byte	.LASF80
 3760 090a 01       		.byte	0x1
 3761 090b 9A0C     		.2byte	0xc9a
 3762 090d 00000000 		.4byte	.LFB36
 3763 0911 10000000 		.4byte	.LFE36-.LFB36
 3764 0915 01       		.uleb128 0x1
 3765 0916 9C       		.byte	0x9c
 3766 0917 09       		.uleb128 0x9
 3767 0918 C4080000 		.4byte	.LASF81
 3768 091c 01       		.byte	0x1
 3769 091d AB0C     		.2byte	0xcab
 3770 091f 00000000 		.4byte	.LFB37
 3771 0923 10000000 		.4byte	.LFE37-.LFB37
 3772 0927 01       		.uleb128 0x1
 3773 0928 9C       		.byte	0x9c
 3774 0929 3E090000 		.4byte	0x93e
 3775 092d 0E       		.uleb128 0xe
 3776 092e 88020000 		.4byte	.LASF61
 3777 0932 01       		.byte	0x1
 3778 0933 AB0C     		.2byte	0xcab
 3779 0935 83000000 		.4byte	0x83
 3780 0939 39050000 		.4byte	.LLST40
 3781 093d 00       		.byte	0
 3782 093e 0D       		.uleb128 0xd
 3783 093f 48010000 		.4byte	.LASF83
 3784 0943 01       		.byte	0x1
 3785 0944 BB0C     		.2byte	0xcbb
 3786 0946 83000000 		.4byte	0x83
 3787 094a 00000000 		.4byte	.LFB38
 3788 094e 10000000 		.4byte	.LFE38-.LFB38
 3789 0952 01       		.uleb128 0x1
 3790 0953 9C       		.byte	0x9c
 3791 0954 0D       		.uleb128 0xd
 3792 0955 AC040000 		.4byte	.LASF84
 3793 0959 01       		.byte	0x1
 3794 095a CB0C     		.2byte	0xccb
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 138


 3795 095c 83000000 		.4byte	0x83
 3796 0960 00000000 		.4byte	.LFB39
 3797 0964 10000000 		.4byte	.LFE39-.LFB39
 3798 0968 01       		.uleb128 0x1
 3799 0969 9C       		.byte	0x9c
 3800 096a 09       		.uleb128 0x9
 3801 096b 8D030000 		.4byte	.LASF85
 3802 096f 01       		.byte	0x1
 3803 0970 EB0C     		.2byte	0xceb
 3804 0972 00000000 		.4byte	.LFB40
 3805 0976 20000000 		.4byte	.LFE40-.LFB40
 3806 097a 01       		.uleb128 0x1
 3807 097b 9C       		.byte	0x9c
 3808 097c 8F090000 		.4byte	0x98f
 3809 0980 0F       		.uleb128 0xf
 3810 0981 8E020000 		.4byte	.LASF86
 3811 0985 01       		.byte	0x1
 3812 0986 EB0C     		.2byte	0xceb
 3813 0988 83000000 		.4byte	0x83
 3814 098c 01       		.uleb128 0x1
 3815 098d 50       		.byte	0x50
 3816 098e 00       		.byte	0
 3817 098f 0D       		.uleb128 0xd
 3818 0990 2A070000 		.4byte	.LASF87
 3819 0994 01       		.byte	0x1
 3820 0995 040D     		.2byte	0xd04
 3821 0997 83000000 		.4byte	0x83
 3822 099b 00000000 		.4byte	.LFB41
 3823 099f 10000000 		.4byte	.LFE41-.LFB41
 3824 09a3 01       		.uleb128 0x1
 3825 09a4 9C       		.byte	0x9c
 3826 09a5 0D       		.uleb128 0xd
 3827 09a6 A8020000 		.4byte	.LASF88
 3828 09aa 01       		.byte	0x1
 3829 09ab 1B0D     		.2byte	0xd1b
 3830 09ad 83000000 		.4byte	0x83
 3831 09b1 00000000 		.4byte	.LFB42
 3832 09b5 10000000 		.4byte	.LFE42-.LFB42
 3833 09b9 01       		.uleb128 0x1
 3834 09ba 9C       		.byte	0x9c
 3835 09bb 1A       		.uleb128 0x1a
 3836 09bc D7080000 		.4byte	.LASF132
 3837 09c0 01       		.byte	0x1
 3838 09c1 700D     		.2byte	0xd70
 3839 09c3 00000000 		.4byte	.LFB46
 3840 09c7 28000000 		.4byte	.LFE46-.LFB46
 3841 09cb 01       		.uleb128 0x1
 3842 09cc 9C       		.byte	0x9c
 3843 09cd E9090000 		.4byte	0x9e9
 3844 09d1 1B       		.uleb128 0x1b
 3845 09d2 6900     		.ascii	"i\000"
 3846 09d4 01       		.byte	0x1
 3847 09d5 720D     		.2byte	0xd72
 3848 09d7 83000000 		.4byte	0x83
 3849 09db 5A050000 		.4byte	.LLST41
 3850 09df 0C       		.uleb128 0xc
 3851 09e0 06000000 		.4byte	.LVL137
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 139


 3852 09e4 A5090000 		.4byte	0x9a5
 3853 09e8 00       		.byte	0
 3854 09e9 16       		.uleb128 0x16
 3855 09ea E1020000 		.4byte	.LASF89
 3856 09ee 01       		.byte	0x1
 3857 09ef 280D     		.2byte	0xd28
 3858 09f1 00000000 		.4byte	.LFB43
 3859 09f5 0C000000 		.4byte	.LFE43-.LFB43
 3860 09f9 01       		.uleb128 0x1
 3861 09fa 9C       		.byte	0x9c
 3862 09fb 19       		.uleb128 0x19
 3863 09fc 7A020000 		.4byte	.LASF90
 3864 0a00 01       		.byte	0x1
 3865 0a01 4B0C     		.2byte	0xc4b
 3866 0a03 00000000 		.4byte	.LFB32
 3867 0a07 44000000 		.4byte	.LFE32-.LFB32
 3868 0a0b 01       		.uleb128 0x1
 3869 0a0c 9C       		.byte	0x9c
 3870 0a0d 610A0000 		.4byte	0xa61
 3871 0a11 1B       		.uleb128 0x1b
 3872 0a12 6900     		.ascii	"i\000"
 3873 0a14 01       		.byte	0x1
 3874 0a15 4D0C     		.2byte	0xc4d
 3875 0a17 83000000 		.4byte	0x83
 3876 0a1b 78050000 		.4byte	.LLST42
 3877 0a1f 15       		.uleb128 0x15
 3878 0a20 1C000000 		.4byte	.LVL147
 3879 0a24 48040000 		.4byte	0x448
 3880 0a28 3B0A0000 		.4byte	0xa3b
 3881 0a2c 14       		.uleb128 0x14
 3882 0a2d 01       		.uleb128 0x1
 3883 0a2e 50       		.byte	0x50
 3884 0a2f 01       		.uleb128 0x1
 3885 0a30 3F       		.byte	0x3f
 3886 0a31 14       		.uleb128 0x14
 3887 0a32 01       		.uleb128 0x1
 3888 0a33 51       		.byte	0x51
 3889 0a34 05       		.uleb128 0x5
 3890 0a35 03       		.byte	0x3
 3891 0a36 00000000 		.4byte	CySysTickServiceCallbacks
 3892 0a3a 00       		.byte	0
 3893 0a3b 15       		.uleb128 0x15
 3894 0a3c 22000000 		.4byte	.LVL148
 3895 0a40 6A090000 		.4byte	0x96a
 3896 0a44 4E0A0000 		.4byte	0xa4e
 3897 0a48 14       		.uleb128 0x14
 3898 0a49 01       		.uleb128 0x1
 3899 0a4a 50       		.byte	0x50
 3900 0a4b 01       		.uleb128 0x1
 3901 0a4c 31       		.byte	0x31
 3902 0a4d 00       		.byte	0
 3903 0a4e 0C       		.uleb128 0xc
 3904 0a4f 32000000 		.4byte	.LVL150
 3905 0a53 17090000 		.4byte	0x917
 3906 0a57 0C       		.uleb128 0xc
 3907 0a58 36000000 		.4byte	.LVL151
 3908 0a5c E9090000 		.4byte	0x9e9
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 140


 3909 0a60 00       		.byte	0
 3910 0a61 09       		.uleb128 0x9
 3911 0a62 20040000 		.4byte	.LASF91
 3912 0a66 01       		.byte	0x1
 3913 0a67 2E0C     		.2byte	0xc2e
 3914 0a69 00000000 		.4byte	.LFB31
 3915 0a6d 20000000 		.4byte	.LFE31-.LFB31
 3916 0a71 01       		.uleb128 0x1
 3917 0a72 9C       		.byte	0x9c
 3918 0a73 8A0A0000 		.4byte	0xa8a
 3919 0a77 0C       		.uleb128 0xc
 3920 0a78 0E000000 		.4byte	.LVL152
 3921 0a7c FB090000 		.4byte	0x9fb
 3922 0a80 0C       		.uleb128 0xc
 3923 0a81 18000000 		.4byte	.LVL153
 3924 0a85 E5080000 		.4byte	0x8e5
 3925 0a89 00       		.byte	0
 3926 0a8a 10       		.uleb128 0x10
 3927 0a8b D7060000 		.4byte	.LASF92
 3928 0a8f 01       		.byte	0x1
 3929 0a90 4B0D     		.2byte	0xd4b
 3930 0a92 FF000000 		.4byte	0xff
 3931 0a96 00000000 		.4byte	.LFB44
 3932 0a9a 10000000 		.4byte	.LFE44-.LFB44
 3933 0a9e 01       		.uleb128 0x1
 3934 0a9f 9C       		.byte	0x9c
 3935 0aa0 D10A0000 		.4byte	0xad1
 3936 0aa4 0E       		.uleb128 0xe
 3937 0aa5 AA030000 		.4byte	.LASF45
 3938 0aa9 01       		.byte	0x1
 3939 0aaa 4B0D     		.2byte	0xd4b
 3940 0aac 83000000 		.4byte	0x83
 3941 0ab0 97050000 		.4byte	.LLST43
 3942 0ab4 0F       		.uleb128 0xf
 3943 0ab5 A3040000 		.4byte	.LASF93
 3944 0ab9 01       		.byte	0x1
 3945 0aba 4B0D     		.2byte	0xd4b
 3946 0abc FF000000 		.4byte	0xff
 3947 0ac0 01       		.uleb128 0x1
 3948 0ac1 51       		.byte	0x51
 3949 0ac2 11       		.uleb128 0x11
 3950 0ac3 77000000 		.4byte	.LASF94
 3951 0ac7 01       		.byte	0x1
 3952 0ac8 4D0D     		.2byte	0xd4d
 3953 0aca FF000000 		.4byte	0xff
 3954 0ace 01       		.uleb128 0x1
 3955 0acf 50       		.byte	0x50
 3956 0ad0 00       		.byte	0
 3957 0ad1 10       		.uleb128 0x10
 3958 0ad2 BA010000 		.4byte	.LASF95
 3959 0ad6 01       		.byte	0x1
 3960 0ad7 630D     		.2byte	0xd63
 3961 0ad9 FF000000 		.4byte	0xff
 3962 0add 00000000 		.4byte	.LFB45
 3963 0ae1 0C000000 		.4byte	.LFE45-.LFB45
 3964 0ae5 01       		.uleb128 0x1
 3965 0ae6 9C       		.byte	0x9c
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 141


 3966 0ae7 FC0A0000 		.4byte	0xafc
 3967 0aeb 0E       		.uleb128 0xe
 3968 0aec AA030000 		.4byte	.LASF45
 3969 0af0 01       		.byte	0x1
 3970 0af1 630D     		.2byte	0xd63
 3971 0af3 83000000 		.4byte	0x83
 3972 0af7 B8050000 		.4byte	.LLST44
 3973 0afb 00       		.byte	0
 3974 0afc 09       		.uleb128 0x9
 3975 0afd 9A020000 		.4byte	.LASF96
 3976 0b01 01       		.byte	0x1
 3977 0b02 900D     		.2byte	0xd90
 3978 0b04 00000000 		.4byte	.LFB47
 3979 0b08 70000000 		.4byte	.LFE47-.LFB47
 3980 0b0c 01       		.uleb128 0x1
 3981 0b0d 9C       		.byte	0x9c
 3982 0b0e 210B0000 		.4byte	0xb21
 3983 0b12 0F       		.uleb128 0xf
 3984 0b13 0D070000 		.4byte	.LASF97
 3985 0b17 01       		.byte	0x1
 3986 0b18 900D     		.2byte	0xd90
 3987 0b1a 210B0000 		.4byte	0xb21
 3988 0b1e 01       		.uleb128 0x1
 3989 0b1f 50       		.byte	0x50
 3990 0b20 00       		.byte	0
 3991 0b21 06       		.uleb128 0x6
 3992 0b22 04       		.byte	0x4
 3993 0b23 83000000 		.4byte	0x83
 3994 0b27 09       		.uleb128 0x9
 3995 0b28 62050000 		.4byte	.LASF98
 3996 0b2c 01       		.byte	0x1
 3997 0b2d BD0D     		.2byte	0xdbd
 3998 0b2f 00000000 		.4byte	.LFB48
 3999 0b33 20000000 		.4byte	.LFE48-.LFB48
 4000 0b37 01       		.uleb128 0x1
 4001 0b38 9C       		.byte	0x9c
 4002 0b39 5E0B0000 		.4byte	0xb5e
 4003 0b3d 0E       		.uleb128 0xe
 4004 0b3e 3C040000 		.4byte	.LASF99
 4005 0b42 01       		.byte	0x1
 4006 0b43 BD0D     		.2byte	0xdbd
 4007 0b45 83000000 		.4byte	0x83
 4008 0b49 D9050000 		.4byte	.LLST45
 4009 0b4d 0A       		.uleb128 0xa
 4010 0b4e 6F030000 		.4byte	.LASF68
 4011 0b52 01       		.byte	0x1
 4012 0b53 BF0D     		.2byte	0xdbf
 4013 0b55 83000000 		.4byte	0x83
 4014 0b59 FA050000 		.4byte	.LLST46
 4015 0b5d 00       		.byte	0
 4016 0b5e 09       		.uleb128 0x9
 4017 0b5f CF030000 		.4byte	.LASF100
 4018 0b63 01       		.byte	0x1
 4019 0b64 D90D     		.2byte	0xdd9
 4020 0b66 00000000 		.4byte	.LFB49
 4021 0b6a 20000000 		.4byte	.LFE49-.LFB49
 4022 0b6e 01       		.uleb128 0x1
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 142


 4023 0b6f 9C       		.byte	0x9c
 4024 0b70 950B0000 		.4byte	0xb95
 4025 0b74 0E       		.uleb128 0xe
 4026 0b75 3C040000 		.4byte	.LASF99
 4027 0b79 01       		.byte	0x1
 4028 0b7a D90D     		.2byte	0xdd9
 4029 0b7c 83000000 		.4byte	0x83
 4030 0b80 18060000 		.4byte	.LLST47
 4031 0b84 0A       		.uleb128 0xa
 4032 0b85 6F030000 		.4byte	.LASF68
 4033 0b89 01       		.byte	0x1
 4034 0b8a DB0D     		.2byte	0xddb
 4035 0b8c 83000000 		.4byte	0x83
 4036 0b90 39060000 		.4byte	.LLST48
 4037 0b94 00       		.byte	0
 4038 0b95 09       		.uleb128 0x9
 4039 0b96 85070000 		.4byte	.LASF101
 4040 0b9a 01       		.byte	0x1
 4041 0b9b F50D     		.2byte	0xdf5
 4042 0b9d 00000000 		.4byte	.LFB50
 4043 0ba1 20000000 		.4byte	.LFE50-.LFB50
 4044 0ba5 01       		.uleb128 0x1
 4045 0ba6 9C       		.byte	0x9c
 4046 0ba7 CC0B0000 		.4byte	0xbcc
 4047 0bab 0E       		.uleb128 0xe
 4048 0bac 3C040000 		.4byte	.LASF99
 4049 0bb0 01       		.byte	0x1
 4050 0bb1 F50D     		.2byte	0xdf5
 4051 0bb3 83000000 		.4byte	0x83
 4052 0bb7 57060000 		.4byte	.LLST49
 4053 0bbb 0A       		.uleb128 0xa
 4054 0bbc 6F030000 		.4byte	.LASF68
 4055 0bc0 01       		.byte	0x1
 4056 0bc1 F70D     		.2byte	0xdf7
 4057 0bc3 83000000 		.4byte	0x83
 4058 0bc7 78060000 		.4byte	.LLST50
 4059 0bcb 00       		.byte	0
 4060 0bcc 09       		.uleb128 0x9
 4061 0bcd 4C040000 		.4byte	.LASF102
 4062 0bd1 01       		.byte	0x1
 4063 0bd2 130E     		.2byte	0xe13
 4064 0bd4 00000000 		.4byte	.LFB51
 4065 0bd8 4C000000 		.4byte	.LFE51-.LFB51
 4066 0bdc 01       		.uleb128 0x1
 4067 0bdd 9C       		.byte	0x9c
 4068 0bde 220C0000 		.4byte	0xc22
 4069 0be2 0E       		.uleb128 0xe
 4070 0be3 C1000000 		.4byte	.LASF103
 4071 0be7 01       		.byte	0x1
 4072 0be8 130E     		.2byte	0xe13
 4073 0bea 83000000 		.4byte	0x83
 4074 0bee 96060000 		.4byte	.LLST51
 4075 0bf2 0E       		.uleb128 0xe
 4076 0bf3 3C040000 		.4byte	.LASF99
 4077 0bf7 01       		.byte	0x1
 4078 0bf8 130E     		.2byte	0xe13
 4079 0bfa 83000000 		.4byte	0x83
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 143


 4080 0bfe E9060000 		.4byte	.LLST52
 4081 0c02 0A       		.uleb128 0xa
 4082 0c03 6F030000 		.4byte	.LASF68
 4083 0c07 01       		.byte	0x1
 4084 0c08 150E     		.2byte	0xe15
 4085 0c0a 83000000 		.4byte	0x83
 4086 0c0e 3C070000 		.4byte	.LLST53
 4087 0c12 13       		.uleb128 0x13
 4088 0c13 3C000000 		.4byte	.LVL183
 4089 0c17 23040000 		.4byte	0x423
 4090 0c1b 14       		.uleb128 0x14
 4091 0c1c 01       		.uleb128 0x1
 4092 0c1d 50       		.byte	0x50
 4093 0c1e 01       		.uleb128 0x1
 4094 0c1f 30       		.byte	0x30
 4095 0c20 00       		.byte	0
 4096 0c21 00       		.byte	0
 4097 0c22 09       		.uleb128 0x9
 4098 0c23 2C050000 		.4byte	.LASF104
 4099 0c27 01       		.byte	0x1
 4100 0c28 510E     		.2byte	0xe51
 4101 0c2a 00000000 		.4byte	.LFB52
 4102 0c2e 18000000 		.4byte	.LFE52-.LFB52
 4103 0c32 01       		.uleb128 0x1
 4104 0c33 9C       		.byte	0x9c
 4105 0c34 490C0000 		.4byte	0xc49
 4106 0c38 0E       		.uleb128 0xe
 4107 0c39 3C040000 		.4byte	.LASF99
 4108 0c3d 01       		.byte	0x1
 4109 0c3e 510E     		.2byte	0xe51
 4110 0c40 83000000 		.4byte	0x83
 4111 0c44 70070000 		.4byte	.LLST54
 4112 0c48 00       		.byte	0
 4113 0c49 09       		.uleb128 0x9
 4114 0c4a 7F080000 		.4byte	.LASF105
 4115 0c4e 01       		.byte	0x1
 4116 0c4f 690E     		.2byte	0xe69
 4117 0c51 00000000 		.4byte	.LFB53
 4118 0c55 14000000 		.4byte	.LFE53-.LFB53
 4119 0c59 01       		.uleb128 0x1
 4120 0c5a 9C       		.byte	0x9c
 4121 0c5b 700C0000 		.4byte	0xc70
 4122 0c5f 0E       		.uleb128 0xe
 4123 0c60 DD040000 		.4byte	.LASF106
 4124 0c64 01       		.byte	0x1
 4125 0c65 690E     		.2byte	0xe69
 4126 0c67 83000000 		.4byte	0x83
 4127 0c6b 9C070000 		.4byte	.LLST55
 4128 0c6f 00       		.byte	0
 4129 0c70 09       		.uleb128 0x9
 4130 0c71 6B060000 		.4byte	.LASF107
 4131 0c75 01       		.byte	0x1
 4132 0c76 950E     		.2byte	0xe95
 4133 0c78 00000000 		.4byte	.LFB54
 4134 0c7c 18000000 		.4byte	.LFE54-.LFB54
 4135 0c80 01       		.uleb128 0x1
 4136 0c81 9C       		.byte	0x9c
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 144


 4137 0c82 970C0000 		.4byte	0xc97
 4138 0c86 0E       		.uleb128 0xe
 4139 0c87 5B010000 		.4byte	.LASF108
 4140 0c8b 01       		.byte	0x1
 4141 0c8c 950E     		.2byte	0xe95
 4142 0c8e 83000000 		.4byte	0x83
 4143 0c92 BD070000 		.4byte	.LLST56
 4144 0c96 00       		.byte	0
 4145 0c97 16       		.uleb128 0x16
 4146 0c98 60080000 		.4byte	.LASF109
 4147 0c9c 01       		.byte	0x1
 4148 0c9d A70E     		.2byte	0xea7
 4149 0c9f 00000000 		.4byte	.LFB55
 4150 0ca3 14000000 		.4byte	.LFE55-.LFB55
 4151 0ca7 01       		.uleb128 0x1
 4152 0ca8 9C       		.byte	0x9c
 4153 0ca9 16       		.uleb128 0x16
 4154 0caa 9A010000 		.4byte	.LASF110
 4155 0cae 01       		.byte	0x1
 4156 0caf B80E     		.2byte	0xeb8
 4157 0cb1 00000000 		.4byte	.LFB56
 4158 0cb5 14000000 		.4byte	.LFE56-.LFB56
 4159 0cb9 01       		.uleb128 0x1
 4160 0cba 9C       		.byte	0x9c
 4161 0cbb 16       		.uleb128 0x16
 4162 0cbc CB020000 		.4byte	.LASF111
 4163 0cc0 01       		.byte	0x1
 4164 0cc1 C80E     		.2byte	0xec8
 4165 0cc3 00000000 		.4byte	.LFB57
 4166 0cc7 10000000 		.4byte	.LFE57-.LFB57
 4167 0ccb 01       		.uleb128 0x1
 4168 0ccc 9C       		.byte	0x9c
 4169 0ccd 16       		.uleb128 0x16
 4170 0cce 76030000 		.4byte	.LASF112
 4171 0cd2 01       		.byte	0x1
 4172 0cd3 D80E     		.2byte	0xed8
 4173 0cd5 00000000 		.4byte	.LFB58
 4174 0cd9 10000000 		.4byte	.LFE58-.LFB58
 4175 0cdd 01       		.uleb128 0x1
 4176 0cde 9C       		.byte	0x9c
 4177 0cdf 09       		.uleb128 0x9
 4178 0ce0 62020000 		.4byte	.LASF113
 4179 0ce4 01       		.byte	0x1
 4180 0ce5 EC0E     		.2byte	0xeec
 4181 0ce7 00000000 		.4byte	.LFB59
 4182 0ceb 34000000 		.4byte	.LFE59-.LFB59
 4183 0cef 01       		.uleb128 0x1
 4184 0cf0 9C       		.byte	0x9c
 4185 0cf1 160D0000 		.4byte	0xd16
 4186 0cf5 0E       		.uleb128 0xe
 4187 0cf6 02030000 		.4byte	.LASF114
 4188 0cfa 01       		.byte	0x1
 4189 0cfb EC0E     		.2byte	0xeec
 4190 0cfd 9B000000 		.4byte	0x9b
 4191 0d01 DE070000 		.4byte	.LLST57
 4192 0d05 1B       		.uleb128 0x1b
 4193 0d06 746D7000 		.ascii	"tmp\000"
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 145


 4194 0d0a 01       		.byte	0x1
 4195 0d0b EE0E     		.2byte	0xeee
 4196 0d0d 6B000000 		.4byte	0x6b
 4197 0d11 18080000 		.4byte	.LLST58
 4198 0d15 00       		.byte	0
 4199 0d16 10       		.uleb128 0x10
 4200 0d17 37000000 		.4byte	.LASF115
 4201 0d1b 01       		.byte	0x1
 4202 0d1c 090F     		.2byte	0xf09
 4203 0d1e 9B000000 		.4byte	0x9b
 4204 0d22 00000000 		.4byte	.LFB60
 4205 0d26 1C000000 		.4byte	.LFE60-.LFB60
 4206 0d2a 01       		.uleb128 0x1
 4207 0d2b 9C       		.byte	0x9c
 4208 0d2c 4F0D0000 		.4byte	0xd4f
 4209 0d30 1B       		.uleb128 0x1b
 4210 0d31 746D7000 		.ascii	"tmp\000"
 4211 0d35 01       		.byte	0x1
 4212 0d36 0B0F     		.2byte	0xf0b
 4213 0d38 6B000000 		.4byte	0x6b
 4214 0d3c 3C080000 		.4byte	.LLST59
 4215 0d40 11       		.uleb128 0x11
 4216 0d41 F1080000 		.4byte	.LASF116
 4217 0d45 01       		.byte	0x1
 4218 0d46 0C0F     		.2byte	0xf0c
 4219 0d48 9B000000 		.4byte	0x9b
 4220 0d4c 01       		.uleb128 0x1
 4221 0d4d 50       		.byte	0x50
 4222 0d4e 00       		.byte	0
 4223 0d4f 1C       		.uleb128 0x1c
 4224 0d50 FF000000 		.4byte	0xff
 4225 0d54 5F0D0000 		.4byte	0xd5f
 4226 0d58 1D       		.uleb128 0x1d
 4227 0d59 F8000000 		.4byte	0xf8
 4228 0d5d 04       		.byte	0x4
 4229 0d5e 00       		.byte	0
 4230 0d5f 18       		.uleb128 0x18
 4231 0d60 EC060000 		.4byte	.LASF117
 4232 0d64 01       		.byte	0x1
 4233 0d65 22       		.byte	0x22
 4234 0d66 4F0D0000 		.4byte	0xd4f
 4235 0d6a 05       		.uleb128 0x5
 4236 0d6b 03       		.byte	0x3
 4237 0d6c 00000000 		.4byte	CySysTickCallbacks
 4238 0d70 1E       		.uleb128 0x1e
 4239 0d71 BE040000 		.4byte	.LASF118
 4240 0d75 01       		.byte	0x1
 4241 0d76 1B       		.byte	0x1b
 4242 0d77 83000000 		.4byte	0x83
 4243 0d7b 05       		.uleb128 0x5
 4244 0d7c 03       		.byte	0x3
 4245 0d7d 00000000 		.4byte	cydelayFreqHz
 4246 0d81 1E       		.uleb128 0x1e
 4247 0d82 D5010000 		.4byte	.LASF119
 4248 0d86 01       		.byte	0x1
 4249 0d87 1C       		.byte	0x1c
 4250 0d88 83000000 		.4byte	0x83
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 146


 4251 0d8c 05       		.uleb128 0x5
 4252 0d8d 03       		.byte	0x3
 4253 0d8e 00000000 		.4byte	cydelayFreqKhz
 4254 0d92 1E       		.uleb128 0x1e
 4255 0d93 63070000 		.4byte	.LASF120
 4256 0d97 01       		.byte	0x1
 4257 0d98 1D       		.byte	0x1d
 4258 0d99 6B000000 		.4byte	0x6b
 4259 0d9d 05       		.uleb128 0x5
 4260 0d9e 03       		.byte	0x3
 4261 0d9f 00000000 		.4byte	cydelayFreqMhz
 4262 0da3 1E       		.uleb128 0x1e
 4263 0da4 55020000 		.4byte	.LASF121
 4264 0da8 01       		.byte	0x1
 4265 0da9 1E       		.byte	0x1e
 4266 0daa 83000000 		.4byte	0x83
 4267 0dae 05       		.uleb128 0x5
 4268 0daf 03       		.byte	0x3
 4269 0db0 00000000 		.4byte	cydelay32kMs
 4270 0db4 1E       		.uleb128 0x1e
 4271 0db5 A3000000 		.4byte	.LASF122
 4272 0db9 01       		.byte	0x1
 4273 0dba 36       		.byte	0x36
 4274 0dbb 83000000 		.4byte	0x83
 4275 0dbf 05       		.uleb128 0x5
 4276 0dc0 03       		.byte	0x3
 4277 0dc1 00000000 		.4byte	CySysTickInitVar
 4278 0dc5 1E       		.uleb128 0x1e
 4279 0dc6 4F000000 		.4byte	.LASF123
 4280 0dca 01       		.byte	0x1
 4281 0dcb 51       		.byte	0x51
 4282 0dcc 83000000 		.4byte	0x83
 4283 0dd0 05       		.uleb128 0x5
 4284 0dd1 03       		.byte	0x3
 4285 0dd2 00000000 		.4byte	CySysClkPumpConfig
 4286 0dd6 1F       		.uleb128 0x1f
 4287 0dd7 19030000 		.4byte	.LASF124
 4288 0ddb 19030000 		.4byte	.LASF124
 4289 0ddf 03       		.byte	0x3
 4290 0de0 F8       		.byte	0xf8
 4291 0de1 1F       		.uleb128 0x1f
 4292 0de2 E8040000 		.4byte	.LASF125
 4293 0de6 E8040000 		.4byte	.LASF125
 4294 0dea 03       		.byte	0x3
 4295 0deb F9       		.byte	0xf9
 4296 0dec 1F       		.uleb128 0x1f
 4297 0ded 48050000 		.4byte	.LASF126
 4298 0df1 48050000 		.4byte	.LASF126
 4299 0df5 03       		.byte	0x3
 4300 0df6 EF       		.byte	0xef
 4301 0df7 1F       		.uleb128 0x1f
 4302 0df8 72070000 		.4byte	.LASF127
 4303 0dfc 72070000 		.4byte	.LASF127
 4304 0e00 04       		.byte	0x4
 4305 0e01 54       		.byte	0x54
 4306 0e02 1F       		.uleb128 0x1f
 4307 0e03 48080000 		.4byte	.LASF128
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 147


 4308 0e07 48080000 		.4byte	.LASF128
 4309 0e0b 05       		.byte	0x5
 4310 0e0c 52       		.byte	0x52
 4311 0e0d 00       		.byte	0
 4312              		.section	.debug_abbrev,"",%progbits
 4313              	.Ldebug_abbrev0:
 4314 0000 01       		.uleb128 0x1
 4315 0001 11       		.uleb128 0x11
 4316 0002 01       		.byte	0x1
 4317 0003 25       		.uleb128 0x25
 4318 0004 0E       		.uleb128 0xe
 4319 0005 13       		.uleb128 0x13
 4320 0006 0B       		.uleb128 0xb
 4321 0007 03       		.uleb128 0x3
 4322 0008 0E       		.uleb128 0xe
 4323 0009 1B       		.uleb128 0x1b
 4324 000a 0E       		.uleb128 0xe
 4325 000b 55       		.uleb128 0x55
 4326 000c 17       		.uleb128 0x17
 4327 000d 11       		.uleb128 0x11
 4328 000e 01       		.uleb128 0x1
 4329 000f 10       		.uleb128 0x10
 4330 0010 17       		.uleb128 0x17
 4331 0011 00       		.byte	0
 4332 0012 00       		.byte	0
 4333 0013 02       		.uleb128 0x2
 4334 0014 24       		.uleb128 0x24
 4335 0015 00       		.byte	0
 4336 0016 0B       		.uleb128 0xb
 4337 0017 0B       		.uleb128 0xb
 4338 0018 3E       		.uleb128 0x3e
 4339 0019 0B       		.uleb128 0xb
 4340 001a 03       		.uleb128 0x3
 4341 001b 0E       		.uleb128 0xe
 4342 001c 00       		.byte	0
 4343 001d 00       		.byte	0
 4344 001e 03       		.uleb128 0x3
 4345 001f 24       		.uleb128 0x24
 4346 0020 00       		.byte	0
 4347 0021 0B       		.uleb128 0xb
 4348 0022 0B       		.uleb128 0xb
 4349 0023 3E       		.uleb128 0x3e
 4350 0024 0B       		.uleb128 0xb
 4351 0025 03       		.uleb128 0x3
 4352 0026 08       		.uleb128 0x8
 4353 0027 00       		.byte	0
 4354 0028 00       		.byte	0
 4355 0029 04       		.uleb128 0x4
 4356 002a 16       		.uleb128 0x16
 4357 002b 00       		.byte	0
 4358 002c 03       		.uleb128 0x3
 4359 002d 0E       		.uleb128 0xe
 4360 002e 3A       		.uleb128 0x3a
 4361 002f 0B       		.uleb128 0xb
 4362 0030 3B       		.uleb128 0x3b
 4363 0031 05       		.uleb128 0x5
 4364 0032 49       		.uleb128 0x49
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 148


 4365 0033 13       		.uleb128 0x13
 4366 0034 00       		.byte	0
 4367 0035 00       		.byte	0
 4368 0036 05       		.uleb128 0x5
 4369 0037 35       		.uleb128 0x35
 4370 0038 00       		.byte	0
 4371 0039 49       		.uleb128 0x49
 4372 003a 13       		.uleb128 0x13
 4373 003b 00       		.byte	0
 4374 003c 00       		.byte	0
 4375 003d 06       		.uleb128 0x6
 4376 003e 0F       		.uleb128 0xf
 4377 003f 00       		.byte	0
 4378 0040 0B       		.uleb128 0xb
 4379 0041 0B       		.uleb128 0xb
 4380 0042 49       		.uleb128 0x49
 4381 0043 13       		.uleb128 0x13
 4382 0044 00       		.byte	0
 4383 0045 00       		.byte	0
 4384 0046 07       		.uleb128 0x7
 4385 0047 15       		.uleb128 0x15
 4386 0048 00       		.byte	0
 4387 0049 27       		.uleb128 0x27
 4388 004a 19       		.uleb128 0x19
 4389 004b 00       		.byte	0
 4390 004c 00       		.byte	0
 4391 004d 08       		.uleb128 0x8
 4392 004e 2E       		.uleb128 0x2e
 4393 004f 00       		.byte	0
 4394 0050 3F       		.uleb128 0x3f
 4395 0051 19       		.uleb128 0x19
 4396 0052 03       		.uleb128 0x3
 4397 0053 0E       		.uleb128 0xe
 4398 0054 3A       		.uleb128 0x3a
 4399 0055 0B       		.uleb128 0xb
 4400 0056 3B       		.uleb128 0x3b
 4401 0057 0B       		.uleb128 0xb
 4402 0058 27       		.uleb128 0x27
 4403 0059 19       		.uleb128 0x19
 4404 005a 11       		.uleb128 0x11
 4405 005b 01       		.uleb128 0x1
 4406 005c 12       		.uleb128 0x12
 4407 005d 06       		.uleb128 0x6
 4408 005e 40       		.uleb128 0x40
 4409 005f 18       		.uleb128 0x18
 4410 0060 9742     		.uleb128 0x2117
 4411 0062 19       		.uleb128 0x19
 4412 0063 00       		.byte	0
 4413 0064 00       		.byte	0
 4414 0065 09       		.uleb128 0x9
 4415 0066 2E       		.uleb128 0x2e
 4416 0067 01       		.byte	0x1
 4417 0068 3F       		.uleb128 0x3f
 4418 0069 19       		.uleb128 0x19
 4419 006a 03       		.uleb128 0x3
 4420 006b 0E       		.uleb128 0xe
 4421 006c 3A       		.uleb128 0x3a
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 149


 4422 006d 0B       		.uleb128 0xb
 4423 006e 3B       		.uleb128 0x3b
 4424 006f 05       		.uleb128 0x5
 4425 0070 27       		.uleb128 0x27
 4426 0071 19       		.uleb128 0x19
 4427 0072 11       		.uleb128 0x11
 4428 0073 01       		.uleb128 0x1
 4429 0074 12       		.uleb128 0x12
 4430 0075 06       		.uleb128 0x6
 4431 0076 40       		.uleb128 0x40
 4432 0077 18       		.uleb128 0x18
 4433 0078 9742     		.uleb128 0x2117
 4434 007a 19       		.uleb128 0x19
 4435 007b 01       		.uleb128 0x1
 4436 007c 13       		.uleb128 0x13
 4437 007d 00       		.byte	0
 4438 007e 00       		.byte	0
 4439 007f 0A       		.uleb128 0xa
 4440 0080 34       		.uleb128 0x34
 4441 0081 00       		.byte	0
 4442 0082 03       		.uleb128 0x3
 4443 0083 0E       		.uleb128 0xe
 4444 0084 3A       		.uleb128 0x3a
 4445 0085 0B       		.uleb128 0xb
 4446 0086 3B       		.uleb128 0x3b
 4447 0087 05       		.uleb128 0x5
 4448 0088 49       		.uleb128 0x49
 4449 0089 13       		.uleb128 0x13
 4450 008a 02       		.uleb128 0x2
 4451 008b 17       		.uleb128 0x17
 4452 008c 00       		.byte	0
 4453 008d 00       		.byte	0
 4454 008e 0B       		.uleb128 0xb
 4455 008f 2E       		.uleb128 0x2e
 4456 0090 01       		.byte	0x1
 4457 0091 3F       		.uleb128 0x3f
 4458 0092 19       		.uleb128 0x19
 4459 0093 03       		.uleb128 0x3
 4460 0094 0E       		.uleb128 0xe
 4461 0095 3A       		.uleb128 0x3a
 4462 0096 0B       		.uleb128 0xb
 4463 0097 3B       		.uleb128 0x3b
 4464 0098 0B       		.uleb128 0xb
 4465 0099 27       		.uleb128 0x27
 4466 009a 19       		.uleb128 0x19
 4467 009b 11       		.uleb128 0x11
 4468 009c 01       		.uleb128 0x1
 4469 009d 12       		.uleb128 0x12
 4470 009e 06       		.uleb128 0x6
 4471 009f 40       		.uleb128 0x40
 4472 00a0 18       		.uleb128 0x18
 4473 00a1 9742     		.uleb128 0x2117
 4474 00a3 19       		.uleb128 0x19
 4475 00a4 01       		.uleb128 0x1
 4476 00a5 13       		.uleb128 0x13
 4477 00a6 00       		.byte	0
 4478 00a7 00       		.byte	0
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 150


 4479 00a8 0C       		.uleb128 0xc
 4480 00a9 898201   		.uleb128 0x4109
 4481 00ac 00       		.byte	0
 4482 00ad 11       		.uleb128 0x11
 4483 00ae 01       		.uleb128 0x1
 4484 00af 31       		.uleb128 0x31
 4485 00b0 13       		.uleb128 0x13
 4486 00b1 00       		.byte	0
 4487 00b2 00       		.byte	0
 4488 00b3 0D       		.uleb128 0xd
 4489 00b4 2E       		.uleb128 0x2e
 4490 00b5 00       		.byte	0
 4491 00b6 3F       		.uleb128 0x3f
 4492 00b7 19       		.uleb128 0x19
 4493 00b8 03       		.uleb128 0x3
 4494 00b9 0E       		.uleb128 0xe
 4495 00ba 3A       		.uleb128 0x3a
 4496 00bb 0B       		.uleb128 0xb
 4497 00bc 3B       		.uleb128 0x3b
 4498 00bd 05       		.uleb128 0x5
 4499 00be 27       		.uleb128 0x27
 4500 00bf 19       		.uleb128 0x19
 4501 00c0 49       		.uleb128 0x49
 4502 00c1 13       		.uleb128 0x13
 4503 00c2 11       		.uleb128 0x11
 4504 00c3 01       		.uleb128 0x1
 4505 00c4 12       		.uleb128 0x12
 4506 00c5 06       		.uleb128 0x6
 4507 00c6 40       		.uleb128 0x40
 4508 00c7 18       		.uleb128 0x18
 4509 00c8 9742     		.uleb128 0x2117
 4510 00ca 19       		.uleb128 0x19
 4511 00cb 00       		.byte	0
 4512 00cc 00       		.byte	0
 4513 00cd 0E       		.uleb128 0xe
 4514 00ce 05       		.uleb128 0x5
 4515 00cf 00       		.byte	0
 4516 00d0 03       		.uleb128 0x3
 4517 00d1 0E       		.uleb128 0xe
 4518 00d2 3A       		.uleb128 0x3a
 4519 00d3 0B       		.uleb128 0xb
 4520 00d4 3B       		.uleb128 0x3b
 4521 00d5 05       		.uleb128 0x5
 4522 00d6 49       		.uleb128 0x49
 4523 00d7 13       		.uleb128 0x13
 4524 00d8 02       		.uleb128 0x2
 4525 00d9 17       		.uleb128 0x17
 4526 00da 00       		.byte	0
 4527 00db 00       		.byte	0
 4528 00dc 0F       		.uleb128 0xf
 4529 00dd 05       		.uleb128 0x5
 4530 00de 00       		.byte	0
 4531 00df 03       		.uleb128 0x3
 4532 00e0 0E       		.uleb128 0xe
 4533 00e1 3A       		.uleb128 0x3a
 4534 00e2 0B       		.uleb128 0xb
 4535 00e3 3B       		.uleb128 0x3b
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 151


 4536 00e4 05       		.uleb128 0x5
 4537 00e5 49       		.uleb128 0x49
 4538 00e6 13       		.uleb128 0x13
 4539 00e7 02       		.uleb128 0x2
 4540 00e8 18       		.uleb128 0x18
 4541 00e9 00       		.byte	0
 4542 00ea 00       		.byte	0
 4543 00eb 10       		.uleb128 0x10
 4544 00ec 2E       		.uleb128 0x2e
 4545 00ed 01       		.byte	0x1
 4546 00ee 3F       		.uleb128 0x3f
 4547 00ef 19       		.uleb128 0x19
 4548 00f0 03       		.uleb128 0x3
 4549 00f1 0E       		.uleb128 0xe
 4550 00f2 3A       		.uleb128 0x3a
 4551 00f3 0B       		.uleb128 0xb
 4552 00f4 3B       		.uleb128 0x3b
 4553 00f5 05       		.uleb128 0x5
 4554 00f6 27       		.uleb128 0x27
 4555 00f7 19       		.uleb128 0x19
 4556 00f8 49       		.uleb128 0x49
 4557 00f9 13       		.uleb128 0x13
 4558 00fa 11       		.uleb128 0x11
 4559 00fb 01       		.uleb128 0x1
 4560 00fc 12       		.uleb128 0x12
 4561 00fd 06       		.uleb128 0x6
 4562 00fe 40       		.uleb128 0x40
 4563 00ff 18       		.uleb128 0x18
 4564 0100 9742     		.uleb128 0x2117
 4565 0102 19       		.uleb128 0x19
 4566 0103 01       		.uleb128 0x1
 4567 0104 13       		.uleb128 0x13
 4568 0105 00       		.byte	0
 4569 0106 00       		.byte	0
 4570 0107 11       		.uleb128 0x11
 4571 0108 34       		.uleb128 0x34
 4572 0109 00       		.byte	0
 4573 010a 03       		.uleb128 0x3
 4574 010b 0E       		.uleb128 0xe
 4575 010c 3A       		.uleb128 0x3a
 4576 010d 0B       		.uleb128 0xb
 4577 010e 3B       		.uleb128 0x3b
 4578 010f 05       		.uleb128 0x5
 4579 0110 49       		.uleb128 0x49
 4580 0111 13       		.uleb128 0x13
 4581 0112 02       		.uleb128 0x2
 4582 0113 18       		.uleb128 0x18
 4583 0114 00       		.byte	0
 4584 0115 00       		.byte	0
 4585 0116 12       		.uleb128 0x12
 4586 0117 34       		.uleb128 0x34
 4587 0118 00       		.byte	0
 4588 0119 03       		.uleb128 0x3
 4589 011a 0E       		.uleb128 0xe
 4590 011b 3A       		.uleb128 0x3a
 4591 011c 0B       		.uleb128 0xb
 4592 011d 3B       		.uleb128 0x3b
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 152


 4593 011e 05       		.uleb128 0x5
 4594 011f 49       		.uleb128 0x49
 4595 0120 13       		.uleb128 0x13
 4596 0121 1C       		.uleb128 0x1c
 4597 0122 06       		.uleb128 0x6
 4598 0123 00       		.byte	0
 4599 0124 00       		.byte	0
 4600 0125 13       		.uleb128 0x13
 4601 0126 898201   		.uleb128 0x4109
 4602 0129 01       		.byte	0x1
 4603 012a 11       		.uleb128 0x11
 4604 012b 01       		.uleb128 0x1
 4605 012c 31       		.uleb128 0x31
 4606 012d 13       		.uleb128 0x13
 4607 012e 00       		.byte	0
 4608 012f 00       		.byte	0
 4609 0130 14       		.uleb128 0x14
 4610 0131 8A8201   		.uleb128 0x410a
 4611 0134 00       		.byte	0
 4612 0135 02       		.uleb128 0x2
 4613 0136 18       		.uleb128 0x18
 4614 0137 9142     		.uleb128 0x2111
 4615 0139 18       		.uleb128 0x18
 4616 013a 00       		.byte	0
 4617 013b 00       		.byte	0
 4618 013c 15       		.uleb128 0x15
 4619 013d 898201   		.uleb128 0x4109
 4620 0140 01       		.byte	0x1
 4621 0141 11       		.uleb128 0x11
 4622 0142 01       		.uleb128 0x1
 4623 0143 31       		.uleb128 0x31
 4624 0144 13       		.uleb128 0x13
 4625 0145 01       		.uleb128 0x1
 4626 0146 13       		.uleb128 0x13
 4627 0147 00       		.byte	0
 4628 0148 00       		.byte	0
 4629 0149 16       		.uleb128 0x16
 4630 014a 2E       		.uleb128 0x2e
 4631 014b 00       		.byte	0
 4632 014c 3F       		.uleb128 0x3f
 4633 014d 19       		.uleb128 0x19
 4634 014e 03       		.uleb128 0x3
 4635 014f 0E       		.uleb128 0xe
 4636 0150 3A       		.uleb128 0x3a
 4637 0151 0B       		.uleb128 0xb
 4638 0152 3B       		.uleb128 0x3b
 4639 0153 05       		.uleb128 0x5
 4640 0154 27       		.uleb128 0x27
 4641 0155 19       		.uleb128 0x19
 4642 0156 11       		.uleb128 0x11
 4643 0157 01       		.uleb128 0x1
 4644 0158 12       		.uleb128 0x12
 4645 0159 06       		.uleb128 0x6
 4646 015a 40       		.uleb128 0x40
 4647 015b 18       		.uleb128 0x18
 4648 015c 9742     		.uleb128 0x2117
 4649 015e 19       		.uleb128 0x19
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 153


 4650 015f 00       		.byte	0
 4651 0160 00       		.byte	0
 4652 0161 17       		.uleb128 0x17
 4653 0162 34       		.uleb128 0x34
 4654 0163 00       		.byte	0
 4655 0164 03       		.uleb128 0x3
 4656 0165 0E       		.uleb128 0xe
 4657 0166 3A       		.uleb128 0x3a
 4658 0167 0B       		.uleb128 0xb
 4659 0168 3B       		.uleb128 0x3b
 4660 0169 0B       		.uleb128 0xb
 4661 016a 49       		.uleb128 0x49
 4662 016b 13       		.uleb128 0x13
 4663 016c 02       		.uleb128 0x2
 4664 016d 17       		.uleb128 0x17
 4665 016e 00       		.byte	0
 4666 016f 00       		.byte	0
 4667 0170 18       		.uleb128 0x18
 4668 0171 34       		.uleb128 0x34
 4669 0172 00       		.byte	0
 4670 0173 03       		.uleb128 0x3
 4671 0174 0E       		.uleb128 0xe
 4672 0175 3A       		.uleb128 0x3a
 4673 0176 0B       		.uleb128 0xb
 4674 0177 3B       		.uleb128 0x3b
 4675 0178 0B       		.uleb128 0xb
 4676 0179 49       		.uleb128 0x49
 4677 017a 13       		.uleb128 0x13
 4678 017b 02       		.uleb128 0x2
 4679 017c 18       		.uleb128 0x18
 4680 017d 00       		.byte	0
 4681 017e 00       		.byte	0
 4682 017f 19       		.uleb128 0x19
 4683 0180 2E       		.uleb128 0x2e
 4684 0181 01       		.byte	0x1
 4685 0182 3F       		.uleb128 0x3f
 4686 0183 19       		.uleb128 0x19
 4687 0184 03       		.uleb128 0x3
 4688 0185 0E       		.uleb128 0xe
 4689 0186 3A       		.uleb128 0x3a
 4690 0187 0B       		.uleb128 0xb
 4691 0188 3B       		.uleb128 0x3b
 4692 0189 05       		.uleb128 0x5
 4693 018a 27       		.uleb128 0x27
 4694 018b 19       		.uleb128 0x19
 4695 018c 11       		.uleb128 0x11
 4696 018d 01       		.uleb128 0x1
 4697 018e 12       		.uleb128 0x12
 4698 018f 06       		.uleb128 0x6
 4699 0190 40       		.uleb128 0x40
 4700 0191 18       		.uleb128 0x18
 4701 0192 9642     		.uleb128 0x2116
 4702 0194 19       		.uleb128 0x19
 4703 0195 01       		.uleb128 0x1
 4704 0196 13       		.uleb128 0x13
 4705 0197 00       		.byte	0
 4706 0198 00       		.byte	0
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 154


 4707 0199 1A       		.uleb128 0x1a
 4708 019a 2E       		.uleb128 0x2e
 4709 019b 01       		.byte	0x1
 4710 019c 03       		.uleb128 0x3
 4711 019d 0E       		.uleb128 0xe
 4712 019e 3A       		.uleb128 0x3a
 4713 019f 0B       		.uleb128 0xb
 4714 01a0 3B       		.uleb128 0x3b
 4715 01a1 05       		.uleb128 0x5
 4716 01a2 27       		.uleb128 0x27
 4717 01a3 19       		.uleb128 0x19
 4718 01a4 11       		.uleb128 0x11
 4719 01a5 01       		.uleb128 0x1
 4720 01a6 12       		.uleb128 0x12
 4721 01a7 06       		.uleb128 0x6
 4722 01a8 40       		.uleb128 0x40
 4723 01a9 18       		.uleb128 0x18
 4724 01aa 9642     		.uleb128 0x2116
 4725 01ac 19       		.uleb128 0x19
 4726 01ad 01       		.uleb128 0x1
 4727 01ae 13       		.uleb128 0x13
 4728 01af 00       		.byte	0
 4729 01b0 00       		.byte	0
 4730 01b1 1B       		.uleb128 0x1b
 4731 01b2 34       		.uleb128 0x34
 4732 01b3 00       		.byte	0
 4733 01b4 03       		.uleb128 0x3
 4734 01b5 08       		.uleb128 0x8
 4735 01b6 3A       		.uleb128 0x3a
 4736 01b7 0B       		.uleb128 0xb
 4737 01b8 3B       		.uleb128 0x3b
 4738 01b9 05       		.uleb128 0x5
 4739 01ba 49       		.uleb128 0x49
 4740 01bb 13       		.uleb128 0x13
 4741 01bc 02       		.uleb128 0x2
 4742 01bd 17       		.uleb128 0x17
 4743 01be 00       		.byte	0
 4744 01bf 00       		.byte	0
 4745 01c0 1C       		.uleb128 0x1c
 4746 01c1 01       		.uleb128 0x1
 4747 01c2 01       		.byte	0x1
 4748 01c3 49       		.uleb128 0x49
 4749 01c4 13       		.uleb128 0x13
 4750 01c5 01       		.uleb128 0x1
 4751 01c6 13       		.uleb128 0x13
 4752 01c7 00       		.byte	0
 4753 01c8 00       		.byte	0
 4754 01c9 1D       		.uleb128 0x1d
 4755 01ca 21       		.uleb128 0x21
 4756 01cb 00       		.byte	0
 4757 01cc 49       		.uleb128 0x49
 4758 01cd 13       		.uleb128 0x13
 4759 01ce 2F       		.uleb128 0x2f
 4760 01cf 0B       		.uleb128 0xb
 4761 01d0 00       		.byte	0
 4762 01d1 00       		.byte	0
 4763 01d2 1E       		.uleb128 0x1e
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 155


 4764 01d3 34       		.uleb128 0x34
 4765 01d4 00       		.byte	0
 4766 01d5 03       		.uleb128 0x3
 4767 01d6 0E       		.uleb128 0xe
 4768 01d7 3A       		.uleb128 0x3a
 4769 01d8 0B       		.uleb128 0xb
 4770 01d9 3B       		.uleb128 0x3b
 4771 01da 0B       		.uleb128 0xb
 4772 01db 49       		.uleb128 0x49
 4773 01dc 13       		.uleb128 0x13
 4774 01dd 3F       		.uleb128 0x3f
 4775 01de 19       		.uleb128 0x19
 4776 01df 02       		.uleb128 0x2
 4777 01e0 18       		.uleb128 0x18
 4778 01e1 00       		.byte	0
 4779 01e2 00       		.byte	0
 4780 01e3 1F       		.uleb128 0x1f
 4781 01e4 2E       		.uleb128 0x2e
 4782 01e5 00       		.byte	0
 4783 01e6 3F       		.uleb128 0x3f
 4784 01e7 19       		.uleb128 0x19
 4785 01e8 3C       		.uleb128 0x3c
 4786 01e9 19       		.uleb128 0x19
 4787 01ea 6E       		.uleb128 0x6e
 4788 01eb 0E       		.uleb128 0xe
 4789 01ec 03       		.uleb128 0x3
 4790 01ed 0E       		.uleb128 0xe
 4791 01ee 3A       		.uleb128 0x3a
 4792 01ef 0B       		.uleb128 0xb
 4793 01f0 3B       		.uleb128 0x3b
 4794 01f1 0B       		.uleb128 0xb
 4795 01f2 00       		.byte	0
 4796 01f3 00       		.byte	0
 4797 01f4 00       		.byte	0
 4798              		.section	.debug_loc,"",%progbits
 4799              	.Ldebug_loc0:
 4800              	.LLST0:
 4801 0000 18000000 		.4byte	.LVL0
 4802 0004 28000000 		.4byte	.LVL1
 4803 0008 0100     		.2byte	0x1
 4804 000a 53       		.byte	0x53
 4805 000b 28000000 		.4byte	.LVL1
 4806 000f 2A000000 		.4byte	.LVL2
 4807 0013 0700     		.2byte	0x7
 4808 0015 73       		.byte	0x73
 4809 0016 B39C8080 		.sleb128 -268431821
 4809      7F
 4810 001b 9F       		.byte	0x9f
 4811 001c 00000000 		.4byte	0
 4812 0020 00000000 		.4byte	0
 4813              	.LLST1:
 4814 0024 00000000 		.4byte	.LVL4
 4815 0028 07000000 		.4byte	.LVL5-1
 4816 002c 0100     		.2byte	0x1
 4817 002e 50       		.byte	0x50
 4818 002f 07000000 		.4byte	.LVL5-1
 4819 0033 12000000 		.4byte	.LVL7
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 156


 4820 0037 0100     		.2byte	0x1
 4821 0039 54       		.byte	0x54
 4822 003a 12000000 		.4byte	.LVL7
 4823 003e 20000000 		.4byte	.LFE6
 4824 0042 0400     		.2byte	0x4
 4825 0044 F3       		.byte	0xf3
 4826 0045 01       		.uleb128 0x1
 4827 0046 50       		.byte	0x50
 4828 0047 9F       		.byte	0x9f
 4829 0048 00000000 		.4byte	0
 4830 004c 00000000 		.4byte	0
 4831              	.LLST2:
 4832 0050 08000000 		.4byte	.LVL5
 4833 0054 19000000 		.4byte	.LVL9-1
 4834 0058 0100     		.2byte	0x1
 4835 005a 50       		.byte	0x50
 4836 005b 00000000 		.4byte	0
 4837 005f 00000000 		.4byte	0
 4838              	.LLST3:
 4839 0063 10000000 		.4byte	.LVL6
 4840 0067 14000000 		.4byte	.LVL8
 4841 006b 0100     		.2byte	0x1
 4842 006d 53       		.byte	0x53
 4843 006e 14000000 		.4byte	.LVL8
 4844 0072 1A000000 		.4byte	.LVL10
 4845 0076 0100     		.2byte	0x1
 4846 0078 54       		.byte	0x54
 4847 0079 00000000 		.4byte	0
 4848 007d 00000000 		.4byte	0
 4849              	.LLST4:
 4850 0081 06000000 		.4byte	.LVL12
 4851 0085 11000000 		.4byte	.LVL14-1
 4852 0089 0100     		.2byte	0x1
 4853 008b 50       		.byte	0x50
 4854 008c 00000000 		.4byte	0
 4855 0090 00000000 		.4byte	0
 4856              	.LLST5:
 4857 0094 0E000000 		.4byte	.LVL13
 4858 0098 14000000 		.4byte	.LVL15
 4859 009c 0100     		.2byte	0x1
 4860 009e 54       		.byte	0x54
 4861 009f 14000000 		.4byte	.LVL15
 4862 00a3 1C000000 		.4byte	.LFE8
 4863 00a7 0100     		.2byte	0x1
 4864 00a9 50       		.byte	0x50
 4865 00aa 00000000 		.4byte	0
 4866 00ae 00000000 		.4byte	0
 4867              	.LLST6:
 4868 00b2 00000000 		.4byte	.LVL16
 4869 00b6 07000000 		.4byte	.LVL17-1
 4870 00ba 0100     		.2byte	0x1
 4871 00bc 50       		.byte	0x50
 4872 00bd 07000000 		.4byte	.LVL17-1
 4873 00c1 0A000000 		.4byte	.LVL18
 4874 00c5 0100     		.2byte	0x1
 4875 00c7 54       		.byte	0x54
 4876 00c8 0A000000 		.4byte	.LVL18
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 157


 4877 00cc 24000000 		.4byte	.LFE9
 4878 00d0 0400     		.2byte	0x4
 4879 00d2 F3       		.byte	0xf3
 4880 00d3 01       		.uleb128 0x1
 4881 00d4 50       		.byte	0x50
 4882 00d5 9F       		.byte	0x9f
 4883 00d6 00000000 		.4byte	0
 4884 00da 00000000 		.4byte	0
 4885              	.LLST7:
 4886 00de 08000000 		.4byte	.LVL17
 4887 00e2 1D000000 		.4byte	.LVL19-1
 4888 00e6 0100     		.2byte	0x1
 4889 00e8 50       		.byte	0x50
 4890 00e9 00000000 		.4byte	0
 4891 00ed 00000000 		.4byte	0
 4892              	.LLST8:
 4893 00f1 00000000 		.4byte	.LVL20
 4894 00f5 07000000 		.4byte	.LVL21-1
 4895 00f9 0100     		.2byte	0x1
 4896 00fb 50       		.byte	0x50
 4897 00fc 07000000 		.4byte	.LVL21-1
 4898 0100 14000000 		.4byte	.LVL22
 4899 0104 0100     		.2byte	0x1
 4900 0106 54       		.byte	0x54
 4901 0107 14000000 		.4byte	.LVL22
 4902 010b 24000000 		.4byte	.LFE11
 4903 010f 0400     		.2byte	0x4
 4904 0111 F3       		.byte	0xf3
 4905 0112 01       		.uleb128 0x1
 4906 0113 50       		.byte	0x50
 4907 0114 9F       		.byte	0x9f
 4908 0115 00000000 		.4byte	0
 4909 0119 00000000 		.4byte	0
 4910              	.LLST9:
 4911 011d 08000000 		.4byte	.LVL21
 4912 0121 1D000000 		.4byte	.LVL23-1
 4913 0125 0100     		.2byte	0x1
 4914 0127 50       		.byte	0x50
 4915 0128 00000000 		.4byte	0
 4916 012c 00000000 		.4byte	0
 4917              	.LLST10:
 4918 0130 00000000 		.4byte	.LVL24
 4919 0134 04000000 		.4byte	.LVL25
 4920 0138 0100     		.2byte	0x1
 4921 013a 50       		.byte	0x50
 4922 013b 04000000 		.4byte	.LVL25
 4923 013f 14000000 		.4byte	.LFE12
 4924 0143 0100     		.2byte	0x1
 4925 0145 52       		.byte	0x52
 4926 0146 00000000 		.4byte	0
 4927 014a 00000000 		.4byte	0
 4928              	.LLST11:
 4929 014e 00000000 		.4byte	.LVL30
 4930 0152 04000000 		.4byte	.LVL31
 4931 0156 0100     		.2byte	0x1
 4932 0158 50       		.byte	0x50
 4933 0159 04000000 		.4byte	.LVL31
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 158


 4934 015d 14000000 		.4byte	.LFE21
 4935 0161 0400     		.2byte	0x4
 4936 0163 F3       		.byte	0xf3
 4937 0164 01       		.uleb128 0x1
 4938 0165 50       		.byte	0x50
 4939 0166 9F       		.byte	0x9f
 4940 0167 00000000 		.4byte	0
 4941 016b 00000000 		.4byte	0
 4942              	.LLST12:
 4943 016f 00000000 		.4byte	.LVL32
 4944 0173 08000000 		.4byte	.LVL33
 4945 0177 0100     		.2byte	0x1
 4946 0179 50       		.byte	0x50
 4947 017a 08000000 		.4byte	.LVL33
 4948 017e 18000000 		.4byte	.LFE22
 4949 0182 0400     		.2byte	0x4
 4950 0184 F3       		.byte	0xf3
 4951 0185 01       		.uleb128 0x1
 4952 0186 50       		.byte	0x50
 4953 0187 9F       		.byte	0x9f
 4954 0188 00000000 		.4byte	0
 4955 018c 00000000 		.4byte	0
 4956              	.LLST13:
 4957 0190 00000000 		.4byte	.LVL34
 4958 0194 04000000 		.4byte	.LVL35
 4959 0198 0100     		.2byte	0x1
 4960 019a 50       		.byte	0x50
 4961 019b 04000000 		.4byte	.LVL35
 4962 019f 14000000 		.4byte	.LFE23
 4963 01a3 0400     		.2byte	0x4
 4964 01a5 F3       		.byte	0xf3
 4965 01a6 01       		.uleb128 0x1
 4966 01a7 50       		.byte	0x50
 4967 01a8 9F       		.byte	0x9f
 4968 01a9 00000000 		.4byte	0
 4969 01ad 00000000 		.4byte	0
 4970              	.LLST14:
 4971 01b1 00000000 		.4byte	.LVL36
 4972 01b5 04000000 		.4byte	.LVL37
 4973 01b9 0100     		.2byte	0x1
 4974 01bb 50       		.byte	0x50
 4975 01bc 04000000 		.4byte	.LVL37
 4976 01c0 14000000 		.4byte	.LFE24
 4977 01c4 0400     		.2byte	0x4
 4978 01c6 F3       		.byte	0xf3
 4979 01c7 01       		.uleb128 0x1
 4980 01c8 50       		.byte	0x50
 4981 01c9 9F       		.byte	0x9f
 4982 01ca 00000000 		.4byte	0
 4983 01ce 00000000 		.4byte	0
 4984              	.LLST15:
 4985 01d2 00000000 		.4byte	.LVL38
 4986 01d6 04000000 		.4byte	.LVL39
 4987 01da 0100     		.2byte	0x1
 4988 01dc 50       		.byte	0x50
 4989 01dd 04000000 		.4byte	.LVL39
 4990 01e1 14000000 		.4byte	.LFE25
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 159


 4991 01e5 0400     		.2byte	0x4
 4992 01e7 F3       		.byte	0xf3
 4993 01e8 01       		.uleb128 0x1
 4994 01e9 50       		.byte	0x50
 4995 01ea 9F       		.byte	0x9f
 4996 01eb 00000000 		.4byte	0
 4997 01ef 00000000 		.4byte	0
 4998              	.LLST16:
 4999 01f3 00000000 		.4byte	.LVL41
 5000 01f7 0C000000 		.4byte	.LVL43
 5001 01fb 0100     		.2byte	0x1
 5002 01fd 50       		.byte	0x50
 5003 01fe 0C000000 		.4byte	.LVL43
 5004 0202 20000000 		.4byte	.LFE15
 5005 0206 0400     		.2byte	0x4
 5006 0208 F3       		.byte	0xf3
 5007 0209 01       		.uleb128 0x1
 5008 020a 50       		.byte	0x50
 5009 020b 9F       		.byte	0x9f
 5010 020c 00000000 		.4byte	0
 5011 0210 00000000 		.4byte	0
 5012              	.LLST17:
 5013 0214 00000000 		.4byte	.LVL41
 5014 0218 0F000000 		.4byte	.LVL44-1
 5015 021c 0100     		.2byte	0x1
 5016 021e 51       		.byte	0x51
 5017 021f 0F000000 		.4byte	.LVL44-1
 5018 0223 1E000000 		.4byte	.LVL46
 5019 0227 0100     		.2byte	0x1
 5020 0229 55       		.byte	0x55
 5021 022a 1E000000 		.4byte	.LVL46
 5022 022e 20000000 		.4byte	.LFE15
 5023 0232 0400     		.2byte	0x4
 5024 0234 F3       		.byte	0xf3
 5025 0235 01       		.uleb128 0x1
 5026 0236 51       		.byte	0x51
 5027 0237 9F       		.byte	0x9f
 5028 0238 00000000 		.4byte	0
 5029 023c 00000000 		.4byte	0
 5030              	.LLST18:
 5031 0240 00000000 		.4byte	.LVL47
 5032 0244 0A000000 		.4byte	.LVL49
 5033 0248 0100     		.2byte	0x1
 5034 024a 50       		.byte	0x50
 5035 024b 0A000000 		.4byte	.LVL49
 5036 024f 1C000000 		.4byte	.LFE16
 5037 0253 0400     		.2byte	0x4
 5038 0255 F3       		.byte	0xf3
 5039 0256 01       		.uleb128 0x1
 5040 0257 50       		.byte	0x50
 5041 0258 9F       		.byte	0x9f
 5042 0259 00000000 		.4byte	0
 5043 025d 00000000 		.4byte	0
 5044              	.LLST19:
 5045 0261 00000000 		.4byte	.LVL51
 5046 0265 0C000000 		.4byte	.LVL53
 5047 0269 0100     		.2byte	0x1
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 160


 5048 026b 50       		.byte	0x50
 5049 026c 0C000000 		.4byte	.LVL53
 5050 0270 22000000 		.4byte	.LFE17
 5051 0274 0400     		.2byte	0x4
 5052 0276 F3       		.byte	0xf3
 5053 0277 01       		.uleb128 0x1
 5054 0278 50       		.byte	0x50
 5055 0279 9F       		.byte	0x9f
 5056 027a 00000000 		.4byte	0
 5057 027e 00000000 		.4byte	0
 5058              	.LLST20:
 5059 0282 00000000 		.4byte	.LVL51
 5060 0286 0F000000 		.4byte	.LVL54-1
 5061 028a 0100     		.2byte	0x1
 5062 028c 51       		.byte	0x51
 5063 028d 0F000000 		.4byte	.LVL54-1
 5064 0291 20000000 		.4byte	.LVL56
 5065 0295 0100     		.2byte	0x1
 5066 0297 55       		.byte	0x55
 5067 0298 20000000 		.4byte	.LVL56
 5068 029c 22000000 		.4byte	.LFE17
 5069 02a0 0400     		.2byte	0x4
 5070 02a2 F3       		.byte	0xf3
 5071 02a3 01       		.uleb128 0x1
 5072 02a4 51       		.byte	0x51
 5073 02a5 9F       		.byte	0x9f
 5074 02a6 00000000 		.4byte	0
 5075 02aa 00000000 		.4byte	0
 5076              	.LLST21:
 5077 02ae 00000000 		.4byte	.LVL57
 5078 02b2 0A000000 		.4byte	.LVL59
 5079 02b6 0100     		.2byte	0x1
 5080 02b8 50       		.byte	0x50
 5081 02b9 0A000000 		.4byte	.LVL59
 5082 02bd 1E000000 		.4byte	.LFE18
 5083 02c1 0400     		.2byte	0x4
 5084 02c3 F3       		.byte	0xf3
 5085 02c4 01       		.uleb128 0x1
 5086 02c5 50       		.byte	0x50
 5087 02c6 9F       		.byte	0x9f
 5088 02c7 00000000 		.4byte	0
 5089 02cb 00000000 		.4byte	0
 5090              	.LLST22:
 5091 02cf 00000000 		.4byte	.LVL61
 5092 02d3 0C000000 		.4byte	.LVL62
 5093 02d7 0100     		.2byte	0x1
 5094 02d9 50       		.byte	0x50
 5095 02da 0C000000 		.4byte	.LVL62
 5096 02de 4C000000 		.4byte	.LFE19
 5097 02e2 0400     		.2byte	0x4
 5098 02e4 F3       		.byte	0xf3
 5099 02e5 01       		.uleb128 0x1
 5100 02e6 50       		.byte	0x50
 5101 02e7 9F       		.byte	0x9f
 5102 02e8 00000000 		.4byte	0
 5103 02ec 00000000 		.4byte	0
 5104              	.LLST23:
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 161


 5105 02f0 00000000 		.4byte	.LVL61
 5106 02f4 0F000000 		.4byte	.LVL63-1
 5107 02f8 0100     		.2byte	0x1
 5108 02fa 51       		.byte	0x51
 5109 02fb 0F000000 		.4byte	.LVL63-1
 5110 02ff 4C000000 		.4byte	.LFE19
 5111 0303 0400     		.2byte	0x4
 5112 0305 F3       		.byte	0xf3
 5113 0306 01       		.uleb128 0x1
 5114 0307 51       		.byte	0x51
 5115 0308 9F       		.byte	0x9f
 5116 0309 00000000 		.4byte	0
 5117 030d 00000000 		.4byte	0
 5118              	.LLST24:
 5119 0311 26000000 		.4byte	.LVL66
 5120 0315 45000000 		.4byte	.LVL72-1
 5121 0319 0100     		.2byte	0x1
 5122 031b 50       		.byte	0x50
 5123 031c 00000000 		.4byte	0
 5124 0320 00000000 		.4byte	0
 5125              	.LLST25:
 5126 0324 22000000 		.4byte	.LVL65
 5127 0328 46000000 		.4byte	.LVL73
 5128 032c 0100     		.2byte	0x1
 5129 032e 55       		.byte	0x55
 5130 032f 00000000 		.4byte	0
 5131 0333 00000000 		.4byte	0
 5132              	.LLST26:
 5133 0337 32000000 		.4byte	.LVL67
 5134 033b 38000000 		.4byte	.LVL68
 5135 033f 0100     		.2byte	0x1
 5136 0341 51       		.byte	0x51
 5137 0342 3A000000 		.4byte	.LVL69
 5138 0346 3C000000 		.4byte	.LVL70
 5139 034a 0100     		.2byte	0x1
 5140 034c 51       		.byte	0x51
 5141 034d 3C000000 		.4byte	.LVL70
 5142 0351 40000000 		.4byte	.LVL71
 5143 0355 0100     		.2byte	0x1
 5144 0357 53       		.byte	0x53
 5145 0358 40000000 		.4byte	.LVL71
 5146 035c 45000000 		.4byte	.LVL72-1
 5147 0360 0100     		.2byte	0x1
 5148 0362 51       		.byte	0x51
 5149 0363 00000000 		.4byte	0
 5150 0367 00000000 		.4byte	0
 5151              	.LLST27:
 5152 036b 00000000 		.4byte	.LVL74
 5153 036f 0A000000 		.4byte	.LVL75
 5154 0373 0100     		.2byte	0x1
 5155 0375 50       		.byte	0x50
 5156 0376 0A000000 		.4byte	.LVL75
 5157 037a 2C000000 		.4byte	.LFE20
 5158 037e 0400     		.2byte	0x4
 5159 0380 F3       		.byte	0xf3
 5160 0381 01       		.uleb128 0x1
 5161 0382 50       		.byte	0x50
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 162


 5162 0383 9F       		.byte	0x9f
 5163 0384 00000000 		.4byte	0
 5164 0388 00000000 		.4byte	0
 5165              	.LLST28:
 5166 038c 24000000 		.4byte	.LVL77
 5167 0390 26000000 		.4byte	.LVL78
 5168 0394 0100     		.2byte	0x1
 5169 0396 50       		.byte	0x50
 5170 0397 00000000 		.4byte	0
 5171 039b 00000000 		.4byte	0
 5172              	.LLST29:
 5173 039f 00000000 		.4byte	.LVL79
 5174 03a3 06000000 		.4byte	.LVL80
 5175 03a7 0100     		.2byte	0x1
 5176 03a9 50       		.byte	0x50
 5177 03aa 06000000 		.4byte	.LVL80
 5178 03ae 26000000 		.4byte	.LVL84
 5179 03b2 0100     		.2byte	0x1
 5180 03b4 54       		.byte	0x54
 5181 03b5 00000000 		.4byte	0
 5182 03b9 00000000 		.4byte	0
 5183              	.LLST30:
 5184 03bd 2A000000 		.4byte	.LVL89
 5185 03c1 3C000000 		.4byte	.LVL91
 5186 03c5 0100     		.2byte	0x1
 5187 03c7 52       		.byte	0x52
 5188 03c8 00000000 		.4byte	0
 5189 03cc 00000000 		.4byte	0
 5190              	.LLST31:
 5191 03d0 12000000 		.4byte	.LVL88
 5192 03d4 A8000000 		.4byte	.LVL104
 5193 03d8 0100     		.2byte	0x1
 5194 03da 55       		.byte	0x55
 5195 03db 00000000 		.4byte	0
 5196 03df 00000000 		.4byte	0
 5197              	.LLST32:
 5198 03e3 38000000 		.4byte	.LVL90
 5199 03e7 58000000 		.4byte	.LVL94
 5200 03eb 0100     		.2byte	0x1
 5201 03ed 53       		.byte	0x53
 5202 03ee 58000000 		.4byte	.LVL94
 5203 03f2 5C000000 		.4byte	.LVL95
 5204 03f6 0200     		.2byte	0x2
 5205 03f8 74       		.byte	0x74
 5206 03f9 00       		.sleb128 0
 5207 03fa 74000000 		.4byte	.LVL97
 5208 03fe 98000000 		.4byte	.LVL103
 5209 0402 0100     		.2byte	0x1
 5210 0404 56       		.byte	0x56
 5211 0405 00000000 		.4byte	0
 5212 0409 00000000 		.4byte	0
 5213              	.LLST33:
 5214 040d 04000000 		.4byte	.LVL85
 5215 0411 78000000 		.4byte	.LVL98
 5216 0415 0200     		.2byte	0x2
 5217 0417 30       		.byte	0x30
 5218 0418 9F       		.byte	0x9f
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 163


 5219 0419 78000000 		.4byte	.LVL98
 5220 041d A8000000 		.4byte	.LVL104
 5221 0421 0100     		.2byte	0x1
 5222 0423 54       		.byte	0x54
 5223 0424 00000000 		.4byte	0
 5224 0428 00000000 		.4byte	0
 5225              	.LLST34:
 5226 042c 00000000 		.4byte	.LVL105
 5227 0430 25000000 		.4byte	.LVL107-1
 5228 0434 0100     		.2byte	0x1
 5229 0436 50       		.byte	0x50
 5230 0437 25000000 		.4byte	.LVL107-1
 5231 043b A0000000 		.4byte	.LVL120
 5232 043f 0100     		.2byte	0x1
 5233 0441 54       		.byte	0x54
 5234 0442 A0000000 		.4byte	.LVL120
 5235 0446 B6000000 		.4byte	.LVL123
 5236 044a 0400     		.2byte	0x4
 5237 044c F3       		.byte	0xf3
 5238 044d 01       		.uleb128 0x1
 5239 044e 50       		.byte	0x50
 5240 044f 9F       		.byte	0x9f
 5241 0450 B6000000 		.4byte	.LVL123
 5242 0454 B8000000 		.4byte	.LVL124
 5243 0458 0100     		.2byte	0x1
 5244 045a 50       		.byte	0x50
 5245 045b B8000000 		.4byte	.LVL124
 5246 045f BC000000 		.4byte	.LVL125
 5247 0463 0100     		.2byte	0x1
 5248 0465 54       		.byte	0x54
 5249 0466 BC000000 		.4byte	.LVL125
 5250 046a D8000000 		.4byte	.LFE10
 5251 046e 0400     		.2byte	0x4
 5252 0470 F3       		.byte	0xf3
 5253 0471 01       		.uleb128 0x1
 5254 0472 50       		.byte	0x50
 5255 0473 9F       		.byte	0x9f
 5256 0474 00000000 		.4byte	0
 5257 0478 00000000 		.4byte	0
 5258              	.LLST35:
 5259 047c 28000000 		.4byte	.LVL108
 5260 0480 44000000 		.4byte	.LVL114
 5261 0484 0200     		.2byte	0x2
 5262 0486 91       		.byte	0x91
 5263 0487 64       		.sleb128 -28
 5264 0488 00000000 		.4byte	0
 5265 048c 00000000 		.4byte	0
 5266              	.LLST36:
 5267 0490 4C000000 		.4byte	.LVL115
 5268 0494 54000000 		.4byte	.LVL116
 5269 0498 0100     		.2byte	0x1
 5270 049a 53       		.byte	0x53
 5271 049b 54000000 		.4byte	.LVL116
 5272 049f 58000000 		.4byte	.LVL117
 5273 04a3 0700     		.2byte	0x7
 5274 04a5 0C       		.byte	0xc
 5275 04a6 0C0F0340 		.4byte	0x40030f0c
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 164


 5276 04aa 06       		.byte	0x6
 5277 04ab 9F       		.byte	0x9f
 5278 04ac 00000000 		.4byte	0
 5279 04b0 00000000 		.4byte	0
 5280              	.LLST37:
 5281 04b4 06000000 		.4byte	.LVL106
 5282 04b8 30000000 		.4byte	.LVL110
 5283 04bc 0200     		.2byte	0x2
 5284 04be 30       		.byte	0x30
 5285 04bf 9F       		.byte	0x9f
 5286 04c0 30000000 		.4byte	.LVL110
 5287 04c4 38000000 		.4byte	.LVL112
 5288 04c8 0200     		.2byte	0x2
 5289 04ca 31       		.byte	0x31
 5290 04cb 9F       		.byte	0x9f
 5291 04cc 38000000 		.4byte	.LVL112
 5292 04d0 3A000000 		.4byte	.LVL113
 5293 04d4 0200     		.2byte	0x2
 5294 04d6 30       		.byte	0x30
 5295 04d7 9F       		.byte	0x9f
 5296 04d8 3A000000 		.4byte	.LVL113
 5297 04dc B6000000 		.4byte	.LVL123
 5298 04e0 0100     		.2byte	0x1
 5299 04e2 56       		.byte	0x56
 5300 04e3 B6000000 		.4byte	.LVL123
 5301 04e7 BC000000 		.4byte	.LVL125
 5302 04eb 0200     		.2byte	0x2
 5303 04ed 30       		.byte	0x30
 5304 04ee 9F       		.byte	0x9f
 5305 04ef 00000000 		.4byte	0
 5306 04f3 00000000 		.4byte	0
 5307              	.LLST38:
 5308 04f7 00000000 		.4byte	.LVL126
 5309 04fb 08000000 		.4byte	.LVL127
 5310 04ff 0100     		.2byte	0x1
 5311 0501 50       		.byte	0x50
 5312 0502 08000000 		.4byte	.LVL127
 5313 0506 14000000 		.4byte	.LFE29
 5314 050a 0400     		.2byte	0x4
 5315 050c F3       		.byte	0xf3
 5316 050d 01       		.uleb128 0x1
 5317 050e 50       		.byte	0x50
 5318 050f 9F       		.byte	0x9f
 5319 0510 00000000 		.4byte	0
 5320 0514 00000000 		.4byte	0
 5321              	.LLST39:
 5322 0518 00000000 		.4byte	.LVL129
 5323 051c 1A000000 		.4byte	.LVL130
 5324 0520 0100     		.2byte	0x1
 5325 0522 50       		.byte	0x50
 5326 0523 1A000000 		.4byte	.LVL130
 5327 0527 4C000000 		.4byte	.LFE30
 5328 052b 0400     		.2byte	0x4
 5329 052d F3       		.byte	0xf3
 5330 052e 01       		.uleb128 0x1
 5331 052f 50       		.byte	0x50
 5332 0530 9F       		.byte	0x9f
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 165


 5333 0531 00000000 		.4byte	0
 5334 0535 00000000 		.4byte	0
 5335              	.LLST40:
 5336 0539 00000000 		.4byte	.LVL134
 5337 053d 02000000 		.4byte	.LVL135
 5338 0541 0100     		.2byte	0x1
 5339 0543 50       		.byte	0x50
 5340 0544 02000000 		.4byte	.LVL135
 5341 0548 10000000 		.4byte	.LFE37
 5342 054c 0400     		.2byte	0x4
 5343 054e F3       		.byte	0xf3
 5344 054f 01       		.uleb128 0x1
 5345 0550 50       		.byte	0x50
 5346 0551 9F       		.byte	0x9f
 5347 0552 00000000 		.4byte	0
 5348 0556 00000000 		.4byte	0
 5349              	.LLST41:
 5350 055a 0C000000 		.4byte	.LVL138
 5351 055e 1C000000 		.4byte	.LVL141
 5352 0562 0100     		.2byte	0x1
 5353 0564 54       		.byte	0x54
 5354 0565 1E000000 		.4byte	.LVL142
 5355 0569 22000000 		.4byte	.LVL143
 5356 056d 0100     		.2byte	0x1
 5357 056f 54       		.byte	0x54
 5358 0570 00000000 		.4byte	0
 5359 0574 00000000 		.4byte	0
 5360              	.LLST42:
 5361 0578 02000000 		.4byte	.LVL144
 5362 057c 06000000 		.4byte	.LVL145
 5363 0580 0200     		.2byte	0x2
 5364 0582 30       		.byte	0x30
 5365 0583 9F       		.byte	0x9f
 5366 0584 06000000 		.4byte	.LVL145
 5367 0588 1B000000 		.4byte	.LVL147-1
 5368 058c 0100     		.2byte	0x1
 5369 058e 53       		.byte	0x53
 5370 058f 00000000 		.4byte	0
 5371 0593 00000000 		.4byte	0
 5372              	.LLST43:
 5373 0597 00000000 		.4byte	.LVL154
 5374 059b 06000000 		.4byte	.LVL155
 5375 059f 0100     		.2byte	0x1
 5376 05a1 50       		.byte	0x50
 5377 05a2 06000000 		.4byte	.LVL155
 5378 05a6 10000000 		.4byte	.LFE44
 5379 05aa 0400     		.2byte	0x4
 5380 05ac F3       		.byte	0xf3
 5381 05ad 01       		.uleb128 0x1
 5382 05ae 50       		.byte	0x50
 5383 05af 9F       		.byte	0x9f
 5384 05b0 00000000 		.4byte	0
 5385 05b4 00000000 		.4byte	0
 5386              	.LLST44:
 5387 05b8 00000000 		.4byte	.LVL156
 5388 05bc 02000000 		.4byte	.LVL157
 5389 05c0 0100     		.2byte	0x1
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 166


 5390 05c2 50       		.byte	0x50
 5391 05c3 02000000 		.4byte	.LVL157
 5392 05c7 0C000000 		.4byte	.LFE45
 5393 05cb 0400     		.2byte	0x4
 5394 05cd F3       		.byte	0xf3
 5395 05ce 01       		.uleb128 0x1
 5396 05cf 50       		.byte	0x50
 5397 05d0 9F       		.byte	0x9f
 5398 05d1 00000000 		.4byte	0
 5399 05d5 00000000 		.4byte	0
 5400              	.LLST45:
 5401 05d9 00000000 		.4byte	.LVL159
 5402 05dd 0A000000 		.4byte	.LVL161
 5403 05e1 0100     		.2byte	0x1
 5404 05e3 50       		.byte	0x50
 5405 05e4 0A000000 		.4byte	.LVL161
 5406 05e8 20000000 		.4byte	.LFE48
 5407 05ec 0400     		.2byte	0x4
 5408 05ee F3       		.byte	0xf3
 5409 05ef 01       		.uleb128 0x1
 5410 05f0 50       		.byte	0x50
 5411 05f1 9F       		.byte	0x9f
 5412 05f2 00000000 		.4byte	0
 5413 05f6 00000000 		.4byte	0
 5414              	.LLST46:
 5415 05fa 08000000 		.4byte	.LVL160
 5416 05fe 12000000 		.4byte	.LVL162
 5417 0602 0100     		.2byte	0x1
 5418 0604 52       		.byte	0x52
 5419 0605 12000000 		.4byte	.LVL162
 5420 0609 20000000 		.4byte	.LFE48
 5421 060d 0100     		.2byte	0x1
 5422 060f 50       		.byte	0x50
 5423 0610 00000000 		.4byte	0
 5424 0614 00000000 		.4byte	0
 5425              	.LLST47:
 5426 0618 00000000 		.4byte	.LVL163
 5427 061c 0A000000 		.4byte	.LVL165
 5428 0620 0100     		.2byte	0x1
 5429 0622 50       		.byte	0x50
 5430 0623 0A000000 		.4byte	.LVL165
 5431 0627 20000000 		.4byte	.LFE49
 5432 062b 0400     		.2byte	0x4
 5433 062d F3       		.byte	0xf3
 5434 062e 01       		.uleb128 0x1
 5435 062f 50       		.byte	0x50
 5436 0630 9F       		.byte	0x9f
 5437 0631 00000000 		.4byte	0
 5438 0635 00000000 		.4byte	0
 5439              	.LLST48:
 5440 0639 08000000 		.4byte	.LVL164
 5441 063d 12000000 		.4byte	.LVL166
 5442 0641 0100     		.2byte	0x1
 5443 0643 52       		.byte	0x52
 5444 0644 12000000 		.4byte	.LVL166
 5445 0648 20000000 		.4byte	.LFE49
 5446 064c 0100     		.2byte	0x1
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 167


 5447 064e 50       		.byte	0x50
 5448 064f 00000000 		.4byte	0
 5449 0653 00000000 		.4byte	0
 5450              	.LLST49:
 5451 0657 00000000 		.4byte	.LVL167
 5452 065b 0A000000 		.4byte	.LVL169
 5453 065f 0100     		.2byte	0x1
 5454 0661 50       		.byte	0x50
 5455 0662 0A000000 		.4byte	.LVL169
 5456 0666 20000000 		.4byte	.LFE50
 5457 066a 0400     		.2byte	0x4
 5458 066c F3       		.byte	0xf3
 5459 066d 01       		.uleb128 0x1
 5460 066e 50       		.byte	0x50
 5461 066f 9F       		.byte	0x9f
 5462 0670 00000000 		.4byte	0
 5463 0674 00000000 		.4byte	0
 5464              	.LLST50:
 5465 0678 08000000 		.4byte	.LVL168
 5466 067c 12000000 		.4byte	.LVL170
 5467 0680 0100     		.2byte	0x1
 5468 0682 52       		.byte	0x52
 5469 0683 12000000 		.4byte	.LVL170
 5470 0687 20000000 		.4byte	.LFE50
 5471 068b 0100     		.2byte	0x1
 5472 068d 50       		.byte	0x50
 5473 068e 00000000 		.4byte	0
 5474 0692 00000000 		.4byte	0
 5475              	.LLST51:
 5476 0696 00000000 		.4byte	.LVL171
 5477 069a 08000000 		.4byte	.LVL172
 5478 069e 0100     		.2byte	0x1
 5479 06a0 50       		.byte	0x50
 5480 06a1 08000000 		.4byte	.LVL172
 5481 06a5 1C000000 		.4byte	.LVL176
 5482 06a9 0400     		.2byte	0x4
 5483 06ab F3       		.byte	0xf3
 5484 06ac 01       		.uleb128 0x1
 5485 06ad 50       		.byte	0x50
 5486 06ae 9F       		.byte	0x9f
 5487 06af 1C000000 		.4byte	.LVL176
 5488 06b3 22000000 		.4byte	.LVL177
 5489 06b7 0100     		.2byte	0x1
 5490 06b9 50       		.byte	0x50
 5491 06ba 22000000 		.4byte	.LVL177
 5492 06be 36000000 		.4byte	.LVL181
 5493 06c2 0400     		.2byte	0x4
 5494 06c4 F3       		.byte	0xf3
 5495 06c5 01       		.uleb128 0x1
 5496 06c6 50       		.byte	0x50
 5497 06c7 9F       		.byte	0x9f
 5498 06c8 36000000 		.4byte	.LVL181
 5499 06cc 38000000 		.4byte	.LVL182
 5500 06d0 0100     		.2byte	0x1
 5501 06d2 50       		.byte	0x50
 5502 06d3 38000000 		.4byte	.LVL182
 5503 06d7 4C000000 		.4byte	.LFE51
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 168


 5504 06db 0400     		.2byte	0x4
 5505 06dd F3       		.byte	0xf3
 5506 06de 01       		.uleb128 0x1
 5507 06df 50       		.byte	0x50
 5508 06e0 9F       		.byte	0x9f
 5509 06e1 00000000 		.4byte	0
 5510 06e5 00000000 		.4byte	0
 5511              	.LLST52:
 5512 06e9 00000000 		.4byte	.LVL171
 5513 06ed 10000000 		.4byte	.LVL174
 5514 06f1 0100     		.2byte	0x1
 5515 06f3 51       		.byte	0x51
 5516 06f4 10000000 		.4byte	.LVL174
 5517 06f8 1C000000 		.4byte	.LVL176
 5518 06fc 0400     		.2byte	0x4
 5519 06fe F3       		.byte	0xf3
 5520 06ff 01       		.uleb128 0x1
 5521 0700 51       		.byte	0x51
 5522 0701 9F       		.byte	0x9f
 5523 0702 1C000000 		.4byte	.LVL176
 5524 0706 2A000000 		.4byte	.LVL179
 5525 070a 0100     		.2byte	0x1
 5526 070c 51       		.byte	0x51
 5527 070d 2A000000 		.4byte	.LVL179
 5528 0711 36000000 		.4byte	.LVL181
 5529 0715 0400     		.2byte	0x4
 5530 0717 F3       		.byte	0xf3
 5531 0718 01       		.uleb128 0x1
 5532 0719 51       		.byte	0x51
 5533 071a 9F       		.byte	0x9f
 5534 071b 36000000 		.4byte	.LVL181
 5535 071f 3B000000 		.4byte	.LVL183-1
 5536 0723 0100     		.2byte	0x1
 5537 0725 51       		.byte	0x51
 5538 0726 3B000000 		.4byte	.LVL183-1
 5539 072a 4C000000 		.4byte	.LFE51
 5540 072e 0400     		.2byte	0x4
 5541 0730 F3       		.byte	0xf3
 5542 0731 01       		.uleb128 0x1
 5543 0732 51       		.byte	0x51
 5544 0733 9F       		.byte	0x9f
 5545 0734 00000000 		.4byte	0
 5546 0738 00000000 		.4byte	0
 5547              	.LLST53:
 5548 073c 0E000000 		.4byte	.LVL173
 5549 0740 18000000 		.4byte	.LVL175
 5550 0744 0100     		.2byte	0x1
 5551 0746 52       		.byte	0x52
 5552 0747 18000000 		.4byte	.LVL175
 5553 074b 1C000000 		.4byte	.LVL176
 5554 074f 0100     		.2byte	0x1
 5555 0751 51       		.byte	0x51
 5556 0752 28000000 		.4byte	.LVL178
 5557 0756 32000000 		.4byte	.LVL180
 5558 075a 0100     		.2byte	0x1
 5559 075c 52       		.byte	0x52
 5560 075d 32000000 		.4byte	.LVL180
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 169


 5561 0761 36000000 		.4byte	.LVL181
 5562 0765 0100     		.2byte	0x1
 5563 0767 51       		.byte	0x51
 5564 0768 00000000 		.4byte	0
 5565 076c 00000000 		.4byte	0
 5566              	.LLST54:
 5567 0770 00000000 		.4byte	.LVL184
 5568 0774 08000000 		.4byte	.LVL185
 5569 0778 0100     		.2byte	0x1
 5570 077a 50       		.byte	0x50
 5571 077b 08000000 		.4byte	.LVL185
 5572 077f 0C000000 		.4byte	.LVL186
 5573 0783 0100     		.2byte	0x1
 5574 0785 53       		.byte	0x53
 5575 0786 0C000000 		.4byte	.LVL186
 5576 078a 18000000 		.4byte	.LFE52
 5577 078e 0400     		.2byte	0x4
 5578 0790 F3       		.byte	0xf3
 5579 0791 01       		.uleb128 0x1
 5580 0792 50       		.byte	0x50
 5581 0793 9F       		.byte	0x9f
 5582 0794 00000000 		.4byte	0
 5583 0798 00000000 		.4byte	0
 5584              	.LLST55:
 5585 079c 00000000 		.4byte	.LVL187
 5586 07a0 0A000000 		.4byte	.LVL188
 5587 07a4 0100     		.2byte	0x1
 5588 07a6 50       		.byte	0x50
 5589 07a7 0A000000 		.4byte	.LVL188
 5590 07ab 14000000 		.4byte	.LFE53
 5591 07af 0400     		.2byte	0x4
 5592 07b1 F3       		.byte	0xf3
 5593 07b2 01       		.uleb128 0x1
 5594 07b3 50       		.byte	0x50
 5595 07b4 9F       		.byte	0x9f
 5596 07b5 00000000 		.4byte	0
 5597 07b9 00000000 		.4byte	0
 5598              	.LLST56:
 5599 07bd 00000000 		.4byte	.LVL189
 5600 07c1 0C000000 		.4byte	.LVL190
 5601 07c5 0100     		.2byte	0x1
 5602 07c7 50       		.byte	0x50
 5603 07c8 0C000000 		.4byte	.LVL190
 5604 07cc 18000000 		.4byte	.LFE54
 5605 07d0 0400     		.2byte	0x4
 5606 07d2 F3       		.byte	0xf3
 5607 07d3 01       		.uleb128 0x1
 5608 07d4 50       		.byte	0x50
 5609 07d5 9F       		.byte	0x9f
 5610 07d6 00000000 		.4byte	0
 5611 07da 00000000 		.4byte	0
 5612              	.LLST57:
 5613 07de 00000000 		.4byte	.LVL191
 5614 07e2 10000000 		.4byte	.LVL193
 5615 07e6 0100     		.2byte	0x1
 5616 07e8 50       		.byte	0x50
 5617 07e9 10000000 		.4byte	.LVL193
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 170


 5618 07ed 16000000 		.4byte	.LVL194
 5619 07f1 0400     		.2byte	0x4
 5620 07f3 F3       		.byte	0xf3
 5621 07f4 01       		.uleb128 0x1
 5622 07f5 50       		.byte	0x50
 5623 07f6 9F       		.byte	0x9f
 5624 07f7 16000000 		.4byte	.LVL194
 5625 07fb 20000000 		.4byte	.LVL195
 5626 07ff 0100     		.2byte	0x1
 5627 0801 50       		.byte	0x50
 5628 0802 20000000 		.4byte	.LVL195
 5629 0806 34000000 		.4byte	.LFE59
 5630 080a 0400     		.2byte	0x4
 5631 080c F3       		.byte	0xf3
 5632 080d 01       		.uleb128 0x1
 5633 080e 50       		.byte	0x50
 5634 080f 9F       		.byte	0x9f
 5635 0810 00000000 		.4byte	0
 5636 0814 00000000 		.4byte	0
 5637              	.LLST58:
 5638 0818 02000000 		.4byte	.LVL192
 5639 081c 16000000 		.4byte	.LVL194
 5640 0820 0200     		.2byte	0x2
 5641 0822 30       		.byte	0x30
 5642 0823 9F       		.byte	0x9f
 5643 0824 16000000 		.4byte	.LVL194
 5644 0828 20000000 		.4byte	.LVL195
 5645 082c 0600     		.2byte	0x6
 5646 082e 70       		.byte	0x70
 5647 082f 00       		.sleb128 0
 5648 0830 08       		.byte	0x8
 5649 0831 20       		.byte	0x20
 5650 0832 21       		.byte	0x21
 5651 0833 9F       		.byte	0x9f
 5652 0834 00000000 		.4byte	0
 5653 0838 00000000 		.4byte	0
 5654              	.LLST59:
 5655 083c 0A000000 		.4byte	.LVL196
 5656 0840 10000000 		.4byte	.LVL197
 5657 0844 0100     		.2byte	0x1
 5658 0846 50       		.byte	0x50
 5659 0847 10000000 		.4byte	.LVL197
 5660 084b 12000000 		.4byte	.LVL198
 5661 084f 0400     		.2byte	0x4
 5662 0851 70       		.byte	0x70
 5663 0852 00       		.sleb128 0
 5664 0853 1F       		.byte	0x1f
 5665 0854 9F       		.byte	0x9f
 5666 0855 12000000 		.4byte	.LVL198
 5667 0859 14000000 		.4byte	.LVL199
 5668 085d 0100     		.2byte	0x1
 5669 085f 50       		.byte	0x50
 5670 0860 00000000 		.4byte	0
 5671 0864 00000000 		.4byte	0
 5672              		.section	.debug_aranges,"",%progbits
 5673 0000 F4010000 		.4byte	0x1f4
 5674 0004 0200     		.2byte	0x2
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 171


 5675 0006 00000000 		.4byte	.Ldebug_info0
 5676 000a 04       		.byte	0x4
 5677 000b 00       		.byte	0
 5678 000c 0000     		.2byte	0
 5679 000e 0000     		.2byte	0
 5680 0010 00000000 		.4byte	.LFB1
 5681 0014 14000000 		.4byte	.LFE1-.LFB1
 5682 0018 00000000 		.4byte	.LFB4
 5683 001c 4C000000 		.4byte	.LFE4-.LFB4
 5684 0020 00000000 		.4byte	.LFB2
 5685 0024 18000000 		.4byte	.LFE2-.LFB2
 5686 0028 00000000 		.4byte	.LFB5
 5687 002c 14000000 		.4byte	.LFE5-.LFB5
 5688 0030 00000000 		.4byte	.LFB6
 5689 0034 20000000 		.4byte	.LFE6-.LFB6
 5690 0038 00000000 		.4byte	.LFB7
 5691 003c 34000000 		.4byte	.LFE7-.LFB7
 5692 0040 00000000 		.4byte	.LFB8
 5693 0044 1C000000 		.4byte	.LFE8-.LFB8
 5694 0048 00000000 		.4byte	.LFB9
 5695 004c 24000000 		.4byte	.LFE9-.LFB9
 5696 0050 00000000 		.4byte	.LFB11
 5697 0054 24000000 		.4byte	.LFE11-.LFB11
 5698 0058 00000000 		.4byte	.LFB12
 5699 005c 14000000 		.4byte	.LFE12-.LFB12
 5700 0060 00000000 		.4byte	.LFB13
 5701 0064 10000000 		.4byte	.LFE13-.LFB13
 5702 0068 00000000 		.4byte	.LFB14
 5703 006c 0C000000 		.4byte	.LFE14-.LFB14
 5704 0070 00000000 		.4byte	.LFB21
 5705 0074 14000000 		.4byte	.LFE21-.LFB21
 5706 0078 00000000 		.4byte	.LFB22
 5707 007c 18000000 		.4byte	.LFE22-.LFB22
 5708 0080 00000000 		.4byte	.LFB23
 5709 0084 14000000 		.4byte	.LFE23-.LFB23
 5710 0088 00000000 		.4byte	.LFB24
 5711 008c 14000000 		.4byte	.LFE24-.LFB24
 5712 0090 00000000 		.4byte	.LFB25
 5713 0094 14000000 		.4byte	.LFE25-.LFB25
 5714 0098 00000000 		.4byte	.LFB26
 5715 009c 04000000 		.4byte	.LFE26-.LFB26
 5716 00a0 00000000 		.4byte	.LFB15
 5717 00a4 20000000 		.4byte	.LFE15-.LFB15
 5718 00a8 00000000 		.4byte	.LFB16
 5719 00ac 1C000000 		.4byte	.LFE16-.LFB16
 5720 00b0 00000000 		.4byte	.LFB17
 5721 00b4 22000000 		.4byte	.LFE17-.LFB17
 5722 00b8 00000000 		.4byte	.LFB18
 5723 00bc 1E000000 		.4byte	.LFE18-.LFB18
 5724 00c0 00000000 		.4byte	.LFB19
 5725 00c4 4C000000 		.4byte	.LFE19-.LFB19
 5726 00c8 00000000 		.4byte	.LFB20
 5727 00cc 2C000000 		.4byte	.LFE20-.LFB20
 5728 00d0 00000000 		.4byte	.LFB27
 5729 00d4 18000000 		.4byte	.LFE27-.LFB27
 5730 00d8 00000000 		.4byte	.LFB28
 5731 00dc 30000000 		.4byte	.LFE28-.LFB28
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 172


 5732 00e0 00000000 		.4byte	.LFB3
 5733 00e4 D0000000 		.4byte	.LFE3-.LFB3
 5734 00e8 00000000 		.4byte	.LFB10
 5735 00ec D8000000 		.4byte	.LFE10-.LFB10
 5736 00f0 00000000 		.4byte	.LFB29
 5737 00f4 14000000 		.4byte	.LFE29-.LFB29
 5738 00f8 00000000 		.4byte	.LFB30
 5739 00fc 4C000000 		.4byte	.LFE30-.LFB30
 5740 0100 00000000 		.4byte	.LFB34
 5741 0104 10000000 		.4byte	.LFE34-.LFB34
 5742 0108 00000000 		.4byte	.LFB35
 5743 010c 10000000 		.4byte	.LFE35-.LFB35
 5744 0110 00000000 		.4byte	.LFB33
 5745 0114 18000000 		.4byte	.LFE33-.LFB33
 5746 0118 00000000 		.4byte	.LFB36
 5747 011c 10000000 		.4byte	.LFE36-.LFB36
 5748 0120 00000000 		.4byte	.LFB37
 5749 0124 10000000 		.4byte	.LFE37-.LFB37
 5750 0128 00000000 		.4byte	.LFB38
 5751 012c 10000000 		.4byte	.LFE38-.LFB38
 5752 0130 00000000 		.4byte	.LFB39
 5753 0134 10000000 		.4byte	.LFE39-.LFB39
 5754 0138 00000000 		.4byte	.LFB40
 5755 013c 20000000 		.4byte	.LFE40-.LFB40
 5756 0140 00000000 		.4byte	.LFB41
 5757 0144 10000000 		.4byte	.LFE41-.LFB41
 5758 0148 00000000 		.4byte	.LFB42
 5759 014c 10000000 		.4byte	.LFE42-.LFB42
 5760 0150 00000000 		.4byte	.LFB46
 5761 0154 28000000 		.4byte	.LFE46-.LFB46
 5762 0158 00000000 		.4byte	.LFB43
 5763 015c 0C000000 		.4byte	.LFE43-.LFB43
 5764 0160 00000000 		.4byte	.LFB32
 5765 0164 44000000 		.4byte	.LFE32-.LFB32
 5766 0168 00000000 		.4byte	.LFB31
 5767 016c 20000000 		.4byte	.LFE31-.LFB31
 5768 0170 00000000 		.4byte	.LFB44
 5769 0174 10000000 		.4byte	.LFE44-.LFB44
 5770 0178 00000000 		.4byte	.LFB45
 5771 017c 0C000000 		.4byte	.LFE45-.LFB45
 5772 0180 00000000 		.4byte	.LFB47
 5773 0184 70000000 		.4byte	.LFE47-.LFB47
 5774 0188 00000000 		.4byte	.LFB48
 5775 018c 20000000 		.4byte	.LFE48-.LFB48
 5776 0190 00000000 		.4byte	.LFB49
 5777 0194 20000000 		.4byte	.LFE49-.LFB49
 5778 0198 00000000 		.4byte	.LFB50
 5779 019c 20000000 		.4byte	.LFE50-.LFB50
 5780 01a0 00000000 		.4byte	.LFB51
 5781 01a4 4C000000 		.4byte	.LFE51-.LFB51
 5782 01a8 00000000 		.4byte	.LFB52
 5783 01ac 18000000 		.4byte	.LFE52-.LFB52
 5784 01b0 00000000 		.4byte	.LFB53
 5785 01b4 14000000 		.4byte	.LFE53-.LFB53
 5786 01b8 00000000 		.4byte	.LFB54
 5787 01bc 18000000 		.4byte	.LFE54-.LFB54
 5788 01c0 00000000 		.4byte	.LFB55
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 173


 5789 01c4 14000000 		.4byte	.LFE55-.LFB55
 5790 01c8 00000000 		.4byte	.LFB56
 5791 01cc 14000000 		.4byte	.LFE56-.LFB56
 5792 01d0 00000000 		.4byte	.LFB57
 5793 01d4 10000000 		.4byte	.LFE57-.LFB57
 5794 01d8 00000000 		.4byte	.LFB58
 5795 01dc 10000000 		.4byte	.LFE58-.LFB58
 5796 01e0 00000000 		.4byte	.LFB59
 5797 01e4 34000000 		.4byte	.LFE59-.LFB59
 5798 01e8 00000000 		.4byte	.LFB60
 5799 01ec 1C000000 		.4byte	.LFE60-.LFB60
 5800 01f0 00000000 		.4byte	0
 5801 01f4 00000000 		.4byte	0
 5802              		.section	.debug_ranges,"",%progbits
 5803              	.Ldebug_ranges0:
 5804 0000 00000000 		.4byte	.LFB1
 5805 0004 14000000 		.4byte	.LFE1
 5806 0008 00000000 		.4byte	.LFB4
 5807 000c 4C000000 		.4byte	.LFE4
 5808 0010 00000000 		.4byte	.LFB2
 5809 0014 18000000 		.4byte	.LFE2
 5810 0018 00000000 		.4byte	.LFB5
 5811 001c 14000000 		.4byte	.LFE5
 5812 0020 00000000 		.4byte	.LFB6
 5813 0024 20000000 		.4byte	.LFE6
 5814 0028 00000000 		.4byte	.LFB7
 5815 002c 34000000 		.4byte	.LFE7
 5816 0030 00000000 		.4byte	.LFB8
 5817 0034 1C000000 		.4byte	.LFE8
 5818 0038 00000000 		.4byte	.LFB9
 5819 003c 24000000 		.4byte	.LFE9
 5820 0040 00000000 		.4byte	.LFB11
 5821 0044 24000000 		.4byte	.LFE11
 5822 0048 00000000 		.4byte	.LFB12
 5823 004c 14000000 		.4byte	.LFE12
 5824 0050 00000000 		.4byte	.LFB13
 5825 0054 10000000 		.4byte	.LFE13
 5826 0058 00000000 		.4byte	.LFB14
 5827 005c 0C000000 		.4byte	.LFE14
 5828 0060 00000000 		.4byte	.LFB21
 5829 0064 14000000 		.4byte	.LFE21
 5830 0068 00000000 		.4byte	.LFB22
 5831 006c 18000000 		.4byte	.LFE22
 5832 0070 00000000 		.4byte	.LFB23
 5833 0074 14000000 		.4byte	.LFE23
 5834 0078 00000000 		.4byte	.LFB24
 5835 007c 14000000 		.4byte	.LFE24
 5836 0080 00000000 		.4byte	.LFB25
 5837 0084 14000000 		.4byte	.LFE25
 5838 0088 00000000 		.4byte	.LFB26
 5839 008c 04000000 		.4byte	.LFE26
 5840 0090 00000000 		.4byte	.LFB15
 5841 0094 20000000 		.4byte	.LFE15
 5842 0098 00000000 		.4byte	.LFB16
 5843 009c 1C000000 		.4byte	.LFE16
 5844 00a0 00000000 		.4byte	.LFB17
 5845 00a4 22000000 		.4byte	.LFE17
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 174


 5846 00a8 00000000 		.4byte	.LFB18
 5847 00ac 1E000000 		.4byte	.LFE18
 5848 00b0 00000000 		.4byte	.LFB19
 5849 00b4 4C000000 		.4byte	.LFE19
 5850 00b8 00000000 		.4byte	.LFB20
 5851 00bc 2C000000 		.4byte	.LFE20
 5852 00c0 00000000 		.4byte	.LFB27
 5853 00c4 18000000 		.4byte	.LFE27
 5854 00c8 00000000 		.4byte	.LFB28
 5855 00cc 30000000 		.4byte	.LFE28
 5856 00d0 00000000 		.4byte	.LFB3
 5857 00d4 D0000000 		.4byte	.LFE3
 5858 00d8 00000000 		.4byte	.LFB10
 5859 00dc D8000000 		.4byte	.LFE10
 5860 00e0 00000000 		.4byte	.LFB29
 5861 00e4 14000000 		.4byte	.LFE29
 5862 00e8 00000000 		.4byte	.LFB30
 5863 00ec 4C000000 		.4byte	.LFE30
 5864 00f0 00000000 		.4byte	.LFB34
 5865 00f4 10000000 		.4byte	.LFE34
 5866 00f8 00000000 		.4byte	.LFB35
 5867 00fc 10000000 		.4byte	.LFE35
 5868 0100 00000000 		.4byte	.LFB33
 5869 0104 18000000 		.4byte	.LFE33
 5870 0108 00000000 		.4byte	.LFB36
 5871 010c 10000000 		.4byte	.LFE36
 5872 0110 00000000 		.4byte	.LFB37
 5873 0114 10000000 		.4byte	.LFE37
 5874 0118 00000000 		.4byte	.LFB38
 5875 011c 10000000 		.4byte	.LFE38
 5876 0120 00000000 		.4byte	.LFB39
 5877 0124 10000000 		.4byte	.LFE39
 5878 0128 00000000 		.4byte	.LFB40
 5879 012c 20000000 		.4byte	.LFE40
 5880 0130 00000000 		.4byte	.LFB41
 5881 0134 10000000 		.4byte	.LFE41
 5882 0138 00000000 		.4byte	.LFB42
 5883 013c 10000000 		.4byte	.LFE42
 5884 0140 00000000 		.4byte	.LFB46
 5885 0144 28000000 		.4byte	.LFE46
 5886 0148 00000000 		.4byte	.LFB43
 5887 014c 0C000000 		.4byte	.LFE43
 5888 0150 00000000 		.4byte	.LFB32
 5889 0154 44000000 		.4byte	.LFE32
 5890 0158 00000000 		.4byte	.LFB31
 5891 015c 20000000 		.4byte	.LFE31
 5892 0160 00000000 		.4byte	.LFB44
 5893 0164 10000000 		.4byte	.LFE44
 5894 0168 00000000 		.4byte	.LFB45
 5895 016c 0C000000 		.4byte	.LFE45
 5896 0170 00000000 		.4byte	.LFB47
 5897 0174 70000000 		.4byte	.LFE47
 5898 0178 00000000 		.4byte	.LFB48
 5899 017c 20000000 		.4byte	.LFE48
 5900 0180 00000000 		.4byte	.LFB49
 5901 0184 20000000 		.4byte	.LFE49
 5902 0188 00000000 		.4byte	.LFB50
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 175


 5903 018c 20000000 		.4byte	.LFE50
 5904 0190 00000000 		.4byte	.LFB51
 5905 0194 4C000000 		.4byte	.LFE51
 5906 0198 00000000 		.4byte	.LFB52
 5907 019c 18000000 		.4byte	.LFE52
 5908 01a0 00000000 		.4byte	.LFB53
 5909 01a4 14000000 		.4byte	.LFE53
 5910 01a8 00000000 		.4byte	.LFB54
 5911 01ac 18000000 		.4byte	.LFE54
 5912 01b0 00000000 		.4byte	.LFB55
 5913 01b4 14000000 		.4byte	.LFE55
 5914 01b8 00000000 		.4byte	.LFB56
 5915 01bc 14000000 		.4byte	.LFE56
 5916 01c0 00000000 		.4byte	.LFB57
 5917 01c4 10000000 		.4byte	.LFE57
 5918 01c8 00000000 		.4byte	.LFB58
 5919 01cc 10000000 		.4byte	.LFE58
 5920 01d0 00000000 		.4byte	.LFB59
 5921 01d4 34000000 		.4byte	.LFE59
 5922 01d8 00000000 		.4byte	.LFB60
 5923 01dc 1C000000 		.4byte	.LFE60
 5924 01e0 00000000 		.4byte	0
 5925 01e4 00000000 		.4byte	0
 5926              		.section	.debug_line,"",%progbits
 5927              	.Ldebug_line0:
 5928 0000 DB050000 		.section	.debug_str,"MS",%progbits,1
 5928      02006700 
 5928      00000201 
 5928      FB0E0D00 
 5928      01010101 
 5929              	.LASF54:
 5930 0000 72616D56 		.ascii	"ramVectorTable\000"
 5930      6563746F 
 5930      72546162 
 5930      6C6500
 5931              	.LASF10:
 5932 000f 75696E74 		.ascii	"uint16\000"
 5932      313600
 5933              	.LASF34:
 5934 0016 64697669 		.ascii	"divider\000"
 5934      64657200 
 5935              	.LASF25:
 5936 001e 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 5936      73436C6B 
 5936      57726974 
 5936      65486663 
 5936      6C6B4469 
 5937              	.LASF115:
 5938 0037 43795379 		.ascii	"CySysPrbGetBgBufferTrim\000"
 5938      73507262 
 5938      47657442 
 5938      67427566 
 5938      66657254 
 5939              	.LASF123:
 5940 004f 43795379 		.ascii	"CySysClkPumpConfig\000"
 5940      73436C6B 
 5940      50756D70 
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 176


 5940      436F6E66 
 5940      696700
 5941              	.LASF29:
 5942 0062 43795379 		.ascii	"CySysEnablePumpClock\000"
 5942      73456E61 
 5942      626C6550 
 5942      756D7043 
 5942      6C6F636B 
 5943              	.LASF94:
 5944 0077 72657456 		.ascii	"retVal\000"
 5944      616C00
 5945              	.LASF40:
 5946 007e 43794469 		.ascii	"CyDisableInts\000"
 5946      7361626C 
 5946      65496E74 
 5946      7300
 5947              	.LASF7:
 5948 008c 6C6F6E67 		.ascii	"long long unsigned int\000"
 5948      206C6F6E 
 5948      6720756E 
 5948      7369676E 
 5948      65642069 
 5949              	.LASF122:
 5950 00a3 43795379 		.ascii	"CySysTickInitVar\000"
 5950      73546963 
 5950      6B496E69 
 5950      74566172 
 5950      00
 5951              	.LASF42:
 5952 00b4 4379456E 		.ascii	"CyEnableInts\000"
 5952      61626C65 
 5952      496E7473 
 5952      00
 5953              	.LASF103:
 5954 00c1 696E7465 		.ascii	"interfaceNumber\000"
 5954      72666163 
 5954      654E756D 
 5954      62657200 
 5955              	.LASF64:
 5956 00d1 4379536F 		.ascii	"CySoftwareReset\000"
 5956      66747761 
 5956      72655265 
 5956      73657400 
 5957              	.LASF78:
 5958 00e1 43795379 		.ascii	"CySysTickEnableInterrupt\000"
 5958      73546963 
 5958      6B456E61 
 5958      626C6549 
 5958      6E746572 
 5959              	.LASF46:
 5960 00fa 4379496E 		.ascii	"CyIntGetState\000"
 5960      74476574 
 5960      53746174 
 5960      6500
 5961              	.LASF6:
 5962 0108 6C6F6E67 		.ascii	"long long int\000"
 5962      206C6F6E 
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 177


 5962      6720696E 
 5962      7400
 5963              	.LASF0:
 5964 0116 7369676E 		.ascii	"signed char\000"
 5964      65642063 
 5964      68617200 
 5965              	.LASF26:
 5966 0122 66726571 		.ascii	"freq\000"
 5966      00
 5967              	.LASF76:
 5968 0127 43794465 		.ascii	"CyDelayFreq\000"
 5968      6C617946 
 5968      72657100 
 5969              	.LASF27:
 5970 0133 696E7465 		.ascii	"interruptState\000"
 5970      72727570 
 5970      74537461 
 5970      746500
 5971              	.LASF13:
 5972 0142 696E7433 		.ascii	"int32\000"
 5972      3200
 5973              	.LASF83:
 5974 0148 43795379 		.ascii	"CySysTickGetReload\000"
 5974      73546963 
 5974      6B476574 
 5974      52656C6F 
 5974      616400
 5975              	.LASF108:
 5976 015b 766F6C74 		.ascii	"voltageTap\000"
 5976      61676554 
 5976      617000
 5977              	.LASF82:
 5978 0166 43795379 		.ascii	"CySysClkImoGetWcoLock\000"
 5978      73436C6B 
 5978      496D6F47 
 5978      65745763 
 5978      6F4C6F63 
 5979              	.LASF73:
 5980 017c 77636F4C 		.ascii	"wcoLock\000"
 5980      6F636B00 
 5981              	.LASF4:
 5982 0184 6C6F6E67 		.ascii	"long int\000"
 5982      20696E74 
 5982      00
 5983              	.LASF47:
 5984 018d 4379496E 		.ascii	"CyIntDisable\000"
 5984      74446973 
 5984      61626C65 
 5984      00
 5985              	.LASF110:
 5986 019a 43795379 		.ascii	"CySysPrbDisableDeepsleepVddaRef\000"
 5986      73507262 
 5986      44697361 
 5986      626C6544 
 5986      65657073 
 5987              	.LASF95:
 5988 01ba 43795379 		.ascii	"CySysTickGetCallback\000"
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 178


 5988      73546963 
 5988      6B476574 
 5988      43616C6C 
 5988      6261636B 
 5989              	.LASF9:
 5990 01cf 75696E74 		.ascii	"uint8\000"
 5990      3800
 5991              	.LASF119:
 5992 01d5 63796465 		.ascii	"cydelayFreqKhz\000"
 5992      6C617946 
 5992      7265714B 
 5992      687A00
 5993              	.LASF31:
 5994 01e4 656E6162 		.ascii	"enable\000"
 5994      6C6500
 5995              	.LASF15:
 5996 01eb 646F7562 		.ascii	"double\000"
 5996      6C6500
 5997              	.LASF60:
 5998 01f2 73686966 		.ascii	"shift\000"
 5998      7400
 5999              	.LASF11:
 6000 01f8 75696E74 		.ascii	"uint32\000"
 6000      333200
 6001              	.LASF56:
 6002 01ff 4379496E 		.ascii	"CyIntSetVector\000"
 6002      74536574 
 6002      56656374 
 6002      6F7200
 6003              	.LASF43:
 6004 020e 6D61736B 		.ascii	"mask\000"
 6004      00
 6005              	.LASF36:
 6006 0213 43795379 		.ascii	"CySysClkGetSysclkSource\000"
 6006      73436C6B 
 6006      47657453 
 6006      7973636C 
 6006      6B536F75 
 6007              	.LASF67:
 6008 022b 43795379 		.ascii	"CySysClkImoEnableWcoLock\000"
 6008      73436C6B 
 6008      496D6F45 
 6008      6E61626C 
 6008      6557636F 
 6009              	.LASF62:
 6010 0244 4379496E 		.ascii	"CyIntGetPriority\000"
 6010      74476574 
 6010      5072696F 
 6010      72697479 
 6010      00
 6011              	.LASF121:
 6012 0255 63796465 		.ascii	"cydelay32kMs\000"
 6012      6C617933 
 6012      326B4D73 
 6012      00
 6013              	.LASF113:
 6014 0262 43795379 		.ascii	"CySysPrbSetBgBufferTrim\000"
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 179


 6014      73507262 
 6014      53657442 
 6014      67427566 
 6014      66657254 
 6015              	.LASF90:
 6016 027a 43795379 		.ascii	"CySysTickInit\000"
 6016      73546963 
 6016      6B496E69 
 6016      7400
 6017              	.LASF61:
 6018 0288 76616C75 		.ascii	"value\000"
 6018      6500
 6019              	.LASF86:
 6020 028e 636C6F63 		.ascii	"clockSource\000"
 6020      6B536F75 
 6020      72636500 
 6021              	.LASF96:
 6022 029a 43794765 		.ascii	"CyGetUniqueId\000"
 6022      74556E69 
 6022      71756549 
 6022      6400
 6023              	.LASF88:
 6024 02a8 43795379 		.ascii	"CySysTickGetCountFlag\000"
 6024      73546963 
 6024      6B476574 
 6024      436F756E 
 6024      74466C61 
 6025              	.LASF8:
 6026 02be 756E7369 		.ascii	"unsigned int\000"
 6026      676E6564 
 6026      20696E74 
 6026      00
 6027              	.LASF111:
 6028 02cb 43795379 		.ascii	"CySysPrbEnableVddaRef\000"
 6028      73507262 
 6028      456E6162 
 6028      6C655664 
 6028      64615265 
 6029              	.LASF89:
 6030 02e1 43795379 		.ascii	"CySysTickClear\000"
 6030      73546963 
 6030      6B436C65 
 6030      617200
 6031              	.LASF5:
 6032 02f0 6C6F6E67 		.ascii	"long unsigned int\000"
 6032      20756E73 
 6032      69676E65 
 6032      6420696E 
 6032      7400
 6033              	.LASF114:
 6034 0302 62675472 		.ascii	"bgTrim\000"
 6034      696D00
 6035              	.LASF24:
 6036 0309 43795379 		.ascii	"CySysClkImoStop\000"
 6036      73436C6B 
 6036      496D6F53 
 6036      746F7000 
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 180


 6037              	.LASF124:
 6038 0319 4379456E 		.ascii	"CyEnterCriticalSection\000"
 6038      74657243 
 6038      72697469 
 6038      63616C53 
 6038      65637469 
 6039              	.LASF48:
 6040 0330 4379496E 		.ascii	"CyIntSetPending\000"
 6040      74536574 
 6040      50656E64 
 6040      696E6700 
 6041              	.LASF69:
 6042 0340 6C664C69 		.ascii	"lfLimit\000"
 6042      6D697400 
 6043              	.LASF37:
 6044 0348 43795379 		.ascii	"CySysGetResetReason\000"
 6044      73476574 
 6044      52657365 
 6044      74526561 
 6044      736F6E00 
 6045              	.LASF3:
 6046 035c 73686F72 		.ascii	"short unsigned int\000"
 6046      7420756E 
 6046      7369676E 
 6046      65642069 
 6046      6E7400
 6047              	.LASF68:
 6048 036f 72656754 		.ascii	"regTmp\000"
 6048      6D7000
 6049              	.LASF112:
 6050 0376 43795379 		.ascii	"CySysPrbDisableVddaRef\000"
 6050      73507262 
 6050      44697361 
 6050      626C6556 
 6050      64646152 
 6051              	.LASF85:
 6052 038d 43795379 		.ascii	"CySysTickSetClockSource\000"
 6052      73546963 
 6052      6B536574 
 6052      436C6F63 
 6052      6B536F75 
 6053              	.LASF12:
 6054 03a5 696E7438 		.ascii	"int8\000"
 6054      00
 6055              	.LASF45:
 6056 03aa 6E756D62 		.ascii	"number\000"
 6056      657200
 6057              	.LASF59:
 6058 03b1 7072696F 		.ascii	"priority\000"
 6058      72697479 
 6058      00
 6059              	.LASF71:
 6060 03ba 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 6060      73436C6B 
 6060      57726974 
 6060      65496D6F 
 6060      46726571 
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 181


 6061              	.LASF100:
 6062 03cf 43795379 		.ascii	"CySysSetFlashAccessArbPriority\000"
 6062      73536574 
 6062      466C6173 
 6062      68416363 
 6062      65737341 
 6063              	.LASF51:
 6064 03ee 4379496E 		.ascii	"CyIntSetSysVector\000"
 6064      74536574 
 6064      53797356 
 6064      6563746F 
 6064      7200
 6065              	.LASF23:
 6066 0400 43795379 		.ascii	"CySysClkImoDisableWcoLock\000"
 6066      73436C6B 
 6066      496D6F44 
 6066      69736162 
 6066      6C655763 
 6067              	.LASF18:
 6068 041a 72656733 		.ascii	"reg32\000"
 6068      3200
 6069              	.LASF91:
 6070 0420 43795379 		.ascii	"CySysTickStart\000"
 6070      73546963 
 6070      6B537461 
 6070      727400
 6071              	.LASF39:
 6072 042f 72657475 		.ascii	"returnStatus\000"
 6072      726E5374 
 6072      61747573 
 6072      00
 6073              	.LASF99:
 6074 043c 736F7572 		.ascii	"source\000"
 6074      636500
 6075              	.LASF21:
 6076 0443 73697A65 		.ascii	"sizetype\000"
 6076      74797065 
 6076      00
 6077              	.LASF102:
 6078 044c 43795379 		.ascii	"CySysSetPeripheralAccessArbPriority\000"
 6078      73536574 
 6078      50657269 
 6078      70686572 
 6078      616C4163 
 6079              	.LASF49:
 6080 0470 4379496E 		.ascii	"CyIntClearPending\000"
 6080      74436C65 
 6080      61725065 
 6080      6E64696E 
 6080      6700
 6081              	.LASF20:
 6082 0482 6C6F6E67 		.ascii	"long double\000"
 6082      20646F75 
 6082      626C6500 
 6083              	.LASF52:
 6084 048e 61646472 		.ascii	"address\000"
 6084      65737300 
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 182


 6085              	.LASF32:
 6086 0496 73797363 		.ascii	"sysclkSource\000"
 6086      6C6B536F 
 6086      75726365 
 6086      00
 6087              	.LASF93:
 6088 04a3 66756E63 		.ascii	"function\000"
 6088      74696F6E 
 6088      00
 6089              	.LASF84:
 6090 04ac 43795379 		.ascii	"CySysTickGetValue\000"
 6090      73546963 
 6090      6B476574 
 6090      56616C75 
 6090      6500
 6091              	.LASF118:
 6092 04be 63796465 		.ascii	"cydelayFreqHz\000"
 6092      6C617946 
 6092      72657148 
 6092      7A00
 6093              	.LASF58:
 6094 04cc 4379496E 		.ascii	"CyIntSetPriority\000"
 6094      74536574 
 6094      5072696F 
 6094      72697479 
 6094      00
 6095              	.LASF106:
 6096 04dd 6761696E 		.ascii	"gain\000"
 6096      00
 6097              	.LASF14:
 6098 04e2 666C6F61 		.ascii	"float\000"
 6098      7400
 6099              	.LASF125:
 6100 04e8 43794578 		.ascii	"CyExitCriticalSection\000"
 6100      69744372 
 6100      69746963 
 6100      616C5365 
 6100      6374696F 
 6101              	.LASF22:
 6102 04fe 63795379 		.ascii	"cySysTickCallback\000"
 6102      73546963 
 6102      6B43616C 
 6102      6C626163 
 6102      6B00
 6103              	.LASF57:
 6104 0510 4379496E 		.ascii	"CyIntGetVector\000"
 6104      74476574 
 6104      56656374 
 6104      6F7200
 6105              	.LASF66:
 6106 051f 6D696C6C 		.ascii	"milliseconds\000"
 6106      69736563 
 6106      6F6E6473 
 6106      00
 6107              	.LASF104:
 6108 052c 43795379 		.ascii	"CySysPrbSetGlobalVrefSource\000"
 6108      73507262 
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 183


 6108      53657447 
 6108      6C6F6261 
 6108      6C567265 
 6109              	.LASF126:
 6110 0548 43794465 		.ascii	"CyDelayCycles\000"
 6110      6C617943 
 6110      79636C65 
 6110      7300
 6111              	.LASF17:
 6112 0556 72656738 		.ascii	"reg8\000"
 6112      00
 6113              	.LASF50:
 6114 055b 43794861 		.ascii	"CyHalt\000"
 6114      6C7400
 6115              	.LASF98:
 6116 0562 43795379 		.ascii	"CySysSetRamAccessArbPriority\000"
 6116      73536574 
 6116      52616D41 
 6116      63636573 
 6116      73417262 
 6117              	.LASF1:
 6118 057f 756E7369 		.ascii	"unsigned char\000"
 6118      676E6564 
 6118      20636861 
 6118      7200
 6119              	.LASF2:
 6120 058d 73686F72 		.ascii	"short int\000"
 6120      7420696E 
 6120      7400
 6121              	.LASF44:
 6122 0597 4379496E 		.ascii	"CyIntEnable\000"
 6122      74456E61 
 6122      626C6500 
 6123              	.LASF55:
 6124 05a3 4379496E 		.ascii	"CyIntGetSysVector\000"
 6124      74476574 
 6124      53797356 
 6124      6563746F 
 6124      7200
 6125              	.LASF30:
 6126 05b5 636C6B53 		.ascii	"clkSelect\000"
 6126      656C6563 
 6126      7400
 6127              	.LASF74:
 6128 05bf 43794465 		.ascii	"CyDelayUs\000"
 6128      6C617955 
 6128      7300
 6129              	.LASF38:
 6130 05c9 72656173 		.ascii	"reason\000"
 6130      6F6E00
 6131              	.LASF41:
 6132 05d0 696E7453 		.ascii	"intState\000"
 6132      74617465 
 6132      00
 6133              	.LASF129:
 6134 05d9 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 6134      43313120 
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 184


 6134      352E342E 
 6134      31203230 
 6134      31363036 
 6135 060c 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 6135      20726576 
 6135      6973696F 
 6135      6E203233 
 6135      37373135 
 6136 063f 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 6136      67202D66 
 6136      66756E63 
 6136      74696F6E 
 6136      2D736563 
 6137              	.LASF107:
 6138 066b 43795379 		.ascii	"CySysPrbSetGlobalVrefVoltage\000"
 6138      73507262 
 6138      53657447 
 6138      6C6F6261 
 6138      6C567265 
 6139              	.LASF16:
 6140 0688 63686172 		.ascii	"char\000"
 6140      00
 6141              	.LASF19:
 6142 068d 63796973 		.ascii	"cyisraddress\000"
 6142      72616464 
 6142      72657373 
 6142      00
 6143              	.LASF79:
 6144 069a 43795379 		.ascii	"CySysTickEnable\000"
 6144      73546963 
 6144      6B456E61 
 6144      626C6500 
 6145              	.LASF35:
 6146 06aa 43795379 		.ascii	"CySysClkWriteHfclkDiv\000"
 6146      73436C6B 
 6146      57726974 
 6146      65486663 
 6146      6C6B4469 
 6147              	.LASF33:
 6148 06c0 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 6148      73436C6B 
 6148      57726974 
 6148      65537973 
 6148      636C6B44 
 6149              	.LASF92:
 6150 06d7 43795379 		.ascii	"CySysTickSetCallback\000"
 6150      73546963 
 6150      6B536574 
 6150      43616C6C 
 6150      6261636B 
 6151              	.LASF117:
 6152 06ec 43795379 		.ascii	"CySysTickCallbacks\000"
 6152      73546963 
 6152      6B43616C 
 6152      6C626163 
 6152      6B7300
 6153              	.LASF72:
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 185


 6154 06ff 696D6F54 		.ascii	"imoTrim1Value\000"
 6154      72696D31 
 6154      56616C75 
 6154      6500
 6155              	.LASF97:
 6156 070d 756E6971 		.ascii	"uniqueId\000"
 6156      75654964 
 6156      00
 6157              	.LASF70:
 6158 0716 666C6173 		.ascii	"flashCtlReg\000"
 6158      6843746C 
 6158      52656700 
 6159              	.LASF65:
 6160 0722 43794465 		.ascii	"CyDelay\000"
 6160      6C617900 
 6161              	.LASF87:
 6162 072a 43795379 		.ascii	"CySysTickGetClockSource\000"
 6162      73546963 
 6162      6B476574 
 6162      436C6F63 
 6162      6B536F75 
 6163              	.LASF80:
 6164 0742 43795379 		.ascii	"CySysTickDisableInterrupt\000"
 6164      73546963 
 6164      6B446973 
 6164      61626C65 
 6164      496E7465 
 6165              	.LASF53:
 6166 075c 6F6C6449 		.ascii	"oldIsr\000"
 6166      737200
 6167              	.LASF120:
 6168 0763 63796465 		.ascii	"cydelayFreqMhz\000"
 6168      6C617946 
 6168      7265714D 
 6168      687A00
 6169              	.LASF127:
 6170 0772 43795379 		.ascii	"CySysClkWcoEnabled\000"
 6170      73436C6B 
 6170      57636F45 
 6170      6E61626C 
 6170      656400
 6171              	.LASF101:
 6172 0785 43795379 		.ascii	"CySysSetDmacAccessArbPriority\000"
 6172      73536574 
 6172      446D6163 
 6172      41636365 
 6172      73734172 
 6173              	.LASF77:
 6174 07a3 43795379 		.ascii	"CySysTickStop\000"
 6174      73546963 
 6174      6B53746F 
 6174      7000
 6175              	.LASF131:
 6176 07b1 433A5C55 		.ascii	"C:\\Users\\gcristini\\OneDrive - Datalogic S.p.a\\D"
 6176      73657273 
 6176      5C676372 
 6176      69737469 
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 186


 6176      6E695C4F 
 6177 07e0 6174615C 		.ascii	"ata\\PhytonWorkspace\\SkorpioTemperatureTest\\PSOC-"
 6177      50687974 
 6177      6F6E576F 
 6177      726B7370 
 6177      6163655C 
 6178 0810 4669726D 		.ascii	"Firmware\\SerialTemperatureSensor.cydsn\000"
 6178      77617265 
 6178      5C536572 
 6178      69616C54 
 6178      656D7065 
 6179              	.LASF63:
 6180 0837 43795379 		.ascii	"CySysClkImoStart\000"
 6180      73436C6B 
 6180      496D6F53 
 6180      74617274 
 6180      00
 6181              	.LASF128:
 6182 0848 43795379 		.ascii	"CySysFlashSetWaitCycles\000"
 6182      73466C61 
 6182      73685365 
 6182      74576169 
 6182      74437963 
 6183              	.LASF109:
 6184 0860 43795379 		.ascii	"CySysPrbEnableDeepsleepVddaRef\000"
 6184      73507262 
 6184      456E6162 
 6184      6C654465 
 6184      6570736C 
 6185              	.LASF105:
 6186 087f 43795379 		.ascii	"CySysPrbSetBgGain\000"
 6186      73507262 
 6186      53657442 
 6186      67476169 
 6186      6E00
 6187              	.LASF130:
 6188 0891 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyLib.c\000"
 6188      72617465 
 6188      645F536F 
 6188      75726365 
 6188      5C50536F 
 6189              	.LASF75:
 6190 08b0 6D696372 		.ascii	"microseconds\000"
 6190      6F736563 
 6190      6F6E6473 
 6190      00
 6191              	.LASF28:
 6192 08bd 746D7052 		.ascii	"tmpReg\000"
 6192      656700
 6193              	.LASF81:
 6194 08c4 43795379 		.ascii	"CySysTickSetReload\000"
 6194      73546963 
 6194      6B536574 
 6194      52656C6F 
 6194      616400
 6195              	.LASF132:
 6196 08d7 43795379 		.ascii	"CySysTickServiceCallbacks\000"
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccUIeBz7.s 			page 187


 6196      73546963 
 6196      6B536572 
 6196      76696365 
 6196      43616C6C 
 6197              	.LASF116:
 6198 08f1 72657475 		.ascii	"returnValue\000"
 6198      726E5661 
 6198      6C756500 
 6199              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
