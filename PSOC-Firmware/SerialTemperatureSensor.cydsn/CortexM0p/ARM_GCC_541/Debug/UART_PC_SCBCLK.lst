ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccwmPUbs.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"UART_PC_SCBCLK.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.UART_PC_SCBCLK_StartEx,"ax",%progbits
  20              		.align	2
  21              		.global	UART_PC_SCBCLK_StartEx
  22              		.code	16
  23              		.thumb_func
  24              		.type	UART_PC_SCBCLK_StartEx, %function
  25              	UART_PC_SCBCLK_StartEx:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC4\\UART_PC_SCBCLK.c"
   1:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** * File Name: UART_PC_SCBCLK.c
   3:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** * Version 2.20
   4:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** *
   5:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** *  Description:
   6:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** *   Provides system API for the clocking, interrupts and watchdog timer.
   7:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** *
   8:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** *  Note:
   9:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** *   Documentation of the API's in this file is located in the
  10:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** *   System Reference Guide provided with PSoC Creator.
  11:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** *
  12:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** ********************************************************************************
  13:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** 
  19:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** #include <cydevice_trm.h>
  20:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** #include "UART_PC_SCBCLK.h"
  21:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** 
  22:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** #if defined CYREG_PERI_DIV_CMD
  23:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** 
  24:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** /*******************************************************************************
  25:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** * Function Name: UART_PC_SCBCLK_StartEx
  26:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** ********************************************************************************
  27:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** *
  28:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** * Summary:
  29:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** *  Starts the clock, aligned to the specified running clock.
  30:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** *
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccwmPUbs.s 			page 2


  31:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** * Parameters:
  32:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** *  alignClkDiv:  The divider to which phase alignment is performed when the
  33:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** *    clock is started.
  34:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** *
  35:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** * Returns:
  36:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** *  None
  37:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** *
  38:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** *******************************************************************************/
  39:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** void UART_PC_SCBCLK_StartEx(uint32 alignClkDiv)
  40:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** {
  28              		.loc 1 40 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  34              	.L2:
  41:Generated_Source\PSoC4/UART_PC_SCBCLK.c ****     /* Make sure any previous start command has finished. */
  42:Generated_Source\PSoC4/UART_PC_SCBCLK.c ****     while((UART_PC_SCBCLK_CMD_REG & UART_PC_SCBCLK_CMD_ENABLE_MASK) != 0u)
  35              		.loc 1 42 0 discriminator 1
  36 0000 8023     		movs	r3, #128
  37 0002 DB05     		lsls	r3, r3, #23
  38 0004 1B68     		ldr	r3, [r3]
  39 0006 002B     		cmp	r3, #0
  40 0008 FADB     		blt	.L2
  43:Generated_Source\PSoC4/UART_PC_SCBCLK.c ****     {
  44:Generated_Source\PSoC4/UART_PC_SCBCLK.c ****     }
  45:Generated_Source\PSoC4/UART_PC_SCBCLK.c ****     
  46:Generated_Source\PSoC4/UART_PC_SCBCLK.c ****     /* Specify the target divider and it's alignment divider, and enable. */
  47:Generated_Source\PSoC4/UART_PC_SCBCLK.c ****     UART_PC_SCBCLK_CMD_REG =
  48:Generated_Source\PSoC4/UART_PC_SCBCLK.c ****         ((uint32)UART_PC_SCBCLK__DIV_ID << UART_PC_SCBCLK_CMD_DIV_SHIFT)|
  49:Generated_Source\PSoC4/UART_PC_SCBCLK.c ****         (alignClkDiv << UART_PC_SCBCLK_CMD_PA_DIV_SHIFT) |
  41              		.loc 1 49 0
  42 000a 0002     		lsls	r0, r0, #8
  43              	.LVL1:
  44 000c 024B     		ldr	r3, .L3
  45 000e 1843     		orrs	r0, r3
  47:Generated_Source\PSoC4/UART_PC_SCBCLK.c ****         ((uint32)UART_PC_SCBCLK__DIV_ID << UART_PC_SCBCLK_CMD_DIV_SHIFT)|
  46              		.loc 1 47 0
  47 0010 8023     		movs	r3, #128
  48 0012 DB05     		lsls	r3, r3, #23
  49 0014 1860     		str	r0, [r3]
  50:Generated_Source\PSoC4/UART_PC_SCBCLK.c ****         (uint32)UART_PC_SCBCLK_CMD_ENABLE_MASK;
  51:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** }
  50              		.loc 1 51 0
  51              		@ sp needed
  52 0016 7047     		bx	lr
  53              	.L4:
  54              		.align	2
  55              	.L3:
  56 0018 42000080 		.word	-2147483582
  57              		.cfi_endproc
  58              	.LFE0:
  59              		.size	UART_PC_SCBCLK_StartEx, .-UART_PC_SCBCLK_StartEx
  60              		.section	.text.UART_PC_SCBCLK_Stop,"ax",%progbits
  61              		.align	2
  62              		.global	UART_PC_SCBCLK_Stop
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccwmPUbs.s 			page 3


  63              		.code	16
  64              		.thumb_func
  65              		.type	UART_PC_SCBCLK_Stop, %function
  66              	UART_PC_SCBCLK_Stop:
  67              	.LFB1:
  52:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** 
  53:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** #else
  54:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** 
  55:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** /*******************************************************************************
  56:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** * Function Name: UART_PC_SCBCLK_Start
  57:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** ********************************************************************************
  58:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** *
  59:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** * Summary:
  60:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** *  Starts the clock.
  61:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** *
  62:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** * Parameters:
  63:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** *  None
  64:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** *
  65:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** * Returns:
  66:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** *  None
  67:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** *
  68:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** *******************************************************************************/
  69:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** 
  70:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** void UART_PC_SCBCLK_Start(void)
  71:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** {
  72:Generated_Source\PSoC4/UART_PC_SCBCLK.c ****     /* Set the bit to enable the clock. */
  73:Generated_Source\PSoC4/UART_PC_SCBCLK.c ****     UART_PC_SCBCLK_ENABLE_REG |= UART_PC_SCBCLK__ENABLE_MASK;
  74:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** }
  75:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** 
  76:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** #endif /* CYREG_PERI_DIV_CMD */
  77:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** 
  78:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** 
  79:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** /*******************************************************************************
  80:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** * Function Name: UART_PC_SCBCLK_Stop
  81:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** ********************************************************************************
  82:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** *
  83:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** * Summary:
  84:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** *  Stops the clock and returns immediately. This API does not require the
  85:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** *  source clock to be running but may return before the hardware is actually
  86:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** *  disabled.
  87:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** *
  88:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** * Parameters:
  89:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** *  None
  90:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** *
  91:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** * Returns:
  92:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** *  None
  93:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** *
  94:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** *******************************************************************************/
  95:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** void UART_PC_SCBCLK_Stop(void)
  96:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** {
  68              		.loc 1 96 0
  69              		.cfi_startproc
  70              		@ args = 0, pretend = 0, frame = 0
  71              		@ frame_needed = 0, uses_anonymous_args = 0
  72              		@ link register save eliminated.
  73              	.L6:
  97:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** #if defined CYREG_PERI_DIV_CMD
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccwmPUbs.s 			page 4


  98:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** 
  99:Generated_Source\PSoC4/UART_PC_SCBCLK.c ****     /* Make sure any previous start command has finished. */
 100:Generated_Source\PSoC4/UART_PC_SCBCLK.c ****     while((UART_PC_SCBCLK_CMD_REG & UART_PC_SCBCLK_CMD_ENABLE_MASK) != 0u)
  74              		.loc 1 100 0 discriminator 1
  75 0000 8023     		movs	r3, #128
  76 0002 DB05     		lsls	r3, r3, #23
  77 0004 1B68     		ldr	r3, [r3]
  78 0006 002B     		cmp	r3, #0
  79 0008 FADB     		blt	.L6
 101:Generated_Source\PSoC4/UART_PC_SCBCLK.c ****     {
 102:Generated_Source\PSoC4/UART_PC_SCBCLK.c ****     }
 103:Generated_Source\PSoC4/UART_PC_SCBCLK.c ****     
 104:Generated_Source\PSoC4/UART_PC_SCBCLK.c ****     /* Specify the target divider and it's alignment divider, and disable. */
 105:Generated_Source\PSoC4/UART_PC_SCBCLK.c ****     UART_PC_SCBCLK_CMD_REG =
  80              		.loc 1 105 0
  81 000a 024A     		ldr	r2, .L7
  82 000c 8023     		movs	r3, #128
  83 000e DB05     		lsls	r3, r3, #23
  84 0010 1A60     		str	r2, [r3]
 106:Generated_Source\PSoC4/UART_PC_SCBCLK.c ****         ((uint32)UART_PC_SCBCLK__DIV_ID << UART_PC_SCBCLK_CMD_DIV_SHIFT)|
 107:Generated_Source\PSoC4/UART_PC_SCBCLK.c ****         ((uint32)UART_PC_SCBCLK_CMD_DISABLE_MASK);
 108:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** 
 109:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** #else
 110:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** 
 111:Generated_Source\PSoC4/UART_PC_SCBCLK.c ****     /* Clear the bit to disable the clock. */
 112:Generated_Source\PSoC4/UART_PC_SCBCLK.c ****     UART_PC_SCBCLK_ENABLE_REG &= (uint32)(~UART_PC_SCBCLK__ENABLE_MASK);
 113:Generated_Source\PSoC4/UART_PC_SCBCLK.c ****     
 114:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** #endif /* CYREG_PERI_DIV_CMD */
 115:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** }
  85              		.loc 1 115 0
  86              		@ sp needed
  87 0012 7047     		bx	lr
  88              	.L8:
  89              		.align	2
  90              	.L7:
  91 0014 42000040 		.word	1073741890
  92              		.cfi_endproc
  93              	.LFE1:
  94              		.size	UART_PC_SCBCLK_Stop, .-UART_PC_SCBCLK_Stop
  95              		.section	.text.UART_PC_SCBCLK_SetFractionalDividerRegister,"ax",%progbits
  96              		.align	2
  97              		.global	UART_PC_SCBCLK_SetFractionalDividerRegister
  98              		.code	16
  99              		.thumb_func
 100              		.type	UART_PC_SCBCLK_SetFractionalDividerRegister, %function
 101              	UART_PC_SCBCLK_SetFractionalDividerRegister:
 102              	.LFB2:
 116:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** 
 117:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** 
 118:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** /*******************************************************************************
 119:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** * Function Name: UART_PC_SCBCLK_SetFractionalDividerRegister
 120:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** ********************************************************************************
 121:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** *
 122:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** * Summary:
 123:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** *  Modifies the clock divider and the fractional divider.
 124:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** *
 125:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** * Parameters:
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccwmPUbs.s 			page 5


 126:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** *  clkDivider:  Divider register value (0-65535). This value is NOT the
 127:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** *    divider; the clock hardware divides by clkDivider plus one. For example,
 128:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** *    to divide the clock by 2, this parameter should be set to 1.
 129:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** *  fracDivider:  Fractional Divider register value (0-31).
 130:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** * Returns:
 131:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** *  None
 132:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** *
 133:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** *******************************************************************************/
 134:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** void UART_PC_SCBCLK_SetFractionalDividerRegister(uint16 clkDivider, uint8 clkFractional)
 135:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** {
 103              		.loc 1 135 0
 104              		.cfi_startproc
 105              		@ args = 0, pretend = 0, frame = 0
 106              		@ frame_needed = 0, uses_anonymous_args = 0
 107              	.LVL2:
 108 0000 10B5     		push	{r4, lr}
 109              		.cfi_def_cfa_offset 8
 110              		.cfi_offset 4, -8
 111              		.cfi_offset 14, -4
 136:Generated_Source\PSoC4/UART_PC_SCBCLK.c ****     uint32 maskVal;
 137:Generated_Source\PSoC4/UART_PC_SCBCLK.c ****     uint32 regVal;
 138:Generated_Source\PSoC4/UART_PC_SCBCLK.c ****     
 139:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** #if defined (UART_PC_SCBCLK__FRAC_MASK) || defined (CYREG_PERI_DIV_CMD)
 140:Generated_Source\PSoC4/UART_PC_SCBCLK.c ****     
 141:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** 	/* get all but divider bits */
 142:Generated_Source\PSoC4/UART_PC_SCBCLK.c ****     maskVal = UART_PC_SCBCLK_DIV_REG & 
 112              		.loc 1 142 0
 113 0002 064A     		ldr	r2, .L10
 114 0004 1368     		ldr	r3, [r2]
 115 0006 0724     		movs	r4, #7
 116 0008 2340     		ands	r3, r4
 117              	.LVL3:
 143:Generated_Source\PSoC4/UART_PC_SCBCLK.c ****                     (uint32)(~(uint32)(UART_PC_SCBCLK_DIV_INT_MASK | UART_PC_SCBCLK_DIV_FRAC_MASK))
 144:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** 	/* combine mask and new divider vals into 32-bit value */
 145:Generated_Source\PSoC4/UART_PC_SCBCLK.c ****     regVal = maskVal |
 146:Generated_Source\PSoC4/UART_PC_SCBCLK.c ****         ((uint32)((uint32)clkDivider <<  UART_PC_SCBCLK_DIV_INT_SHIFT) & UART_PC_SCBCLK_DIV_INT_MAS
 118              		.loc 1 146 0
 119 000a 0002     		lsls	r0, r0, #8
 120              	.LVL4:
 145:Generated_Source\PSoC4/UART_PC_SCBCLK.c ****         ((uint32)((uint32)clkDivider <<  UART_PC_SCBCLK_DIV_INT_SHIFT) & UART_PC_SCBCLK_DIV_INT_MAS
 121              		.loc 1 145 0
 122 000c 1843     		orrs	r0, r3
 147:Generated_Source\PSoC4/UART_PC_SCBCLK.c ****         ((uint32)((uint32)clkFractional << UART_PC_SCBCLK_DIV_FRAC_SHIFT) & UART_PC_SCBCLK_DIV_FRAC
 123              		.loc 1 147 0
 124 000e CB00     		lsls	r3, r1, #3
 125              	.LVL5:
 126 0010 FF21     		movs	r1, #255
 127              	.LVL6:
 128 0012 1940     		ands	r1, r3
 145:Generated_Source\PSoC4/UART_PC_SCBCLK.c ****         ((uint32)((uint32)clkDivider <<  UART_PC_SCBCLK_DIV_INT_SHIFT) & UART_PC_SCBCLK_DIV_INT_MAS
 129              		.loc 1 145 0
 130 0014 0143     		orrs	r1, r0
 131              	.LVL7:
 148:Generated_Source\PSoC4/UART_PC_SCBCLK.c ****     
 149:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** #else
 150:Generated_Source\PSoC4/UART_PC_SCBCLK.c ****     /* get all but integer divider bits */
 151:Generated_Source\PSoC4/UART_PC_SCBCLK.c ****     maskVal = UART_PC_SCBCLK_DIV_REG & (uint32)(~(uint32)UART_PC_SCBCLK__DIVIDER_MASK);
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccwmPUbs.s 			page 6


 152:Generated_Source\PSoC4/UART_PC_SCBCLK.c ****     /* combine mask and new divider val into 32-bit value */
 153:Generated_Source\PSoC4/UART_PC_SCBCLK.c ****     regVal = clkDivider | maskVal;
 154:Generated_Source\PSoC4/UART_PC_SCBCLK.c ****     
 155:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** #endif /* UART_PC_SCBCLK__FRAC_MASK || CYREG_PERI_DIV_CMD */
 156:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** 
 157:Generated_Source\PSoC4/UART_PC_SCBCLK.c ****     UART_PC_SCBCLK_DIV_REG = regVal;
 132              		.loc 1 157 0
 133 0016 1160     		str	r1, [r2]
 158:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** }
 134              		.loc 1 158 0
 135              		@ sp needed
 136 0018 10BD     		pop	{r4, pc}
 137              	.L11:
 138 001a C046     		.align	2
 139              	.L10:
 140 001c 08030040 		.word	1073742600
 141              		.cfi_endproc
 142              	.LFE2:
 143              		.size	UART_PC_SCBCLK_SetFractionalDividerRegister, .-UART_PC_SCBCLK_SetFractionalDividerRegister
 144              		.section	.text.UART_PC_SCBCLK_GetDividerRegister,"ax",%progbits
 145              		.align	2
 146              		.global	UART_PC_SCBCLK_GetDividerRegister
 147              		.code	16
 148              		.thumb_func
 149              		.type	UART_PC_SCBCLK_GetDividerRegister, %function
 150              	UART_PC_SCBCLK_GetDividerRegister:
 151              	.LFB3:
 159:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** 
 160:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** 
 161:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** /*******************************************************************************
 162:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** * Function Name: UART_PC_SCBCLK_GetDividerRegister
 163:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** ********************************************************************************
 164:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** *
 165:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** * Summary:
 166:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** *  Gets the clock divider register value.
 167:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** *
 168:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** * Parameters:
 169:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** *  None
 170:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** *
 171:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** * Returns:
 172:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** *  Divide value of the clock minus 1. For example, if the clock is set to
 173:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** *  divide by 2, the return value will be 1.
 174:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** *
 175:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** *******************************************************************************/
 176:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** uint16 UART_PC_SCBCLK_GetDividerRegister(void)
 177:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** {
 152              		.loc 1 177 0
 153              		.cfi_startproc
 154              		@ args = 0, pretend = 0, frame = 0
 155              		@ frame_needed = 0, uses_anonymous_args = 0
 156              		@ link register save eliminated.
 178:Generated_Source\PSoC4/UART_PC_SCBCLK.c ****     return (uint16)((UART_PC_SCBCLK_DIV_REG & UART_PC_SCBCLK_DIV_INT_MASK)
 157              		.loc 1 178 0
 158 0000 024B     		ldr	r3, .L13
 159 0002 1868     		ldr	r0, [r3]
 160 0004 000A     		lsrs	r0, r0, #8
 161 0006 80B2     		uxth	r0, r0
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccwmPUbs.s 			page 7


 179:Generated_Source\PSoC4/UART_PC_SCBCLK.c ****         >> UART_PC_SCBCLK_DIV_INT_SHIFT);
 180:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** }
 162              		.loc 1 180 0
 163              		@ sp needed
 164 0008 7047     		bx	lr
 165              	.L14:
 166 000a C046     		.align	2
 167              	.L13:
 168 000c 08030040 		.word	1073742600
 169              		.cfi_endproc
 170              	.LFE3:
 171              		.size	UART_PC_SCBCLK_GetDividerRegister, .-UART_PC_SCBCLK_GetDividerRegister
 172              		.section	.text.UART_PC_SCBCLK_GetFractionalDividerRegister,"ax",%progbits
 173              		.align	2
 174              		.global	UART_PC_SCBCLK_GetFractionalDividerRegister
 175              		.code	16
 176              		.thumb_func
 177              		.type	UART_PC_SCBCLK_GetFractionalDividerRegister, %function
 178              	UART_PC_SCBCLK_GetFractionalDividerRegister:
 179              	.LFB4:
 181:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** 
 182:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** 
 183:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** /*******************************************************************************
 184:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** * Function Name: UART_PC_SCBCLK_GetFractionalDividerRegister
 185:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** ********************************************************************************
 186:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** *
 187:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** * Summary:
 188:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** *  Gets the clock fractional divider register value.
 189:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** *
 190:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** * Parameters:
 191:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** *  None
 192:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** *
 193:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** * Returns:
 194:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** *  Fractional Divide value of the clock
 195:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** *  0 if the fractional divider is not in use.
 196:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** *
 197:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** *******************************************************************************/
 198:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** uint8 UART_PC_SCBCLK_GetFractionalDividerRegister(void)
 199:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** {
 180              		.loc 1 199 0
 181              		.cfi_startproc
 182              		@ args = 0, pretend = 0, frame = 0
 183              		@ frame_needed = 0, uses_anonymous_args = 0
 184              		@ link register save eliminated.
 200:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** #if defined (UART_PC_SCBCLK__FRAC_MASK)
 201:Generated_Source\PSoC4/UART_PC_SCBCLK.c ****     /* return fractional divider bits */
 202:Generated_Source\PSoC4/UART_PC_SCBCLK.c ****     return (uint8)((UART_PC_SCBCLK_DIV_REG & UART_PC_SCBCLK_DIV_FRAC_MASK)
 203:Generated_Source\PSoC4/UART_PC_SCBCLK.c ****         >> UART_PC_SCBCLK_DIV_FRAC_SHIFT);
 204:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** #else
 205:Generated_Source\PSoC4/UART_PC_SCBCLK.c ****     return 0u;
 206:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** #endif /* UART_PC_SCBCLK__FRAC_MASK */
 207:Generated_Source\PSoC4/UART_PC_SCBCLK.c **** }
 185              		.loc 1 207 0
 186 0000 0020     		movs	r0, #0
 187              		@ sp needed
 188 0002 7047     		bx	lr
 189              		.cfi_endproc
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccwmPUbs.s 			page 8


 190              	.LFE4:
 191              		.size	UART_PC_SCBCLK_GetFractionalDividerRegister, .-UART_PC_SCBCLK_GetFractionalDividerRegister
 192              		.text
 193              	.Letext0:
 194              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 195              		.section	.debug_info,"",%progbits
 196              	.Ldebug_info0:
 197 0000 62010000 		.4byte	0x162
 198 0004 0400     		.2byte	0x4
 199 0006 00000000 		.4byte	.Ldebug_abbrev0
 200 000a 04       		.byte	0x4
 201 000b 01       		.uleb128 0x1
 202 000c EB010000 		.4byte	.LASF25
 203 0010 0C       		.byte	0xc
 204 0011 B6000000 		.4byte	.LASF26
 205 0015 06000000 		.4byte	.LASF27
 206 0019 00000000 		.4byte	.Ldebug_ranges0+0
 207 001d 00000000 		.4byte	0
 208 0021 00000000 		.4byte	.Ldebug_line0
 209 0025 02       		.uleb128 0x2
 210 0026 01       		.byte	0x1
 211 0027 06       		.byte	0x6
 212 0028 7D020000 		.4byte	.LASF0
 213 002c 02       		.uleb128 0x2
 214 002d 01       		.byte	0x1
 215 002e 08       		.byte	0x8
 216 002f FB000000 		.4byte	.LASF1
 217 0033 02       		.uleb128 0x2
 218 0034 02       		.byte	0x2
 219 0035 05       		.byte	0x5
 220 0036 D2010000 		.4byte	.LASF2
 221 003a 02       		.uleb128 0x2
 222 003b 02       		.byte	0x2
 223 003c 07       		.byte	0x7
 224 003d 1B010000 		.4byte	.LASF3
 225 0041 02       		.uleb128 0x2
 226 0042 04       		.byte	0x4
 227 0043 05       		.byte	0x5
 228 0044 E2010000 		.4byte	.LASF4
 229 0048 02       		.uleb128 0x2
 230 0049 04       		.byte	0x4
 231 004a 07       		.byte	0x7
 232 004b 09010000 		.4byte	.LASF5
 233 004f 02       		.uleb128 0x2
 234 0050 08       		.byte	0x8
 235 0051 05       		.byte	0x5
 236 0052 BF010000 		.4byte	.LASF6
 237 0056 02       		.uleb128 0x2
 238 0057 08       		.byte	0x8
 239 0058 07       		.byte	0x7
 240 0059 7C010000 		.4byte	.LASF7
 241 005d 03       		.uleb128 0x3
 242 005e 04       		.byte	0x4
 243 005f 05       		.byte	0x5
 244 0060 696E7400 		.ascii	"int\000"
 245 0064 02       		.uleb128 0x2
 246 0065 04       		.byte	0x4
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccwmPUbs.s 			page 9


 247 0066 07       		.byte	0x7
 248 0067 6F010000 		.4byte	.LASF8
 249 006b 04       		.uleb128 0x4
 250 006c DC010000 		.4byte	.LASF9
 251 0070 02       		.byte	0x2
 252 0071 F701     		.2byte	0x1f7
 253 0073 2C000000 		.4byte	0x2c
 254 0077 04       		.uleb128 0x4
 255 0078 61010000 		.4byte	.LASF10
 256 007c 02       		.byte	0x2
 257 007d F801     		.2byte	0x1f8
 258 007f 3A000000 		.4byte	0x3a
 259 0083 04       		.uleb128 0x4
 260 0084 68010000 		.4byte	.LASF11
 261 0088 02       		.byte	0x2
 262 0089 F901     		.2byte	0x1f9
 263 008b 48000000 		.4byte	0x48
 264 008f 02       		.uleb128 0x2
 265 0090 04       		.byte	0x4
 266 0091 04       		.byte	0x4
 267 0092 F5000000 		.4byte	.LASF12
 268 0096 02       		.uleb128 0x2
 269 0097 08       		.byte	0x8
 270 0098 04       		.byte	0x4
 271 0099 39010000 		.4byte	.LASF13
 272 009d 02       		.uleb128 0x2
 273 009e 01       		.byte	0x1
 274 009f 08       		.byte	0x8
 275 00a0 CD010000 		.4byte	.LASF14
 276 00a4 04       		.uleb128 0x4
 277 00a5 00000000 		.4byte	.LASF15
 278 00a9 02       		.byte	0x2
 279 00aa A302     		.2byte	0x2a3
 280 00ac B0000000 		.4byte	0xb0
 281 00b0 05       		.uleb128 0x5
 282 00b1 83000000 		.4byte	0x83
 283 00b5 06       		.uleb128 0x6
 284 00b6 DE000000 		.4byte	.LASF16
 285 00ba 01       		.byte	0x1
 286 00bb 27       		.byte	0x27
 287 00bc 00000000 		.4byte	.LFB0
 288 00c0 1C000000 		.4byte	.LFE0-.LFB0
 289 00c4 01       		.uleb128 0x1
 290 00c5 9C       		.byte	0x9c
 291 00c6 DA000000 		.4byte	0xda
 292 00ca 07       		.uleb128 0x7
 293 00cb 47010000 		.4byte	.LASF18
 294 00cf 01       		.byte	0x1
 295 00d0 27       		.byte	0x27
 296 00d1 83000000 		.4byte	0x83
 297 00d5 00000000 		.4byte	.LLST0
 298 00d9 00       		.byte	0
 299 00da 08       		.uleb128 0x8
 300 00db B5020000 		.4byte	.LASF28
 301 00df 01       		.byte	0x1
 302 00e0 5F       		.byte	0x5f
 303 00e1 00000000 		.4byte	.LFB1
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccwmPUbs.s 			page 10


 304 00e5 18000000 		.4byte	.LFE1-.LFB1
 305 00e9 01       		.uleb128 0x1
 306 00ea 9C       		.byte	0x9c
 307 00eb 06       		.uleb128 0x6
 308 00ec 89020000 		.4byte	.LASF17
 309 00f0 01       		.byte	0x1
 310 00f1 86       		.byte	0x86
 311 00f2 00000000 		.4byte	.LFB2
 312 00f6 20000000 		.4byte	.LFE2-.LFB2
 313 00fa 01       		.uleb128 0x1
 314 00fb 9C       		.byte	0x9c
 315 00fc 3B010000 		.4byte	0x13b
 316 0100 07       		.uleb128 0x7
 317 0101 2E010000 		.4byte	.LASF19
 318 0105 01       		.byte	0x1
 319 0106 86       		.byte	0x86
 320 0107 77000000 		.4byte	0x77
 321 010b 21000000 		.4byte	.LLST1
 322 010f 07       		.uleb128 0x7
 323 0110 53010000 		.4byte	.LASF20
 324 0114 01       		.byte	0x1
 325 0115 86       		.byte	0x86
 326 0116 6B000000 		.4byte	0x6b
 327 011a 42000000 		.4byte	.LLST2
 328 011e 09       		.uleb128 0x9
 329 011f 8C000000 		.4byte	.LASF21
 330 0123 01       		.byte	0x1
 331 0124 88       		.byte	0x88
 332 0125 83000000 		.4byte	0x83
 333 0129 63000000 		.4byte	.LLST3
 334 012d 0A       		.uleb128 0xa
 335 012e 40010000 		.4byte	.LASF22
 336 0132 01       		.byte	0x1
 337 0133 89       		.byte	0x89
 338 0134 83000000 		.4byte	0x83
 339 0138 01       		.uleb128 0x1
 340 0139 51       		.byte	0x51
 341 013a 00       		.byte	0
 342 013b 0B       		.uleb128 0xb
 343 013c 94000000 		.4byte	.LASF23
 344 0140 01       		.byte	0x1
 345 0141 B0       		.byte	0xb0
 346 0142 77000000 		.4byte	0x77
 347 0146 00000000 		.4byte	.LFB3
 348 014a 10000000 		.4byte	.LFE3-.LFB3
 349 014e 01       		.uleb128 0x1
 350 014f 9C       		.byte	0x9c
 351 0150 0B       		.uleb128 0xb
 352 0151 93010000 		.4byte	.LASF24
 353 0155 01       		.byte	0x1
 354 0156 C6       		.byte	0xc6
 355 0157 6B000000 		.4byte	0x6b
 356 015b 00000000 		.4byte	.LFB4
 357 015f 04000000 		.4byte	.LFE4-.LFB4
 358 0163 01       		.uleb128 0x1
 359 0164 9C       		.byte	0x9c
 360 0165 00       		.byte	0
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccwmPUbs.s 			page 11


 361              		.section	.debug_abbrev,"",%progbits
 362              	.Ldebug_abbrev0:
 363 0000 01       		.uleb128 0x1
 364 0001 11       		.uleb128 0x11
 365 0002 01       		.byte	0x1
 366 0003 25       		.uleb128 0x25
 367 0004 0E       		.uleb128 0xe
 368 0005 13       		.uleb128 0x13
 369 0006 0B       		.uleb128 0xb
 370 0007 03       		.uleb128 0x3
 371 0008 0E       		.uleb128 0xe
 372 0009 1B       		.uleb128 0x1b
 373 000a 0E       		.uleb128 0xe
 374 000b 55       		.uleb128 0x55
 375 000c 17       		.uleb128 0x17
 376 000d 11       		.uleb128 0x11
 377 000e 01       		.uleb128 0x1
 378 000f 10       		.uleb128 0x10
 379 0010 17       		.uleb128 0x17
 380 0011 00       		.byte	0
 381 0012 00       		.byte	0
 382 0013 02       		.uleb128 0x2
 383 0014 24       		.uleb128 0x24
 384 0015 00       		.byte	0
 385 0016 0B       		.uleb128 0xb
 386 0017 0B       		.uleb128 0xb
 387 0018 3E       		.uleb128 0x3e
 388 0019 0B       		.uleb128 0xb
 389 001a 03       		.uleb128 0x3
 390 001b 0E       		.uleb128 0xe
 391 001c 00       		.byte	0
 392 001d 00       		.byte	0
 393 001e 03       		.uleb128 0x3
 394 001f 24       		.uleb128 0x24
 395 0020 00       		.byte	0
 396 0021 0B       		.uleb128 0xb
 397 0022 0B       		.uleb128 0xb
 398 0023 3E       		.uleb128 0x3e
 399 0024 0B       		.uleb128 0xb
 400 0025 03       		.uleb128 0x3
 401 0026 08       		.uleb128 0x8
 402 0027 00       		.byte	0
 403 0028 00       		.byte	0
 404 0029 04       		.uleb128 0x4
 405 002a 16       		.uleb128 0x16
 406 002b 00       		.byte	0
 407 002c 03       		.uleb128 0x3
 408 002d 0E       		.uleb128 0xe
 409 002e 3A       		.uleb128 0x3a
 410 002f 0B       		.uleb128 0xb
 411 0030 3B       		.uleb128 0x3b
 412 0031 05       		.uleb128 0x5
 413 0032 49       		.uleb128 0x49
 414 0033 13       		.uleb128 0x13
 415 0034 00       		.byte	0
 416 0035 00       		.byte	0
 417 0036 05       		.uleb128 0x5
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccwmPUbs.s 			page 12


 418 0037 35       		.uleb128 0x35
 419 0038 00       		.byte	0
 420 0039 49       		.uleb128 0x49
 421 003a 13       		.uleb128 0x13
 422 003b 00       		.byte	0
 423 003c 00       		.byte	0
 424 003d 06       		.uleb128 0x6
 425 003e 2E       		.uleb128 0x2e
 426 003f 01       		.byte	0x1
 427 0040 3F       		.uleb128 0x3f
 428 0041 19       		.uleb128 0x19
 429 0042 03       		.uleb128 0x3
 430 0043 0E       		.uleb128 0xe
 431 0044 3A       		.uleb128 0x3a
 432 0045 0B       		.uleb128 0xb
 433 0046 3B       		.uleb128 0x3b
 434 0047 0B       		.uleb128 0xb
 435 0048 27       		.uleb128 0x27
 436 0049 19       		.uleb128 0x19
 437 004a 11       		.uleb128 0x11
 438 004b 01       		.uleb128 0x1
 439 004c 12       		.uleb128 0x12
 440 004d 06       		.uleb128 0x6
 441 004e 40       		.uleb128 0x40
 442 004f 18       		.uleb128 0x18
 443 0050 9742     		.uleb128 0x2117
 444 0052 19       		.uleb128 0x19
 445 0053 01       		.uleb128 0x1
 446 0054 13       		.uleb128 0x13
 447 0055 00       		.byte	0
 448 0056 00       		.byte	0
 449 0057 07       		.uleb128 0x7
 450 0058 05       		.uleb128 0x5
 451 0059 00       		.byte	0
 452 005a 03       		.uleb128 0x3
 453 005b 0E       		.uleb128 0xe
 454 005c 3A       		.uleb128 0x3a
 455 005d 0B       		.uleb128 0xb
 456 005e 3B       		.uleb128 0x3b
 457 005f 0B       		.uleb128 0xb
 458 0060 49       		.uleb128 0x49
 459 0061 13       		.uleb128 0x13
 460 0062 02       		.uleb128 0x2
 461 0063 17       		.uleb128 0x17
 462 0064 00       		.byte	0
 463 0065 00       		.byte	0
 464 0066 08       		.uleb128 0x8
 465 0067 2E       		.uleb128 0x2e
 466 0068 00       		.byte	0
 467 0069 3F       		.uleb128 0x3f
 468 006a 19       		.uleb128 0x19
 469 006b 03       		.uleb128 0x3
 470 006c 0E       		.uleb128 0xe
 471 006d 3A       		.uleb128 0x3a
 472 006e 0B       		.uleb128 0xb
 473 006f 3B       		.uleb128 0x3b
 474 0070 0B       		.uleb128 0xb
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccwmPUbs.s 			page 13


 475 0071 27       		.uleb128 0x27
 476 0072 19       		.uleb128 0x19
 477 0073 11       		.uleb128 0x11
 478 0074 01       		.uleb128 0x1
 479 0075 12       		.uleb128 0x12
 480 0076 06       		.uleb128 0x6
 481 0077 40       		.uleb128 0x40
 482 0078 18       		.uleb128 0x18
 483 0079 9742     		.uleb128 0x2117
 484 007b 19       		.uleb128 0x19
 485 007c 00       		.byte	0
 486 007d 00       		.byte	0
 487 007e 09       		.uleb128 0x9
 488 007f 34       		.uleb128 0x34
 489 0080 00       		.byte	0
 490 0081 03       		.uleb128 0x3
 491 0082 0E       		.uleb128 0xe
 492 0083 3A       		.uleb128 0x3a
 493 0084 0B       		.uleb128 0xb
 494 0085 3B       		.uleb128 0x3b
 495 0086 0B       		.uleb128 0xb
 496 0087 49       		.uleb128 0x49
 497 0088 13       		.uleb128 0x13
 498 0089 02       		.uleb128 0x2
 499 008a 17       		.uleb128 0x17
 500 008b 00       		.byte	0
 501 008c 00       		.byte	0
 502 008d 0A       		.uleb128 0xa
 503 008e 34       		.uleb128 0x34
 504 008f 00       		.byte	0
 505 0090 03       		.uleb128 0x3
 506 0091 0E       		.uleb128 0xe
 507 0092 3A       		.uleb128 0x3a
 508 0093 0B       		.uleb128 0xb
 509 0094 3B       		.uleb128 0x3b
 510 0095 0B       		.uleb128 0xb
 511 0096 49       		.uleb128 0x49
 512 0097 13       		.uleb128 0x13
 513 0098 02       		.uleb128 0x2
 514 0099 18       		.uleb128 0x18
 515 009a 00       		.byte	0
 516 009b 00       		.byte	0
 517 009c 0B       		.uleb128 0xb
 518 009d 2E       		.uleb128 0x2e
 519 009e 00       		.byte	0
 520 009f 3F       		.uleb128 0x3f
 521 00a0 19       		.uleb128 0x19
 522 00a1 03       		.uleb128 0x3
 523 00a2 0E       		.uleb128 0xe
 524 00a3 3A       		.uleb128 0x3a
 525 00a4 0B       		.uleb128 0xb
 526 00a5 3B       		.uleb128 0x3b
 527 00a6 0B       		.uleb128 0xb
 528 00a7 27       		.uleb128 0x27
 529 00a8 19       		.uleb128 0x19
 530 00a9 49       		.uleb128 0x49
 531 00aa 13       		.uleb128 0x13
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccwmPUbs.s 			page 14


 532 00ab 11       		.uleb128 0x11
 533 00ac 01       		.uleb128 0x1
 534 00ad 12       		.uleb128 0x12
 535 00ae 06       		.uleb128 0x6
 536 00af 40       		.uleb128 0x40
 537 00b0 18       		.uleb128 0x18
 538 00b1 9742     		.uleb128 0x2117
 539 00b3 19       		.uleb128 0x19
 540 00b4 00       		.byte	0
 541 00b5 00       		.byte	0
 542 00b6 00       		.byte	0
 543              		.section	.debug_loc,"",%progbits
 544              	.Ldebug_loc0:
 545              	.LLST0:
 546 0000 00000000 		.4byte	.LVL0
 547 0004 0C000000 		.4byte	.LVL1
 548 0008 0100     		.2byte	0x1
 549 000a 50       		.byte	0x50
 550 000b 0C000000 		.4byte	.LVL1
 551 000f 1C000000 		.4byte	.LFE0
 552 0013 0400     		.2byte	0x4
 553 0015 F3       		.byte	0xf3
 554 0016 01       		.uleb128 0x1
 555 0017 50       		.byte	0x50
 556 0018 9F       		.byte	0x9f
 557 0019 00000000 		.4byte	0
 558 001d 00000000 		.4byte	0
 559              	.LLST1:
 560 0021 00000000 		.4byte	.LVL2
 561 0025 0C000000 		.4byte	.LVL4
 562 0029 0100     		.2byte	0x1
 563 002b 50       		.byte	0x50
 564 002c 0C000000 		.4byte	.LVL4
 565 0030 20000000 		.4byte	.LFE2
 566 0034 0400     		.2byte	0x4
 567 0036 F3       		.byte	0xf3
 568 0037 01       		.uleb128 0x1
 569 0038 50       		.byte	0x50
 570 0039 9F       		.byte	0x9f
 571 003a 00000000 		.4byte	0
 572 003e 00000000 		.4byte	0
 573              	.LLST2:
 574 0042 00000000 		.4byte	.LVL2
 575 0046 12000000 		.4byte	.LVL6
 576 004a 0100     		.2byte	0x1
 577 004c 51       		.byte	0x51
 578 004d 12000000 		.4byte	.LVL6
 579 0051 20000000 		.4byte	.LFE2
 580 0055 0400     		.2byte	0x4
 581 0057 F3       		.byte	0xf3
 582 0058 01       		.uleb128 0x1
 583 0059 51       		.byte	0x51
 584 005a 9F       		.byte	0x9f
 585 005b 00000000 		.4byte	0
 586 005f 00000000 		.4byte	0
 587              	.LLST3:
 588 0063 0A000000 		.4byte	.LVL3
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccwmPUbs.s 			page 15


 589 0067 10000000 		.4byte	.LVL5
 590 006b 0100     		.2byte	0x1
 591 006d 53       		.byte	0x53
 592 006e 00000000 		.4byte	0
 593 0072 00000000 		.4byte	0
 594              		.section	.debug_aranges,"",%progbits
 595 0000 3C000000 		.4byte	0x3c
 596 0004 0200     		.2byte	0x2
 597 0006 00000000 		.4byte	.Ldebug_info0
 598 000a 04       		.byte	0x4
 599 000b 00       		.byte	0
 600 000c 0000     		.2byte	0
 601 000e 0000     		.2byte	0
 602 0010 00000000 		.4byte	.LFB0
 603 0014 1C000000 		.4byte	.LFE0-.LFB0
 604 0018 00000000 		.4byte	.LFB1
 605 001c 18000000 		.4byte	.LFE1-.LFB1
 606 0020 00000000 		.4byte	.LFB2
 607 0024 20000000 		.4byte	.LFE2-.LFB2
 608 0028 00000000 		.4byte	.LFB3
 609 002c 10000000 		.4byte	.LFE3-.LFB3
 610 0030 00000000 		.4byte	.LFB4
 611 0034 04000000 		.4byte	.LFE4-.LFB4
 612 0038 00000000 		.4byte	0
 613 003c 00000000 		.4byte	0
 614              		.section	.debug_ranges,"",%progbits
 615              	.Ldebug_ranges0:
 616 0000 00000000 		.4byte	.LFB0
 617 0004 1C000000 		.4byte	.LFE0
 618 0008 00000000 		.4byte	.LFB1
 619 000c 18000000 		.4byte	.LFE1
 620 0010 00000000 		.4byte	.LFB2
 621 0014 20000000 		.4byte	.LFE2
 622 0018 00000000 		.4byte	.LFB3
 623 001c 10000000 		.4byte	.LFE3
 624 0020 00000000 		.4byte	.LFB4
 625 0024 04000000 		.4byte	.LFE4
 626 0028 00000000 		.4byte	0
 627 002c 00000000 		.4byte	0
 628              		.section	.debug_line,"",%progbits
 629              	.Ldebug_line0:
 630 0000 BD000000 		.section	.debug_str,"MS",%progbits,1
 630      02004B00 
 630      00000201 
 630      FB0E0D00 
 630      01010101 
 631              	.LASF15:
 632 0000 72656733 		.ascii	"reg32\000"
 632      3200
 633              	.LASF27:
 634 0006 433A5C55 		.ascii	"C:\\Users\\gcristini\\OneDrive - Datalogic S.p.a\\D"
 634      73657273 
 634      5C676372 
 634      69737469 
 634      6E695C4F 
 635 0035 6174615C 		.ascii	"ata\\PhytonWorkspace\\SkorpioTemperatureTest\\PSOC-"
 635      50687974 
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccwmPUbs.s 			page 16


 635      6F6E576F 
 635      726B7370 
 635      6163655C 
 636 0065 4669726D 		.ascii	"Firmware\\SerialTemperatureSensor.cydsn\000"
 636      77617265 
 636      5C536572 
 636      69616C54 
 636      656D7065 
 637              	.LASF21:
 638 008c 6D61736B 		.ascii	"maskVal\000"
 638      56616C00 
 639              	.LASF23:
 640 0094 55415254 		.ascii	"UART_PC_SCBCLK_GetDividerRegister\000"
 640      5F50435F 
 640      53434243 
 640      4C4B5F47 
 640      65744469 
 641              	.LASF26:
 642 00b6 47656E65 		.ascii	"Generated_Source\\PSoC4\\UART_PC_SCBCLK.c\000"
 642      72617465 
 642      645F536F 
 642      75726365 
 642      5C50536F 
 643              	.LASF16:
 644 00de 55415254 		.ascii	"UART_PC_SCBCLK_StartEx\000"
 644      5F50435F 
 644      53434243 
 644      4C4B5F53 
 644      74617274 
 645              	.LASF12:
 646 00f5 666C6F61 		.ascii	"float\000"
 646      7400
 647              	.LASF1:
 648 00fb 756E7369 		.ascii	"unsigned char\000"
 648      676E6564 
 648      20636861 
 648      7200
 649              	.LASF5:
 650 0109 6C6F6E67 		.ascii	"long unsigned int\000"
 650      20756E73 
 650      69676E65 
 650      6420696E 
 650      7400
 651              	.LASF3:
 652 011b 73686F72 		.ascii	"short unsigned int\000"
 652      7420756E 
 652      7369676E 
 652      65642069 
 652      6E7400
 653              	.LASF19:
 654 012e 636C6B44 		.ascii	"clkDivider\000"
 654      69766964 
 654      657200
 655              	.LASF13:
 656 0139 646F7562 		.ascii	"double\000"
 656      6C6500
 657              	.LASF22:
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccwmPUbs.s 			page 17


 658 0140 72656756 		.ascii	"regVal\000"
 658      616C00
 659              	.LASF18:
 660 0147 616C6967 		.ascii	"alignClkDiv\000"
 660      6E436C6B 
 660      44697600 
 661              	.LASF20:
 662 0153 636C6B46 		.ascii	"clkFractional\000"
 662      72616374 
 662      696F6E61 
 662      6C00
 663              	.LASF10:
 664 0161 75696E74 		.ascii	"uint16\000"
 664      313600
 665              	.LASF11:
 666 0168 75696E74 		.ascii	"uint32\000"
 666      333200
 667              	.LASF8:
 668 016f 756E7369 		.ascii	"unsigned int\000"
 668      676E6564 
 668      20696E74 
 668      00
 669              	.LASF7:
 670 017c 6C6F6E67 		.ascii	"long long unsigned int\000"
 670      206C6F6E 
 670      6720756E 
 670      7369676E 
 670      65642069 
 671              	.LASF24:
 672 0193 55415254 		.ascii	"UART_PC_SCBCLK_GetFractionalDividerRegister\000"
 672      5F50435F 
 672      53434243 
 672      4C4B5F47 
 672      65744672 
 673              	.LASF6:
 674 01bf 6C6F6E67 		.ascii	"long long int\000"
 674      206C6F6E 
 674      6720696E 
 674      7400
 675              	.LASF14:
 676 01cd 63686172 		.ascii	"char\000"
 676      00
 677              	.LASF2:
 678 01d2 73686F72 		.ascii	"short int\000"
 678      7420696E 
 678      7400
 679              	.LASF9:
 680 01dc 75696E74 		.ascii	"uint8\000"
 680      3800
 681              	.LASF4:
 682 01e2 6C6F6E67 		.ascii	"long int\000"
 682      20696E74 
 682      00
 683              	.LASF25:
 684 01eb 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 684      43313120 
 684      352E342E 
ARM GAS  C:\Users\GCRIST~1\AppData\Local\Temp\ccwmPUbs.s 			page 18


 684      31203230 
 684      31363036 
 685 021e 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 685      20726576 
 685      6973696F 
 685      6E203233 
 685      37373135 
 686 0251 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 686      67202D66 
 686      66756E63 
 686      74696F6E 
 686      2D736563 
 687              	.LASF0:
 688 027d 7369676E 		.ascii	"signed char\000"
 688      65642063 
 688      68617200 
 689              	.LASF17:
 690 0289 55415254 		.ascii	"UART_PC_SCBCLK_SetFractionalDividerRegister\000"
 690      5F50435F 
 690      53434243 
 690      4C4B5F53 
 690      65744672 
 691              	.LASF28:
 692 02b5 55415254 		.ascii	"UART_PC_SCBCLK_Stop\000"
 692      5F50435F 
 692      53434243 
 692      4C4B5F53 
 692      746F7000 
 693              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
